<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004722A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004722</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17746904</doc-number><date>20220517</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>30</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0481</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>30</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0481</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>167</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>3</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>N</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHOD AND SYSTEM FOR BRIDGING DISPARATE PLATFORMS TO AUTOMATE A NATURAL LANGUAGE INTERFACE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17037641</doc-number><date>20200929</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11373046</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17746904</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16256069</doc-number><date>20190124</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10846481</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17037641</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62692587</doc-number><date>20180629</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>FinancialForce.com, Inc.</orgname><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Willcock</last-name><first-name>Stephen Paul</first-name><address><city>Harrogate</city><country>GB</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Wood</last-name><first-name>Matthew David</first-name><address><city>Leeds</city><country>GB</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>FinancialForce.com, Inc.</orgname><role>02</role><address><city>San Francisco</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Various techniques are disclosed, including receiving at a multiplatform management system a natural language request from a computing device, determining an event type based on the natural language request, identifying a user-requested action based on data associated with a natural language processing platform in data communication with the multiplatform management system, selecting a cloud platform to perform the user-requested action, formatting data representing the user-requested action into a formatted user-requested action, and performing the action.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="106.17mm" wi="158.75mm" file="US20230004722A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="197.10mm" wi="158.33mm" orientation="landscape" file="US20230004722A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="213.11mm" wi="143.26mm" orientation="landscape" file="US20230004722A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="215.39mm" wi="143.51mm" file="US20230004722A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="215.39mm" wi="143.51mm" file="US20230004722A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="217.68mm" wi="166.29mm" orientation="landscape" file="US20230004722A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="224.79mm" wi="158.92mm" orientation="landscape" file="US20230004722A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="223.60mm" wi="140.29mm" orientation="landscape" file="US20230004722A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="218.02mm" wi="158.33mm" orientation="landscape" file="US20230004722A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="218.86mm" wi="161.46mm" orientation="landscape" file="US20230004722A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="230.38mm" wi="167.64mm" file="US20230004722A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="231.31mm" wi="143.43mm" file="US20230004722A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="205.74mm" wi="100.84mm" file="US20230004722A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="194.14mm" wi="101.77mm" file="US20230004722A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="173.40mm" wi="121.41mm" file="US20230004722A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of copending U.S. patent application Ser. No. 17/037,641, filed Sep. 29, 2020 and entitled, &#x201c;METHOD AND SYSTEM FOR BRIDGING DISPARATE PLATFORMS TO AUTOMATE A NATURAL LANGUAGE INTERFACE,&#x201d; U.S. patent application Ser. No. 17/037,641 is a continuation of U.S. patent application Ser. No. 16/256,069, filed Jan. 24, 2019, now U.S. Pat. No. 10,846,481 and entitled, &#x201c;METHOD AND SYSTEM FOR BRIDGING DISPARATE PLATFORMS TO AUTOMATE A NATURAL LANGUAGE INTERFACE,&#x201d; U.S. patent application Ser. No. 16/256,069 claims the benefit of U.S. Provisional Patent Application No. 62/692,587, filed Jun. 29, 2018 and entitled &#x201c;METHOD AND SYSTEM FOR BRIDGING CLOUD PLATFORMS TO AUTOMATE A NATURAL LANGUAGE INTERFACE,&#x201d; all of which are herein incorporated by reference in their entirety for all purposes.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The present application is related to natural language interfaces, and more specifically to methods and systems that bridge disparate platforms to automate natural language interfaces.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Currently, the user desiring to perform various functions, such as making a timecard entry, submitting an expense report, requesting time off, etc., has to interact with multiple disparate platforms that cannot communicate with each other, and that have different interfaces. The interfaces are different, and the user has to learn each interface individually.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">Presented here is a system and method to bridge the gap between the disparate platforms, and to allow the user to interface with the disparate platforms using a natural language interface. The system can improve user interface for electronic devices because the user does not have to switch between the disparate platforms. Instead, the user can interact with the disparate platforms through a single natural language interface. The disparate platforms, some of which may not have a natural language user interface, can be enabled to interact with the user through the natural language interface when the system interfaces between a natural language processing platform and the remainder of the disparate platforms. This type of natural language interface can be beneficial for devices with small screens because the user does not have to interact with a device through a set of barely visible menus but can interact with the electronic device through natural language interface.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005">Various embodiments or examples (&#x201c;examples&#x201d;) of the invention are disclosed in the following detailed description and the accompanying drawings:</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates a multiplatform management system <b>150</b> architecture, according to one embodiment.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates a multiplatform management system <b>150</b> architecture, according to one embodiment.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example method performed using the multiplatform management system.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another example method performed using the multiplatform management system.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> illustrate an interaction between a user, a multiplatform management system, and multiple platforms, according to one embodiment.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b>C</figref> illustrate an interaction between a user, a multiplatform management system, and multiple platforms, according to another embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a natural language interaction between the user and a multiplatform management system.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a natural language interaction, including an image, between the user and a multiplatform management system.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a result of image analysis.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a negative feedback provided by the user.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart of a method to interface between multiple disparate platforms, according to one embodiment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart of a method to interface between multiple disparate platforms, according to one embodiment.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagrammatic representation of a machine in the example form of a computer system <b>1100</b> within which a set of instructions, for causing the machine to perform any one or more of the methodologies or platforms discussed herein, may be executed.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><heading id="h-0007" level="2">Bridging Disparate Platforms</heading><p id="p-0020" num="0019">Presented here is a system and method to bridge the gap between the disparate platforms, and to allow the user to interface with the disparate platforms using a natural language interface. The system can improve user interface for electronic devices because the user does not have to switch between the disparate platforms. Instead, the user can interact with the disparate platforms through a single natural language interface. The disparate platforms, some of which may not have a natural language user interface, can be enabled to interact with the user through the natural language interface when the system interfaces between a natural language processing platform and the remainder of the disparate platforms. This type of natural language interface can be beneficial for devices with small screens because the user does not have to interact with a device through a set of barely visible menus but can interact with the electronic device through a natural language interface.</p><p id="p-0021" num="0020">The disclosed technique includes an automated conversational interface configured to provide access to features on disparate cloud platforms. A multiplatform management system can bridge communications between disparate cloud computing platforms including, for example, a groupware platform, a natural language processing (NLP) platform, an image analysis platform, and a human capital management (HCM) platform. The multiplatform management system translates protocols from one platform to another to enable cross-platform communication, and routes communications to the appropriate platform.</p><p id="p-0022" num="0021">The multiplatform management system can be used to leverage the best features from various platforms to facilitate a single task. For instance, the multiplatform management system can be used to enable a smart, conversational interface on a groupware platform by leveraging NLP analysis tools on an NLP platform and company information from an HCM platform. In another example, the multiplatform management system can be used to automate reimbursements in a groupware platform by leveraging image analysis tools in an image analysis platform and company information from an HCM platform. By seamlessly bridging disparate platforms, the multiplatform management system integrates disparate cloud platforms enabling the platforms to perform tasks together that they are currently incapable of performing alone.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates a multiplatform management system <b>150</b> architecture, according to one embodiment. The multiplatform management system <b>150</b> includes a polyglot platform <b>152</b> and a cloud elastic compute platform <b>154</b>. Additional platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b> can interface with the multiplatform management system <b>150</b>. The additional platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b> can be disparate platforms, incapable of communicating with each other.</p><p id="p-0024" num="0023">The polyglot platform <b>152</b> supports several programming languages. The polyglot platform <b>152</b> can support programming languages including, for example, Java, Node.js, Scala, Clojure, Python, PHP, Go, Ruby, or any combination thereof. The polyglot platform can include application containers (e.g., dynos) that are spread across a grid consisting of several servers. Application containers are isolated, virtualized UNIX containers. The polyglot platform <b>152</b> includes an interactive application programming interface (API) <b>162</b>. The interactive API <b>162</b> is configured to receive and transmit communications with cloud platforms in multiple programming languages. The interactive API <b>162</b> can receive communication from a first platform in a first programming language, and transmit the communication to a second platform in a second programming language consistent with protocols of the second platform.</p><p id="p-0025" num="0024">The polyglot platform <b>152</b> selects a target platform for communication transmission in response to a content of a received communication from another platform. The polyglot platform translates the communication from a first programming language to a second programming language based on known or predicted protocols of the target platform.</p><p id="p-0026" num="0025">The cloud elastic compute platform <b>154</b> responds to events and automatically manages computing resources triggered by detected events. The cloud elastic compute platform <b>154</b> simplifies building smaller, on-demand applications that are responsive to events and new information. In an embodiment, the cloud elastic compute platform <b>154</b> can utilize event API <b>164</b> to detect an event based on content of a communication received from a groupware platform <b>102</b>. For example, a first event type can be detected if the received communication includes an image and a second event type can be detected if the received communication includes only text.</p><p id="p-0027" num="0026">Based on the detected event type, the cloud elastic compute platform <b>154</b> can select a cloud platform for transmission of a communication. For example, if a first event type is detected, an image analysis platform <b>106</b> can be selected for transmission of a communication. A communication can be encoded with protocols consistent with the image analysis platform <b>106</b> via the polyglot platform <b>152</b>. In another example, if a second event type is detected, a natural language processing (NLP) platform <b>108</b> can be selected for transmission of a communication. A communication can be encoded with protocols consistent with the NLP platform <b>108</b> via the polyglot platform <b>152</b>.</p><p id="p-0028" num="0027">In an embodiment, an enterprise can utilize the multiplatform management system <b>150</b> to execute human resource requests through a third-party groupware platform. The enterprise can control a human capital management (HCM) platform having enterprise data. The enterprise data can include, for example, a listing of employees, holiday entitlements for employees, expense entitlements for employees, relationships among employees (e.g., management structure, work divisions, etc.), sales information, client information, or any combination thereof. The HCM platform <b>104</b> can be a cloud computing platform that is separate and incompatible with other cloud computing platforms such as, for example, groupware platform <b>102</b>, image analysis platform <b>106</b>, and natural language processing platform <b>108</b>. Thus, the enterprise data within HCM platform <b>104</b> is siloed from various other cloud computing platforms.</p><p id="p-0029" num="0028">The multiplatform management system <b>150</b> can be used to bridge communications between HCM platform <b>104</b> and various other platforms, for example, to facilitate an automated conversational interface on groupware platform <b>102</b> configured to interpret various data inputs (e.g., natural language text and images) and select tasks to perform based on the data inputs.</p><p id="p-0030" num="0029">For example, an automated conversational interface (e.g., a chat bot) can be implemented in the groupware platform <b>102</b> to receive inputs from one or more users. For example, a user can send a message directly to a chat bot or a chat bot can be running in the background during a user-to-user conversation. The chat bot directs the communication to the multiplatform management system <b>150</b>. The multiplatform management system <b>150</b> uses the cloud elastic compute platform <b>154</b> to determine an event type associated with the communication.</p><p id="p-0031" num="0030">The determined event type is used to select which cloud platform to leverage to perform a particular task. For example, if the communication includes natural language text indicative of a holiday request, the multiplatform management system <b>150</b> generates a communication consistent with protocols of the NLP platform <b>108</b>. The generated communication is transmitted to the NLP platform <b>108</b> to cause the NLP platform <b>108</b> to respond with a context and/or meaning of the natural language text (e.g., holiday request).</p><p id="p-0032" num="0031">The cloud elastic compute platform <b>154</b> of the multiplatform management system <b>150</b> analyzes the response from the NLP platform <b>108</b> to generate a message for the HCM platform <b>104</b>. The generated message can, for example, query information regarding a holiday entitlement associated with the user of the groupware platform <b>102</b>. Upon receiving a response from the HCM platform <b>104</b> indicating that the user is entitled to the requested holiday, the multiplatform management system <b>150</b> generates and transmits a communication requesting to reserve a holiday for the user for the requested dates to cause the HCM platform <b>104</b> to update an employee holiday database.</p><p id="p-0033" num="0032">In another example, a user of the groupware platform <b>102</b> can send a message including an image. The chat bot directs the communication to the multiplatform management system <b>150</b>. The multiplatform management system <b>150</b> uses the cloud elastic compute platform <b>154</b> to determine an event type associated with the communication. The determined event type is used to select which cloud platform to leverage to perform a particular task. If, as in this example, the communication includes an image indicative of a receipt, the multiplatform management system <b>150</b> generates a communication consistent with protocols of the image analysis platform <b>106</b>. The generated communication is transmitted to the image analysis platform <b>106</b> to cause the image analysis platform <b>106</b> to respond with an image label (e.g., receipt) and image text (e.g., salad $10 tax $1 total $11).</p><p id="p-0034" num="0033">The cloud elastic compute platform <b>154</b> of the multiplatform management system <b>150</b> analyzes the response from the image analysis platform <b>106</b> to generate a message for the HCM platform <b>104</b>. The generated message can, for example, query information regarding a reimbursement entitlement associated with the user of the groupware platform <b>102</b>. Upon receiving a response from the HCM platform <b>104</b> indicating that the user is entitled to the requested reimbursement, the multiplatform management system <b>150</b> generates and transmits a communication requesting to reimburse the user for the amount indicated on the receipt to cause the HCM platform <b>104</b> to initiate an electronic payment to the user.</p><p id="p-0035" num="0034">Although only a holiday request and receipt reimbursement are explicitly described, various other examples for utilizing multiplatform management system <b>150</b> within an enterprise environment are contemplated. Nonlimiting examples for utilizing multiplatform management system <b>150</b> within an enterprise environment include a business travel request, a business travel reimbursement, holiday request change, reimbursement correction request, sales and/or client information request, or any combination thereof.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates a multiplatform management system <b>150</b> architecture, according to one embodiment. The multiplatform management system <b>150</b> can improve user interface for electronic devices because the user does not have to switch between the multiple platforms such as <b>102</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>. Instead, the user can interact with the multiple platforms <b>102</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> through a single interface, such as the groupware platform <b>102</b>. Multiple platforms such as <b>102</b>, <b>106</b>, <b>160</b>, <b>170</b>, <b>180</b>, which do not have a natural language user interface, can be enabled to interact with the user through a natural language interface when the multiplatform management system <b>150</b> interfaces between the natural language processing platform <b>108</b> and the remainder of the platforms <b>102</b>, <b>106</b>, <b>160</b>, <b>170</b>, <b>180</b>. This type of natural language interface can be beneficial for devices with small screens because the user does not have to interact with a device through a set of barely visible menus but can interact with the electronic device through a natural language interface.</p><p id="p-0037" num="0036">The disclosed invention improves the efficiency of using the electronic device by bringing together a limited list of platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> and commonly accessed stored data, which can be accessed directly from the single user interface using natural language inputs, such as a Slack platform <b>430</b> in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref>. Performing the necessary functions allows the user to see the most relevant data or functions without actually opening up the platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>. The speed of a user's navigation through various views and windows can be improved because it saves the user from navigating to the required platform, opening it up, and then navigating within that application to enable the data of interest to be seen or a function of interest to be activated. Rather than paging through multiple screens of options, only interaction with a single interface using natural language inputs may be needed from starting up to performing the desired functionality.</p><p id="p-0038" num="0037">The system includes a groupware platform <b>102</b>, a human capital management platform <b>104</b>, an image analysis platform <b>106</b>, a natural language processing platform <b>108</b>, and the multiplatform management system <b>150</b>. The multiplatform management system <b>150</b> manages the disparate platforms such as groupware platform <b>102</b>, human capital management platform <b>104</b>, the image analysis platform <b>106</b>, the natural language processing platform <b>108</b>. The disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b> may not be able to communicate with each other due to incompatible communication protocols and incompatible interfaces. The disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b> can be executed on various cloud computers. Multiplatform management system <b>150</b> can also be executed in a cloud computer or can be executed on a local computer.</p><p id="p-0039" num="0038">The groupware platform <b>102</b> can receive a natural language request from a user and can forward the natural language request to a multiplatform management system. The natural language request can be in any of the human languages such as English, Spanish, Chinese, etc. The groupware platform <b>102</b> can include a user interface receiving a text or a spoken language. For example, the groupware platform can be a chat room, a Slack channel, an instant messaging application, etc. There can be multiple users in the groupware platform, talking to each other, as in a chat room setting. The groupware platform <b>102</b> can monitor the user inputs from the multiple users and can determine whether the user input is directed to the groupware platform. Upon determining that the user input is directed to the groupware platform <b>102</b>, the groupware platform <b>102</b> can forward the user input to the multiplatform management system.</p><p id="p-0040" num="0039">The multiplatform management system <b>150</b> can interface with one or more platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b> and can obtain multiple actions. For example, the platform <b>102</b> can perform action such as receive user input, and present an output to show to the user, such as a response in the chat room, or a spoken response. The platform <b>104</b> can perform action such as by information regarding projects associated with a person in a workplace, holiday entitlement, can enable time entry, etc. The platform <b>106</b> can perform an action such as to analyze the received image and produce textual output. The platform <b>108</b> can perform an action such as to receive a textual or an audio input of a natural language, process the received natural language input and identify a user requested action within the input. The multiplatform management system <b>150</b> can receive the natural language request from the groupware platform <b>102</b> and can forward the natural language request to the natural language processing platform <b>108</b>.</p><p id="p-0041" num="0040">The natural language processing platform <b>108</b> can receive the natural language request and can identify a user requested action associated with the natural language request. For example, if the natural language request specifies &#x201c;how much vacation time do I have?&#x201d;, the natural language processing platform <b>108</b> can identify &#x201c;find vacation time&#x201d; or &#x201c;vacation time&#x201d; as the user requested action. The user requested action can include words different from the natural language request. The natural language processing platform <b>108</b> can forward the identified user requested action to the multiplatform management system <b>150</b>.</p><p id="p-0042" num="0041">The multiplatform management system <b>150</b> can determine an action among multiple actions matching the user requested action better than a remainder of the multiple actions. For example, the user requested action can be identified as &#x201c;vacation time&#x201d; and the multiple actions can be &#x201c;retrieve vacation time,&#x201d; &#x201c;create expense report,&#x201d; &#x201c;create time entry,&#x201d; &#x201c;request vacation time,&#x201d; &#x201c;retrieve expense report,&#x201d; etc. Multiplatform management system <b>150</b> can select &#x201c;retrieve vacation time,&#x201d; and &#x201c;request vacation time,&#x201d; as the two actions matching the user requested action &#x201c;vacation time&#x201d; better than the remainder of the multiple actions. If neither of the actions &#x201c;request vacation time&#x201d; or &#x201c;retrieve vacation time&#x201d; has a confidence threshold above a predetermined confidence threshold, the multiplatform management system <b>150</b> can ask the user to select one of the two actions, as described in this application. The predetermined confidence threshold can be 50%.</p><p id="p-0043" num="0042">The multiplatform management system <b>150</b> can interface with multiple disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> by determining a platform among the multiple disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> that can perform the user requested action. The multiplatform management system <b>150</b> can format the user requested action into a format accepted by the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> and can send the formatted user requested action to the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>.</p><p id="p-0044" num="0043">The human capital management platform <b>104</b> can perform the action. For example, if &#x201c;request vacation time&#x201d; has a confidence level above the predetermined confidence threshold of 50%, the human capital management platform <b>104</b> can send the request for vacation time in the user's name. If neither of the actions &#x201c;request vacation time&#x201d; or &#x201c;retrieve vacation time&#x201d; has a confidence threshold above the predetermined confidence threshold, or neither of the actions is significantly more likely than the other, for example 15% more likely, the multiplatform management system <b>150</b> can ask the user to select one of the actions. Upon receiving the user selection, the multiplatform management system <b>150</b> can send the selection to the human capital management platform <b>104</b> to perform the action.</p><p id="p-0045" num="0044">The multiplatform management system <b>150</b> can send a message to the groupware platform <b>102</b> informing the user that the action has been completed. For example, the message can be &#x201c;vacation time from June 20-June 27 has been requested.&#x201d; The groupware platform <b>102</b> can present the message to the user using text or spoken language.</p><p id="p-0046" num="0045">The groupware platform <b>102</b> can receive a natural language response from the user and can forward the natural language response to the multiplatform management system. The natural language response can include a feedback from the user regarding the performed action.</p><p id="p-0047" num="0046">The feedback can be negative or positive. To determine whether the feedback is negative or positive, the multiplatform management system <b>150</b> can forward the feedback to the natural language processing platform <b>108</b> to analyze the feedback. An example of the negative feedback can be when the user says &#x201c;That is not correct. The vacation time should be from June 12 to June 17.&#x201d; An example of a positive feedback can be &#x201c;great, thank you.&#x201d; Another example of a positive feedback can be that the user does not respond to the informative message, and/or the user changes the topic. When the feedback is positive, the multiplatform management system <b>150</b> can send a reinforcing message to the natural language processing platform <b>108</b>. When the feedback is negative, the multiplatform management system <b>150</b> can send a discouraging message to the natural language processing platform <b>108</b>. The reinforcing message and the discouraging message can strengthen or weaken the processes used to determine the user requested action based on the natural language request.</p><p id="p-0048" num="0047">The human capital management platform <b>104</b> can also include multiple disparate platforms <b>160</b>, <b>170</b>, <b>180</b> managing information regarding a workplace. For example, disparate platforms can include a platform <b>160</b> having a database to enter time worked, such as Intapp and/or Salesforce Data Cloud, a platform <b>170</b> having a database to track expense reports such as Chrome River, a platform <b>180</b> having a database to track absence entitlements, such as Salesforce Community Cloud, etc. Various user requested actions can be sent to various platforms <b>160</b>, <b>170</b>, <b>180</b>. For example, &#x201c;create expense report&#x201d; can be sent to the platform <b>170</b> to create an expense report.</p><p id="p-0049" num="0048">The cloud elastic compute platform <b>154</b> can receive a communication in a first programming language, can determine a type of the communication, and based on the type of the communication can determine a second platform to which to send a communication. The polyglot platform <b>152</b> can receive the communication and the type from the cloud elastic compute platform <b>154</b>. The communication can be in the first programming language. The polyglot platform <b>152</b> can translate the communication from the first programming language associated with a first platform to a second programming language associated with a second platform and can send the translated communication to the second platform.</p><p id="p-0050" num="0049">For example, the type of communication can be a text, in which case the cloud elastic compute platform <b>154</b> can send a message to the polyglot platform <b>152</b> that the type of communication is text and that the second platform is natural language processing platform <b>108</b>. Another example, the type of communication can be an image or a video, in which case the cloud elastic compute platform <b>154</b> can send the message to the polyglot platform <b>152</b> that the type of communication is an image or video and that the second platform is image analysis platform <b>106</b>. The polyglot platform <b>152</b> can translate the text, or the image to a message in the second format associated with the second platform and can send the message in the second format to the natural language processing platform <b>108</b>, or the image analysis platform <b>106</b>, respectively.</p><p id="p-0051" num="0050">In another example, upon processing the communication through the image analysis platform <b>106</b> and/or the natural language processing platform, the cloud elastic compute platform can determine that a sub-type of the communication is an expense report. The cloud elastic compute platform <b>154</b> can determine that the correct module to send the communication is the platform <b>170</b> tracking expense reports.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates an example method performed using the multiplatform management system. In <figref idref="DRAWINGS">FIG. <b>2</b></figref>, an image is received by the multiplatform management system. The method can include, for example, providing a multiplatform management system configured to manage communications among multiple platforms (step <b>202</b>), receiving an image via an event API of the multiplatform management system from a groupware platform (step <b>204</b>), providing the image to an image processing platform to cause the imaging platform to return a label and image text (step <b>206</b>), querying a human capital management (HCM) platform with the label and image text to cause the HCM platform to return an event associated with the label and image text (step <b>208</b>), and providing the associated event to the groupware platform to cause the groupware platform to generate a message indicative of the associated event for an interactive chat (step <b>210</b>).</p><p id="p-0053" num="0052">Step <b>202</b> comprises providing a multiplatform management system configured to manage communications among multiple platforms. The communications are configured to cause the multiple platforms to perform a platform-specific function. For example, the communications can cause an image processing platform to parse an image for objects and/or text and return an image label and/or image text.</p><p id="p-0054" num="0053">Step <b>204</b> comprises receiving an image via an event API of the multiplatform management system from a groupware platform. The groupware platform can include a chat bot configured to forward certain communications to the multiplatform management system. Upon receiving a user input including an image, the chat bot sends the image to the multiplatform management system for further processing, encoding, and selective forwarding to one or more other cloud computing platforms. In a non-limiting example, the image can include an itemized list of one or more purchased items (e.g., a receipt).</p><p id="p-0055" num="0054">Step <b>206</b> comprises providing the image to an image processing platform to cause the image processing platform to return an image label and image text. The image provided to the image processing platform conforms with protocols of the image processing platform. The image conforms because the multiplatform management system knows or predicts protocols of the image processing platform and encodes the image accordingly.</p><p id="p-0056" num="0055">Step <b>208</b> comprises querying an HCM platform with the label and image text to cause the HCM platform to return an event associated with the label and image text. The cloud elastic compute platform of the multiplatform management system analyzes the response from the image analysis platform to generate a message for the HCM platform. The generated message can, for example, query information regarding a reimbursement entitlement associated with the user of the groupware platform. Upon receiving a response from the HCM platform indicating that the user is entitled to the requested reimbursement, the multiplatform management system generates and transmits a communication requesting to reimburse the user for the amount indicated on the receipt to cause the HCM platform to initiate an electronic payment to the user.</p><p id="p-0057" num="0056">Step <b>210</b> comprises providing the associated event to the groupware platform to cause the groupware platform to generate a message indicative of the associated event for an interactive chat. For example, the generated message can indicate that an associated event (e.g., a reimbursement request) was successfully initiated, the associated event is not authorized for the user (e.g., purchased item not reimbursable for the user), or the associated event is altered (e.g., user reimbursed for a different amount).</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another example method performed using the multiplatform management system. In <figref idref="DRAWINGS">FIG. <b>3</b></figref>, text is received by the multiplatform management system. The method can include, for example, providing a multiplatform management system configured to manage communications among multiple platforms (step <b>302</b>), receiving a communication comprising text via an event API of the multiplatform management system from a groupware platform (step <b>304</b>), providing the text to a natural language processing (NLP) platform to cause the NLP platform to return a parsed data structure indicative of a meaning of the text, the provided text conforming with protocols of the NLP platform (step <b>306</b>), querying an HCM platform with the text meaning to cause the HCM platform to return an event associated with the text meaning (step <b>308</b>), and providing the associated event to the groupware platform to cause the groupware platform to generate a message indicative of the associated event for an interactive chat (step <b>310</b>).</p><p id="p-0059" num="0058">Step <b>302</b> comprises providing a multiplatform management system configured to manage communications among multiple platforms. The communications are configured to cause the multiple platforms to perform a platform-specific function. For example, the communications can cause an NLP platform to parse an text for context and/or meaning and return a parsed data structure.</p><p id="p-0060" num="0059">Step <b>304</b> comprises receiving a communication comprising text via an event API of the multiplatform management system from a groupware platform. The groupware platform can include a chat bot configured to forward certain communications to the multiplatform management system. Upon receiving a user input including text (e.g., text with a trigger word or phrase), the chat bot sends the text to the multiplatform management system for further processing, encoding, and selective forwarding to one or more other cloud computing platforms.</p><p id="p-0061" num="0060">Step <b>306</b> comprises providing the text to a natural language processing (NLP) platform to cause the NLP platform to return a parsed data structure indicative of a meaning of the text. The provided text conforming with protocols of the NLP platform.</p><p id="p-0062" num="0061">In another example, a user of the groupware platform <b>102</b> can send a message including an image. The chat bot directs the communication to the multiplatform management system <b>150</b>. The multiplatform management system <b>150</b> uses the cloud elastic compute platform <b>154</b> to determine an event type associated with the communication. The determined event type is used to select which cloud platform to leverage to perform a particular task. If, as in this example, the communication includes an image indicative of a receipt, the multiplatform management system <b>150</b> generates a communication consistent with protocols of the image analysis platform <b>106</b>. The generated communication is transmitted to the image analysis platform <b>106</b> to cause the image analysis platform <b>106</b> to respond with an image label (e.g., receipt) and image text (e.g., salad $10 tax $1 total $11).</p><p id="p-0063" num="0062">Step <b>308</b> comprises querying an HCM platform with the text meaning to cause the HCM platform to return an event associated with the text meaning. In an embodiment, a cloud elastic compute platform of the multiplatform management system analyzes the response from the NLP platform to generate a message for the HCM platform. The generated message can, for example, query information regarding a holiday entitlement associated with the user of the groupware platform. Upon receiving a response from the HCM platform indicating that the user is entitled to the requested holiday, the multiplatform management system generates and transmits a communication requesting to reserve a holiday for the user for the requested dates to cause the HCM platform to update an employee holiday database.</p><p id="p-0064" num="0063">Step <b>310</b> comprises providing the associated event to the groupware platform to cause the groupware platform to generate a message indicative of the associated event for an interactive chat. For example, the generated message can indicate that an associated event (e.g., a holiday request) was successfully scheduled for the requested time, the associated event is not authorized for the user (e.g., exceeds holiday time allocated for the user), or the associated event is altered (e.g., holiday scheduled for a different time).</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> illustrate an interaction between a user, a multiplatform management system, and multiple platforms, according to one embodiment. The various platforms <b>400</b>, <b>410</b>, <b>420</b> within the multiplatform management system <b>150</b> can use messaging applications such as RabbitMQ <b>470</b> (only one labeled for brevity) to communicate with each other. Slack platform <b>430</b> can be the groupware platform <b>102</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The Google Vision API platform <b>440</b> can be the image analysis platform <b>106</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The Dialogflow platform <b>450</b> can be the natural language processing platform <b>108</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The Salesforce platform <b>460</b> can be the human capital management platform <b>104</b>. The human capital management platform <b>104</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can contain multiple Salesforce platforms, or other modules such as Workday, Intapp, Chrome River, etc.</p><p id="p-0066" num="0065">In step <b>480</b>, the user can submit a receipt image to the Slack platform <b>430</b>. <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>B</figref> show the multiplatform management system <b>150</b> interfaces with the various platforms <b>400</b>, <b>410</b>, <b>420</b>, <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b> and the user to create the record within the Salesforce platform <b>460</b> representing the expense report.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>4</b>C</figref> illustrates an interaction between a user, a multiplatform management system, and multiple platforms, according to another embodiment. The modules <b>405</b>, <b>415</b>, <b>425</b>, <b>435</b>, <b>445</b>, <b>455</b>, <b>465</b> can be part of a multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The multiplatform management system can facilitate communication between various disparate platforms such as Slack platform <b>430</b>, Google Vision API platform <b>440</b>, Dialogflow platform <b>450</b>, Salesforce platform <b>460</b>, etc.</p><p id="p-0068" num="0067">Multiplatform management system <b>150</b> can receive a communication from the various disparate platforms <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b>, determine a target platform to send a communication to, format the communication to form an acceptable to the target platform, and send the communication to the target platform. For example, module <b>445</b> can communicate between platform <b>430</b> and platform <b>450</b>, while module <b>465</b> can communicate between platform <b>430</b>, platform <b>450</b>, and platform <b>460</b>.</p><p id="p-0069" num="0068">In another example, module <b>425</b> can be a whole or a part of the cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The module <b>425</b> can determine the type of input received from module <b>445</b> and based on whether the type of input received is text or image, the module <b>425</b> can send the input received to module <b>415</b>, or module <b>435</b>. Module <b>415</b> and <b>435</b> can be part of the polyglot platform <b>152</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a natural language interaction between the user and multiplatform management system. The user provides a natural language request <b>500</b> &#x201c;how much holiday do I have left?&#x201d; to the groupware platform <b>102</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>, can determine that the natural language request <b>500</b> should be sent to the natural language processing platform <b>108</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>, and can send the natural language request <b>500</b> and the target platform, i.e., the natural language processing platform <b>108</b> to the polyglot platform <b>152</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>.</p><p id="p-0071" num="0070">The polyglot platform <b>152</b> can translate the natural language request <b>500</b> into a format acceptable to the natural language processing platform <b>108</b> and can send the natural language request <b>500</b> to the natural language processing platform <b>108</b>.</p><p id="p-0072" num="0071">The natural language processing platform <b>108</b> can interpret the natural language request based on the natural language input <b>510</b> entered prior to the natural language request <b>500</b>. For example: &#x201c;I&#x201d; in the natural language request <b>500</b> is interpreted based on who the authenticated person is in the natural language input <b>510</b>. For example, if the person logged in is authenticated as John Doe, the natural language processing platform <b>108</b> can interpret the natural language request <b>500</b> as the user requested action &#x201c;determine absence entitlement for John Doe.&#x201d;</p><p id="p-0073" num="0072">The cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can receive the user requested action, &#x201c;determine absence entitlement for John Doe,&#x201d; and determine that the proper platform to handle the user requested action is the absence entitlement platform <b>180</b> in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. Cloud elastic compute platform <b>154</b> can pass the user requested action &#x201c;determine absence entitlement for John Doe&#x201d; and the identification (ID) of the platform <b>182</b> to the polyglot platform <b>152</b>. The polyglot platform <b>152</b> can translate the user requested action into a format that the platform <b>180</b> can understand and send the properly formatted user requests to the platform <b>180</b>. The platform <b>180</b> can retrieve the information regarding absence entitlements and provide to the polyglot platform <b>152</b>. The polyglot platform <b>152</b> can provide the received response to the groupware platform <b>102</b>.</p><p id="p-0074" num="0073">The groupware platform <b>102</b> can provide a message <b>520</b> to the user while the user request is being executed in the background. Upon receiving the response from the polyglot platform <b>152</b>, the groupware platform <b>102</b> can provide a response <b>530</b> to the user including information regarding absence entitlements for John Doe.</p><p id="p-0075" num="0074">The user response <b>540</b> is a natural language response from the user that can contain a feedback regarding the performed action. The user response <b>540</b> can contain positive or negative feedback. When the natural language response includes a positive feedback, the polyglot platform <b>152</b> can send a reinforcing feedback to the natural language processing platform <b>108</b>. The natural language processing platform <b>108</b> can use the reinforcing feedback to increase the weights of processing components, e.g., neurons, used in identifying the user requested action. When the natural language response includes a negative feedback, the polyglot platform <b>152</b> can send a discouraging feedback to the natural language processing platform <b>108</b>. The natural language processing platform <b>108</b> can use the reinforcing feedback to decrease the weights of processing components, e.g., neurons, used in identifying the user requested action. The user response <b>540</b> includes positive feedback, and consequently, the natural language processing platform <b>108</b> can increase the weights of processing components used in identifying the user requested action.</p><p id="p-0076" num="0075">The user request <b>550</b> is interpreted in the context of the user's prior statements. Consequently, when the user requests a vacation on 12 June, the multiplatform management system <b>150</b> can perform the request, without asking the user for the year.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a natural language interaction, including an image, between the user and a multiplatform management system. The user provides a natural language request <b>600</b> &#x201c;can I submit an expense report?&#x201d; to the groupware platform <b>102</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can determine that the natural language request <b>600</b> should be sent to the natural language processing platform <b>108</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>, and can send the natural language request <b>600</b> and the target platform, i.e., the natural language processing platform <b>108</b>, to the polyglot platform <b>152</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>.</p><p id="p-0078" num="0077">The polyglot platform <b>152</b> can translate the natural language request <b>600</b> into a format acceptable to the natural language processing platform <b>108</b> and can send the natural language request <b>600</b> to the natural language processing platform <b>108</b>. Similar to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the natural language processing platform <b>108</b> can interpret the user request in the context of the prior statements and can associate &#x201c;I&#x201d; with &#x201c;John Doe.&#x201d; The natural language processing platform <b>108</b> can determine that the user requested action is &#x201c;submit expense report.&#x201d;</p><p id="p-0079" num="0078">The cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can receive the user requested action, &#x201c;submit expense report,&#x201d; and determine that the proper platform to handle the user requested action is the expense report platform <b>170</b> in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>.</p><p id="p-0080" num="0079">Upon receiving the image <b>610</b>, the cloud elastic compute platform <b>154</b> can determine that the proper platform to handle the expense report in the form of an image is the image analysis platform <b>106</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The cloud elastic compute platform <b>154</b> can pass the image and the target platform, i.e., the image analysis platform <b>106</b>, to the polyglot platform <b>152</b>. The polyglot platform <b>152</b> can transform the image into a format acceptable to the image analysis platform <b>106</b>, and can formulate a request to analyze the image <b>610</b>. Further, the polyglot platform can send the type of the image, such as receipts, to the image analysis platform <b>106</b>. The polyglot platform <b>152</b> can send the image and the request to the image analysis platform <b>106</b>.</p><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a result of image analysis. The image analysis platform <b>106</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can identify various relevant entries within the image <b>700</b>. The image analysis platform <b>106</b> can determine the relevant entries based on the type of the image received, such as receipts. The type of image &#x201c;receipt&#x201d; can have as relevant entries &#x201c;expense date&#x201d; <b>710</b>, &#x201c;expense total&#x201d; <b>720</b>, &#x201c;expense currency&#x201d; <b>730</b>, &#x201c;expense assignment&#x201d; <b>740</b>, and/or &#x201c;expense type&#x201d; <b>750</b>. The image analysis platform <b>106</b> can search the received image <b>700</b> to identify the relevant entries. The image analysis platform can provide the identified values for the relevant entries to the user, as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0082" num="0081">In one embodiment, the multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can query the user whether the presented information is correct, as shown in element <b>760</b>. In another embodiment, the multiplatform management system <b>150</b> can query the user, if the confidence level provided by the image analysis platform <b>106</b> is below a predefined threshold. For example, if the confidence level for a relevant entry is below 90%, then the multiplatform management system <b>150</b> can ask the user for confirmation of the value of the relevant entry; otherwise, the multiplatform management system can assume that the identified value is correct.</p><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a negative feedback provided by the user. In response to the query whether the presented information is correct, as shown in element <b>760</b>, the user can provide a feedback <b>800</b>. The feedback <b>800</b> can be positive or negative.</p><p id="p-0084" num="0083">To analyze whether the feedback <b>800</b> is positive or negative, the groupware platform <b>102</b> can pass the received feedback <b>800</b> to the multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The cloud elastic compute platform <b>154</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can identify that the feedback <b>800</b> should be sent to the natural language processing platform <b>108</b>, and communicate the feedback <b>800</b> and the target module, i.e., the natural language processing platform, to the polyglot platform <b>152</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. As explained in this application, the polyglot platform <b>152</b> can convert the feedback <b>800</b> into a format accepted by the natural language processing platform <b>108</b> and can send the converted feedback <b>800</b> to the natural language processing platform <b>108</b>.</p><p id="p-0085" num="0084">The natural language processing platform <b>108</b>, upon analyzing the feedback <b>800</b>, can determine whether the feedback is positive or negative. In the present case, the feedback <b>800</b> is negative. The natural language processing platform <b>108</b> can formulate the question to present to the user, such as a question <b>810</b>, to further disambiguate which part of the query <b>760</b> is incorrect. The natural language processing platform <b>108</b> can send the question <b>810</b> to the cloud elastic compute platform <b>154</b>. The cloud elastic compute platform <b>154</b> can determine that the target module is the groupware platform <b>102</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> and send the target module to the polyglot platform <b>152</b> along with the question <b>810</b>. The polyglot platform <b>152</b> can correctly format the question <b>810</b> and send it to the polyglot platform <b>152</b> to present to the user.</p><p id="p-0086" num="0085">The received user response <b>820</b> can be sent to the natural language processing platform <b>108</b> to determine which part of the analyzed image <b>700</b> is incorrect. In this case, the incorrect part of the analyzed image is entry &#x201c;expense type&#x201d; <b>750</b>.</p><p id="p-0087" num="0086">The image analysis platform <b>106</b> as well as the natural language processing platform <b>108</b> can retain at least one previously analyzed image and natural language input, respectively, as well as a process used in analyzing the previously analyzed natural language inputs. The feedback <b>800</b> received from the user as well as the incurred part of the analyzed image can be sent to the appropriate module, such as the image analysis platform <b>106</b> and/or the natural language processing platform <b>108</b>. The image analysis platform <b>106</b> and/or the natural language processing platform <b>108</b> can reinforce or discourage the processes used in producing the incorrect part based on whether the feedback is positive or negative, respectively.</p><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart of a method to interface between multiple disparate platforms, according to one embodiment. In step <b>900</b>, a processor can obtain multiple disparate platforms and multiple actions. Each action among the multiple actions can be performed by at least one platform among the multiple disparate platforms. In some embodiments, each action can be performed by only one platform among the multiple disparate platforms. A platform among the multiple platforms cannot communicate with a remainder of the multiple disparate platforms.</p><p id="p-0089" num="0088">To perform the integration, a processor associated with a groupware platform <b>102</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can, in step <b>910</b>, receive a natural language request from a user. The natural language request can be in any human language such as English, Chinese, Spanish, etc. The groupware platform <b>102</b> can be a part of the multiple disparate platforms.</p><p id="p-0090" num="0089">In step <b>920</b>, based on the multiple actions and the multiple disparate platforms, the multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can decide to send a natural language request from the user to a natural language processing platform <b>108</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The groupware platform <b>102</b> and the natural language processing platform <b>108</b> are not configured to communicate to each other.</p><p id="p-0091" num="0090">In step <b>930</b>, the multiplatform management system <b>150</b> can format the natural language request into a format accepted by the natural language processing platform <b>108</b>. In step <b>940</b>, the multiplatform management system <b>150</b> can send the formatted natural language request to the natural language processing platform <b>108</b>.</p><p id="p-0092" num="0091">In step <b>950</b>, a processor associated with the natural language processing platform <b>108</b> can interpret the natural language request to identify a user requested action associated with the natural language request. The user requested action can be &#x201c;provide absence entitlement,&#x201d; &#x201c;submit expense report,&#x201d; &#x201c;enter timecard,&#x201d; etc. The natural language processing platform can be a dialogue tree, which can interpret the user requested action in the context of prior dialogue, as described in this application.</p><p id="p-0093" num="0092">In step <b>960</b>, based on the multiple actions and the multiple disparate platforms, the multiplatform management system <b>150</b> can determine the platform among the multiple disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> that can perform the user requested action. The platform, the groupware platform <b>102</b> and the natural language processing platform <b>108</b> are not configured to communicate to each other.</p><p id="p-0094" num="0093">In step <b>970</b>, the multiplatform management system <b>150</b> can format the user requested action into a format accepted by the platform. In step <b>980</b>, the multiplatform management system <b>150</b> can send the formatted user requested action to the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>. In step <b>990</b>, the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> can perform the action.</p><p id="p-0095" num="0094">The groupware platform <b>102</b> can receive a natural language response from the user in response to performing the action. The multiplatform management system <b>150</b> can provide feedback to the natural language processing platform <b>108</b>. The feedback is reinforcing when the natural language response includes a positive feedback and the feedback is discouraging when the natural language response includes a negative feedback.</p><p id="p-0096" num="0095">To determine the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>, the multiplatform management system <b>150</b> can find the platform <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> that upon performing the user requested action has received positive feedback more frequently than the remainder of the multiple disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart of a method to interface between multiple disparate platforms, according to one embodiment. The multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can improve user interface for electronic devices because the user does not have to switch between the multiple platforms such as <b>102</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>. Instead, the user can interact with the multiple platforms <b>102</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> through a single interface, such as a Slack platform <b>430</b> in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref>. This type of interface can be beneficial for devices with small screens because the user does not have to switch between and manage multiple interfaces to multiple platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>.</p><p id="p-0098" num="0097">The disclosed invention improves the efficiency of using the electronic device by bringing together a limited list of platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> and commonly accessed stored data, which can be accessed directly from the single user interface, such as a Slack platform <b>430</b>. Performing the necessary functions allows the user to see the most relevant data or functions without actually opening the platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>. The speed of a user's navigation through various views and windows can be improved because it saves the user from navigating to the required platform, opening it, and then navigating within that application to enable the data of interest to be seen or a function of interest to be activated. Rather than paging through multiple screens of options, interaction with only a single interface may be needed from start up to reaching the required data/functionality.</p><p id="p-0099" num="0098">In step <b>1000</b>, a processor associated with a multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref> can receive a natural language request from a user. The natural language request can be in a human language.</p><p id="p-0100" num="0099">In step <b>1010</b>, the multiplatform management system <b>150</b> can interface with multiple disparate platforms including a natural language processing platform. Each platform among the multiple disparate platforms can be configured to perform an action in multiple actions. To interface with the multiple disparate platforms, the multiplatform management system <b>150</b> can format the natural language request into a format accepted by the natural language processing platform and can forward the formatted natural language request to the natural language processing platform. The multiple disparate platforms can be any of platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>; <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b> in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref>; etc.</p><p id="p-0101" num="0100">For example, the multiplatform management system <b>150</b> can store a list of actions associated with each of the multiple disparate platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>; <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b> in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref>; etc. To determine which of the multiple disparate platforms can perform the action, multiplatform management system <b>150</b> can match the user requested action to an action associated with one of the multiple disparate platforms. Upon determining which of the multiple disparate platforms can perform the action, the multiplatform management system <b>150</b> can format the request into a format acceptable by the selected platform.</p><p id="p-0102" num="0101">In step <b>1020</b>, the multiplatform management system <b>150</b> can receive a user requested action from the natural language processing system, such as &#x201c;create expense report,&#x201d; &#x201c;retrieve absence entitlements,&#x201d; &#x201c;create a timecard entry,&#x201d; &#x201c;retrieve active projects,&#x201d; etc.</p><p id="p-0103" num="0102">In step <b>1030</b>, the multiplatform management system <b>150</b> can facilitate communication between the multiple disparate platforms by determining a platform among the multiple disparate platforms that can perform the user requested action. The multiplatform management system <b>150</b> can format the user requested action into a format accepted by the platform and sending the formatted user requested action to the platform. If a confidence associated with the user requested action is below a predetermined threshold, such as below 60%, the multiplatform management system <b>150</b> can query the user to confirm that the user requested action should be performed.</p><p id="p-0104" num="0103">In step <b>1040</b>, the platform can perform the action. For example, when the platform is Intapp, the platform can create the timecard entry.</p><p id="p-0105" num="0104">After performing the action, the multiplatform management system <b>150</b> can receive a natural language response from the user. The natural language response can contain a positive or negative feedback such as &#x201c;thanks,&#x201d; or &#x201c;incorrect,&#x201d; respectively. The multiplatform management system <b>150</b> can provide the feedback to the platforms involved in performing the action, so that when the feedback is positive, given the same natural language user request, the same action is more likely to be performed next time, or when the feedback is negative, given the same natural language request, the same action is less likely to be performed next time.</p><p id="p-0106" num="0105">To select which action to perform, the multiplatform management system <b>150</b> can determine a first confidence level associated with a first action among the multiple actions and a second confidence level associated with a second action among the multiple actions. The multiplatform management system <b>150</b> can determine that the first confidence level is greater than the second confidence level and select the first action as the action. When the first confidence level is below a predetermined threshold, such as 50%, the multiplatform management system <b>150</b> can ask the user for a confirmation prior to performing the action.</p><p id="p-0107" num="0106">The confirmation received from the user can affect the confidence level as well as which action is selected. Upon receiving the positive feedback, the multiplatform management system <b>150</b> can increase the first confidence level next time when the same natural language request is received. Upon receiving the negative feedback, the multiplatform management system <b>150</b> can decrease the first confidence level next time when the same natural language request is received.</p><p id="p-0108" num="0107">To interpret the natural language request, the processor can obtain a natural language input from the user entered prior to the natural language request. The processor can interpret the natural language request based on the natural language input entered prior to the natural language request. For example, a first person pronoun such as &#x201c;I&#x201d; or &#x201c;my&#x201d; is interpreted based on who is logged in. A feedback such as &#x201c;this is wrong&#x201d; is interpreted to refer to the immediately preceding output from the multiplatform management system <b>150</b>.</p><heading id="h-0008" level="2">Computer</heading><p id="p-0109" num="0108">Presented <figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagrammatic representation of a machine in the example form of a computer system <b>1100</b> within which a set of instructions, for causing the machine to perform any one or more of the methodologies or platforms discussed herein, may be executed.</p><p id="p-0110" num="0109">In the example of <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the computer system <b>1100</b> includes a processor, memory, non-volatile memory, and an interface device. Various common components (e.g., cache memory) are omitted for illustrative simplicity. The computer system <b>1100</b> is intended to illustrate a hardware device on which any of the components described in the example of <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>10</b></figref> (and any other components described in this specification) can be implemented. The computer system <b>1100</b> can be of any applicable known or convenient type. The components of the computer system <b>1100</b> can be coupled together via a bus or through some other known or convenient device.</p><p id="p-0111" num="0110">The processor of the computer system <b>1100</b> can perform any of the methods described in this application. The processor can execute instructions associated with the various platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>; <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b> in <figref idref="DRAWINGS">FIGS. <b>4</b>A-<b>4</b>C</figref>; etc. The processor can also execute instructions associated with the multiplatform management system <b>150</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>A-<b>1</b>B</figref>. The various platforms <b>102</b>, <b>104</b>, <b>106</b>, <b>108</b>, <b>160</b>, <b>170</b>, <b>180</b>, <b>430</b>, <b>440</b>, <b>450</b>, <b>460</b> as well as the multiplatform management system <b>150</b> can communicate with each other and the user, using the network of the computer system <b>1100</b>. The video display of the computer system <b>1100</b> can present the user interface to the multiplatform management system <b>150</b>.</p><p id="p-0112" num="0111">This disclosure contemplates the computer system <b>1100</b> taking any suitable physical form. As an example and not by way of limitation, computer system <b>1100</b> may be an embedded computer system, a system-on-chip (SOC), a single-board computer system (SBC) (such as, for example, a computer-on-platform (COM) or system-on-platform (SOM)), a desktop computer system, a laptop or notebook computer system, an interactive kiosk, a mainframe, a mesh of computer systems, a mobile telephone, a personal digital assistant (PDA), a server, or a combination of two or more of these. Where appropriate, computer system <b>1100</b> may include one or more computer systems <b>1100</b>; be unitary or distributed; span multiple locations; span multiple machines; or reside in a cloud, which may include one or more cloud components in one or more networks. Where appropriate, one or more computer systems <b>1100</b> may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation, one or more computer systems <b>1100</b> may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems <b>1100</b> may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein, where appropriate.</p><p id="p-0113" num="0112">The processor may be, for example, a conventional microprocessor such as an Intel Pentium microprocessor or Motorola power PC microprocessor. One of skill in the relevant art will recognize that the terms &#x201c;machine-readable (storage) medium&#x201d; or &#x201c;computer-readable (storage) medium&#x201d; include any type of device that is accessible by the processor.</p><p id="p-0114" num="0113">The memory is coupled to the processor by, for example, a bus. The memory can include, by way of example but not limitation, random access memory (RAM), such as dynamic RAM (DRAM) and static RAM (SRAM). The memory can be local, remote, or distributed.</p><p id="p-0115" num="0114">The bus also couples the processor to the non-volatile memory and drive unit. The non-volatile memory is often a magnetic floppy or hard disk, a magnetic-optical disk, an optical disk, a read-only memory (ROM), such as a CD-ROM, EPROM, or EEPROM, a magnetic or optical card, or another form of storage for large amounts of data. Some of this data is often written, by a direct memory access process, into memory during execution of software in the computer <b>1100</b>. The non-volatile storage can be local, remote, or distributed. The non-volatile memory is optional because systems can be created with all applicable data available in memory. A typical computer system will usually include at least a processor, memory, and a device (e.g., a bus) coupling the memory to the processor.</p><p id="p-0116" num="0115">Software is typically stored in the non-volatile memory and/or the drive unit. Indeed, storing an entire large program in memory may not even be possible. Nevertheless, it should be understood that for software to run, if necessary, it is moved to a computer-readable location appropriate for processing, and for illustrative purposes, that location is referred to as the memory in this paper. Even when software is moved to the memory for execution, the processor will typically make use of hardware registers to store values associated with the software, and local cache that, ideally, serves to speed up execution. As used herein, a software program is assumed to be stored at any known or convenient location (from non-volatile storage to hardware registers) when the software program is referred to as &#x201c;implemented in a computer-readable medium.&#x201d; A processor is considered to be &#x201c;configured to execute a program&#x201d; when at least one value associated with the program is stored in a register readable by the processor.</p><p id="p-0117" num="0116">The bus also couples the processor to the network interface device. The interface can include one or more of a modem or network interface. It will be appreciated that a modem or network interface can be considered to be part of the computer system <b>1100</b>. The interface can include an analog modem, ISDN modem, cable modem, token ring interface, satellite transmission interface (e.g. &#x201c;direct PC&#x201d;), or other interfaces for coupling a computer system to other computer systems. The interface can include one or more input and/or output devices. The I/O devices can include, by way of example but not limitation, a keyboard, a mouse or other pointing device, disk drives, printers, a scanner, and other input and/or output devices, including a display device. The display device can include, by way of example but not limitation, a cathode ray tube (CRT), liquid crystal display (LCD), or some other applicable known or convenient display device. For simplicity, it is assumed that controllers of any devices not depicted in the example of <figref idref="DRAWINGS">FIG. <b>11</b></figref> reside in the interface.</p><p id="p-0118" num="0117">In operation, the computer system <b>1100</b> can be controlled by operating system software that includes a file management system, such as a disk operating system. One example of operating system software with associated file management system software is the family of operating systems known as Windows&#xae; from Microsoft Corporation of Redmond, Wash., and its associated file management systems. Another example of operating system software with its associated file management system software is the Linux&#x2122; operating system and its associated file management system. The file management system is typically stored in the non-volatile memory and/or drive unit and causes the processor to execute the various acts required by the operating system to input and output data and to store data in the memory, including storing files on the non-volatile memory and/or drive unit.</p><p id="p-0119" num="0118">Some portions of the detailed description may be presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of operations leading to a desired result. The operations are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.</p><p id="p-0120" num="0119">It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as &#x201c;processing&#x201d; or &#x201c;computing&#x201d; or &#x201c;calculating&#x201d; or &#x201c;determining&#x201d; or &#x201c;displaying&#x201d; or &#x201c;generating&#x201d; or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.</p><p id="p-0121" num="0120">The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the methods of some embodiments. The required structure for a variety of these systems will appear from the description below. In addition, the techniques are not described with reference to any particular programming language, and various embodiments may thus be implemented using a variety of programming languages.</p><p id="p-0122" num="0121">In alternative embodiments, the machine operates as a standalone device or may be connected (e.g., networked) to other machines. In a networked deployment, the machine may operate in the capacity of a server or a client machine in a client-server network environment, or as a peer machine in a peer-to-peer (or distributed) network environment.</p><p id="p-0123" num="0122">The machine may be a server computer, a client computer, a personal computer (PC), a tablet PC, a laptop computer, a set-top box (STB), a personal digital assistant (PDA), a cellular telephone, an iPhone, a Blackberry, a processor, a telephone, a web appliance, a network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine.</p><p id="p-0124" num="0123">While the machine-readable medium or machine-readable storage medium is shown in an exemplary embodiment to be a single medium, the term &#x201c;machine-readable medium&#x201d; and &#x201c;machine-readable storage medium&#x201d; should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions. The term &#x201c;machine-readable medium&#x201d; and &#x201c;machine-readable storage medium&#x201d; shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies or platforms of the presently disclosed techniques and innovation.</p><p id="p-0125" num="0124">In general, the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application, component, program, object, platform or sequence of instructions referred to as &#x201c;computer programs.&#x201d; The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer, and that, when read and executed by one or more processing units or processors in a computer, cause the computer to perform operations to execute elements involving the various aspects of the disclosure.</p><p id="p-0126" num="0125">Moreover, while embodiments have been described in the context of fully functioning computers and computer systems, those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms, and that the disclosure applies equally regardless of the particular type of machine or computer-readable media used to actually effect the distribution.</p><p id="p-0127" num="0126">Further examples of machine-readable storage media, machine-readable media, or computer-readable (storage) media include but are not limited to recordable type media such as volatile and non-volatile memory devices, floppy and other removable disks, hard disk drives, optical disks (e.g., Compact Disk Read-Only Memory (CD-ROMS), Digital Versatile Disks, (DVDs), etc.), among others, and transmission type media such as digital and analog communication links.</p><p id="p-0128" num="0127">In some circumstances, operation of a memory device, such as a change in state from a binary one to a binary zero or vice versa, for example, may comprise a transformation, such as a physical transformation. With particular types of memory devices, such a physical transformation may comprise a physical transformation of an article to a different state or thing. For example, but without limitation, for some types of memory devices, a change in state may involve an accumulation and storage of charge or a release of stored charge. Likewise, in other memory devices, a change of state may comprise a physical change or transformation in magnetic orientation or a physical change or transformation in molecular structure, such as from crystalline to amorphous or vice versa. The foregoing is not intended to be an exhaustive list in which a change in state for a binary one to a binary zero or vice versa in a memory device may comprise a transformation, such as a physical transformation. Rather, the foregoing are intended as illustrative examples.</p><p id="p-0129" num="0128">A storage medium typically may be non-transitory or comprise a non-transitory device. In this context, a non-transitory storage medium may include a device that is tangible, meaning that the device has a concrete physical form, although the device may change its physical state. Thus, for example, non-transitory refers to a device remaining tangible despite this change in state.</p><heading id="h-0009" level="2">Remarks</heading><p id="p-0130" num="0129">The language used in the specification has been principally selected for readability and instructional purposes, and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this Detailed Description, but rather by any claims that issue on an application based hereon. Accordingly, the disclosure of various embodiments is intended to be illustrative, but not limiting, of the scope of the embodiments, which is set forth in the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>receiving at a multiplatform management system a natural language request from a computing device, the multiplatform management system configured to interface with a plurality of disparate platforms including a natural language processing platform, each platform being configured to perform an action of a plurality of actions, at least one platform being a cloud platform, at least one of the disparate platforms including a human capital management database including data representing time card data to describe time worked and data representing expense report data to describe expense-related data;</claim-text><claim-text>identifying a user requested action based on data associated with the natural language processing platform, the user requested action including data representing a request to enter timecard data or to submit an expense report, or both;</claim-text><claim-text>selecting the cloud platform to perform the user requested action;</claim-text><claim-text>formatting data representing the user requested action into a formatted user requested action accepted by the cloud platform; and</claim-text><claim-text>performing the action.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>determining an event type based on the natural language request, the event type being used to identify the cloud platform to be selected based on detection of an image or text in the natural language request;</claim-text><claim-text>formatting the natural language request into a formatted natural language request accepted by the natural language processing platform; and</claim-text><claim-text>forwarding the formatted natural language request to the natural language processing platform.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>transmitting the formatted user requested action to the cloud platform.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>displaying a user interface at the computing device, the user interface being configured to receive input of the natural language request.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein causing generation of the user interface comprises:<claim-text>displaying the user interface at a mobile device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein causing generation of the user interface comprises:<claim-text>displaying one or more user inputs at the user interface, the one or more user inputs including text.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein causing generation of the user interface comprises:<claim-text>displaying one or more user inputs at the user interface, the one or more user inputs including an image.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>displaying a user interface at the computing device to facilitate formation of a natural language interface.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>displaying a user interface at the computing device, the user interface being configured to facilitate formation of a single natural language interface.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the natural language request comprises:<claim-text>data representing a request in one or more human languages.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the natural language request comprises:<claim-text>either text or audio.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>sending the formatted user requested action to the cloud platform.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein sending the formatted user requested action comprises:<claim-text>translating data representing the formatted user requested action from a first programming language to a second programming language.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, the plurality of disparate platforms further comprising the natural language processing platform and an image analysis platform.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A system comprising:<claim-text>a multiplatform management system including a data store configured to store executable instructions and data, and a processor configured to execute instructions, the multiplatform management system configured to interface with a plurality of disparate platforms including a natural language processing platform, each platform being configured to perform an action of a plurality of actions, at least one platform being a cloud platform, at least one of the disparate platforms including a human capital management database including data representing time card data to describe time worked and data representing expense report data to describe expense-related data, the processor being configured to:</claim-text><claim-text>receive a natural language request from a computing device,</claim-text><claim-text>identify a user requested action based on data associated with the natural language processing platform, the user requested action including data representing a request to enter timecard data or to submit an expense report, or both;</claim-text><claim-text>select the cloud platform to perform the user requested action;</claim-text><claim-text>format data representing the user requested action into a formatted user requested action accepted by the cloud platform; and</claim-text><claim-text>perform the action.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the processor is further configured to:<claim-text>determine an event type based on the natural language request, the event type being used to identify the cloud platform to be selected based on detection of an image or text in the natural language request;</claim-text><claim-text>format the natural language request into a formatted natural language request accepted by the natural language processing platform; and</claim-text><claim-text>forward the formatted natural language request to the natural language processing platform.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the processor is further configured to:<claim-text>transmit the formatted user requested action to the cloud platform.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the processor is further configured to:<claim-text>translate data representing the formatted user requested action from a first programming language to a second programming language.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the processor is further configured to:<claim-text>cause generation of a user interface at the computing device to facilitate to form a single natural language interface.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the plurality of disparate platforms further comprises the natural language processing platform and one or more of an image analysis platform.</claim-text></claim></claims></us-patent-application>