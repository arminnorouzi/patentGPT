<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004656A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004656</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17930330</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>57</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>455</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>21</main-group><subgroup>577</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45558</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45587</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45575</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR ENDPOINT CONTEXT-DRIVEN, DYNAMIC WORKSPACES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16670796</doc-number><date>20191031</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11487881</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17930330</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Dell Products, L.P.</orgname><address><city>Round Rock</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Andrews</last-name><first-name>Carlton A.</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Dhoble</last-name><first-name>Girish S.</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Grobelny</last-name><first-name>Nicholas D.</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Konetski</last-name><first-name>David</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Kozlowski</last-name><first-name>Joseph</first-name><address><city>Hutto</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Martinez</last-name><first-name>Ricardo L.</first-name><address><city>Leander</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>Robison</last-name><first-name>Charles D.</first-name><address><city>Buford</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Dell Products, L.P.</orgname><role>02</role><address><city>Round Rock</city><state>TX</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods for endpoint context-driven, dynamic workspaces are described. In some embodiments, an Information Handling System (IHS) of a workspace orchestration service, the IHS comprising a processor and a memory coupled to the processor, the memory having program instructions stored thereon that cause the IHS to: receive initial context information from a local management agent; produce a first workspace definition based upon the initial context information, where the local management agent is configured to instantiate a first workspace based upon the first workspace definition; receive updated context information from the local management agent; and in response to the updated context information being noncompliant with attributes of the first workspace definition, select a second workspace definition, where the updated context information complies with the attributes of the second workspace definition, and the local management agent is configured to instantiate a second workspace based upon the second workspace definition.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="169.76mm" wi="158.75mm" file="US20230004656A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="237.24mm" wi="167.89mm" file="US20230004656A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="257.39mm" wi="160.61mm" file="US20230004656A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="253.83mm" wi="169.84mm" orientation="landscape" file="US20230004656A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="235.12mm" wi="166.12mm" orientation="landscape" file="US20230004656A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="239.35mm" wi="77.89mm" file="US20230004656A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="143.93mm" wi="168.32mm" file="US20230004656A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="114.22mm" wi="164.34mm" file="US20230004656A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="179.58mm" wi="166.45mm" file="US20230004656A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This patent application a continuation of, and claims priority to, U.S. patent application Ser. No. 16/670,796, titled &#x201c;SYSTEMS AND METHODS FOR ENDPOINT CONTEXT-DRIVEN, DYNAMIC WORKSPACES&#x201d; and filed on Oct. 31, 2019, the disclosure of which is hereby incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">This disclosure relates generally to Information Handling Systems (IHSs), and, more specifically, to systems and methods for endpoint context-driven, dynamic workspaces.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As the value and use of information continue to increase, individuals and businesses seek additional ways to process and store information. One option is an Information Handling System (IHS). An IHS generally processes, compiles, stores, and/or communicates information or data for business, personal, or other purposes. Because technology and information handling needs and requirements may vary between different applications, IHSs may also vary regarding what information is handled, how the information is handled, how much information is processed, stored, or communicated, and how quickly and efficiently the information may be processed, stored, or communicated. The variations in IHSs allow for IHSs to be general or configured for a specific user or a for specific use such as financial transaction processing, airline reservations, enterprise data storage, global communications, etc. In addition, IHSs may include a variety of hardware and software components that may be configured to process, store, and communicate information and may include one or more computer systems, data storage systems, and networking systems.</p><p id="p-0005" num="0004">IHSs provide users with capabilities for accessing, creating, and manipulating data, and often implement a variety of security protocols in order to protect this data. Historically, IHSs have been designed to implement security paradigms that isolate them from possible security threats, much like a castle is designed and constructed to safeguard persons within its walls. In the case of a network of IHSs, for example, security systems implement strategies that isolate the entire network from threats. In effect, a set of castle walls is constructed around the entire network. While working from within the walls of such systems, users may be provided with secure and productive use of data.</p><p id="p-0006" num="0005">However, security paradigms that isolate protected data within the walls of a castle are increasingly frustrated by the realities of modern computing. Nowadays, users expect to access protected data using a plethora of different IHSs while located at a variety of physical locations. In an effort to leverage the security of the system providing access to the data, current protocols for supporting remote access have sought to extend the defenses of the system to remote IHSs, essentially extending the castle walls to temporarily include all or part of the remote IHSs.</p><p id="p-0007" num="0006">Another complication of modern computing is the user's expectation that they will be able utilize their own personal IHSs to access some or all of their protected data, even if those users are provided with enterprise-issued IHSs for accessing it. For administrators of such systems, this increases the difficulty in securing all manners in which protected data may be accessed. This difficulty is greatly expanded by the need to support access to protected data using an ever-growing list of software applications, whether on a personal IHS or an enterprise-issued IHS. Moreover, the administration of such systems is further complicated by the need to support access to protected data from a variety of physical locations and via a variety of networks, including untrusted networks. Faced with such problems, systems for providing access to protected data are often burdensome to administer and ultimately the data is insufficiently protected so as to facilitate its productive use.</p><p id="p-0008" num="0007">A known technique for securing access to protected data accessed via an IHS is to isolate the data within a segregated or virtualization environment that runs on the IHS using a virtual machine or container. Conventional types of virtualization environments provide varying degrees of isolation from the hardware and operating system of the IHS. However, similarly to the castle wall defenses of security paradigms that seek to isolate protected data within a secure perimeter, conventional virtualization environments are also ill-suited to modern computing. Particularly, these virtualization techniques establish an isolated computing environment on an IHS that allows a user to access only data and applications approved for that user.</p><p id="p-0009" num="0008">In some instances, conventional virtualization techniques may determine the data, applications, and protections to be provided by on an IHS based solely on the identity of the user, and therefore tend to implement all security protocols that would be necessary to secure access to all approved data and applications. As the inventors hereof have recognized, however, not only does this result in complex virtualization efforts that consume large portions of the memory and processing capabilities of the IHS, but conventional techniques also do not account for what the user actually intends to do while operating the IHS.</p><p id="p-0010" num="0009">As the inventors hereof have further recognized, modern computing ought to provide users with access to protected data via a variety of IHSs and at practically any location. Yet conventional virtualization fails to account for the specific context in which an IHS is being used during a particular session, much less to account for changes to the context in which an IHS is used during a session. Furthermore, conventional virtualization techniques tend to provide support for many capabilities that are not actually used. The overhead required to provide such unnecessary capabilities unduly burdens the operation of an IHS and degrades productivity and user experience.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0011" num="0010">Systems and methods for endpoint context-driven, dynamic workspaces are described. In an illustrative, non-limiting embodiment, an Information Handling System (IHS) of a workspace orchestration service may include: a processor; and a memory coupled to the processor, the memory having program instructions stored thereon that, upon execution by the processor, cause the IHS to: receive initial context information from a local management agent; produce a first workspace definition based upon the initial context information, where the local management agent is configured to instantiate a first workspace based upon the first workspace definition; receive updated context information from the local management agent; and in response to the updated context information being noncompliant with one or more attributes of the first workspace definition, select a second workspace definition, where the updated context information complies with the one or more attributes of the second workspace definition, and where the local management agent is configured to instantiate a second workspace based upon the second workspace definition.</p><p id="p-0012" num="0011">The initial context information may include at least one of: an identification of a locale of the local management agent, an identification of an application executed or installed in the first workspace, an identification of a user of the local management agent, an identification of a network, an identification of hardware, an identification of a requested datafile, or an identification of a storage system of the requested datafile.</p><p id="p-0013" num="0012">The program instructions, upon execution, may cause the IHS to: determine that an updated security risk associated with the updated context information is greater than a security target associated with the first workspace definition; and select the second workspace definition, at least in part, in response to the determination.</p><p id="p-0014" num="0013">The program instructions, upon execution, may also cause the IHS to: determine that an updated security risk associated with the updated context information is greater than an initial security risk associated with the initial context information by a threshold value; and select the second workspace definition, at least in part, in response to the determination. The program instructions, upon execution, may cause the IHS to: determine that an updated productivity score associated with the updated context information is smaller than a productivity target associated with the first workspace definition; and select the second workspace definition, at least in part, in response to the determination.</p><p id="p-0015" num="0014">The program instructions, upon execution, may cause the IHS to determine that an updated productivity score associated with the updated context information is smaller than an initial productivity score associated with the initial context information by a threshold value.</p><p id="p-0016" num="0015">The updated context information may indicate an identity of a given application installed or executed after receipt of the initial context information, where the identity is present in a blacklist or absent from a whitelist of the first workspace definition, and where the identity is absent from a blacklist or present in a whitelist of the second workspace definition. The second workspace definition may be selected to: reduce a number of applications available, reduce a number of hardware features available, restrict network access options, or reduce a level of data access.</p><p id="p-0017" num="0016">In another illustrative, non-limiting embodiment, a memory storage device may have program instructions stored thereon that, upon execution by one or more processors of an IHS of a workspace orchestration service, cause the IHS to: receive initial context information from a local management agent of a client device; produce a first workspace definition based upon the initial context information, where the local management agent is configured to instantiate a first workspace based upon the first workspace definition; receive updated context information from the local management agent of the client device; identify, based upon a comparison between the updated context information and the initial context information, that a user of the client device has modified a set of one or more applications in the first workspace; and in response to the modification meeting a condition outlined in the first workspace definition, select a second workspace definition, where the local management agent is configured to instantiate a second workspace based upon the second workspace definition.</p><p id="p-0018" num="0017">The initial context information may include at least one of: an identification of a locale of the client device, an identification of an application executed or installed in the current workspace, an identification of the user of the client device, an identification of a network of the client device, an identification of hardware of a client device, an identification of a requested datafile, or an identification of a storage system of the requested datafile. The program instructions, upon execution, may cause the IHS to: determine that an updated security risk associated with the updated context information is greater than a security target associated with the first workspace definition; and select the second workspace definition, at least in part, in response to the determination.</p><p id="p-0019" num="0018">The program instructions, upon execution, may cause the IHS to: determine that an updated security risk associated with the updated context information is greater than an initial security risk associated with the initial context information by a threshold value; and select the second workspace definition, at least in part, in response to the determination. The program instructions, upon execution, may also cause the IHS to: determine that an updated productivity score associated with the updated context information is smaller than a productivity target associated with the first workspace definition; and select the second workspace definition, at least in part, in response to the determination.</p><p id="p-0020" num="0019">The program instructions, upon execution, may cause the IHS to: determine that an updated productivity score associated with the updated context information is smaller than an initial productivity score associated with the initial context information by a threshold value; and select the second workspace definition, at least in part, in response to the determination.</p><p id="p-0021" num="0020">To determine that the user of the client device has modified the set of one or more applications in the first workspace, the program instructions, upon execution, may cause the IHS to determine that the user has executed or installed a given application in the client device during operation of the workspace. The condition may include a blacklist of applications, and the given application is identified in the blacklist. The program instructions, upon execution, further cause the IHS to: determine that the local management agent has migrated a workload from the first workspace to the second workspace; and release one or more remote resources associated with the first workspace.</p><p id="p-0022" num="0021">In yet another illustrative, non-limiting embodiment, a method may include providing, by a local management agent of a client device to a workspace orchestration service, initial context information; instantiating, by the local management agent, a first workspace based upon a first workspace definition, where the first workspace definition is produced by the workspace orchestration service based upon the initial context information; providing, by the local management agent to the workspace orchestration service, updated context information; and instantiating, by the local management agent, a second workspace based upon a second workspace definition, where the second workspace definition is produced by the workspace orchestration service based upon a comparison between the updated context information and the initial context information indicating that a set of one or more applications in the first workspace has been modified.</p><p id="p-0023" num="0022">The comparison between the updated context information and the initial context information may indicate that a restricted application has been executed or installed in the client device during operation of the first workspace. The method may also include migrating a workload associated with the restricted application from the first workspace to the second workspace; and terminating the first workspace.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0024" num="0023">The present invention(s) is/are illustrated by way of example and is/are not limited by the accompanying figures, in which like references indicate similar elements. Elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram depicting examples of components of an IHS configured to modernize workspace and hardware lifecycle management in an enterprise productivity ecosystem according to various embodiments.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram depicting an example of a method for modernizing workspace and hardware lifecycle management in an enterprise productivity ecosystem, according to various embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> are a diagram depicting an example of a system configured to modernize workspace and hardware lifecycle management in an enterprise productivity ecosystem, according to various embodiments.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of an example of a method for continuous evaluation of workspace definitions using endpoint context, according to various embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of examples of workspace definition modifications, according to various embodiments.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a chart of examples of security-based and productivity-based context changes in a workspace, according to various embodiments.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram of examples of endpoint context-driven, dynamic workspace modifications, according to various embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0032" num="0031">For purposes of this disclosure, an IHS may include any instrumentality or aggregate of instrumentalities operable to compute, calculate, determine, classify, process, transmit, receive, retrieve, originate, switch, store, display, communicate, manifest, detect, record, reproduce, handle, or utilize any form of information, intelligence, or data for business, scientific, control, or other purposes. For example, an IHS may be a personal computer (e.g., desktop or laptop), tablet computer, mobile device (e.g., Personal Digital Assistant (PDA) or smart phone), server (e.g., blade server or rack server), a network storage device, or any other suitable device and may vary in size, shape, performance, functionality, and price. An example of an IHS is described in more detail below. <figref idref="DRAWINGS">FIG. <b>1</b></figref> shows various internal components of an IHS configured to implement certain of the described embodiments. It should be appreciated that although certain embodiments described herein may be discussed in the context of a personal computing device, other embodiments may utilize various other types of IHSs.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram depicting components of an example IHS <b>100</b> configured for securing a dynamic workspace in an enterprise productivity ecosystem. In some embodiments, IHS <b>100</b> may be employed to instantiate, manage, and/or terminate a workspace, such as a secure environment that may provide the user of IHS <b>100</b> with access to enterprise data while isolating the enterprise data from the operating system (OS) and other applications executed by IHS <b>100</b>. In some embodiments, the construction of a workspace for a particular purpose and for use in a particular context may be orchestrated remotely from the IHS <b>100</b> by a workspace orchestration services, such as described with regard to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some embodiments, portions of the workspace orchestration may be performed locally on IHS <b>100</b>. IHS <b>100</b> may be configured with program instructions that, upon execution, cause IHS <b>100</b> to perform one or more of the various operations disclosed herein. In some embodiments, IHS <b>100</b> may be an element of a larger enterprise system that may include any number of similarly configured IHSs in network communications with each other.</p><p id="p-0034" num="0033">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, IHS <b>100</b> includes one or more processor(s) <b>101</b>, such as a Central Processing Unit (CPU), operable to execute code retrieved from system memory <b>105</b>. Although IHS <b>100</b> is illustrated with a single processor, other embodiments may include two or more processors, that may each be configured identically, or to provide specialized processing functions. Processor(s) <b>101</b> may include any processor capable of executing program instructions, such as an INTEL PENTIUM series processor or any general-purpose or embedded processors implementing any of a variety of Instruction Set Architectures (ISAs), such as the x86, POWERPC&#xae;, ARM&#xae;, SPARC&#xae;, or MIPS&#xae; ISAs, or any other suitable ISA. In the embodiment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, processor(s) <b>101</b> includes an integrated memory controller <b>118</b> that may be implemented directly within the circuitry of the processor(s) <b>101</b>, or memory controller <b>118</b> may be a separate integrated circuit that is located on the same die as processor(s) <b>101</b>. Memory controller <b>118</b> may be configured to manage the transfer of data to and from system memory <b>105</b> of IHS <b>100</b> via high-speed memory interface <b>104</b>.</p><p id="p-0035" num="0034">System memory <b>105</b> that is coupled to processor(s) <b>101</b> via memory bus <b>104</b> provides processor(s) <b>101</b> with a high-speed memory that may be used in the execution of computer program instructions by processor(s) <b>101</b>. Accordingly, system memory <b>105</b> may include memory components, such as such as static RAM (SRAM), dynamic RAM (DRAM), NAND Flash memory, suitable for supporting high-speed memory operations by processor(s) <b>101</b>. In some embodiments, system memory <b>105</b> may combine both persistent, non-volatile memory and volatile memory.</p><p id="p-0036" num="0035">In certain embodiments, system memory <b>105</b> includes secure storage <b>120</b> that may be a portion of the system memory designated for storage of information, such as access policies, component signatures, encryption keys, and other cryptographic information, for use in hosting a secure workspace on IHS <b>100</b>. In such embodiments, a signature may be calculated based on the contents of secure storage <b>120</b> and stored as a reference signature. The integrity of the data stored in secure storage <b>120</b> may then be validated at a later time by recalculating this signature of the contents of the secure storage and comparing the recalculated signature against the reference signature.</p><p id="p-0037" num="0036">IHS <b>100</b> utilizes chipset <b>103</b> that may include one or more integrated circuits that are coupled to processor(s) <b>101</b>. In the embodiment of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, processor(s) <b>101</b> is depicted as a component of chipset <b>103</b>. In other embodiments, all of chipset <b>103</b>, or portions of chipset <b>108</b> may be implemented directly within the integrated circuitry of processor(s) <b>101</b>. Chipset <b>103</b> provides processor(s) <b>101</b> with access to a variety of resources accessible via bus <b>102</b>. In IHS <b>100</b>, bus <b>102</b> is illustrated as a single element. However, other implementations may utilize any number of buses to provide the illustrated pathways served by bus <b>102</b>.</p><p id="p-0038" num="0037">As illustrated, a variety of resources may be coupled to processor(s) <b>101</b> of IHS <b>100</b> through chipset <b>103</b>. For instance, chipset <b>103</b> may be coupled to network interface <b>109</b>, such as provided by a Network Interface Controller (NIC) that is coupled to the IHS <b>100</b> and allows the IHS <b>100</b> to communicate via a network, such as the Internet or a LAN. Network interface device <b>109</b> may provide IHS <b>100</b> with wired and/or wireless network connections via a variety of network technologies, such as wireless cellular or mobile networks (CDMA, TDMA, LTE etc.), WIFI and BLUETOOTH. In certain embodiments, network interface <b>109</b> may support connections between a trusted IHS component, such as trusted controller <b>115</b>, and a remote orchestration service. In such embodiments, a connection supported by network interface <b>109</b> between the remote orchestration service and the trusted component may be considered an out-of-band (<b>00</b>B) connection that is isolated from the OS of the IHS.</p><p id="p-0039" num="0038">Chipset <b>102</b> may also provide access to one or more display device(s) <b>108</b> via graphics processor <b>107</b>. In certain embodiments, graphics processor <b>107</b> may be comprised within one or more video or graphics cards or an embedded controller installed as components of the IHS <b>100</b>. Graphics processor <b>107</b> may generate display information and provide the generated information to one or more display device(s) <b>108</b> coupled to IHS <b>100</b>, where display device(s) <b>108</b> may include integrated display devices and/or external display devices coupled to IHS, such as via an I/O port <b>116</b>, where display device(s) <b>108</b> may include integrated display devices and/or external display devices coupled to IHS. In certain embodiments, graphics processor <b>107</b> may be integrated within processor <b>101</b>. The one or more display devices <b>108</b> coupled to IHS <b>100</b> may utilize LCD, LED, OLED, or other thin film display technologies. Each display device <b>108</b> may be capable of touch input such as via a touch controller that may be an embedded component of display device <b>108</b>, graphics processor <b>107</b>, or a separate component of IHS <b>100</b> accessed via bus <b>102</b>.</p><p id="p-0040" num="0039">In certain embodiments, chipset <b>103</b> may utilize one or more I/O controllers to access hardware components such as user input devices <b>111</b> and sensors <b>112</b>. For instance, I/O controller <b>110</b> may provide access to user-input devices <b>110</b> such as a keyboard, mouse, touchpad, touchscreen and/or other peripheral input devices. User input devices <b>111</b> may interface with I/O controller <b>110</b> through wired or wireless connections. Sensors <b>112</b> accessed via I/O controllers <b>110</b> may provide access to data describing environmental and operating conditions of IHS <b>100</b> (e.g., accelerometers, gyroscopes, hinge sensors, rotation sensors, hall effect sensors, temperature sensors, voltage sensors, current sensors, IR sensors, photosensors, proximity sensors, distance sensors, magnetic sensors, microphones, ultrasonic sensors, etc.).</p><p id="p-0041" num="0040">In some cases, chipset <b>103</b> may include a sensor hub capable of utilizing information collected by sensors <b>112</b> in determining the relative orientation and movement of IHS <b>100</b>. For instance, the sensor hub may utilize inertial movement sensors, that may include accelerometer, gyroscope, and magnetometer sensors, and are capable of determining the current orientation and movement of IHS <b>100</b> (e.g., IHS <b>100</b> is motionless on a relatively flat surface, IHS <b>100</b> is being moved irregularly and is likely in transport, the hinge of IHS <b>100</b> is oriented in a vertical direction). In certain embodiments, the sensor hub may also include capabilities for determining a location and movement of IHS <b>100</b> based on triangulation of network signal and based on network information provided by the OS or network interface <b>109</b>. In some embodiments, the sensor hub may support additional sensors, such as optical, infrared and sonar sensors, that may provide support for xR (virtual, augmented, and/or mixed reality) sessions hosted by the IHS <b>100</b> and may be used by the sensor hub provide an indication of a user's presence near IHS <b>100</b>, such as whether a user is present, absent, and/or facing the integrated display <b>108</b>.</p><p id="p-0042" num="0041">In cases where the end-user is present before IHS <b>100</b>, the sensor hub may further determine a distance of the end-user from the IHS, where this determination may be made continuously, at periodic intervals, or upon request. The detected or calculated distances may be used by processor <b>101</b> to classify the user as being in the IHS's near-field (user's position&#x3c;threshold distance A), mid-field (threshold distance A&#x3c;user's position&#x3c;threshold distance B, where B&#x3e;A), or far-field (user's position&#x3e;threshold distance C, where C&#x3e;B). As described in additional detail below, the failure to detect an authenticated user of the IHS <b>100</b> within a proximity of the IHS <b>100</b> may result in a change in the security profile of IHS <b>100</b>, thus triggering a re-evaluation of the security risk of workspaces operating on IHS <b>100</b>. Similar re-evaluation may be triggered based on the detection of additional individuals in proximity to IHS <b>100</b>.</p><p id="p-0043" num="0042">In embodiments where IHS <b>100</b> may support multiple physical configurations, such as a convertible laptop, N-in-1 device, or the like, the sensor hub may utilize one or more mode sensors <b>112</b> that collect readings that may be used in determining the current posture in which the IHS <b>100</b> is physically configured. In certain embodiments, such posture determinations may be additionally made using the movement and orientation information provided by sensors <b>112</b>. In laptop and convertible laptop embodiments, for example, processor <b>101</b> or trusted controller <b>115</b> may utilize a lid position sensor <b>112</b> to determine the relative angle between the two panels of the laptop in order to determine the mode in which IHS <b>100</b> is physically configured. In such embodiments, the lid position sensor may measure the angle of rotation of the hinge that connects the base panel and lid panel of IHS <b>100</b>. In some embodiments, processor <b>101</b> or trusted controller <b>115</b> may provide collected lid position information, such as the hinge angle, to the sensor hub for use in determining the posture in which IHS <b>100</b> is configured. In some embodiments, the sensor hub may interface directly with the lid position sensor in determining hinge angle information.</p><p id="p-0044" num="0043">The sensor hub may determine the posture of IHS <b>100</b> based, at least in part, on the angle of rotation of the hinge of IHS <b>100</b> from a closed position. A first range of hinge angles from a closed position may indicate a laptop posture, a second range of hinge angles may indicate a landscape posture and a third range of angles may indicate a tablet posture. The sensor hub may additionally utilize orientation and movement information collected from inertial movement sensors <b>112</b> to further determine the posture in which the IHS <b>100</b> is physically configured. For instance, if the sensor hub determines that IHS <b>100</b> is configured with a hinge angle of a laptop configuration, but IHS <b>100</b> is oriented on its side, the IHS may be determined to be in a book mode. If IHS <b>100</b> is determined to be tilted such that the hinge is oriented between horizontal and vertical, the user's face is detected to be facing the integrated display, and IHS <b>100</b> is experiencing slight movement, the sensor hub may determine that the IHS <b>100</b> is being used in a book posture. The sensor hub may determine that IHS <b>100</b> is opened to a 180-degree hinge angle and lies on a flat surface, thus indicating that IHS <b>100</b> it is being used in a landscape posture. The sensor hub may similarly determine that IHS <b>100</b> is in a tent configuration, in response to detecting a hinge angle within a defined range, such as between 300 and 345 degrees, and also detecting an orientation of IHS <b>100</b> where the hinge is aligned horizontally and is higher than both of the display panels of IHS <b>100</b>.</p><p id="p-0045" num="0044">Other components of IHS <b>100</b> may include one or more I/O ports <b>116</b> for communicating with peripheral external devices as well as various input and output devices. For instance, I/O <b>116</b> ports may include HDMI (High-Definition Multimedia Interface) ports for use in connecting external display devices to IHS <b>100</b> and USB (Universal Serial Bus) ports, by which a variety of external devices may be coupled to IHS <b>100</b>. In some embodiments, external devices coupled to IHS <b>100</b> via an I/O port <b>116</b> may include storage devices that support transfer of data to and from system memory <b>105</b> and/or storage devices <b>119</b> of IHS <b>100</b>. As described in additional detail below, the coupling of storage devices via an I/O port <b>116</b> may result in a change in the security profile of IHS <b>100</b>, thus triggering a re-evaluation of the security risk of workspaces operating on IHS <b>100</b>.</p><p id="p-0046" num="0045">Chipset <b>103</b> also provides processor(s) <b>101</b> with access to one or more storage devices <b>119</b>. In various embodiments, storage device <b>119</b> may be integral to the IHS <b>100</b>, or may be external to the IHS <b>100</b>. In certain embodiments, storage device <b>119</b> may be accessed via a storage controller that may be an integrated component of the storage device. Storage device <b>119</b> may be implemented using any memory technology allowing IHS <b>100</b> to store and retrieve data. For instance, storage device <b>119</b> may be a magnetic hard disk storage drive or a solid-state storage drive. In some embodiments, storage device <b>119</b> may be a system of storage devices, such as a cloud drive accessible via network interface <b>109</b>.</p><p id="p-0047" num="0046">As illustrated, IHS <b>100</b> also includes BIOS (Basic Input/Output System) <b>117</b> that may be stored in a non-volatile memory accessible by chipset <b>103</b> via bus <b>102</b>. Upon powering or restarting IHS <b>100</b>, processor(s) <b>101</b> may utilize BIOS <b>117</b> instructions to initialize and test hardware components coupled to IHS <b>100</b>. BIOS <b>117</b> instructions may also load an operating system for use by IHS <b>100</b>. BIOS <b>117</b> provides an abstraction layer that allows the operating system to interface with the hardware components of the IHS <b>100</b>. The Unified Extensible Firmware Interface (UEFI) was designed as a successor to BIOS. As a result, many modern IHSs utilize UEFI in addition to or instead of a BIOS. As used herein, BIOS is intended to also encompass UEFI.</p><p id="p-0048" num="0047">In the illustrated embodiment, BIOS <b>117</b> includes a predefined memory or memory region that may be referred to as NVM (Non-Volatile Memory) mailbox <b>106</b>. In such an implementation, mailbox <b>106</b> may provide a secured storage location for use in storing workspace access policies, signatures, cryptographic keys or other data utilized to host and validate a workspace on IHS <b>100</b>. In certain embodiments, the BIOS mailbox <b>106</b> may be utilized as a secure storage utilized by a remote orchestration service in order to store access policies and cryptographic keys for use in delivering and deploying a secured container on IHS <b>100</b>. BIOS mailbox <b>106</b> and secured storage <b>120</b> in system memory <b>105</b> may be utilized in this manner instead of, or in conjunction with, out-of-band functions implemented by trusted controller <b>115</b>.</p><p id="p-0049" num="0048">In certain embodiments, trusted controller <b>115</b> is coupled to IHS <b>100</b>. For example, trusted controller <b>115</b> may be an embedded controller (EC) that is installed as a component of the motherboard of IHS <b>100</b>. In various embodiments, trusted controller <b>115</b> may perform various operations in support of the delivery and deployment of a workspace to IHS <b>100</b>. In certain embodiments, trusted controller <b>115</b> may interoperate with a remote orchestration service via an out-of-band communications pathway that is isolated from the operating system that runs on IHS <b>100</b>. Network interface <b>109</b> may support such out-of-band communications between trusted controller <b>115</b> and a remote orchestration service.</p><p id="p-0050" num="0049">Trusted controller <b>115</b> may receive cryptographic information required for secure delivery and deployment of a workspace to IHS <b>100</b>. In such embodiments, the cryptographic information may be stored to secured storage <b>121</b> maintained by trusted controller <b>115</b>. Additionally, or alternatively, trusted controller <b>115</b> may support execution of a trusted operating environment that may support cryptographic operations used to deploy a workspace on IHS <b>100</b>. Additionally, or alternatively, trusted controller <b>115</b> may support deployment of a workspace within the OS of IHS <b>100</b> via an out-of-band communications channel that is isolated from the OS and allows the workspace to communicate with a trusted agent process of the OS.</p><p id="p-0051" num="0050">Trusted controller <b>115</b> may also provide support for certain cryptographic processing used to support secure deployment and operation of workspaces on IHS <b>100</b>. In some embodiments, such cryptographic processing may be provided via operations of a secure operating environment hosted by trusted controller <b>115</b> in isolation from the software and other hardware components of the IHS <b>100</b>. In some embodiments, trusted controller <b>115</b> may rely on cryptographic processing provided by dedicated cryptographic hardware supported by the IHS, such as a TPM (Trusted Platform Module) microcontroller. In some embodiments, the secured storage <b>121</b> of trusted controller <b>115</b> may be utilized to store cryptographic information for use in authorization of workspaces.</p><p id="p-0052" num="0051">In certain embodiments, trusted controller <b>115</b> may be additionally configured to calculate signatures that uniquely identify individual components of IHS <b>100</b>. In such scenarios, trusted controller <b>115</b> may calculate a hash value based on the configuration of a hardware and/or software component coupled to IHS <b>100</b>. For instance, trusted controller <b>115</b> may calculate a hash value based on all firmware and other code or settings stored in an onboard memory of a hardware component, such as a network interface <b>109</b>. Such hash values may be calculated as part of a trusted process of manufacturing IHS <b>100</b> and may be maintained in the secure storage <b>121</b> as a reference signature.</p><p id="p-0053" num="0052">Trusted controller <b>115</b> may be further configured to recalculate a hash value at a later time for such a component. The hash value recalculated for the component may then be compared against the reference hash value signature in order to determine if any modifications have been made to a component, thus indicating the component has been compromised. In this manner, trusted controller <b>115</b> may be used to validate the integrity of hardware and software components installed on IHS <b>100</b>. In certain embodiments, remote orchestration service <b>206</b> may verify the integrity of the trusted controller <b>115</b> in the same manner, by calculating a signature of trusted controller <b>115</b> and comparing it to a reference signature calculated during a trusted process for manufacture of IHS <b>100</b>. In various embodiments, one or more of these operations supported by trusted controller <b>115</b> may be implemented using BIOS <b>117</b>.</p><p id="p-0054" num="0053">Trusted controller <b>115</b> may also implement operations for interfacing with a power adapter in managing power for IHS <b>100</b>. Such operations may be utilized to determine the power status of IHS <b>100</b>, such as whether IHS <b>100</b> is operating from battery power or is plugged into an AC power source. Firmware instructions utilized by trusted controller <b>115</b> may be used to operate a secure execution environment that may include operations for providing various core functions of IHS <b>100</b>, such as power management and management of certain operating modes of IHS <b>100</b> (e.g., turbo modes, maximum operating clock frequencies of certain components, etc.).</p><p id="p-0055" num="0054">In managing operating modes of IHS <b>100</b>, trusted controller <b>115</b> may implement operations for detecting certain changes to the physical configuration of IHS <b>100</b> and managing the modes corresponding to different physical configurations of IHS <b>100</b>. For instance, where IHS <b>100</b> is a laptop computer or a convertible laptop computer, trusted controller <b>115</b> may receive inputs from a lid position sensor <b>112</b> that may detect whether the two sides of the laptop have been latched together to a closed position. In response to lid position sensor <b>112</b> detecting latching of the lid of IHS <b>100</b>, trusted controller <b>115</b> may initiate operations for shutting down IHS <b>100</b> or placing IHS <b>100</b> in a low-power mode.</p><p id="p-0056" num="0055">IHS <b>100</b> may support the use of various power modes. In some embodiments, the power modes of IHS <b>100</b> may be implemented through operations of trusted controller <b>115</b> and/or the OS of IHS <b>100</b>. In various embodiments, IHS <b>100</b> may support various reduced power modes in order to reduce power consumption and/or conserve battery power when IHS <b>100</b> is not actively in use, and/or to control a level of performance available to the user by increasing or decreasing a maximum operating clock frequency of a component of IHS <b>100</b> (e.g., processor(s) <b>101</b>).</p><p id="p-0057" num="0056">In some embodiments, an IHS <b>100</b> may not include all of the components shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In other embodiments, an IHS <b>100</b> may include other components in addition to those that are shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Furthermore, some components that are represented as separate components in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may instead be integrated with other components. For example, in certain embodiments, all or a portion of the operations executed by the illustrated components may instead be provided by components integrated into processor(s) <b>101</b> as systems-on-a-chip.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram depicting an example of method <b>200</b> for securing a dynamic workspace in an enterprise productivity ecosystem. For sake of illustration, method <b>200</b> has been split into three phases: workspace initialization phase <b>200</b>A, workspace orchestration phase <b>200</b>B, and workspace termination phase <b>200</b>C. During initialization <b>200</b>A, user <b>201</b> (e.g., an enterprise user) operates an IHS <b>100</b> (e.g., a desktop, a laptop, a tablet, a smart phone, etc.) such as described with regard to <figref idref="DRAWINGS">FIG. <b>1</b></figref> within physical environment <b>202</b> (e.g., any type of environment and its associated context, including physical location, geographic location, location within a particular facility or building, detected networks, time of day, proximity of the user, individuals in the vicinity of IHS <b>100</b>, etc.).</p><p id="p-0059" num="0058">Method <b>200</b> starts with an action by user <b>201</b> at a launch point <b>203</b> that may be, for example, a corporate launch point provided by an employer of user <b>201</b>, a launch point <b>203</b> provided by the manufacturer of IHS <b>100</b>, or a launch point provided as a service to user <b>201</b> by a third-party. Particularly, user <b>201</b> operates IHS <b>100</b> to access launch point <b>203</b> that is provided, for example, in the form of a web portal, a portal application running in the operating system of IHS <b>100</b>, a special-purpose portal workspace operating on IHS <b>100</b>, or the like. In various implementations, launch point <b>203</b> may include Graphical User Interface (GUI) elements representing different software applications, data sources and/or other resources that the user may desire to execute and/or manipulate. In various embodiments, launch point may provide a graphical, textual and/or audio interface by which data or other resource may be requested by a user <b>201</b>. As such, an authenticated user <b>201</b> may be provided a launch point that provides visibility as to one or more software applications and an aggregation of user's data sources available across all of their datastores (e.g., local storage, cloud storage, etc.).</p><p id="p-0060" num="0059">As described in additional detail below, workspaces for providing user <b>201</b> with access to requested data or other resources may operate using a local management agent <b>332</b> that operates on IHS <b>100</b> and is configured to interoperate with workspace orchestration service <b>206</b>. In various embodiments, launch point <b>203</b> may be provided in the form of a portal (e.g., a webpage, OS application or special purpose workspace) that allows user <b>201</b> to request access to managed resources. In various embodiments, launch point <b>203</b> may be hosted by remote workspace orchestration service <b>206</b>, local management agent <b>332</b> on IHS <b>100</b>, or any suitable combination thereof. Examples of launch point <b>203</b> technologies may include WORKSPACE ONE INTELLIGENT HUB from WMWARE, INC., and DELL HYBRID CLIENT from DELL TECHNOLOGIES INC., among others.</p><p id="p-0061" num="0060">Initialization phase <b>200</b>A begins when user <b>201</b> chooses to launch an application or access a data source managed by the workspace orchestration service <b>206</b>. In response to an access request issued by user <b>201</b> (e.g., the user &#x201c;clicks&#x201d; on an icon of launch point <b>203</b>), local management agent <b>332</b> of IHS <b>100</b> collects initial security and productivity context information at <b>204</b>. As described in additional detail with regard to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the security context information may include attributes indicating a security risk associated with: the data and/or application being requested, a level of risk presented by the user <b>201</b>, the hardware utilized by the IHS <b>100</b>, the logical environment of IHS <b>100</b> in which a workspace will be deployed to provide access to the requested data and/or application, and the physical environment <b>202</b> in which IHS <b>100</b> is currently located.</p><p id="p-0062" num="0061">Accordingly, in this disclosure, the term &#x201c;security context&#x201d; generally refers to data or other information related to a security posture in which a workspace will be deployed and utilized, where the security posture may be based on the, user, IHS <b>100</b>, data to be accessed via the workspace, and/or environment <b>202</b>. As described in additional detail with regard to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, a security context may be quantified as a security risk score in support of evaluations of the level or risk associated with providing user <b>201</b> access to requested data and/or application while using IHS <b>100</b> in the particular context. A &#x201c;security risk score&#x201d; generally refers to a numerical value usable to score, quantify, or measure various security characteristics of the security context associated with a request. A risk score may be an aggregate score associated with the overall security risk context, whereas a &#x201c;risk metric&#x201d; may be a measurement of risk for a sub-category of some part of the security context.</p><p id="p-0063" num="0062">As described in additional detail with regard to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, security metrics that may be used in the calculation of a security risk score for a particular security context may include, but are not limited to: a classification of the requested data source and/or application, authentication factors used to identify user <b>201</b>, the location of IHS <b>100</b>, a role or other group classifications associated with user <b>201</b>, validation of networks in use by IHS <b>100</b>, type of network in use by IHS <b>100</b>, network firewall configurations in use by IHS <b>100</b>, indicators of attack (IoA), indicators of compromise (IoC) regarding IHS <b>100</b> or a resource being requested by user <b>201</b>, patch levels associated with the operating system and other applications in use on IHS <b>100</b>, availability of encryption, type of available encryption, access to secured storage, use of attestable hardware by IHS <b>100</b>, supported degree of workspace isolation by IHS <b>100</b>, etc.</p><p id="p-0064" num="0063">The term &#x201c;productivity context&#x201d; generally refers to user productivity associated with a workspace, user, IHS, or environment. A &#x201c;productivity score&#x201d; generally refers to an index usable to score, quantify, or measure various productivity characteristics of a productivity context. Examples of productivity context information include, but are not limited to: the hardware of the IHS, the software of the IHS, including the operating system, power states and maximum clock frequencies of selected components of the IHS, peripheral devices coupled to the IHS, either permanently or temporarily, networks available to the IHS and the performance characteristics of those networks, software installers available on the IHS, etc.</p><p id="p-0065" num="0064">Initial productivity and security targets for a workspace may be calculated based on the context of user's <b>201</b> actions combined with the productivity and security context in which the workspace will operate. The productivity and security targets may also be based on user's <b>201</b> behavioral analytics, IHS <b>100</b> telemetry and/or environmental information (e.g., collected via sensors <b>112</b>). In some cases, at <b>205</b>, a local management agent operating on IHS <b>100</b> may calculate initial security and productivity targets based upon the collected security and productivity context. In other cases, remote workspace orchestration service <b>206</b> may calculate security and productivity targets.</p><p id="p-0066" num="0065">As used herein, the term &#x201c;security target&#x201d; generally refers to the attack surface presented by a workspace that is created and operated based on a workspace definition, while the term &#x201c;productivity target&#x201d; generally refers to the productivity characteristics of a particular workspace definition. Examples of a productivity target include, but are not limited to: type of data or data source available to user <b>201</b>, minimum latency of a workspace, etc. Conversely, attributes that may be used to characterize a security target may include, but are not limited to: a minimum security score for a workspace, a minimum trust score of IHS <b>100</b>, authentication requirements for user <b>201</b> (e.g., how many authentication factors are required, frequency of re-authentication), minimum level of trust in the network utilized by a workspace, required isolation of a workspace from IHS <b>100</b>, the ability to access browser within a workspace, the ability to transfer data between workspaces, the ability to extend a workspace, etc.</p><p id="p-0067" num="0066">Moreover, the term &#x201c;workspace definition&#x201d; generally refers to a collection of attributes that describe aspects a workspace that may be assembled, created, and deployed in a manner that satisfies a security target (i.e., the definition presents an attack surface that presents an acceptable level of risk) and a productivity target (e.g., data access, access requirements, upper limits on latency, etc.) in light of the security context (e.g., location, patch level, threat information, network connectivity, etc.) and the productivity context (e.g., available device type and performance, network speed, etc.) in which the workspace is to be deployed. A workspace definition may enable fluidity of migration of an instantiated workspace, since the definition supports the ability for a workspace to be assembled on any target OS or IHS that is configured for operation with the workspace orchestration service <b>206</b>.</p><p id="p-0068" num="0067">In describing capabilities and constraints of a workspace, a workspace definition <b>208</b> may prescribe one or more of: authentication requirements for user <b>201</b>, containment and/or isolation of the workspace (e.g., local application, sandbox, docker container, progressive web application or &#x201c;PWA,&#x201d; Virtual Desktop Infrastructure &#x201c;VDI,&#x201d; etc.), primary applications that can be executed in the defined containment of the workspace to enable user <b>201</b> to be productive with one or more data sources, additional applications that enhance productivity, security components that reduce the scope of the security target presented by the productivity environment (DELL DATA GUARDIAN from DELL TECHNOLOGIES INC., an anti-virus, etc.), the data sources to be accessed and requirements for routing that data to and from the workspace containment (e.g., use of VPN, minimum encryption strength), workspace capabilities to independently attach other resources; etc.</p><p id="p-0069" num="0068">In some implementations, workspace definitions may be based at least in part on static policies or rules defined, for example, by an enterprise's Information Technology (IT) personnel. In some implementations, static rules may be combined and improved upon by machine learning (ML) and/or artificial intelligence (AI) algorithms that evaluate historical productivity and security data collected as workspaces are life cycled. In this manner, rules may be dynamically modified over time to generate improved workspace definitions. If it is determined, for instance, that a user dynamically adds a text editor every time he uses MICROSOFT VISUAL STUDIO from MICROSOFT CORPORATION, then workspace orchestration service <b>206</b> may autonomously add that application to the default workspace definition for that user.</p><p id="p-0070" num="0069">Still with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, during orchestration <b>200</b>B, the initial security and productivity targets are processed and/or reconciled against resources, device capabilities, and cloud services available, etc., to produce a workspace definition at <b>208</b>. As described, a workspace definition may specify capabilities and constraints of a workspace, such as: runtime security requirements of the workspace containment (e.g., such as isolation from the OS of IHS <b>100</b> or from certain hardware of IHS <b>100</b>), the use of reference measurements to attest to the integrity of the workspace once running, applications to be provided for operation within the workspace, aggregation of resources available via the workspace, access configurations (e.g., virtual private network or &#x201c;VPN&#x201d;), etc.</p><p id="p-0071" num="0070">The initial workspace definition may then then utilized by automation engine <b>302</b> of workspace orchestration service <b>206</b> to coordinate the assembly <b>209</b> and instantiation <b>210</b> of a workspace on an appropriate platform&#x2014;e.g., on the cloud or on IHS <b>201</b>&#x2014;based on the security and productivity contexts in which the workspace will operate. In cases where a workspace is cloud-hosted, the automation engine <b>302</b> may assemble and instantiate a remote workspace that may be accessed via a secure connection established via a web browser or other web-based component operating on the IHS <b>100</b>. In some embodiments, automation engine <b>302</b> may resolve configuration conflicts between a workspace definition and the user's inputs in the operation of a workspace.</p><p id="p-0072" num="0071">The instantiated workspace is operated by user <b>201</b> at <b>211</b>, and new productivity and security context information related to the behavior or use of data is generated at <b>212</b>. This operation of a workspace may result in a change or new classification of data based upon what user <b>201</b> has done, accessed, and/or created, thus resulting in a change to the security context of the workspace. To the extent the user's behavioral analytics, device telemetry, and/or the environment has changed to a quantifiable degree, these changes in security context may serve as additional input for a reevaluation of the security and performance targets at <b>207</b> by automation engine <b>302</b>. Additionally, or alternatively, new workspace context, security target, and/or productivity target may be now measured against the initial targets, and the result may cause automation engine <b>302</b> to produce a new workspace definition at <b>208</b>, if appropriate.</p><p id="p-0073" num="0072">Particularly, if the instantiated workspace(s) have parameters that fall outside of the range of the target indexes such that a difference between additional or updated context information and the initial or previous context information is scored below a threshold value, automation engine <b>302</b> may process the assembly of modifications to an existing workspace and deploy such modifications at <b>210</b>. Conversely, if the difference between the additional or updated context information and the initial or previous context information is scored above a threshold value, automation engine <b>302</b> may generate a new workspace at <b>210</b>. Session data metadata and context may be preserved by data aggregation engine <b>336</b>, and session data may be restored as applicable.</p><p id="p-0074" num="0073">Additionally, or alternatively, method <b>200</b> may terminate or retire the initial or previous workspace at <b>213</b>, as part of termination phase <b>200</b>C. In some cases, user action may initiate the termination process (e.g., user <b>201</b> closes application or browser accessing data) and/or termination may take place automatically as part of an adjustment in workspace definition (e.g., the isolated environment is instructed to terminate by automation engine <b>302</b>). Still as part of termination phase <b>200</b>C, workspace resources of IHS <b>100</b> and/or at workspace orchestration service <b>206</b> may be released.</p><p id="p-0075" num="0074">As such, in various embodiments, method <b>200</b> enables secure user productivity even when a workspace operates on an IHS or cloud platform that is not under direct management. Method <b>200</b> also provides for dynamic or adaptive configurations and policies allowing for the best possible user experience while maintaining appropriate level of security. In some cases, the definition of a productivity environment and access requirements may be selected based upon productivity and security dependencies and targets, and the definition of capabilities related to the workspace may be adaptive in nature. Particularly, workspace definition attributes may be dynamically selected based upon historical productivity and security information, based upon each individual user or group's behavior.</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> show a diagram of an example of system components <b>300</b>A and <b>300</b>B (collectively referred to as &#x201c;system <b>300</b>&#x201d;) configured to modernize workspace and hardware lifecycle management in an enterprise productivity ecosystem. Particularly, component system <b>300</b>A comprises workspace orchestration service <b>206</b>, and it may include one or more IHSs remotely located and/or networked having program instructions stored thereon that, upon execution, cause the one or more IHSs to perform various workspace orchestration operations described herein, including, but not limited to: the dynamic evaluation of security and productivity targets based upon updated context information received from IHS <b>100</b>, the calculation of risk scores and other productivity and security metrics based on ongoing collection of context information, the generation of workspace definitions, and the assembly of one or more files or policies that enable the instantiation of a workspace in accordance with a workspace definition at a cloud service and/or IHS <b>300</b>B.</p><p id="p-0077" num="0076">Component <b>300</b>B includes IHS <b>100</b> may have program instructions stored thereon that, upon execution, cause IHS <b>100</b> to perform various local management operations described herein, including, but not limited to, the collection of productivity and security context information, the calculation of productivity scores and/or risk scores, the instantiation, execution, and modification of a workspace based upon files or policies, such as workspace definitions, received from workspace orchestration service <b>206</b>, etc.</p><p id="p-0078" num="0077">Workspace orchestration service <b>300</b>A and IHS <b>300</b>B may be coupled to each other via any suitable network technology and/or protocol, which allows workspace orchestration service <b>300</b>A to be remotely provided with respect to IHS <b>300</b>B. As described with regard to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an IHS according to embodiments may include a component such as a trusted controller that may support certain secure out-of-band communications that are independent from the operating system of IHS <b>100</b>. In some embodiments, such a trusted controller may be configured to support deployment and operation of workspaces on <b>300</b>A and to report changes in context information to the workspace orchestration service <b>300</b>A.</p><p id="p-0079" num="0078">As illustrated in component <b>300</b>A of <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, workspace orchestration service <b>206</b> may include a number of sub-components that support deployment and ongoing evaluation and adaptation of workspaces on an IHS <b>300</b>B. Embodiments of the workspace orchestration service <b>300</b>A may include systems that may support: web services <b>306</b>, manufacturer integration <b>317</b>, and analytics <b>323</b>. Moreover, web services <b>306</b> may comprise application services <b>301</b> and user interface (UI) and automation services <b>302</b>.</p><p id="p-0080" num="0079">Analytics services <b>323</b> may be configured to receive and process context information from IHS <b>300</b>B, both during initial configuration of a workspace and in ongoing support of workspaces, and to provide that information, along with any analytics generated, to context logic <b>303</b> of application services <b>301</b>. Based on information collected during the deployment and ongoing support of workspaces, support assistance intelligence engine (SAIE) <b>324</b> may be configured to generate and/or analyze technical support information (e.g., updates, errors, support logs, etc.) for use in diagnosing and repairing workspace issues. Workspace insights and telemetry engine <b>325</b> may be configured to analyze and/or produce device-centric, historical, and behavior-based data (e.g., hardware measurements, use of features, settings, etc.) resulting from the operation of workspaces. Workspace intelligence <b>326</b> may include any suitable intelligence engine for processing and evaluating context data in order to identify patterns and tendencies in the operation of workspaces and in the adaptation of workspaces based on context changes.</p><p id="p-0081" num="0080">As illustrated, an application services <b>306</b> system of the workspace orchestration service <b>300</b>A includes an UI and automation services <b>302</b> system that may include context logic or engine <b>303</b>, classification policy <b>304</b>, and condition control module or engine <b>305</b>. Context logic or engine <b>303</b> may support processing of context information in making risk assessments (e.g., evaluating the risk associated requests by the user against the context of the user's behavior, history of the user's IHS, capabilities of the user's IHS, and environmental conditions). For instance, as described with regard to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, security context information collected by IHS <b>300</b>B may be provided to workspace orchestration service <b>300</b>A where it may be used, such as by context logic <b>303</b>, to calculate a risk score associated with a request for use of a managed data source and/or application. Classification policy <b>304</b> may include administrator and machine-learning defined policies describing risk classifications associated with different security contexts, such as risk classifications for specific data, locations, environments, IHSs, logical environments, or user actions (e.g., use of high-risk data requires use of a workspace definition suitable for use with a risk score above a specific value). Condition control module or engine <b>305</b> may include intelligence providing automated decision making for appropriately aligning risk and context. In some cases, condition control module or engine <b>305</b> may dynamically deploy a solution to address any detected misalignment of risk and context. For instance, upon requesting access to a highly classified data source that results in a significant increase in risk score, the condition control engine may select workspace definition modifications that implement security procedures that are suitable for the higher risk score.</p><p id="p-0082" num="0081">Application services <b>301</b> may include a group of web services <b>306</b> called on by UI and automation services <b>302</b> to support various aspects of the orchestration of workspaces. Particularly, web services <b>306</b> may include application and workspace services <b>307</b> that may assemble and package applications for deployment in a workspace (e.g., an &#x201c;.msix&#x201d; file packaged and deployed to a MICROSOFT HYPER-V container). In some embodiments, a workspace definition may be used to specify whether a user will be provided access to an application in this manner. Web services <b>306</b> may also include a tenant subscription module <b>308</b>, that performs dynamic configuration of an IHS and deployment of the described workspace orchestration services at the point-of-sale (POS) of an IHS. A license tracking module <b>309</b> may be used to maintain and track license information for software, services, and IHSs. An access control module <b>310</b> may provide top level access controls used in controlling access to data and applications by authorized users. A Unified Endpoint Management (UEM) module <b>311</b> may be configured to support the described orchestration of workspaces on various different IHSs that may be utilized by a particular user.</p><p id="p-0083" num="0082">Web services <b>306</b> that may be used in support of workspaces may further include resource provisioning services <b>312</b> for configuring an IHS or workspace with secrets/credentials necessary to access specific resources (e.g., credentials for use of VPNs, networks, data storage repositories, workspace encryption, workspace attestation, and workspace-to-device anchoring). In some cases, resource provisioning services <b>312</b> may include secrets provisioned as part of a trusted assembly process of IHS <b>300</b>B and, in some instances, associated with a unique identifier <b>348</b> of the IHS <b>300</b>B. Web services <b>306</b> may also include an authorization/token module that provides identity functions and may connect to various authentication sources, such as, for example, Active Directory. Endpoint registration module <b>314</b> may be configured to register IHSs and/or workspaces with management service that tracks the use of the described workspace orchestration. In some scenarios, a directory services <b>315</b> module may be configured to provide active directory services (e.g., AZURE ACTIVE DIRECTORY from MICROSOFT CORPORATION). Device configuration services <b>316</b> enable central configuration, monitoring, managing, and optimization of workspaces that in certain contexts may operate remotely from an IHS and may only present the user of the IHS with an image of the workspace output. In cooperation with resource provisioning services <b>312</b>, device configuration services <b>316</b> may also handle secret creation and IHS configuration, and it some cases, may be out-of-band capable and handle selected operations to the endpoint.</p><p id="p-0084" num="0083">Still referring to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, manufacturer integration components <b>317</b> communicate with application services <b>301</b> and client IHS <b>300</b>B to provide features that are usable during workspace evaluation and instantiation, where these features are based upon information available to the manufacturer of client IHS <b>300</b>B. For instance, certificate authority <b>318</b> may include an entity that issues digital certificates that may be used in validating the authenticity and integrity of the hardware of IHS <b>300</b>B. Identity service module or engine <b>319</b> may be configured to manage the user's or owner's identity as well as brokering identification for use of customer directory <b>322</b>. Order entitlement module or engine <b>320</b> may be responsible for managing the entitlements purchased as well as the associated issued certificates signed by <b>318</b>. Ownership repository <b>321</b> may manage user entitlements associated with IHSs and their ownership and may provide support for users transferring ownership of an IHS and conveying the entitlements associated with that IHS. In certain scenarios, ownership repository <b>321</b> may use this transfer of ownership to decommission the secrets associated with the entitlements embedded in the IHS. Customer directory <b>322</b> may be configured to authenticate and authorize all users and IHSs in a network, such as assigning and enforcing security policies for all IHSs and installing or updating software (in some cases, customer directory <b>322</b> may work in cooperation and/or may be the same as directory services <b>315</b>).</p><p id="p-0085" num="0084">Referring now to IHS <b>300</b>B of <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>, in some embodiments, IHS <b>300</b>B may be configured to operate a local management agent <b>332</b> that may run within a secure execution environment <b>345</b> hosted by a trusted controller <b>341</b>, such as trusted controller <b>115</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In other embodiments, the local management agent <b>332</b> may operate as a trusted and attestable process of the operating system of IHS <b>300</b>B. In some embodiments, local management agent <b>332</b> may include a workspace engine suitable for instantiating and managing the operation of one or more workspaces <b>331</b>A-N on IHS <b>300</b>B. As described, the capabilities of a workspace may be modified based on changes in the productivity and security contexts in which the workspace is operating. Accordingly, the workload(s) in each of the workspaces <b>331</b>A-N may be hosted in a public cloud, a private cloud, a specific server, or locally hosted on IHS <b>300</b>B, depending on the context in which the workspace is operating. These allocations of workspace computing for each particular workspace <b>331</b>A-N may be prescribed by the workspace definition that is used to build and operate each workspace. As described, the workspace definition may be created by workspace orchestration service <b>206</b> based upon context information provided by IHS <b>300</b>B, security targets for each workspace <b>331</b>A-N, and productivity targets for each workspace <b>331</b>A-N.</p><p id="p-0086" num="0085">In some embodiments, local management agent <b>332</b> may be configured to host, launch, and/or execute a workspace hub <b>327</b> that provides a launch point <b>203</b> by which user's initiate workspaces through the selection of managed data and resources. In various embodiments, launch point <b>203</b> may be an agent, application, special-purpose workspace or web portal the provides an interface by which a user may select from an aggregated collection of data sources, applications, calendars, messages or other managed information or resources that are available to the user of IHS <b>300</b>B via operation of a workspace as described herein. In various embodiments, the launch point <b>203</b> may be provided in the form for textual, graphical and/or audio user interfaces that allow a user of IHS <b>300</b>B to select available data and/or resources. In some embodiments, workspace hub <b>327</b> may utilize a local environment management module <b>328</b> in providing the workspace interface that is presented to the user on IHS <b>300</b>B and doing so in a consistent manner across workspaces <b>331</b>A-N. Workspace hub <b>327</b> may also include a local intelligence logic or engine <b>329</b> used to support modeling the use of IHS <b>300</b>B in order to improve characterization of the actual risk associated with a risk context. User authentication and access control operations may be performed by a local identify module <b>330</b> that may interface with trusted controller <b>341</b> in providing user authentication.</p><p id="p-0087" num="0086">In some cases, each instantiated workspace <b>331</b>A-N may be an environment that provides a user with access to requested data or applications, where the environment may be isolated in varying degrees from the hardware and software of IHS <b>300</b>B based on the security context and productivity context in which each workspace <b>331</b>A-N is operating. In some instances, the selection of a data source or resource that are available to user via launch point <b>203</b> may result in launching a new workspace. For instance, if a user launches a browser through selection of an icon displayed by launch point <b>203</b>, a new workspace may be created and launched according to a workspace definition that has been selected for providing the user access to a web browser in the security and productivity contexts in which the request has been made. In a scenario where the user double clicks on a confidential presentation file available from a data source that is provided by launch point <b>203</b>, an additional workspace may be instantiated with a presentation application providing access to the requested presentation file, where this new workspace is created based on a workspace definition that provided appropriate security for access to the confidential presentation). In other instances, a selection of the presentation file by a user may result in the presentation being made available through the existing workspace, in some cases using the existing workspace definition and, in other cases, using a workspace definition that has been modified to support the requested access to the confidential presentation file.</p><p id="p-0088" num="0087">Although workspaces <b>331</b>A-N supported by IHS <b>330</b>B may each be isolated to varying degrees from the hardware and/or software of IHS <b>300</b>B and from each other, a user of IHS <b>330</b>B may expect to be able to operate the multiple workspaces <b>331</b>A-N in a manner that allows content to be transferred between the different workspaces <b>331</b>A-N. For instance, a user may select a portion of the data displayed in workspace <b>331</b>A and utilize operating system or other workspace functions to copy the data for copying to workspace <b>331</b>B.</p><p id="p-0089" num="0088">In various embodiments, a local management agent <b>332</b> may operate in full or in part on a secure platform <b>345</b> hosted by trusted controller <b>341</b> that operates independent from the operating system of IHS <b>300</b>B. In some embodiments, all or part of local management agent <b>332</b> may operate as trusted components of the operating system of IHS <b>300</b>B. To execute the various operations described herein, local management agent <b>332</b> may include a command monitor <b>334</b> configured to provide instrumentation to receive commands from workspace orchestration service <b>300</b>A and thus enable access to IHS <b>300</b>B. Local management agent <b>332</b> may also include telemetry module <b>335</b> that may be configured for communicating collected information to the workspace orchestration service <b>300</b>A, including reporting changes in context that may warrant adjustments to workspaces <b>331</b>A-N. Data aggregator <b>336</b> may track all of the data source and other resources (e.g., applications, local or cloud-based services) that may be provided to the user via a workspace.</p><p id="p-0090" num="0089">Local management agent <b>332</b> may utilize a resource manager module <b>337</b> that is configured to manage access to data, network configuration, such as for VPNs and network access, identity information, access control, and resource provisioning services. Security module <b>338</b> may be configured to provide various security services. BIOS interface <b>339</b> may provide a secure BIOS interface used for accessing and managing credentials in secure object storage. A BIOS analytics module <b>340</b> may be configured to perform forensic services for BIOS telemetry and health assessments. Persistence module <b>346</b> may be configured to support persistence of applications entitled at a POS or assigned by administrators and supported with required license tracking. Workspace attestation module <b>333</b> may provide a platform centric service layer on top of a container engine provided by local management agent <b>332</b> and may be used to measure and attest workspaces <b>331</b>A-N in any suitable manner defined or orchestrated by condition control <b>305</b>.</p><p id="p-0091" num="0090">As part of secure platform <b>345</b>, native management module <b>347</b> may be configured to enable out-of-band management interface with workspace orchestration service <b>206</b>, where this OOB interface operates independent form the OS of IHS <b>300</b>B. In some embodiments, the OOB management interface supported by native management module <b>347</b> may be utilized by the device configuration services <b>316</b> of the workspace orchestration service to access the secure platform services <b>345</b> of IHS <b>300</b>B.</p><p id="p-0092" num="0091">Digital device ID module <b>348</b> may provide a unique, unspoofable, cryptographically bound identifier. In embodiments supporting a secure platform <b>345</b>, secure embedded controller <b>341</b> may be a hardened hardware module that may include a root of trust module <b>342</b> configured as a trusted data store and, in some cases for cryptographic processing, that may be trusted within a cryptographic system. A device attestation service <b>343</b> may be configured to perform device assurance and trust services (e.g., secure BIOS and secure boot, etc.). A secure object store <b>344</b> may be provided that is configured to lock and access keys, hashes, and/or other secrets in an EC and/or trusted platform module (TPM).</p><p id="p-0093" num="0092">In some scenarios, IHS <b>100</b> may be provisioned by a manufacturer that also controls manufacturer integration components <b>317</b>, workspace attestation module <b>333</b> may operate in conjunction with secure object store <b>342</b>, authenticated BIOS module <b>339</b>, and/or digital device identity module <b>348</b>, etc., to further secure and/or control productivity features available in any of workspaces <b>331</b>A-N based upon hardware devices and settings unique to that IHS and/or designed specifically by that manufacturer.</p><p id="p-0094" num="0093">To further illustrate how the systems and methods described herein operate to modernize workspace and hardware lifecycle management in an enterprise productivity ecosystem, three non-limiting use-cases or examples are discussed in turn below.</p><p id="p-0095" num="0094">Use-Case A</p><p id="p-0096" num="0095">In use-case A, a given user may request access to a protected data source on the enterprise's premise using a corporate-owned and imaged notebook, such configured as described with regard to IHS <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and client IHS <b>300</b>B of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0097" num="0096">In response to the request, a local management agent <b>332</b> operating on the user's notebook retrieves information describing the current context and calculates security and productivity targets based on the determined context. In this use-case, the local management agent may have been installed by IT, and it may be running in the background as a service. The confidential data may be associated with the local management agent on the local machine, based on file classification (e.g., file metadata/type/properties/permissions, folder location, encrypted region, etc.). Moreover, the local management agent may continuously collect current context information and send it to the orchestration service for use in scoring the risk and productivity of the workspace (this may also be done at the time of the user's access request or indication of intent).</p><p id="p-0098" num="0097">When the user selects the confidential data, such as via a selection via the OS of the notebook, the local management agent notifies the workspace orchestration service of the request and for a workspace definition for a workspace by which the user may be provided access to the confidential data.</p><p id="p-0099" num="0098">In this example, the workspace orchestration service may score an overall security risk to have a value of &#x201c;2,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon the following context information or inputs, each of which is also given as a risk metric based upon a selected policy: locale: 1 (safe locale); user persona: 1 (known high-confidence in a reasonably sophisticated user classification&#x2014;a user whom historically does not click on phishing emails); network risk: 1 (low risk because of on premise, wired connection detected); device risk: 1 (high level of control because of corporate owned/managed platform, known versions, security features enabled, etc.); regulatory: 1 (based on user, data, location combinations&#x2014;e.g., No restrictions with respect to General Data Protection Regulation or &#x201c;GDPR,&#x201d; Health Insurance Portability and Accountability Act &#x201c;HIPAA,&#x201d; Payment Card Industry &#x201c;PCI,&#x201d; technology export, etc.); and data type: 8 (a confidential datafile is being requested).</p><p id="p-0100" num="0099">The workspace orchestration service may also calculate a productivity score to have a value of &#x201c;9,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon the following context information or inputs, each of which is also given as a resource metric based upon a selected policy: locale: 10 (office); user persona: 9 (a &#x201c;skilled&#x201d; classification based upon advanced compute tasks, proficiency, and/or speed); network speed/latency: 10 (fast, wired, Gigabit Ethernet, or direct to internal network); device performance: 8 (fast, expensive CPU, memory, graphics, but storage only needs&#x2014;e.g., &#x3c;10 GB); and data type: 10 (the local, confidential file is easy to read/write with low latency and high performance on local storage).</p><p id="p-0101" num="0100">Second, based upon the security score and/or context information, the workspace orchestration service builds a workspace definition file having any suitable structure with workspace definition attributes in a machine-readable format (e.g., JSON name-value, XML structured, etc.). In this example, the security target may be deemed to have a value of &#x201c;1&#x201d; based upon a combination of attributes values representing loads, needs, or demands on security controls and containment features that may include: threat monitoring: 1 (low demand); threat detection: 1 (low demand); threat analytics: 1 (low demand); threat response: 1 (low demand); storage confidentiality: 2 (low); storage integrity: 2 (low); network confidentiality: 1 (low); network integrity: 1 (low); memory confidentiality: 1 (low); memory integrity: 1 (low); display confidentiality: 1 (low); display integrity: 1 (low); user authentication: 1 (low, basic password is fine, non-multifactor authentication or &#x201c;MFA,&#x201d; no session expiration); IT administrator scope: 1 (administrator manages remotely but does not need heavy remediation software; and regulatory compliance: 1 (no GDPR, No HIPAA, no PCI, no tech export restriction, etc.).</p><p id="p-0102" num="0101">Based upon the productivity target and/or context information, a productivity target for the workspace definition may be deemed to have a value of &#x201c;9&#x201d; (defining a high-quality, responsive user experience) based upon a combination of attribute values representing productivity requirements as follows: local storage: 7 (partial hard drive control, some storage reserved for IT load); CPU access: 10 (unlimited); local graphics: 10 (unlimited); and application stack: 10 (can use applications, install applications that the user needs, give them administrator rights, etc.).</p><p id="p-0103" num="0102">Third, after the workspace definition is complete, the workspace orchestration service and the local management agent may assemble the workspace and instantiate it for the user. For example, the local management agent may receive definition files (e.g., JSON, XML, etc.) from the orchestration service, and it may parse the file to implement security risk controls such as: threat monitoring: 1 (local management agent does not install threat, detection, and response or &#x201c;TDR&#x201d; software); threat detection: 1 (local management agent does not install TDR software); threat analytics: 1 (orchestration does not need to gather detailed telemetry from the system, OS will not be enrolled in logging); threat response: 1 (local management agent does not install security threat response agent); storage confidentiality: 2 (local management agent deploys a local file-system encryption product that the user can optionally enable on specific files as needed with right-click context menus); storage integrity: 2; network confidentiality: 1 (local management agent confirms basic firewall configuration is correct&#x2014;e.g., IT GPO-controlled); network integrity: 1; memory confidentiality: 1 (local management agent confirms configuration&#x2014;e.g., No SGX, TXT, or container/sandbox software deployed); memory integrity: 1; display confidentiality: 1 (local management agent confirms graphics drivers installed, privacy screen and camera optionally managed by user); display integrity: 1; user authentication: 1 (local agent confirms basic GPO password rules are configured, and met by user&#x2014;e.g., number of characters, no session expiration, etc.); IT administrator scope: 1 (local agent runs with system privilege, confirms IT admin accounts are listed in local admin user group&#x2014;e.g., per GPO); and regulatory compliance: 1 (local agent does not install any compliance assistance software).</p><p id="p-0104" num="0103">After confirming the configuration, the workspace orchestration service and the local management agent may give the user access to the requested local confidential file, and the user may begin working in a newly created workspace.</p><p id="p-0105" num="0104">Use-Case B</p><p id="p-0106" num="0105">In use-case B, a user may request access to a confidential datafile while at a coffee shop using an open public network and an IT-managed/owned PC, such configured as described with regard to IHS <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and client IHS <b>300</b>B of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0107" num="0106">First, a local management agent (<b>332</b>) executed by a client IHS (<b>300</b>B) retrieves the requested context and calculates security and productivity scores based on context. In this use-case, the local management agent may have been installed by IT, and it may be running in the background as a service. The confidential data may kept on a shared IT-managed network resource on-premises (e.g., back in a main corporate office), and the local management agent may be responsible for monitoring when this data path is requested by the user (e.g., the user hits a specific URL, IP, etc.). Moreover, the local management agent may continuously collect all current context and send it to the workspace orchestration service to assist in scoring processes later (this may also be done at the time of the user's access request or indication of intent, rather than a continuous collection).</p><p id="p-0108" num="0107">When the user selects the desired confidential datafile, the client IHS (<b>300</b>B)'s OS calls the local management agent associated with the path to the confidential datafile and calls back to a remote workspace orchestration service (<b>206</b>) to request a workspace definition.</p><p id="p-0109" num="0108">In this example, the workspace orchestration service may score an overall security risk to have a value of &#x201c;4,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon the following context information or inputs, each of which is also given as a risk metric based upon a selected policy: locale: 5 (public, safe country); user persona: 5 (new user, classification data does not exist yet); network risk: 5 (medium, public but common location, wireless connection detected); device risk: 1 (high level of control, corporate owned/managed platform, known versions, security features enabled, etc.); and regulatory: 1 (based on user, data, location combinations&#x2014;e.g., no restrictions with respect to General Data Protection Regulation or &#x201c;GDPR,&#x201d; Health Insurance Portability and Accountability Act &#x201c;HIPAA,&#x201d; Payment Card Industry &#x201c;PCI,&#x201d; technology export, etc.).</p><p id="p-0110" num="0109">The workspace orchestration service may also calculate a productivity score to have a value of &#x201c;5,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon context information or inputs, each of which is also given as a resource metric based upon a selected policy. For instance, security contexts inputs may include: locale: 6 (remote location but in USA major city, in a public area, non-employees are within visual/audio range of device); user persona: 5 (unknown confidence &#x201c;null&#x201d; classification, uses default onboarding assumptions); network speed/latency: 4 (medium, wireless but AC on shared network); and device performance: 8 (fast, expensive CPU, memory, graphics, but storage only needs &#x2dc;&#x3c;10 GB).</p><p id="p-0111" num="0110">Second, based upon the security score and/or context information, the workspace orchestration service builds a workspace definition file having any suitable structure with workspace definition attributes in a machine-readable format (e.g., JSON name-value, XML structured, etc.). In this example, a security target may be deemed to have a value of &#x201c;4&#x201d; based upon a combination of attributes values representing loads, needs, or demands on security controls and containment features as follows: threat monitoring: 4 (medium demand); threat detection: 4 (medium demand); threat analytics: 4 (medium demand); threat response: 4 (medium demand); storage confidentiality: 4 (medium); storage integrity: 9 (high); network confidentiality: 5 (medium); network integrity: 2 (low); memory confidentiality: 4 (medium); memory integrity: 8 (high); display confidentiality: 7 (medium/high&#x2014;worried about &#x201c;shoulder surfers&#x201d; reading data from an adjacent seat or table nearby, public location) display integrity: 2 (low); user authentication: 4 (medium, two-factor authentication using a hardware token, session expiration upon sleep, screen lock, or logout); IT administration scope: 3 (administrator can monitor, manage, and remediate remotely if the user calls them for help with IT issues); and regulatory compliance: 1 (no GDPR, No HIPAA, no PCI, no tech export restriction, etc.).</p><p id="p-0112" num="0111">Based upon the productivity target and/or context information, a productivity target for the workspace definition may be deemed to have a value of &#x201c;7&#x201d; (defining a high-quality, responsive user experience) based upon a combination of attribute values representing productivity requirements as follows: local storage: 7 (partial hard drive control, some storage reserved for IT load); CPU access: 10 (unlimited); local graphics: 10 (unlimited); and application stack: 7 (can use applications, can install some IT-approved applications that the user needs, but no administrator rights, because the user cannot be trusted to install only valid/safe productivity software, but can install pre-approved IT applications as needed).</p><p id="p-0113" num="0112">Third, after the workspace definition is complete, the workspace orchestration service and the local management agent may assemble the workspace and instantiate it for the user. For example, the local management agent may receive definition files (e.g., JSON, XML, etc.) from the orchestration service, and it may parse the file to implement security risk controls such as: threat monitoring: 5 (local management agent installs or confirms prior installation/configuration of TDR software); threat detection: 5 (local management agent installs or confirms prior installation/configuration of TDR software); threat analytics: 5 (orchestration confirms telemetry is accessible, OS will be enrolled in logging if not already enrolled); threat response: 2 (local management agent downloads but does not run remote incident response application-preparation in case incident is detected); storage confidentiality: 5 (local management agent deploys a local container technology, such as sandbox, with restricted &#x201c;save&#x201d; permissions such that the confidential files will not be allowed to save locally on the PC, but can be accessed as long as the session is active in memory); storage integrity: 5; network confidentiality: 5 (local management agent steps up firewall protections, disabling all unnecessary ports, and establishes a VPN back to the corporate office for protecting traffic to the local sandbox); network integrity: 5; memory confidentiality: 5 (local management agent configures sandbox container to isolate application and data from other applications/threats that may infiltrate the host OS); memory integrity: 5; display confidentiality: 7 (local management agent confirms graphics drivers installed, enforces privacy screen and uses camera to detect specific onlooker threats); display integrity: 7; user authentication: 4 (local agent confirms basic GPO password rules are configured, and met by user&#x2014;e.g., number of characters, no session expiration, etc., but also adds in a requirement for hardware token to log in and again to establish network); IT administrator scope: 4 (local agent runs with administrator and remote access privilege, confirms IT admin accounts are listed in local admin user group&#x2014;e.g., per GPO); and regulatory compliance: 4 (local agent installs state specific rule enforcement or monitoring software).</p><p id="p-0114" num="0113">After confirming the configuration, the workspace orchestration service and the local management agent may give the user access to the requested local confidential file, and the user may begin working in a newly created workspace.</p><p id="p-0115" num="0114">Use-Case C</p><p id="p-0116" num="0115">In use-case C, a user may request access to a confidential datafile in a web hosted remote portal using a browser from Kazakhstan, while at an internet caf&#xe9; with a borrowed/rented PC, such configured as described with regard to IHS <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and client IHS <b>300</b>B of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, on an open WiFi network.</p><p id="p-0117" num="0116">First, a remote workspace orchestration service (<b>332</b>) intercepts the access request and evaluates the browser and user context, and calculates security and productivity scores. In this use-case, there is no local management agent; all that is known is the browser and any telemetry returned or garnered through the HTTP/S session. Assume, for sake of this example, that the confidential data may kept on a shared IT-managed network resource on-premises (e.g., back in a main corporate office) and that the datafile will remain there with only remote rendering/access privileges. Web-based context may be gathered through the browser session or supplied by the user. Moreover, user context may also be collected for the workspace orchestration service through alternate side-channels (e.g., travel calendar information, recent user billing activity on corporate credit card, phone call logs, and/or location data).</p><p id="p-0118" num="0117">When the user selects the desired confidential datafile from the web browser, the back-end web server infrastructure calls back to the workspace orchestration service to request a workspace definition.</p><p id="p-0119" num="0118">In this example, the workspace orchestration service may score an overall security risk to have a value of &#x201c;9,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon the following context information or inputs, each of which is also scored as a risk metric based upon a selected policy: locale: 9 (Kazakhstan); user persona: 1 (user was expected to be there, the timing seems right based upon past logins, and he has a biometric watch communicator proving he is alive, himself, and located where he says he is&#x2014;so that IT can always trust him); network risk: 9 (high, public and in a very obscure place); device risk: 9 (zero trust); and regulatory: 8 (based on user, data, location combinations).</p><p id="p-0120" num="0119">The workspace orchestration service may also calculate a productivity score to have a value of &#x201c;5,&#x201d; using a weighed, machine learning, or artificial intelligence algorithm, based upon the following context information or inputs, each of which is also given as a resource metric based upon a selected policy: locale: 3 (internet caf&#xe9; device without great performance); user persona: 9 (known high-confidence and &#x201c;skilled&#x201d; classification&#x2014;advanced compute tasks, proficiency, and speed); network speed/latency: 3 (low quality&#x2014;Wireless G from a long way away); and device performance: 3 (have to be able to tolerably browse web pages but based on what the service believes the capabilities will be, the service should build simple ones).</p><p id="p-0121" num="0120">Second, based upon the security score and/or context information, the workspace orchestration service builds a workspace definition file having any suitable structure with workspace definition attributes in a machine-readable format (e.g., JSON name-value, XML structured, etc.). In this example, a security target may be deemed to have a value of &#x201c;9&#x201d; based upon a combination of attributes values representing loads, needs, or demands on security controls and containment features as follows: threat monitoring: 10 (high demand, to be handled on the server side); threat detection: 10 (high demand, to be handled on the server side); threat analytics: 10 (high demand, to be handled on the server side); threat response: 10 (high demand, to be handled on the server side); storage confidentiality: 10 (high demand, to be handled on the server side); storage integrity: 8; network confidentiality: 10 (high demand, to be handled on the server side); network integrity: 9; memory confidentiality: 10 (high demand, to be handled on the server side); memory integrity: 9; display confidentiality: 10 (high, &#x201c;shoulder surfers&#x201d; may read datafile from an adjacent seat or table nearby in a public location); display integrity: 9; user authentication: 10 (high, three-factor authentication using login, hardware token, and biometric satellite watch&#x2014;session expiration and refreshes every 30 seconds); IT administrator scope: 8 (administrator may monitor, manage, and remediate remotely if the user calls them for help or anything unexpected happens); and regulatory compliance: 10 (all network traffic is securely monitored as will the data presented).</p><p id="p-0122" num="0121">Based upon the productivity target and/or context information, a productivity target for the workspace definition may be deemed to have a value of &#x201c;3&#x201d; (defining a usable secure user experience primarily built for consumption and not productivity) based upon a combination of attribute values representing productivity requirements as follows: local storage: 1 (cache only); CPU access: 3 (build for limited expectations); local graphics: 3 (build for limited expectations); and application stack: 1 (web browser experience on a kiosk mode device, limited data entry capability, limited read access to need-to-know only information through VDI rendered kiosk).</p><p id="p-0123" num="0122">Third, after the workspace definition is complete, the workspace orchestration service and remote cloud web portal (e.g., session the user logged into through the browser) may assemble the workspace and instantiate it for the user in the browser. For example, the web portal may receive definition files (e.g., JSON, XML, etc.) from the orchestration service, and it may parse the file to implement security risk controls such as: threat monitoring: 9 (data center based management agent installs or confirms prior installation/configuration of TDR software); threat detection: 9 (data center based management agent installs or confirms prior installation/configuration of TDR software); threat analytics: 9 (orchestration confirms telemetry is accessible, server hosting web server may be enrolled in logging if not already enrolled&#x2014;user behavioral telemetry from side channels may also be continuously monitored for suspicious/anomalous activity); threat response: 10 (data center-based management agent sets up watchdog timer to kill session automatically without periodic check-ins from orchestration, user telemetry, and web browser); storage confidentiality: 9 (data center-based management agent builds a progressive web application that may be used to display the data through a secure TLS link&#x2014;the data will be rendered but only the as-needed portions of visualization presented to the user, and nothing can be saved); storage integrity: 10; network confidentiality: 9 (route traffic through best effort to secure locations&#x2014;do not allow anything except bitmap renderings through the enforceable network); network integrity: 4; memory confidentiality: 9 (web page viewer only-no data leaves the data center, no confidential input is taken from the rented PC, no keyboard input is allowed, and all input may be captured from randomized virtual keyboard using mouse click coordinates); memory integrity: 8; display confidentiality: 8 (best effort to ensure confidentiality&#x2014;prompt user at least&#x2014;adjustable font sizes, but defaults to small fonts, obfuscated text, etc.); display integrity: 2; user authentication: 9 (local agent confirms basic password rules are configured, and met by user&#x2014;e.g., number of characters, no session expiration, etc., but also adds in a requirement for hardware token and biometric, satellite watch to log in and again to establish network, requiring frequent reconfirmation from user); IT administrator scope: 7 (data center-based remote environment); and regulatory compliance: 8 (local agent does not exist but data center-based agent monitors/blocks data not appropriate).</p><p id="p-0124" num="0123">After confirming the configuration, the workspace orchestration service and the local management agent may give the user access to the requested rendered data, and the user may begin working in a newly created workspace.</p><p id="p-0125" num="0124">In various embodiments, systems and methods described herein may enable the dynamic adjustment of workspaces, such that workspace and/or access device resources may grow or shrink over time based upon a comparison between: (i) workload and/or productivity demands or needs, and (ii) security risks. In some implementations, these comparisons may be performed periodically, continuously, and/or may be triggered by selected events.</p><p id="p-0126" num="0125">To appropriately scale, right-size, or optimize a workspace to balance productivity needs against security risks, workspace orchestration service <b>206</b> may be configured to validate or test whether a given workspace is well-adjusted. For example, in order to test whether a workspace properly balances workloads/productivity against security risks, local management agent <b>332</b> and/or workspace orchestration service <b>206</b> may use endpoint context information collected during the utilization phase of the workspace to determine if hardware and/or software resources are over-utilized, over-constrained, under-utilized, or over-privileged.</p><p id="p-0127" num="0126">Data points collected from endpoint context may be aggregated in a scoring system, with points and multipliers/weights assigned to a different one of a plurality of categories of data (e.g., productivity context, security context, workspace context, and user context). If the aggregate score reaches a selected upper or lower threshold, local management agent <b>332</b> and/or workspace orchestration service <b>206</b> may take appropriate action, such as automatically and/or locally adjusting settings and features of the workspace, reporting thresholds exceeded to a remote entity, requesting and/or receiving remote assistance, modifying a current workspace definition, and/or or creating a new workspace definition. The thresholds and threshold values may themselves be stored as attributes in a given workspace definition, and may also be dynamically adjusted either by weighted, ML, and/or AI algorithms in response to changes in context information.</p><p id="p-0128" num="0127">For example, in an implementation, data points may be assigned to one of two categories of data: workspace context and user context. Examples of workspace context information include, but are not limited to: network use, data use, and application use. Conversely, examples of user context information include, but are not limited to: number of mouse clicks on the same region of a GUI per unit time, number of keystrokes per unit time, etc.</p><p id="p-0129" num="0128">When under-utilized and/or over-privileged, a workspace may exhibit certain characteristics, and, when over-utilized and/or over-constrained, the reverse may be true. The context of applications, frameworks, hardware, or features installed along with level of data access provided, as well as other resources, may be normalized and aggregated into a workspace context score, which can be used to trigger actions if thresholds are crossed.</p><p id="p-0130" num="0129">Moreover, when a workspace is under heavy utilization, a user may exhibit behaviors that can be used as context for workspace definition adjustment decisions if they cross certain thresholds. User behavior data points may be normal, nominal, or average user input rates, such as the number of clicks or keystrokes.</p><p id="p-0131" num="0130">In some cases, user behavior may be measured in terms of a user frustration score or indicator, quantifying behaviors such as, for example: a user clicking on the same area of the screen repeatedly (e.g., indicating that they are perceiving a lack of responsiveness from the software) or above a threshold number of times, the user repeating the same keystrokes a selected number of times during a preset time interval, the user performing simultaneous keystrokes, accelerometer data indicating IHS movement or impact event of a given magnitude, an IHS lid being shut and/or open, and/or specific changes to a distance between the user and the client device (e.g., the user walking away from the IHS), etc.</p><p id="p-0132" num="0131"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of an example of method <b>400</b> for continuous evaluation of workspace definitions using endpoint context. In various embodiments, method <b>400</b> may be performed by workspace orchestration service <b>206</b> in cooperation with local management agent <b>332</b>. Particularly, within configuration stage <b>401</b>, block <b>402</b> may set threshold values for minimum and/or maximum security scores, and for minimum and/or maximum productivity scores, where these scores are calculated based upon context information gathered by client device <b>100</b> during the lifecycle of a workspace. Then, at block <b>403</b>, method <b>400</b> may create a workspace definition using the available context information and/or access request (e.g., as part of operation <b>208</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0133" num="0132">At block <b>404</b>, method <b>400</b> may instantiate or deploy a workspace based upon the workspace definition (e.g., as part of operation <b>210</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0134" num="0133">Within score monitoring and updating stage <b>405</b>, block <b>406</b> calculates a user productivity score and block <b>407</b> calculates a security risk or score. In various implementations, these scores may be calculated by assigning values and weights to contextual information collected by client device <b>100</b>, followed by the application of a weighed formula, ML algorithm, or AI algorithm configured to combine dissimilar information into a numerical score.</p><p id="p-0135" num="0134">In other cases, user/workload productivity context information may also be collected, monitored, and/or updated at block <b>406</b>, including, but not limited to: hard disk drive (HDD) use, CPU use, memory use, applications installed, network location, mouse/trackpad clicks, keystrokes, access to data, access to applications, etc. In yet other cases, block <b>406</b> may calculate or update a user frustration score based upon at least one of: a number of repeated clicks on a same area of a display during a selected time period, a number of repeated keystrokes during the selected time interval, a number of simultaneous keystrokes, a magnitude of a mechanical impact event, a lid of the client device being shut and/or open, changes to a distance between the user and the client device.</p><p id="p-0136" num="0135">At block <b>408</b>, method <b>400</b> determines whether any of the thresholds of block <b>402</b> have been met or exceeded, thereby indicating that the current workspace is either over-privileged or over-constrained. For example, to determine that a workspace is over-privileged, block <b>407</b> may determine that a current security risk is greater than a security target and/or a previous security risk associated with the current workspace definition by a threshold amount; and/or that a current productivity score is greater than a productivity target and/or a previous productivity score associated with the current workspace definition by a threshold amount. Additionally, or alternatively, to determine that the workspace is over-privileged, block <b>407</b> may determine that a security risk is larger than a productivity score by a threshold amount.</p><p id="p-0137" num="0136">Conversely, to determine that a workspace is over-constrained, block <b>407</b> may determine that a current productivity score is smaller than a productivity target and/or a previous productivity score associated with the current workspace definition by a threshold amount; and/or that a current security risk is smaller than a security target and/or a previous security risk associated with the current workspace definition by a threshold amount. Additionally, or alternatively, to determine that the workspace is over-constrained, block <b>407</b> may determine that a productivity score is larger than a security risk by a threshold amount.</p><p id="p-0138" num="0137">In some cases, to determine that a workspace is over-constrained, block <b>407</b> may determine that a current user frustration score meets or exceeds a threshold value and/or is larger than a previous user frustration score by a threshold amount. In some situations, the user frustration score may be determinative of whether to add resources to a workspace and/or whether the security target of a new or modified workspace definition be increased, for example, in response to a specific user identification or type of user identification (e.g., John Doe, any high-level executive of a corporation, etc.).</p><p id="p-0139" num="0138">If there is no over-privileged or over-constrained condition detected, control returns to block <b>405</b>. Otherwise, at block <b>409</b>, method <b>400</b> modifies the current workspace definition or creates a new workspace definition. Then, block <b>410</b> determines whether to re-deploy the modified or new workspace. If not, control returns to block <b>405</b>. Otherwise, control returns to block <b>401</b>, and after new threshold(s) are set at block <b>402</b> and a new workspace defined at block <b>403</b>, the new workspace is instantiated at block <b>404</b>. Generally speaking, the new workspace may include more features or resources than the previous workspace if the previous workspace was over-constrained, or fewer features or resources than the previous workspace if the previous workspace was over-privileged.</p><p id="p-0140" num="0139"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram of examples of workspace definition modifications <b>500</b>A-B, according to various embodiments. As shown, scenario <b>500</b>A illustrates an over-privileged workspace <b>501</b>A with available resources <b>502</b>A and user context information <b>503</b>A, such that workspace <b>501</b>A is larger than necessary for the user to maintain an expected level of productivity and use of workspace and/or access device resources, but which also results in a larger attack surface. Meanwhile, scenario <b>500</b>B illustrates an over-constrained workspace <b>501</b>B with available resources <b>502</b>B and user context information <b>503</b>B, such that workspace <b>501</b>B has no extra attack surface, but is smaller than needed for the user to maintain an expected level of productivity and use of workspace and/or access device resources, thereby increasing user frustration metrics, etc.</p><p id="p-0141" num="0140">To address the problems of scenarios <b>500</b>A and <b>500</b>B, method <b>400</b> continuously evaluates scores against targets to determine whether productivity and security risk are above or below by selected threshold amounts. If these thresholds values are met or exceeded, method <b>400</b> adjust targets and redeploys or adjust the workspace definitions to maintain optimum security posture <b>501</b>C, which is right-sized for the user to maintain an expected level of productivity and use of workspace and/or access device resources, without creating an unnecessarily large attack surface.</p><p id="p-0142" num="0141">When workspaces are dynamically produced and adjusted, the productivity and security postures of those workspaces may be continuously and/or periodically modified to balance their users' resource needs against the security risks presented by their current environments. In many cases, workspace administrators may not have full awareness of each individual user's resource demands and environmental risks, so defining static &#x201c;one-size-fits-all&#x201d; workspaces may result in poor security definitions, compromised user productivity for many users, or a combination of both. In contrast, systems and methods described herein may provide flexibility in workspace definitions without having to predict the exact demands of a user's working environment.</p><p id="p-0143" num="0142">In some embodiments, systems and methods described herein may determine which context variables have a significant impact on productivity or security of a workspace. In some cases, a workspace definition may include different possible configuration, adjustments, and variables that facilitate the instantiation and modification of workspaces to account for these changes dynamically.</p><p id="p-0144" num="0143">Particularly, systems and methods described herein add flexibility to workspace definitions by allowing instantiated workspaces to dynamically adjust themselves based upon the context of the environment where the client device and/or user are operating. In some cases, a client device may begin by self-evaluating its environment, collecting context information, and subsequently selecting an appropriate administrator-supplied workspace definition. Additionally, or alternatively, a remote workspace orchestration service may select a suitable workspace definition upon evaluating the context information.</p><p id="p-0145" num="0144">A selected workspace definition may allow for some amount of variation in attribute values by default, and it may begin to change as it is used. Once variation(s) in the current workspace deviate beyond boundaries set in the selected workspace definition (e.g., set by the administration or workspace orchestration service), a deviation event may be triggered, and information about this deviation may be sent back to the administrator (or workspace orchestration service). The administrator (or workspace orchestration service) may use a weighed, ML, or AI monitoring or adjusting algorithm to track all deviations across workspaces and determine if new workspace definitions should to be created/derived in response to variations detected by one or more local management agents. The amount of variation allowed (e.g., from small to extreme) may also be adjusted in the workspace definitions based upon feedback from the monitoring or adjusting algorithm.</p><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows chart <b>600</b> containing examples of security-based context changes <b>601</b> and productivity-based context changes <b>605</b> in a workspace, according to various embodiments. In graph <b>600</b>, the horizontal axis shows a current security risk or score and the vertical axis shows a current productivity score, each score calculated dynamically as updated context information indicates changes that are taking place at client IHS <b>100</b>.</p><p id="p-0147" num="0146">Particularly, elements <b>602</b>-<b>604</b> show security-based context changes <b>601</b>. In this case, the user may initially operate a workspace with a large productivity and security scores <b>602</b>. At <b>602</b>-<b>603</b>, based upon a comparison between previous context information and then-current context information, workspace orchestration service <b>206</b> and/or local management agent <b>332</b> detect a risk-driven change and, in response, security and productivity are reduced. For example, in response to the user switching client IHS's <b>100</b> connection from a secure network to an unsecured network (i.e., a lower security risk score), certain applications may be blacklisted and/or access to data or data sources may be further restricted (i.e., a lower productivity score). Then again at <b>603</b>-<b>604</b>, in response to yet another risk-driven change, productivity and security may be further reduced. For example, in response to the user moving far away from client IHS <b>100</b>, as detected via proximity sensing, access to data may be even further restricted, a display may be dimmed or turned off (to protect against bystanders), etc.</p><p id="p-0148" num="0147">Conversely, elements <b>606</b>-<b>608</b> show productivity-based context changes <b>605</b>. In this case, the user may initially operate a workspace with a large productivity and security scores <b>602</b>. At <b>606</b>-<b>607</b>, based upon a comparison between previous context information and then-current context information, workspace orchestration service and/or local management agent detect a productivity-driven change and, in response productivity and security are increased. For example, in response to the user executing or installing a new application in the workspace (i.e., a higher productivity score), access to certain data or data sources may be allowed (i.e., a higher security risk score). Then again at <b>607</b>-<b>608</b>, in response to yet another productivity-driven change, productivity is increased and security is decreased (the security risk score increases). For example, in response to the user moving closer to client IHS <b>100</b>, as detected via proximity sensing, access to data may be even less restricted, a display may be brightened or turned on, etc.</p><p id="p-0149" num="0148">In various cases, the applicable workspace definition may include attributes that enable local management agent <b>332</b> to implement changes that facilitate the dynamically scaling of security risk and productivity based upon user, environmental, and/or workspace context. For example, a workspace definition may include an application whitelist that indicates which applications (or type of applications), once executed or installed in a workspace, would trigger the calculation of a higher productivity score. Additionally, or alternatively, the workspace definition may include an application blacklist that indicates which applications (or type of applications) cannot be executed or installed in the workspace, and/or once executed or installed would trigger the calculation of a smaller security risk score.</p><p id="p-0150" num="0149">Moreover, workspace orchestration service <b>206</b> may be configured to monitor usage and security contexts, and to derive new workspace definitions during usage of the workspace to improve or optimize the workspace's security-to-productivity balance.</p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows diagram <b>700</b> of examples of endpoint context-driven, dynamic workspace modifications, according to various embodiments. At <b>701</b>, workspace orchestration service <b>206</b> causes workspaces <b>702</b>-<b>704</b> to be instantiated in three different client IHSs by each respective local management agent <b>332</b> based upon a workspace definition Z. Assume, for sake of this example, that workspace definition Z has common security and productivity targets calculated based upon the same initial context information for each client IHS. In this case, workspace <b>702</b> in a first client IHS executes workload A, workspace <b>703</b> in a second client IHS executes workload B, and workspace <b>704</b> in a third client IHS executes workload C.</p><p id="p-0152" num="0151">During execution of workload A, the local management agent <b>332</b> of the first client IHS may detect a newly installed or opened application at <b>705</b>, and the local management agents <b>332</b> of the second and third client IHSs may detect an uninstalled or closed application at <b>706</b> and <b>707</b>, respectively. Alternatively, workspace orchestration service <b>206</b> may detect these changes based upon a comparison between the updated context information and the initial context information received from each client IHS at <b>708</b>.</p><p id="p-0153" num="0152">Still at <b>708</b>, workspace orchestration service <b>206</b> may evaluate the detected changes with respect to workspace definition Z. If workspace orchestration service <b>206</b> determines that workspace definition Z allows the workspaces at <b>706</b> and <b>707</b> to become smaller when the applications are uninstalled or closed, no action needs to be taken with respect to the second or third client IHSs.</p><p id="p-0154" num="0153">In contrast, if at <b>708</b> workspace orchestration service <b>206</b> determines that the current or requested enlargement of workspace <b>705</b> is outside the boundaries of the attributes of workspace definition Z (e.g., an identity of the newly executed or installed application is present in a blacklist or absent from a whitelist of workspace definition Z), workspace orchestration service <b>206</b> sets up a new workspace definition X at <b>709</b>. For example, in light of the newly installed or executed application, workspace definition X may enable more productivity (e.g., higher productivity target) and security (e.g., higher security target) in a new or modified workspace.</p><p id="p-0155" num="0154">At <b>710</b> the newly created workplace may have previous workload A <b>705</b> migrated thereto. Additionally, or alternatively, at <b>710</b>, workspace orchestration service <b>206</b> may determine that the local management agent has migrated a workload from the first workspace to the second workspace, and it may release one or more remote resources associated with the first workspace.</p><p id="p-0156" num="0155">It should be understood that various operations described herein may be implemented in software executed by processing circuitry, hardware, or a combination thereof. The order in which each operation of a given method is performed may be changed, and various operations may be added, reordered, combined, omitted, modified, etc. It is intended that the invention(s) described herein embrace all such modifications and changes and, accordingly, the above description should be regarded in an illustrative rather than a restrictive sense.</p><p id="p-0157" num="0156">The terms &#x201c;tangible&#x201d; and &#x201c;non-transitory,&#x201d; as used herein, are intended to describe a computer-readable storage medium (or &#x201c;memory&#x201d;) excluding propagating electromagnetic signals; but are not intended to otherwise limit the type of physical computer-readable storage device that is encompassed by the phrase computer-readable medium or memory. For instance, the terms &#x201c;non-transitory computer readable medium&#x201d; or &#x201c;tangible memory&#x201d; are intended to encompass types of storage devices that do not necessarily store information permanently, including, for example, RAM. Program instructions and data stored on a tangible computer-accessible storage medium in non-transitory form may afterwards be transmitted by transmission media or signals such as electrical, electromagnetic, or digital signals, which may be conveyed via a communication medium such as a network and/or a wireless link.</p><p id="p-0158" num="0157">Although the invention(s) is/are described herein with reference to specific embodiments, various modifications and changes can be made without departing from the scope of the present invention(s), as set forth in the claims below. Accordingly, the specification and figures are to be regarded in an illustrative rather than a restrictive sense, and all such modifications are intended to be included within the scope of the present invention(s). Any benefits, advantages, or solutions to problems that are described herein with regard to specific embodiments are not intended to be construed as a critical, required, or essential feature or element of any or all the claims.</p><p id="p-0159" num="0158">Unless stated otherwise, terms such as &#x201c;first&#x201d; and &#x201c;second&#x201d; are used to arbitrarily distinguish between the elements such terms describe. Thus, these terms are not necessarily intended to indicate temporal or other prioritization of such elements. The terms &#x201c;coupled&#x201d; or &#x201c;operably coupled&#x201d; are defined as connected, although not necessarily directly, and not necessarily mechanically. The terms &#x201c;a&#x201d; and &#x201c;an&#x201d; are defined as one or more unless stated otherwise. The terms &#x201c;comprise&#x201d; (and any form of comprise, such as &#x201c;comprises&#x201d; and &#x201c;comprising&#x201d;), &#x201c;have&#x201d; (and any form of have, such as &#x201c;has&#x201d; and &#x201c;having&#x201d;), &#x201c;include&#x201d; (and any form of include, such as &#x201c;includes&#x201d; and &#x201c;including&#x201d;) and &#x201c;contain&#x201d; (and any form of contain, such as &#x201c;contains&#x201d; and &#x201c;containing&#x201d;) are open-ended linking verbs. As a result, a system, device, or apparatus that &#x201c;comprises,&#x201d; &#x201c;has,&#x201d; &#x201c;includes&#x201d; or &#x201c;contains&#x201d; one or more elements possesses those one or more elements but is not limited to possessing only those one or more elements. Similarly, a method or process that &#x201c;comprises,&#x201d; &#x201c;has,&#x201d; &#x201c;includes&#x201d; or &#x201c;contains&#x201d; one or more operations possesses those one or more operations but is not limited to possessing only those one or more operations.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An Information Handling System (IHS) of a workspace orchestration service, the IHS comprising:<claim-text>a processor; and</claim-text><claim-text>a memory coupled to the processor, the memory having program instructions stored thereon that, upon execution by the processor, cause the IHS to:<claim-text>select a first workspace definition based upon initial context information of a client IHS in communication with the workspace orchestration service;</claim-text><claim-text>communicate the first workspace definition to a local management agent executed by the client IHS, wherein the local management agent is configured to instantiate a first workspace based upon the first workspace definition;</claim-text><claim-text>at least in part in response to updated context information of the client IHS indicating noncompliance with one or more aspects of the first workspace definition, select a second workspace definition; and</claim-text><claim-text>communicate the second workspace definition to the local management agent, wherein the local management agent is configured to terminate the first workspace and to instantiate a second workspace based upon the second workspace definition.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the initial context information comprises at least one of: an identification of a locale of the local management agent, an identification of an application executed or installed in the first workspace, an identification of a user of the local management agent, an identification of a network, an identification of hardware, an identification of a requested datafile, or an identification of a storage system of the requested datafile.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to determine that the updated context information indicates noncompliance with the one or more aspects of the first workspace definition, the program instructions, upon execution, further cause the IHS to determine that a security risk associated with the updated context information is greater than a security target associated with the first workspace definition.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to determine that the updated context information indicates noncompliance with the one or more aspects of the first workspace definition, the program instructions, upon execution, further cause the IHS to determine that a security risk associated with the updated context information is greater than an initial security risk associated with the initial context information.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to determine that the updated context information indicates noncompliance with the one or more aspects of the first workspace definition, the program instructions, upon execution, further cause the IHS to determine that a productivity score associated with the updated context information is smaller than a productivity target associated with the first workspace definition.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein to determine that the updated context information indicates noncompliance with the one or more aspects of the first workspace definition, the program instructions, upon execution, further cause the IHS to determine that a productivity score associated with the updated context information is smaller than an initial productivity score associated with the initial context information.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the updated context information indicates an identity of a given application installed or executed within the first workspace, wherein the identity is present in a blacklist or absent from a whitelist of the first workspace definition, and wherein the identity is absent from a blacklist or present in a whitelist of the second workspace definition.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The IHS of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second workspace definition is selected to: reduce a number of applications available, reduce a number of hardware features available, restrict network access options, or reduce a level of data access.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A memory storage device having program instructions stored thereon that, upon execution by one or more processors of an Information Handling System (IHS) of a workspace orchestration service, cause the IHS to:<claim-text>communicate a first workspace definition to a local management agent of a client IHS, wherein the local management agent is configured to instantiate workspaces based upon workspace definitions; and</claim-text><claim-text>in response to a determination that at least one aspect of the first workspace does not satisfy one or more requirements of the first workspace definition, communicate a second workspace definition to the local management agent.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the program instructions, upon execution, cause the IHS to select the first workspace definition based, at least in part, upon context information associated with the client IHS, wherein the context information comprises at least one of: an identification of a locale of the client device, an identification of an application executed or installed in the current workspace, an identification of the user of the client device, an identification of a network of the client device, an identification of hardware of a client device, an identification of a requested datafile, or an identification of a storage system of the requested datafile.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein to determine that the at least one aspect of the first workplace does not satisfy the one or more requirements of the workspace definition, the program instructions, upon execution, further cause the IHS to determine that a security risk calculated based, at least in part, upon context information, is greater than a security target of the first workspace definition.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein to determine that the at least one aspect of the first workplace does not satisfy the one or more requirements of the workspace definition, the program instructions, upon execution, further cause the IHS to determine that a security risk associated with current context information is greater than a previous security risk associated with previous context information.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein to determine that the at least one aspect of the first workplace does not satisfy the one or more requirements of the workspace definition, the program instructions, upon execution, further cause the IHS to determine that a productivity score calculated based, at least in part, upon context information is smaller than a productivity target of the first workspace definition.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein to determine that the at least one aspect of the first workplace does not satisfy the one or more requirements of the workspace definition, the program instructions, upon execution, further cause the IHS to determine that a productivity score associated with current context information is smaller than a previous productivity score associated with previous context information.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The memory storage device of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the determination that the at least one aspect of the first workspace does not satisfy the one or more requirements of the first workspace definition is based, at least in part, upon a determination that an application was installed in or executed by the client device during operation of the workspace.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The memory storage device of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the application is identified in a blacklist.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The memory storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the program instructions, upon execution, further cause the IHS to, in response to a determination that the local management agent has migrated a workload from the first workspace to the second workspace, release one or more cloud resources previously configured to support operation of the first workspace.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A method, comprising:<claim-text>instantiating, by a local management agent of a client Information Handling System (IHS), a first workspace based upon a first workspace definition, wherein the first workspace definition is produced by a workspace orchestration service based upon initial context information of the client IHS; and</claim-text><claim-text>instantiating, by the local management agent, a second workspace based upon a second workspace definition, wherein the second workspace definition is produced by the workspace orchestration service based upon a comparison between updated context information and the initial context information.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the comparison between the updated context information and the initial context information identifies an application executed or installed in the client IHS during operation of the first workspace.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00019">claim 19</claim-ref>, further comprising migrating a workload associated with the application from the first workspace to the second workspace.</claim-text></claim></claims></us-patent-application>