<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004542A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004542</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17944445</doc-number><date>20220914</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202010944766.0</doc-number><date>20200910</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>22</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2255</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2272</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD AND APPARATUS FOR PUBLISHING SMART CONTRACT,COMPUTER-READABLE MEDIUM,AND ELECTRONIC DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/107240</doc-number><date>20210720</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17944445</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>TENCENT TECHNOLOGY (SHENZHEN) COMPANY LIMITED</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>FU</last-name><first-name>Bo</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Maocai</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>SHI</last-name><first-name>Wei</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>KONG</last-name><first-name>Li</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>CHONG</last-name><first-name>Yanxue</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>HUANG</last-name><first-name>Yehui</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>TI</last-name><first-name>Jiangwei</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>CUI</last-name><first-name>Jiahui</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for publishing a smart contract includes: generating a version number index value according to a contract name of the smart contract, and searching for an associated target contract version number from a blockchain network according to the version number index value; generating a contract index value according to a contract version number of the smart contract and the contract name, in response to determining that the contract version number of the smart contract is greater than the target contract version number; associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="57.57mm" wi="158.75mm" file="US20230004542A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="185.42mm" wi="166.71mm" file="US20230004542A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="182.88mm" wi="162.31mm" file="US20230004542A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="184.91mm" wi="151.64mm" file="US20230004542A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="163.41mm" wi="149.44mm" file="US20230004542A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="205.15mm" wi="151.64mm" file="US20230004542A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="191.35mm" wi="169.25mm" file="US20230004542A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="224.37mm" wi="148.34mm" file="US20230004542A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="223.86mm" wi="124.88mm" file="US20230004542A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="229.70mm" wi="112.44mm" file="US20230004542A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="143.00mm" wi="160.19mm" file="US20230004542A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation application of PCT Patent Application No. PCT/CN2021/107240 filed on Jul. 20, 2021, which claims priority to Chinese Patent Application No. 2020109447660, entitled &#x201c;METHOD AND APPARATUS FOR PUBLISHING SMART CONTRACT, COMPUTER-READABLE MEDIUM, AND ELECTRONIC DEVICE&#x201d; and filed with the National Intellectual Property Administration, PRC on Sep. 10, 2020, all of which are incorporated herein by reference in entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE TECHNOLOGY</heading><p id="p-0003" num="0002">The present disclosure relates to the field of Internet technologies, and particularly, to a method and apparatus for publishing a smart contract, a computer-readable medium, and an electronic device.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">A smart contract is executable code stored in a blockchain node, and the code specifies an execution process and processing logic of the smart contract, such as input, output, intermediate transition logic, and the like. To improve on the processing logic of the smart contract, it may be desirable to upgrade the smart contract in use.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">In one aspect, the present disclosure provides a method for publishing a smart contract, performed by a client, the method including: generating a version number index value according to a contract name of the smart contract, and searching for an associated target contract version number from a blockchain network according to the version number index value; generating a contract index value according to a contract version number of the smart contract and the contract name, when or in response to determining that the contract version number of the smart contract is greater than the target contract version number; associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</p><p id="p-0006" num="0005">In another aspect, the present disclosure provides a method for calling a smart contract, performed by a blockchain node, the method including: receiving a contract call request sent by a call requestor, the contract call request including a name of the smart contract; generating a contract index value according to the name of the smart contract and a contract version number corresponding to the contract call request; querying a target smart contract associated with the contract index value from published smart contracts in a blockchain network according to the contract index value; and calling the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0007" num="0006">In yet another aspect, the present disclosure provides an apparatus for publishing a smart contract, the apparatus including: a memory storing computer program instructions; and a processor coupled to the memory and configured to execute the computer program instructions and perform: generating a version number index value according to a contract name of the smart contract, and searching for an associated target contract version number from a blockchain network according to the version number index value; generating a contract index value according to a contract version number of the smart contract and the contract name, in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number; associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</p><p id="p-0008" num="0007">In yet another aspect, the present disclosure provides an apparatus for calling a smart contract, the apparatus including: a memory storing computer program instructions; and a processor coupled to the memory and configured to execute the computer program instructions and perform: receiving a contract call request sent by a call requestor, the contract call request including a name of the smart contract; generating a contract index value according to the name of the smart contract and a contract version number corresponding to the contract call request; querying a target smart contract associated with the contract index value from published smart contracts in a blockchain network according to the contract index value; and calling the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0009" num="0008">In yet another aspect, the present disclosure provides a computer-readable medium, storing a computer-readable instruction. The computer-readable instruction, when executed by a processor, implements the method for publishing a smart contract or the method for calling a smart contract according to the above embodiments.</p><p id="p-0010" num="0009">Details of one or more embodiments of the present disclosure are provided in the accompanying drawings and descriptions below. Other features, objectives, and advantages of the present disclosure become apparent from the present disclosure, the accompanying drawings, and claims.</p><p id="p-0011" num="0010">Other aspects of the present disclosure can be understood by those skilled in the art in light of the description, the claims, and the drawings of the present disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011">To facilitate a better understanding of technical solutions of certain embodiments of the present disclosure, accompanying drawings are described below. The accompanying drawings are illustrative of certain embodiments of the present disclosure, and a person of ordinary skill in the art may still derive other drawings from these accompanying drawings without having to exert creative efforts. When the following descriptions are made with reference to the accompanying drawings, unless otherwise indicated, same numbers in different accompanying drawings may represent same or similar elements. In addition, the accompanying drawings are not necessarily drawn to scale.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic structural diagram of a blockchain network;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic structural diagram of a blockchain;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram of a new block generation in a blockchain;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram of a system architecture to which a technical solution is applied according to certain embodiment(s) of the present disclosure;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic flowchart of a method for calling a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a schematic flowchart of a method for calling a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a schematic interaction flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a schematic flowchart of a method for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>13</b>A</figref> is a schematic flowchart of a method for calling a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>13</b>B</figref> is a schematic flowchart of a method for calling a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a schematic block diagram of an apparatus for publishing a smart contract according to certain embodiment(s) of the present disclosure;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a schematic block diagram of an apparatus for calling a smart contract according to certain embodiment(s) of the present disclosure; and</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a schematic structural diagram of a computer system of an electronic device according to certain embodiment(s) of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0030" num="0029">To make objectives, technical solutions, and/or advantages of the present disclosure more comprehensible, certain embodiments of the present disclosure are further elaborated in detail with reference to the accompanying drawings. The embodiments as described are not to be construed as a limitation to the present disclosure. All other embodiments obtained by a person of ordinary skill in the art without creative efforts shall fall within the protection scope of embodiments of the present disclosure.</p><p id="p-0031" num="0030">When and as applicable, the term &#x201c;an embodiment,&#x201d; &#x201c;one embodiment,&#x201d; &#x201c;some embodiment(s),&#x201d; &#x201c;some embodiments,&#x201d; &#x201c;certain embodiment(s),&#x201d; or &#x201c;certain embodiments&#x201d; may refer to one or more subsets of all possible embodiments. When and as applicable, the term &#x201c;an embodiment,&#x201d; &#x201c;one embodiment,&#x201d; &#x201c;some embodiment(s),&#x201d; &#x201c;some embodiments,&#x201d; &#x201c;certain embodiment(s),&#x201d; or &#x201c;certain embodiments&#x201d; may refer to the same subset or different subsets of all the possible embodiments, and can be combined with each other without conflict.</p><p id="p-0032" num="0031">In certain embodiments, the term &#x201c;based on&#x201d; is employed herein interchangeably with the term &#x201c;according to.&#x201d;</p><p id="p-0033" num="0032">In addition, the described features, structures, or characteristics may be combined in one or more embodiments in any appropriate manner. In the following descriptions, lots of specific details are provided to give a thorough understanding of the embodiments of the present disclosure. However, a person skilled in the art is to be aware that, the technical solutions in the present disclosure may be implemented without one or more of the specific details, or other methods, units, apparatuses, steps, or the like may be used. Well-known methods, apparatuses, implementations, or operations are not shown or described in detail, to avoid obscuring aspects of the present disclosure.</p><p id="p-0034" num="0033">The terms used in the present disclosure, claims and the accompanying drawings of the present disclosure are merely used for illustrating embodiments, and are not intended to limit the scope of the present disclosure. It is to be understood that the terms such as &#x201c;include&#x201d;, &#x201c;comprise&#x201d;, and &#x201c;contain&#x201d;, when used in the present disclosure, specify the presence of stated features, integers, steps, operations, elements, assemblies, and/or groups thereof, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, assemblies, and/or groups thereof.</p><p id="p-0035" num="0034">It is to be further understood that, although the terms such as &#x201c;first&#x201d;, &#x201c;second&#x201d;, and &#x201c;third&#x201d; may be used for describing various elements in the present disclosure, the elements are not to be limited by such terms. The terms are merely used for distinguishing one element from another element. For example, a first element may be referred to as a second element without departing from the scope of the present disclosure. Similarly, a second element may be referred to as a first element. As used in the present disclosure, the term &#x201c;and/or&#x201d; includes any or all combinations of one or more associated listed items.</p><p id="p-0036" num="0035">The block diagrams shown in the accompany drawings are merely functional entities and do not necessarily correspond to physically independent entities. That is, the functional entities may be implemented in a software form, or in one or more hardware modules or integrated circuits, or in different networks and/or processor apparatuses and/or microcontroller apparatuses. The flowcharts shown in the accompanying drawings are merely examples for descriptions, do not need to include all content and operations/steps, and do not need to be performed in the described orders either. For example, some operations/steps may be further divided, while some operations/steps may be combined or partially combined. Therefore, an actual execution order may change according to an actual scenario.</p><p id="p-0037" num="0036">It is to be understood that in the present disclosure, &#x201c;at least one&#x201d; means one or more, and &#x201c;a plurality of&#x201d; means two or more. Before the embodiments of the present disclosure are further described in detail, a description is made on nouns and terms in the embodiments of the present disclosure, and the nouns and terms in the embodiments of the present disclosure are applicable to the following explanations.</p><p id="p-0038" num="0037">Smart contract: A computer protocol aimed at informatively propagating, verifying, or executing contracts, which allows credible transactions without a third party, where the transactions are traceable and irreversible, and the smart contract behaves as executable code in a blockchain environment.</p><p id="p-0039" num="0038">sha256 (Secure Hash Algorithm): A secure hash algorithm with an arbitrary length input and a 256-bit output.</p><p id="p-0040" num="0039">Blockchain network: A new application mode of computer technologies such as distributed data storage, point-to-point transmission, a consensus mechanism, and an encryption algorithm, which is essentially a decentralized database, and is a string of data blocks generated through association by using a cryptographic method, where each data block contains information used for verifying the validity of information of the data block (anti-counterfeiting) and generating a next data block.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic structural diagram of a blockchain network. Referring to the blockchain network <b>101</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the blockchain network <b>101</b> is a system for data sharing between nodes. Each node A may receive inputted information during normal working, and maintain shared data in the blockchain network <b>101</b> based on the received inputted information. To ensure information exchange in the blockchain network <b>101</b>, there may be information connections among the nodes A in the blockchain network <b>101</b>, and information transmission may be performed between the nodes A through the information connection. For example, when any node A in the blockchain network 101 receives inputted information, other nodes A in the blockchain network <b>101</b> obtain the inputted information according to a consensus algorithm, and store the inputted information as data in the shared data, so that data stored in all nodes A in the blockchain network <b>101</b> is consistent.</p><p id="p-0042" num="0041">Each node A in the blockchain network <b>101</b> has a corresponding node identifier, and each node A in the blockchain network <b>101</b> may store node identifiers of the other nodes A in the blockchain network <b>101</b>, to subsequently broadcast a generated block to the other nodes A in the blockchain network <b>101</b> according to the node identifiers of the other nodes A. Each node A may maintain a node identifier list shown in the following table, and node names and node identifiers are correspondingly stored in the node identifier list. The node identifier may be an Internet Protocol (IP) address and any other type of information capable of identifying the node. In Table 1, description is made by using only an IP address as an example.</p><p id="p-0043" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="84pt" align="left"/><colspec colname="2" colwidth="98pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>Node name</entry><entry>Node identifier</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>Node 1</entry><entry>117.114.151.174</entry></row><row><entry/><entry>Node 2</entry><entry>117.116.189.145</entry></row><row><entry/><entry>. . .</entry><entry>. . .</entry></row><row><entry/><entry>Node N</entry><entry>119.123.789.258</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0044" num="0042">Each node in the blockchain network <b>101</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> stores a same blockchain.</p><p id="p-0045" num="0043">The blockchain includes a plurality of blocks. Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the blockchain includes a plurality of blocks, and a genesis block includes a block header and a block body. The block header stores an inputted information eigenvalue, a version number, a timestamp, and a difficulty value, and the block body stores inputted information. A next block of the genesis block uses the genesis block as a parent block, and the next block also includes a block header and a block body. The block header stores an inputted information eigenvalue of the current block, a block header eigenvalue of the parent block, a version number, a timestamp, and a difficulty value, and the rest is deduced by analogy, so that block data stored in each block in the blockchain is associated with block data stored in the parent block, thereby ensuring the security of the inputted information in the blocks.</p><p id="p-0046" num="0044">When or in response to determining that blocks are generated in the blockchain, referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, when a node in which the blockchain is located receives the inputted information, the inputted information is verified. After the verification is performed, the inputted information is stored in a memory pool, and a hash tree thereof used for recording the inputted information is updated. Then, an update timestamp is updated to a time when the inputted information is received, different random numbers are tried, and eigenvalue calculation is performed a plurality of times, so that the calculated eigenvalue may satisfy the following formula:</p><p id="p-0047" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>SHA256 (SHA256(version+prey_hash+merkle_root+ntime+nbits+<i>x</i>))&#x3c;TARGET<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0048" num="0045">where SHA256 is an eigenvalue algorithm used for calculating an eigenvalue; version (a version number) is version information of a related block protocol in the blockchain; pre_hash is the block header eigenvalue of the parent block of the current block; merkle_root is the inputted information eigenvalue; ntime is the update time of the update timestamp; nbits is current difficulty, is a fixed value within a period of time, and is redetermined after the fixed period of time; x is a random number; and TARGET is an eigenvalue threshold, and the eigenvalue threshold may be determined and obtained according to nbits.</p><p id="p-0049" num="0046">In this way, when a random number satisfying the above formula is obtained through calculation, information may be correspondingly stored, and a block header and a block body may be generated, to obtain the current block. Subsequently, the node in which the blockchain is located transmits, according to the node identifiers of the other nodes A in the blockchain network <b>101</b>, the newly generated block to the other nodes A in the blockchain network <b>101</b> in which the node is located. The other nodes A verify the newly generated block and add the newly generated block to the blockchain stored therein after performing the verification.</p><p id="p-0050" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram of an exemplary system architecture <b>100</b> to which a technical solution according to an embodiment of the present disclosure is applicable. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the system architecture <b>100</b> may include the blockchain network <b>101</b> and a client <b>102</b>. The form and quantity of the client <b>102</b> are used for example, and do not constitute a limitation on the embodiments of the present disclosure. For example, two or more clients <b>102</b> may be included.</p><p id="p-0051" num="0048">The client <b>102</b> may be any one of the following: a terminal, an independent application program, an application programming interface (API), or a software development kit (SDK). The terminal may include, but is not limited to, a smart phone (such as an Android mobile phone or an IOS mobile phone), a tablet computer, a portable personal computer, a mobile Internet device (MID), a server, and the like. The server may be an independent physical server, or may be a server cluster or a distributed system formed by a plurality of physical servers, or may be a cloud server that provides cloud computing services such as a cloud service, a cloud database, cloud computing, a cloud function, cloud storage, a network service, cloud communication, a middleware service, a domain name service, a security service, a content delivery network (CDN), big data, and an artificial intelligence platform.</p><p id="p-0052" num="0049">In practical applications, one or more users can operate the client <b>102</b>. This embodiment of the present disclosure uses an example in which one user operates one client. In an embodiment of the present disclosure, the user may input a smart contract to be published in the client <b>102</b>. After the user confirms, the client <b>102</b> may generate a version number index value according to a contract name of the smart contract to be published, and search for an associated target contract version number from the blockchain network <b>101</b> according to the version number index value. When or in response to determining that a contract version number of the smart contract to be published is greater than the target contract version number, the client <b>102</b> may generate a contract index value according to the contract version number of the smart contract to be published and the contract name. Then, the client <b>102</b> may associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information. Finally, the client <b>102</b> may publish the transaction information to the blockchain network <b>101</b>, to publish the smart contract to be published to the blockchain network.</p><p id="p-0053" num="0050">Therefore, in a method for publishing a smart contract according to this embodiment of the present disclosure, a version number index value is generated according to a contract name of a smart contract to be published, and a contract index value is generated according to a contract version number of the smart contract to be published and the contract name. Then, the contract index value is associated with the smart contract to be published, and the version number index value is associated with the contract version number of the smart contract to be published, to generate transaction information. The transaction information is published to a blockchain network, to publish the smart contract to be published to the blockchain network. This embodiment of the present disclosure can implement a smart contract upgrade function at a blockchain platform level, which strengthens a capability of a blockchain platform, and does not need to develop a contract upgrade function, thereby saving development costs.</p><p id="p-0054" num="0051">Implementation details of the technical solutions of the embodiments of the present disclosure are described below in detail.</p><p id="p-0055" num="0052"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of a method for publishing a smart contract according to an embodiment of the present disclosure. The method for publishing a smart contract may be performed by a client. The client may be the client <b>102</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the method for publishing a smart contract includes the following steps:</p><p id="p-0056" num="0053">Step S<b>510</b>: Generate a version number index value according to a contract name of a smart contract to be published, and search for an associated target contract version number from a blockchain network according to the version number index value.</p><p id="p-0057" num="0054">Step S<b>520</b>: Generate a contract index value according to a contract version number of the smart contract to be published and the contract name, when or in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number.</p><p id="p-0058" num="0055">Step S<b>530</b>: Associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information.</p><p id="p-0059" num="0056">Step S<b>540</b>: Publish the transaction information to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0060" num="0057">The steps are described below in detail. In Step S<b>510</b>, a version number index value is generated according to a contract name of a smart contract to be published, and an associated target contract version number is searched from a blockchain network according to the version number index value.</p><p id="p-0061" num="0058">The smart contract is program code that runs on a blockchain and is capable of performing arbitrary computations and implementing complex logic. The program code of the smart contract may have functions of transmitting user account information and corresponding capital information, making mutual calls with other smart contracts, jointly maintaining the user account information and the corresponding capital information with other node devices of the blockchain platform, and the like.</p><p id="p-0062" num="0059">The smart contract published on the blockchain is compiled by a compiler from source code of a smart contract written by a developer in a high-level programming language into bytecode of a smart contract executable on a virtual machine or a processor. The high-level programming language includes but is not limited to any one of the following: Solidity language, C++ language, GO language, Rust language, python language, javascript language, Java language, Hashell language, Ruby language, and the like. The compiler corresponds to the high-level programming language. If the high-level programming language is different, a type of the compiler used in the compilation is also different.</p><p id="p-0063" num="0060">In this embodiment, an executing entity for the method for publishing a smart contract may obtain a smart contract to be published locally or from other devices. After the executing entity obtains the smart contract to be published, a version number index value may be generated according to a contract name of the smart contract to be published, and an associated target contract version number may be searched from a blockchain network according to the version number index value.</p><p id="p-0064" num="0061">In certain embodiment(s), a mapping relationship between the version number index value and the contract version number may be recorded in the blockchain network. The version number index value may indicate a reading position of the contract version number. Through the reading position indicated by the version number index value, the associated target contract version number may be found.</p><p id="p-0065" num="0062">In an embodiment, the blockchain network may store the mapping relationship between the version number index value and the contract version number in a Key-Value manner, where Key is the version number index value, and Value is the contract version number.</p><p id="p-0066" num="0063">It may be understood that the target contract version number is the contract version number that is recorded in the blockchain network and has a mapping relationship with the version number index value of the smart contract to be published.</p><p id="p-0067" num="0064">In some embodiments of the present disclosure, the manner of generating a version number index value may be to obtain a hash value by using a hash algorithm and use the hash value as the version number index value. In certain embodiment(s), the executing entity may perform a hash calculation on the contract name of the smart contract to be published to obtain a first hash value, and use the calculated first hash value as the version number index value.</p><p id="p-0068" num="0065">In certain embodiment(s), the hash algorithm may adopt a sha256 hash function. sha256 produces a 256-bit hash value for messages of any length. For example, for a contract name of &#x201c;100 days to become a blockchain programmer, uncle leads us, fighting!&#x201d;, a corresponding hash value of &#x201c;A7FCFC6B5269BDCCE571798D618EA219A68B96CB 87A0E21080C2E758D23E4CE9&#x201d; may be obtained by the hash function SHA256 calculation. In certain embodiment(s), in this embodiment, the version number index value may be expressed as versionKey, and the version number index value may be expressed as versionKey=sha256 (name+0), where name is the contract name of the smart contract to be published. &#x2018;0&#x2019; is merely exemplary and may be any other numerical value, such as &#x2018;1&#x2019;, &#x2018;2&#x2019;, or other arbitrary values.</p><p id="p-0069" num="0066">Therefore, when the blockchain network stores the mapping relationship in the Key-Value manner, the executing entity may use versionKey as Key to obtain value from the blockchain network, and the obtained value is the associated target contract version number.</p><p id="p-0070" num="0067">In other embodiments of the present disclosure, the contract name of the smart contract to be published may alternatively be used as the version number index value. In this embodiment, a mapping relationship between the contract name and the contract version number may be recorded in the blockchain network. Therefore, the associated target contract version number may be obtained through the contract name of the smart contract to be published.</p><p id="p-0071" num="0068">In Step S<b>520</b>, when or in response to determining that a contract version number of the smart contract to be published is greater than the target contract version number, a contract index value is generated according to the contract version number of the smart contract to be published and the contract name.</p><p id="p-0072" num="0069">A contract owner may publish a plurality of smart contracts with a same contract name but different contract version numbers. Except for the first publishing of a smart contract, subsequent publishing behaviors may be referred to as &#x201c;upgrading contract&#x201d;.</p><p id="p-0073" num="0070">However, whether it is the first publishing of the smart contract or subsequent publishing of the smart contract, the contract version numbers of the plurality of smart contracts are to be incremented in an order of publishing time. Therefore, to publish the smart contract to be published, the contract version number of the smart contract to be published is greater than the contract version number corresponding to a latest publishing time.</p><p id="p-0074" num="0071">In this embodiment, because the mapping relationship between the version number index value and the contract version number may be recorded in the blockchain network, the associated target contract version number may be searched using the version number index value, that is, the contract version number corresponding to the latest publishing time may be searched.</p><p id="p-0075" num="0072">Therefore, when or in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number, the smart contract to be published may be published. During a specific implementation, to publish the smart contract to be published, a contract index value may be generated first according to the contract version number of the smart contract to be published and the contract name.</p><p id="p-0076" num="0073">Conversely, when or in response to determining that the contract version number of the smart contract to be published is less than or equal to the target contract version number, publishing of the smart contract to be published to the blockchain network is terminated.</p><p id="p-0077" num="0074">In an embodiment of the present disclosure, the manner of generating a contract index value may be to obtain a hash value by using a hash algorithm and use the hash value as the contract index value. In certain embodiment(s), the executing entity may perform a hash calculation on the contract name and the contract version number of the smart contract to be published to obtain a second hash value, and use the calculated second hash value as the version number index value. In certain embodiment(s), the hash algorithm may adopt the sha256 hash function, the contract index value may be expressed as contractKey, and the contract index value may be expressed as contractKey=sha256 (name +version), where name is the contract name of the smart contract to be published, and version is the contract version number of the smart contract to be published.</p><p id="p-0078" num="0075">In Step S<b>530</b>, the contract index value is associated with the smart contract to be published, and the version number index value is associated with the contract version number of the smart contract to be published, to generate transaction information.</p><p id="p-0079" num="0076">In order to publish the smart contract to be published to the blockchain network, after the contract index value is generated according to the contract version number of the smart contract to be published and the contract name, the contract index value may be further associated with the smart contract to be published, and the version number index value may be further associated with the contract version number of the smart contract to be published, to generate transaction information.</p><p id="p-0080" num="0077">It is worth mentioning that the associating the contract index value with the smart contract to be published is establishing a mapping relationship between the contract index value and the smart contract to be published, and the associating the version number index value with the contract version number of the smart contract to be published is establishing a mapping relationship between the version number index value and the contract version number of the smart contract to be published. In this way, through establishing the two mapping relationships, subsequent search of the contract version number and search of the smart contract are greatly facilitated.</p><p id="p-0081" num="0078">In Step S<b>540</b>, the transaction information is published to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0082" num="0079">After the transaction information is generated, the executing entity may publish the transaction information to the blockchain network through a publishing interface, to publish the smart contract to the blockchain network, so that node devices in the blockchain network may call the smart contract.</p><p id="p-0083" num="0080">In the technical solutions of the embodiments, the version number index value is generated according to the contract name of the smart contract to be published, and the contract index value is generated according to the contract version number of the smart contract to be published and the contract name. Then, the contract index value is associated with the smart contract to be published, and the version number index value is associated with the contract version number of the smart contract to be published, to generate the transaction information. The transaction information is published to the blockchain network, to publish the smart contract to be published to the blockchain network. Compared with another proxy contract mode at a blockchain application level, this embodiment of the present disclosure can implement a smart contract upgrade function at a blockchain platform level, which strengthens a capability of a blockchain platform, and does not need to develop a contract upgrade function, thereby saving development costs. The contract owner may upgrade a contract, and then publish a plurality of smart contracts to the blockchain network. In addition, publishing in a manner of generating transaction information improves the security and query efficiency of the smart contract published on the blockchain.</p><p id="p-0084" num="0081">In an embodiment of the present disclosure, the mapping relationship between the version number index value and the contract version number may be recorded in the blockchain network, and the mapping relationship may include the version number index value and the contract version number corresponding to each publishing time, or may include only the version number index value and the contract version number corresponding to the latest publishing time. Therefore, when or in response to determining that the mapping relationship between the version number index value and the contract version number corresponding to each publishing time is recorded in the blockchain network, as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the manner of searching for an associated target contract version number from a blockchain network according to the version number index value may include steps S<b>610</b> and S<b>620</b>, which are described in detail as follows:</p><p id="p-0085" num="0082">S<b>610</b>: Search for at least one associated contract version number from the blockchain network according to the version number index value.</p><p id="p-0086" num="0083">The contract owner may publish a plurality of smart contracts with a same contract name but different contract version numbers, that is, the mapping relationship between the version number index value and the contract version number corresponding to each publishing time may be recorded in the blockchain network. Therefore, at least one associated contract version number may be found when searching from the blockchain network according to the version number index value.</p><p id="p-0087" num="0084">Step S<b>620</b>: Use a largest contract version number in the at least one contract version number as the target contract version number.</p><p id="p-0088" num="0085">During a specific implementation, the found at least one associated contract version number is a contract version number corresponding to each publishing time. Because the contract version numbers of the plurality of smart contracts published by the contract owner are to be incremented according to the publishing time, a largest contract version number in the at least one contract version number may be used as the target contract version number, that is, the contract version number corresponding to the latest publishing time.</p><p id="p-0089" num="0086">In an embodiment of the present disclosure, as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the method for publishing a smart contract further includes steps S<b>710</b> to S<b>730</b>, which are described as follows:</p><p id="p-0090" num="0087">Step S<b>710</b>: Generate the contract index value according to the contract version number of the smart contract to be published and the contract name, when or in response to determining that no associated target contract version number is found from the blockchain network.</p><p id="p-0091" num="0088">In this embodiment, if no associated target contract version number is found from the blockchain network, it indicates that the contract owner does not associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information, and publish the transaction information to the blockchain network. Conversely, it indicates that the smart contract to be published is a smart contract published to the blockchain network by the contract owner for the first time.</p><p id="p-0092" num="0089">In addition, because the version number index value is generated according to the contract name of the smart contract to be published, and no associated target contract version number is found from the blockchain network according to the version number index value, it indicates that the contract name of the smart contract to be published that is published by the contract owner for the first time is available.</p><p id="p-0093" num="0090">Therefore, when publishing a smart contract to be published for the first time, a contract index value may be generated first according to a contract version number and a contract name of the smart contract to be published. The manner of generating a contract index value may be to obtain a hash value by using a hash algorithm and use the hash value as the contract index value. In certain embodiment(s), the executing entity may perform a hash calculation on the contract name and the contract version number of the smart contract to be published to obtain a second hash value, and use the calculated second hash value as the version number index value. In certain embodiment(s), the hash algorithm may adopt the sha256 hash function, and the contract index value may be expressed as sha256 (name+version), where name is the contract name of the smart contract to be published, and version is the contract version number of the smart contract to be published.</p><p id="p-0094" num="0091">Step S<b>720</b>: Associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information.</p><p id="p-0095" num="0092">In order to publish the smart contract to be published to the blockchain network for the first time, after the contract index value is generated according to the contract version number of the smart contract to be published and the contract name, the contract index value and the smart contract to be published may be further associated and the version number index value and the contract version number of the smart contract to be published may be further associated, to generate transaction information.</p><p id="p-0096" num="0093">Step S<b>730</b>: Publish the transaction information to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0097" num="0094">After the transaction information is generated, the executing entity may publish the transaction information to the blockchain network through a publishing interface, to publish the smart contract to the blockchain network, so that node devices in the blockchain network may call the smart contract.</p><p id="p-0098" num="0095">In an embodiment of the present disclosure, before the publishing the transaction information to the blockchain network, the method for publishing a smart contract further includes: verifying contract code of the smart contract to be published. The publishing the transaction information to the blockchain network includes: publishing the transaction information to the blockchain network when or in response to determining that verification of the contract code of the smart contract to be published succeeds.</p><p id="p-0099" num="0096">In this embodiment, the contract code is formed by directly writing terms of protocols to be executed into a code line by the user, and the contract code is expressed in a form of bytes. Different execution protocols form different contract code, and different contract code may realize different service logic.</p><p id="p-0100" num="0097">Therefore, in order to ensure that the contract code of the smart contract published to the blockchain network can implement corresponding service logic, the contract code of the smart contract to be published may be verified before publishing the transaction information to the blockchain network. If the verification of the contract code of the smart contract to be published succeeds, the transaction information may be published to the blockchain network.</p><p id="p-0101" num="0098">In an embodiment of the present disclosure, as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the process of verifying the contract code includes steps S<b>810</b> to S<b>830</b>, which are described as follows:</p><p id="p-0102" num="0099">Step S<b>810</b>: Create a corresponding virtual machine according to a contract type of the smart contract to be published.</p><p id="p-0103" num="0100">In certain embodiment(s), the virtual machine is a computer system that is simulated through software, has a hardware system function, and runs in an isolated environment. The virtual machine may be a virtualized physical machine VMware, Java virtual machine, or the like. A blockchain virtual machine is a code running environment established on a blockchain system, and a main function of the bloackchain virtual machine is to process smart contracts in the blockchain system.</p><p id="p-0104" num="0101">In this embodiment, in order to verify the contract code, a code running environment may be created first, that is, a corresponding virtual machine may be created first according to a contract type of the smart contract to be published. The contract type refers to a contract programming language, which may be, for example, a C++ programming language, a java programming language, a solidity programming language, a python programming language, or the like.</p><p id="p-0105" num="0102">Therefore, according to the contract type, the created corresponding virtual machine may include: a GNU compiler collection (GCC) virtual machine for executing smart contracts written in the C++programming language, a java virtual machine (JVM) for executing smart contracts written in the java programming language; an ethereum virtual machine (EVM) for executing smart contracts written in the solidity programming language, or a python virtual machine (PVM) for executing smart contracts written in the python programming language.</p><p id="p-0106" num="0103">Step S<b>820</b>: Execute the contract code of the smart contract to be published by the virtual machine.</p><p id="p-0107" num="0104">Step S<b>830</b>: Determine that the verification of the contract code succeeds when or in response to determining that the virtual machine returns a result that the contract is successfully executed after executing the contract code of the smart contract to be published.</p><p id="p-0108" num="0105">After the corresponding virtual machine is created, the contract code of the smart contract to be published may be executed by the virtual machine. If the virtual machine returns a result that the contract is successfully executed after executing the contract code of the smart contract to be published, it is determined that the verification of the contract code succeeds, that is, the code logic of the contract code can be executed in the virtual machine and parameters can be outputted. Conversely, if the code logic of the contract code cannot be executed in the virtual machine and the parameters cannot be outputted, it is determined that the verification of the contract code fails.</p><p id="p-0109" num="0106">In an embodiment of the present disclosure, before the publishing the transaction information to the blockchain network, the method for publishing a smart contract further includes: obtaining owner information of a smart contract corresponding to the target contract version number; and performing the process of publishing the transaction information to the blockchain network when or in response to determining that the owner information matches publisher information of the smart contract to be published.</p><p id="p-0110" num="0107">In this embodiment, a publisher of the smart contract to be published may publish a plurality of smart contracts. For the publishing of each smart contract, it is desirable to ensure that the found target contract version number is the latest publishing time corresponding to the publisher of the smart contract to be published. Therefore, before publishing the transaction information to the blockchain network, if the obtained owner information of the smart contract corresponding to the target contract version number does not match the publisher information, the process of publishing the transaction information to the blockchain network cannot be performed.</p><p id="p-0111" num="0108">Conversely, if the owner information matches the publisher information of the smart contract to be published, the process of publishing the transaction information to the blockchain network can be performed.</p><p id="p-0112" num="0109">The meaning of matching may be that the owner information is exactly the same as the publisher information of the smart contract to be published. Because the contract owner may transfer ownership, the meaning of matching may further include that the owner information and the publisher information of the smart contract to be published has a relationship between the transferor and the transferee.</p><p id="p-0113" num="0110"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flowchart of a method for calling a smart contract according to an embodiment of the present disclosure. The method for calling a smart contract may be performed by any blockchain node in a blockchain network, and the blockchain node may be any blockchain node in the blockchain network <b>101</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> or <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the method for calling a smart contract includes steps S<b>910</b> to S<b>940</b>, which are described in detail as follows:</p><p id="p-0114" num="0111">Step S<b>910</b>: Receive a contract call request sent by a call requestor, the contract call request containing a name of a contract to be called.</p><p id="p-0115" num="0112">In the blockchain network, by submitting a corresponding blockchain transaction to the blockchain node, a corresponding smart contract may be triggered by the blockchain transaction, and complex functions may be implemented by calling the smart contract. The smart contract is executable code deployed on the blockchain. The smart contract allows credible transactions to be performed without a third party, and the transactions are traceable and irreversible. One or more interfaces may be defined in a smart contract, and each interface is used to implement a corresponding function. When a smart contract is called through a blockchain transaction, which interface or interfaces defined in the smart contract are called may be declared to implement the corresponding function.</p><p id="p-0116" num="0113">In certain embodiment(s), in this embodiment, the call requestor may be a client, and the client may send a contract call request to the blockchain network. The contract call request is used to request to call a certain interface in the target smart contract, and the contract call request may contain the name of the contract to be called.</p><p id="p-0117" num="0114">It may be understood that there may be a plurality of smart contracts in the blockchain network, and the contract call request sent by the client may be for the target smart contract. The target smart contract may be a smart contract that the user is to call to handle an actual service and is published in the blockchain network. For example, the target smart contract may be a smart contract signed by the user with an insurance institution after purchasing insurance from the insurance institution, or a smart contract signed by the user with a factory after purchasing equipment in the factory. The target smart contract may include a plurality of interfaces, such as an interface A, an interface B, and an interface C, where each interface is used to implement a corresponding function.</p><p id="p-0118" num="0115">Step S<b>920</b>: Generate a contract index value according to the name of the contract to be called and a contract version number corresponding to the contract call request.</p><p id="p-0119" num="0116">In order to obtain the target smart contract for the contract call request, during a specific implementation, after receiving the contract call request, the blockchain network may first perform a hash calculation on the name of the contract to be called and a contract version number corresponding to the contract call request to obtain a hash value, and use the calculated hash value as the contract index value.</p><p id="p-0120" num="0117">In certain embodiment(s), the hash algorithm may adopt the sha256 hash function, and the contract index value may be expressed as contractkey=sha56 (name+version), where name is the contract name of the smart contract to be published, and version is the contract version number of the smart contract to be published.</p><p id="p-0121" num="0118">Step S<b>930</b>: Query a target smart contract associated with the contract index value from a blockchain network according to the contract index value.</p><p id="p-0122" num="0119">After the contract index value is obtained, a target smart contract associated with the contract index value is further queried from a blockchain network according to the contract index value.</p><p id="p-0123" num="0120">It may be understood that, because when the smart contract is published to the blockchain network, first, the contract index value is associated with the smart contract to be published, and the version number index value is associated with the contract version number of the smart contract to be published, to generate the transaction information; and then the transaction information is published to the blockchain network, to publish the smart contract to the blockchain network, a mapping relationship between the contract index value and the smart contract may be recorded in the blockchain network, and in this way, after the contract index value is generated, the target smart contract associated with the contract index value may be queried from the blockchain network according to the contract index value.</p><p id="p-0124" num="0121">Step S<b>940</b>: Call the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0125" num="0122">After the target smart contract is found through step S<b>930</b>, the blockchain network may parse the target smart contract and obtain a call interface of the target smart contract. Then, a corresponding preset function is implemented by calling the target interface.</p><p id="p-0126" num="0123">In an embodiment of the present disclosure, the step of calling the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract includes: executing, through the call interface of the target smart contract, target contract code corresponding to the call interface in the target smart contract, to perform a contract operation corresponding to the contract call request.</p><p id="p-0127" num="0124">In certain embodiment(s), the blockchain node in the blockchain network may run, through the call interface of the target smart contract, target contract code corresponding to the call interface in the target smart contract, to perform a contract operation corresponding to the contract call request, so that the blockchain node implements corresponding service logic and performs the service processing.</p><p id="p-0128" num="0125">According to an embodiment of the present disclosure, as shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the method for calling a smart contract further includes the following steps:</p><p id="p-0129" num="0126">Step S<b>1010</b>: Use a version number of the contract to be called as the contract version number corresponding to the contract call request, when or in response to determining that the contract call request contains the version number of the contract to be called.</p><p id="p-0130" num="0127">Step S<b>1020</b>: Generate a version number index value according to the name of the contract to be called, when or in response to determining that the contract call request does not contain a version number of the contract to be called; and search for a target contract version number associated with the version number index value from the blockchain network according to the version number index value, and use the target contract version number as the contract version number corresponding to the contract call request.</p><p id="p-0131" num="0128">In this embodiment, different contract version numbers corresponding to the contract call request may be determined according to whether the contract call request contains the version number of the contract to be called.</p><p id="p-0132" num="0129">If the contract call request contains the version number of the contract to be called, the version number of the contract to be called may be directly used as the contract version number corresponding to the contract call request.</p><p id="p-0133" num="0130">Conversely, if the contract call request does not contain the version number of the contract to be called, the version number index value may be generated first according to the name of the contract to be called, and then the target contract version number associated with the version number index value may be searched from the blockchain network according to the version number index value, and the target contract version number may be used as the contract version number corresponding to the contract call request.</p><p id="p-0134" num="0131">In certain embodiment(s), a hash calculation may be performed on the version number of the contract to be called to obtain a hash value, and the calculated hash value may be used as the version number index value, or the name of the contract to be called may be directly used as the version number index value.</p><p id="p-0135" num="0132">After the version number index value is obtained, the target contract version number associated with the version number index value may be searched from the blockchain network according to the version number index value. It may be understood that a mapping relationship between the version number index value and the contract version number may be recorded in the blockchain network. Therefore, the associated target contract version number may be found according to the version number index value.</p><p id="p-0136" num="0133"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is an interaction flowchart of a method for publishing a smart contract according to an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the method for publishing a smart contract includes the following steps.</p><p id="p-0137" num="0134">Step S<b>1101</b>: Input a smart contract to be published.</p><p id="p-0138" num="0135">The user may input a smart contract to be published in a client, and the user may input information such as a contract name, a contract version number, a contract type, contract code, and a contract owner.</p><p id="p-0139" num="0136">Step S<b>1102</b>: Generate, by the client, a version number index value according to a contract name of the smart contract to be published.</p><p id="p-0140" num="0137">Step S<b>1103</b>: Search, by the client, for an associated target contract version number from a blockchain network according to the version number index value.</p><p id="p-0141" num="0138">Step S<b>1104</b>: Generate a contract index value according to a contract version number of the smart contract to be published and the contract name of the smart contract to be published, when or in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number.</p><p id="p-0142" num="0139">Step S<b>1105</b>: Associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information.</p><p id="p-0143" num="0140">Step S<b>1106</b>: Publish the transaction information to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0144" num="0141"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a flowchart of a method for publishing a smart contract according to an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the method for publishing a smart contract includes the following steps.</p><p id="p-0145" num="0142">Step S<b>1201</b>: Calculate a contract name of a smart contract to be published using a sha256 hash function, to obtain a version number index value versionKey, which may be expressed as versionKey=sha256 (name +0), where name is the contract name of the smart contract to be published.</p><p id="p-0146" num="0143">Step S<b>1202</b>: Search for an associated target contract version number latestVersion from a blockchain network according to the versionKey, and perform step S<b>1203</b> if version of the smart contract to be published is greater than latestVersion; otherwise, terminate the publishing.</p><p id="p-0147" num="0144">Step S<b>1203</b>: Calculate the contract name of the smart contract to be published and the contract version number of the smart contract to be published using a sha256 hash function, to obtain a contract index value contractKey, which may be expressed as contractKey=sha256 (name +version), where name is the contract name of the smart contract to be published, and version is the contract version number of the smart contract to be published.</p><p id="p-0148" num="0145">Step S<b>1204</b>: Associate the contract index value with the smart contract to be published using contractKey as key and the smart contract to be published as value; and associate the version number index value with the contract version number of the smart contract to be published using versionKey as key and the contract version number of the smart contract to be published as value.</p><p id="p-0149" num="0146">Step S<b>1205</b>: Create a corresponding virtual machine according to a contract type of the smart contract to be published, and determine that the verification of the contract code succeeds when or in response to determining that the virtual machine returns a result of that the contract is successfully executed after executing the contract code of the smart contract to be published, and perform a sixth step, otherwise, terminate publishing.</p><p id="p-0150" num="0147">Step S<b>1206</b>: Publish transaction information, to publish the smart contract to be published to the blockchain network.</p><p id="p-0151" num="0148"><figref idref="DRAWINGS">FIG. <b>13</b>A</figref> is a flowchart of a method for calling a smart contract according to an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>13</b>A</figref>, when or in response to determining that a contract call request contains a version number of the contract to be called, the method for calling a smart contract may include:</p><p id="p-0152" num="0149">Step S<b>1301</b>: Calculate, after receiving the contract call request, a name of a contract to be called and a version number of the contract to be called contained in the contract call request using a sha256 hash function to obtain a contract index value contractKey, which may be expressed as contractKey=sha256 (name +version), when or in response to determining that the contract call request contains the version number of the contract to be called, where name is the name of the contract to be called, and version is the version number of the contract to be called.</p><p id="p-0153" num="0150">Step S<b>1302</b>: Query a target smart contract associated with the contract index value from a blockchain network according to the contract index value.</p><p id="p-0154" num="0151">Step S<b>1303</b>: Call the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0155" num="0152"><figref idref="DRAWINGS">FIG. <b>13</b>B</figref> is a flowchart of a method for calling a smart contract according to another embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, when or in response to determining that the contract call request does not contain a version number of the contract to be called, the method for calling a smart contract may include:</p><p id="p-0156" num="0153">Step S<b>1301</b>&#x2032;: Calculate, after receiving the contract call request, a name of a contract to be called contained in the contract call request using a sha256 hash function to obtain a version number index value versionKey, which may be expressed as versionKey=sha256 (name +0), when or in response to determining that the contract call request does not contains the version number of the contract to be called, where name is the name of the contract to be called.</p><p id="p-0157" num="0154">Step S<b>1302</b>&#x2032;: Search for a target contract version number latestVersion associated with the version number index value versionKey from a blockchain network according to the version number index value.</p><p id="p-0158" num="0155">Step S<b>1303</b>&#x2032;: Calculate the name of the contract to be called contained in the contract call request and the target contract version number latestVersion using the sha256 hash function, to obtain a contract index value contractKey, which may be expressed as contractKey=sha256 (name +latestVersion), where name is the name of the contract to be called, and latestVersion is the target contract version number.</p><p id="p-0159" num="0156">Step S<b>1304</b>&#x2032;: Query a target smart contract associated with the contract index value from the blockchain network according to the contract index value.</p><p id="p-0160" num="0157">Step S<b>1305</b>&#x2032;: Call the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0161" num="0158">This embodiment of the present disclosure can implement a smart contract upgrade function at a blockchain platform level, which strengthens a capability of a blockchain platform, and does not develop a contract upgrade function, thereby saving development costs. The contract owner may perform contract upgrade, and then publish the plurality of smart contracts to the blockchain network. Meanwhile, publishing in a manner of generating transaction information improves the security and query efficiency of the smart contract published on the blockchain.</p><p id="p-0162" num="0159">The following describes apparatus embodiments of the present disclosure, which may be used for performing the method for publishing a smart contract in the embodiments of the present disclosure. For details not disclosed in the apparatus embodiments of the present disclosure, reference may be made to the embodiments of the method for publishing a smart contract of the present disclosure.</p><p id="p-0163" num="0160"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a block diagram of an apparatus for publishing a smart contract according to an embodiment of the present disclosure. Referring to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the apparatus <b>1400</b> for publishing a smart contract according to an embodiment of the present disclosure includes: a first generating unit <b>1402</b>, a second generating unit <b>1404</b>, an associating unit <b>1406</b>, and a first publishing unit <b>1408</b>.</p><p id="p-0164" num="0161">The first generating unit <b>1402</b> is configured to generate a version number index value according to a contract name of a smart contract to be published, and search for an associated target contract version number from a blockchain network according to the version number index value. The second generating unit <b>1404</b> is configured to generate a contract index value according to a contract version number of the smart contract to be published and the contract name, when or in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number. The associating unit <b>1406</b> is configured to associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information. The first publishing unit <b>1408</b> is configured to publish the transaction information to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0165" num="0162">In some embodiments of the present disclosure, the first generating unit <b>1402</b> is configured to: perform a hash calculation according to the contract name of the smart contract to be published to obtain a first hash value, and use the calculated first hash value as the version number index value.</p><p id="p-0166" num="0163">In some embodiments of the present disclosure, the second generating unit <b>1404</b> is configured to: perform a hash calculation according to the contract version number of the smart contract to be published and the contract name to obtain a second hash value, and use the calculated second hash value as the contract index value.</p><p id="p-0167" num="0164">In some embodiments of the present disclosure, the first generating unit <b>1402</b> is configured to: search for at least one associated contract version number from the blockchain network according to the version number index value; and use a largest contract version number in the at least one contract version number as the target contract version number.</p><p id="p-0168" num="0165">In some embodiments of the present disclosure, the apparatus for publishing a smart contract further includes: a third generating unit, configured to generate the contract index value according to the contract version number of the smart contract to be published and the contract name, when or in response to determining that no associated target contract version number is found from the blockchain network according to the version number index value; a fourth generating unit, configured to associate the contract index value with the smart contract to be published and associate the version number index value with the contract version number of the smart contract to be published, to generate transaction information; and a second publishing unit, configured to publish the transaction information to the blockchain network, to publish the smart contract to be published to the blockchain network.</p><p id="p-0169" num="0166">In some embodiments of the present disclosure, the apparatus for publishing a smart contract further includes: a terminating unit, configured to terminate publishing of the smart contract to be published to the blockchain network, when or in response to determining that the contract version number of the smart contract to be published is less than or equal to the target contract version number.</p><p id="p-0170" num="0167">In some embodiments of the present disclosure, before the publishing the transaction information to the blockchain network, the apparatus for publishing a smart contract further includes: a verifying unit, configured to verify contract code of the smart contract to be published; and the first publishing unit, configured to publish the transaction information to the blockchain network when or in response to determining that verification of the contract code of the smart contract to be published succeeds.</p><p id="p-0171" num="0168">In some embodiments of the present disclosure, the verifying unit is configured to: create a corresponding virtual machine according to a contract type of the smart contract to be published; execute the contract code of the smart contract to be published by the virtual machine; and determine that the verification of the contract code succeeds when or in response to determining that the virtual machine returns a result that the contract is successfully executed after executing the contract code of the smart contract to be published.</p><p id="p-0172" num="0169">In some embodiments of the present disclosure, before the publishing the transaction information to the blockchain network, the apparatus for publishing a smart contract further includes: an obtaining unit, configured to obtain owner information of a smart contract corresponding to the target contract version number; and an execution unit, configured to perform the process of publishing the transaction information to the blockchain network when or in response to determining that the owner information matches publisher information of the smart contract to be published.</p><p id="p-0173" num="0170"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a block diagram of an apparatus for calling a smart contract according to an embodiment of the present disclosure.</p><p id="p-0174" num="0171">Referring to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, the apparatus <b>1500</b> for calling a smart contract according to an embodiment of the present disclosure includes: a receiving unit <b>1502</b>, an index value generation unit <b>1504</b>, a querying unit <b>1506</b>, and a calling unit <b>1508</b>.</p><p id="p-0175" num="0172">The receiving unit <b>1502</b> is configured to receive a contract call request sent by a call requestor, the contract call request containing a name of a contract to be called. The index value generation unit <b>1504</b> is configured to generate a contract index value according to the name of the contract to be called and a contract version number corresponding to the contract call request. The querying unit <b>1506</b> is configured to query a target smart contract associated with the contract index value from published smart contracts in a blockchain network according to the contract index value. The calling unit <b>1508</b> is configured to call the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</p><p id="p-0176" num="0173">In some embodiments of the present disclosure, the apparatus for calling a smart contract further includes a processing unit, configured to use a version number of the contract to be called as the contract version number corresponding to the contract call request, when or in response to determining that the contract call request contains the version number of the contract to be called.</p><p id="p-0177" num="0174">In some embodiments of the present disclosure, the apparatus for calling a smart contract further includes a generating and searching unit, configured to generate a version number index value according to the name of the contract to be called, when or in response to determining that the contract call request does not contain a version number of the contract to be called; and search for a target contract version number associated with the version number index value from the blockchain network according to the version number index value, and use the target contract version number as the contract version number corresponding to the contract call request.</p><p id="p-0178" num="0175">In some embodiments of the present disclosure, the calling unit <b>1508</b> is further configured to execute, through the call interface of the target smart contract, target contract code corresponding to the call interface in the target smart contract, to perform a contract operation corresponding to the contract call request.</p><p id="p-0179" num="0176"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a schematic structural diagram of a computer system adapted to implement an electronic device according to an embodiment of the present disclosure. The computer system <b>1600</b> of the electronic device shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref> is merely an example, and does not constitute any limitation on functions and use ranges of the embodiments of the present disclosure. The electronic device includes a processor and a storage apparatus. The processor of the electronic device may be a central processing unit (CPU) for providing computing and control capabilities. The storage apparatus of the electronic device may include a read-only memory (ROM), a random access memory (RAM), and the storage apparatus includes a non-volatile storage medium and an internal memory. The non-volatile storage medium stores an operating system and computer-readable instructions. The internal memory provides an environment for running of the operating system and the computer-readable instruction in the non-volatile storage medium.</p><p id="p-0180" num="0177">As shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, the computer system <b>1600</b> includes a CPU <b>1601</b>, which can perform various appropriate actions and processing, such as performing the methods described in the above embodiments, according to a program stored in a ROM <b>1602</b> or a program loaded into a RAM <b>1603</b> from a storage part <b>1608</b>. The RAM <b>1603</b> further stores various programs and data required for operating the system. The CPU <b>1601</b>, the ROM <b>1602</b>, and the RAM <b>1603</b> are connected to each other through a bus <b>1604</b>. An input/output (I/O) interface <b>1605</b> is also connected to the bus <b>1604</b>.</p><p id="p-0181" num="0178">The following components are connected to the I/O interface <b>1605</b>: an input part <b>1606</b> including a keyboard, a mouse, and the like; an output part <b>1607</b> including a cathode ray tube (CRT), a liquid crystal display (LCD), a speaker, and the like; a storage part <b>1608</b> including a hard disk and the like; and a communication part <b>1609</b> including a network interface card such as a local area network (LAN) card, a modem, and the like. The communication part <b>1609</b> performs communication processing by using a network such as the Internet. A driver <b>1610</b> is also connected to the I/O interface <b>1605</b> as required. A removable medium <b>1611</b>, such as a magnetic disk, an optical disc, a magneto-optical disk, or a semiconductor memory, is installed on the drive <b>1610</b> as required, so that a computer-readable instruction read from the removable medium is installed into the storage part <b>1608</b> as required.</p><p id="p-0182" num="0179">Particularly, according to an embodiment of the present disclosure, the processes described in the following by referring to the flowcharts may be implemented as computer software programs. For example, an embodiment of the present disclosure includes a computer program product. The computer program product includes a computer-readable instruction carried on a computer-readable medium. A computer program includes a computer-readable instruction used for performing the method shown in the flowchart. In such an embodiment, by using the communication part <b>1609</b>, the computer program may be downloaded and installed from a network, and/or installed from the removable medium <b>1611</b>. When the computer program is executed by the CPU <b>1601</b>, the various functions defined in the system of the present disclosure are executed.</p><p id="p-0183" num="0180">The computer-readable medium shown in the embodiments of the present disclosure may be a computer-readable signal medium or a computer-readable storage medium or any combination of the two. For example, the computer-readable storage medium may be, but is not limited to, an electric, magnetic, optical, electromagnetic, infrared, or semi-conductive system, apparatus, or device, or any combination thereof. More specific examples of the computer-readable storage medium may include, but are not limited to, an electrical connection having one or more wires, a portable computer magnetic disk, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM), a flash memory, an optical fiber, a compact disk read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any appropriate combination thereof.</p><p id="p-0184" num="0181">In the present disclosure, the computer-readable storage medium may be any tangible medium containing or storing a computer-readable instruction, and the computer-readable instruction may be used by or used in combination with an instruction execution system, apparatus, or device. In the present disclosure, a computer-readable signal medium may include a data signal in a baseband or propagated as a part of a carrier wave, the data signal carrying a computer-readable instruction. The propagated data signal may be in a plurality of forms, including, but not limited to, an electromagnetic signal, an optical signal, or any appropriate combination thereof. The computer-readable signal medium may alternatively be any computer-readable medium other than the computer-readable storage medium. The computer-readable medium may send, propagate, or transmit a computer-readable instruction used by or used in combination with an instruction execution system, apparatus, or device. The computer-readable instruction included in the computer-readable medium may be transmitted using any appropriate medium, including but not limited to: a wireless medium, a wired medium, or any suitable combination thereof.</p><p id="p-0185" num="0182">The flowcharts and block diagrams in the accompanying drawings illustrate architectures, functions, and operations that may be implemented by a system, a method, and a computer program product according to various embodiments of the present disclosure. Each box in the flowchart or block diagram may represent a module, a program segment, or a part of code. The module, the program segment, or the part of code includes one or more executable instructions used for implementing designated logic functions. In some implementations used as substitutes, functions annotated in boxes may alternatively occur in a sequence different from that annotated in an accompanying drawing. For example, two boxes shown in succession may be performed in parallel actually, and sometimes the two boxes may be performed in a reverse sequence, which is determined according to a related function. Each box in a block diagram and/or a flowchart and a combination of boxes in the block diagram and/or the flowchart may be implemented by using a dedicated hardware-based system configured to perform a specified function or operation, or may be implemented by using a combination of dedicated hardware and a computer instruction.</p><p id="p-0186" num="0183">A related unit described in the embodiments of the present disclosure may be implemented in a software manner, or may be implemented in a hardware manner, and the unit described may alternatively be set in a processor. Names of the units do not constitute a limitation on the units in a specific scenario.</p><p id="p-0187" num="0184">In another aspect, the present disclosure further provides a computer-readable medium. The computer-readable medium may be included in the electronic device described in the above embodiments, or may exist alone without being assembled into the electronic device. The computer-readable medium carries one or more computer-readable instructions. The one or more computer-readable instructions, when executed by the electronic device, cause the electronic device to implement the method described in the embodiments.</p><p id="p-0188" num="0185">Although several modules or units of a device configured to perform actions are discussed in the detailed description, the division is not mandatory. Actually, according to the implementations of the present disclosure, the features and functions of two or more modules or units described above may be implemented in one module or unit. Conversely, the features and functions of one module or unit described above may be further divided into a plurality of modules or units for implementation.</p><p id="p-0189" num="0186">Through the descriptions of the implementations, a person skilled in the art easily understands that the exemplary implementations described herein may be implemented through software, or may be implemented through software in combination with suitable hardware. Therefore, the technical solutions of the implementations of the present disclosure may be implemented in a form of a software product. The software product may be stored in a non-volatile storage medium (which may be a CD-ROM, a USB flash drive, a removable hard disk, or the like) or on the network, including several instructions for instructing a computing device (which may be a personal computer, a server, a touch terminal, a network device, or the like) to perform the methods according to the embodiments of the present disclosure.</p><p id="p-0190" num="0187">The term unit (and other similar terms such as subunit, module, submodule, etc.) in this disclosure may refer to a software unit, a hardware unit, or a combination thereof. A software unit (e.g., computer program) may be developed using a computer programming language. A hardware unit may be implemented using processing circuitry and/or memory. Each unit can be implemented using one or more processors (or processors and memory). Likewise, a processor (or processors and memory) can be used to implement one or more units. Moreover, each unit can be part of an overall unit that includes the functionalities of the unit.</p><p id="p-0191" num="0188">After considering the present disclosure and practicing the disclosed implementations, a person skilled in the art may easily figure out other implementation solutions of the present disclosure. The present disclosure is intended to cover any variations, uses or adaptive changes of the present disclosure. The variations, uses or adaptive changes follow the general principles of the present disclosure, and include well-known knowledge and technical means in the art that are not disclosed in the present disclosure.</p><p id="p-0192" num="0189">It is to be understood that the present disclosure is not limited to the precise structures described above and shown in the accompanying drawings, and various modifications and changes can be made without departing from the scope of the present disclosure. The scope of the present disclosure is limited only by the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for publishing a smart contract, performed by a client, the method comprising:<claim-text>generating a version number index value according to a contract name of the smart contract, and searching for an associated target contract version number from a blockchain network according to the version number index value;</claim-text><claim-text>generating a contract index value according to a contract version number of the smart contract and the contract name, in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number;</claim-text><claim-text>associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and</claim-text><claim-text>publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the version number index value comprises:<claim-text>performing a hash calculation according to the contract name of the smart contract to obtain a first hash value, and using the calculated first hash value as the version number index value.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein generating the contract index value comprises:<claim-text>performing a hash calculation according to the contract version number of the smart contract and the contract name to obtain a second hash value, and using the calculated second hash value as the contract index value.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein searching for the associated target contract version number comprises:<claim-text>searching for at least one associated contract version number from the blockchain network according to the version number index value; and</claim-text><claim-text>using a largest contract version number in the at least one contract version number as the target contract version number.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>generating the contract index value according to the contract version number of the smart contract and the contract name, in response to determining that no associated target contract version number is found from the blockchain network according to the version number index value;</claim-text><claim-text>associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and</claim-text><claim-text>publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>terminating publishing of the smart contract to the blockchain network, in response to determining that the contract version number of the smart contract is less than or equal to the target contract version number.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>verifying contract code of the smart contract; and</claim-text><claim-text>publishing the transaction information to the blockchain network comprises: publishing the transaction information to the blockchain network in response to determining that verification of the contract code of the smart contract succeeds.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein verifying contract code of the smart contract comprises:<claim-text>creating a corresponding virtual machine according to a contract type of the smart contract;</claim-text><claim-text>executing the contract code of the smart contract by the virtual machine; and</claim-text><claim-text>determining that the verification of the contract code succeeds in response to determining that the virtual machine returns a result that the contract is successfully executed after executing the contract code of the smart contract.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>obtaining owner information of a smart contract corresponding to the target contract version number; and</claim-text><claim-text>performing the process of publishing the transaction information to the blockchain network in response to determining that the owner information matches publisher information of the smart contract.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method for calling a smart contract, performed by a blockchain node, the method comprising:<claim-text>receiving a contract call request sent by a call requestor, the contract call request including a name of the smart contract;</claim-text><claim-text>generating a contract index value according to the name of the smart contract and a contract version number corresponding to the contract call request;</claim-text><claim-text>querying a target smart contract associated with the contract index value from published smart contracts in a blockchain network according to the contract index value; and</claim-text><claim-text>calling the target smart contract to perform a corresponding contract operation according to a call interface of the target smart contract.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>using a version number of the smart contract as the contract version number corresponding to the contract call request, in response to determining that the contract call request includes the version number of the contract.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, comprising:<claim-text>generating a version number index value according to the name of the smart contract, in response to determining that the contract call request does not include a version number of the smart contract; and</claim-text><claim-text>searching for a target contract version number associated with the version number index value from the blockchain network according to the version number index value, and using the target contract version number as the contract version number corresponding to the contract call request.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein calling the target smart contract comprises:<claim-text>executing, through the call interface of the target smart contract, target contract code corresponding to the call interface in the target smart contract, to perform a contract operation corresponding to the contract call request.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. An apparatus for publishing a smart contract, comprising: a memory storing computer program instructions; and a processor coupled to the memory and configured to execute the computer program instructions and perform:<claim-text>generating a version number index value according to a contract name of the smart contract, and searching for an associated target contract version number from a blockchain network according to the version number index value;</claim-text><claim-text>generating a contract index value according to a contract version number of the smart contract and the contract name, in response to determining that the contract version number of the smart contract to be published is greater than the target contract version number;</claim-text><claim-text>associating the contract index value with the smart contract and associating the version number index value with the contract version number of the smart contract, to generate transaction information; and</claim-text><claim-text>publishing the transaction information to the blockchain network, to publish the smart contract to the blockchain network.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>searching for at least one associated contract version number from the blockchain network according to the version number index value; and</claim-text><claim-text>using a largest contract version number in the at least one contract version number as the target contract version number.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>verifying a contract code of the smart contract to be published; and</claim-text><claim-text>publishing the transaction information to the blockchain network in response to determining that verification of the contract code of the smart contract succeeds.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>performing a hash calculation according to the contract name of the smart contract to obtain a first hash value, and using the calculated first hash value as the version number index value.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>performing a hash calculation according to the contract version number of the smart contract and the contract name to obtain a second hash value, and using the calculated second hash value as the contract index value.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>terminating publishing of the smart contract to the blockchain network, in response to determining that the contract version number of the smart contract is less than or equal to the target contract version number.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured to execute the computer program instructions and perform:<claim-text>obtaining owner information of a smart contract corresponding to the target contract version number; and</claim-text><claim-text>performing the process of publishing the transaction information to the blockchain network in response to determining that the owner information matches publisher information of the smart contract.</claim-text></claim-text></claim></claims></us-patent-application>