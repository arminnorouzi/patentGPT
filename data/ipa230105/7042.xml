<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007043A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007043</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942242</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1475</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1416</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR AUTOMATICALLY BLOCKING THE USE OF TRACKING TOOLS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17387421</doc-number><date>20210728</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11444976</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942242</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>63057382</doc-number><date>20200728</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>OneTrust, LLC</orgname><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Brannon</last-name><first-name>Jonathan Blake</first-name><address><city>Smyrna</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Whitney</last-name><first-name>Patrick</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Chavva</last-name><first-name>Sharath Chandra</first-name><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Baucom</last-name><first-name>Jeffrey</first-name><address><city>Sandy Springs</city><state>GA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>OneTrust, LLC</orgname><role>02</role><address><city>Atlanta</city><state>GA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Embodiments of the present invention provide methods, apparatus, systems, computing devices, computing entities, and/or the like for permitting or blocking tracking tools used through webpages. In particular embodiments, the method involves: scanning a webpage to identify a tracking tool configured for processing personal data; determining a data destination location that is associated with the tracking tool; and generating program code configured to: determine a location associated with a user who is associated with a rendering of the webpage; determine a prohibited data destination location based on the location associated with the user; determine that the data destination location associated with the tracking tool is not the prohibited data destination location; and responsive to the data destination location associated with the tracking tool not being the prohibited data destination location, permit the tracking tool to execute.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="214.12mm" wi="122.26mm" file="US20230007043A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="216.15mm" wi="124.29mm" file="US20230007043A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="190.92mm" wi="82.80mm" file="US20230007043A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="234.95mm" wi="177.46mm" file="US20230007043A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="210.82mm" wi="185.59mm" file="US20230007043A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="218.44mm" wi="149.27mm" file="US20230007043A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="226.23mm" wi="155.11mm" file="US20230007043A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 17/387,421, filed Jul. 28, 2021, which claims the benefit of U.S. Provisional Patent Application No. 63/057,382, filed Jul. 28, 2020, the disclosures of which are hereby incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure is generally related to a computational framework used for blocking tracking tools used through webpages.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Tracking tools are often used on websites to track users and/or the users' behaviors as they use respective browsers to visit the websites. For example, cookies may be used to track a user's interests, location, age, and/or search trends. A technical challenge often encountered by many entities (e.g., e-commerce business) operating websites is controlling such use based on the visitors to the websites. Accordingly, there is currently a need for improved tools for automatically blocking of tracking technologies associated with a website, such as tracking technologies that process personal data in one or more categories for which a relevant user has not provided consent, as well as improved tools for automatically blocking tracking technologies that transfer personal data to jurisdictions where such transfers are prohibited by applicable laws and/or regulations.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">In accordance with various aspects, a method is provided that comprises: scanning, by computing hardware, a webpage to identify a tracking tool that is associated with the webpage; determining, by the computing hardware, a data destination location that is associated with the tracking tool, wherein the determining step is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives data via the tracking tool, or (c) a location of a computing device or a storage device that stores the data; and generating, by the computing hardware, program code, wherein the program code is configured to: determine a location associated with a user who is associated with a rendering of the webpage; determine a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location; determine that the data destination location associated with the tracking tool is the prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool configured for processing the data from executing.</p><p id="p-0006" num="0005">In some aspects, the program code is further configured to: determine a second location associated with a second user who is associated with a second rendering of the webpage; determine a second prohibited data destination location based on the data structure mapping the second location associated with the user to the second prohibited data destination location; determine that the data destination location associated with the tracking tool is not the second prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permit the tracking tool to execute.</p><p id="p-0007" num="0006">In some aspects, the method further comprises generating, by the computing hardware, a computer-readable file comprising an identifier for the tracking tool and an identifier for the data destination location associated with the tracking tool, wherein the program code comprises the computer-readable file and is configured to identify the data destination location associated with the tracking tool from the computer-readable file. In some aspects, the computer-readable file further comprises the data structure. In some aspects, the program code is configured, prior to determining the location associated with the user, to determine that the tracking tool is authorized to run from the computer-readable file.</p><p id="p-0008" num="0007">In some aspects, the program code is configured, prior to determining the location associated with the user, to determine that the user has provided consent for the tracking tool. In some aspects, the program code is configured, prior to determining the location associated with the user to: determine that the user has not provided consent for the tracking tool; and responsive to determining the user has not provided the consent for the tracking tool, obtain the consent from the user.</p><p id="p-0009" num="0008">In accordance with various aspects, a method is provided that comprises: receiving, by computing hardware, a Hypertext Transfer Protocol (HTTP) request to render a webpage; and responsive to receiving the HTTP request, sending, by the computing hardware, a HTTP response comprising a script to a computing device associated with a user, wherein the computing device is configured to execute, within a browser and during a rendering of the webpage, the script to perform operations comprising: identifying a source script attempting to execute; identifying the source script is configured to invoke a tracking tool based on information on the tracking tool found embedded in the script; and responsive to identifying the source script is configured to invoke the tracking tool: determining a location associated with the user; determining a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location; determining a data destination location associated with the tracking tool based on the information embedded in the script; determining that the data destination location associated with the tracking tool is the prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool involving processing certain data from executing. In some aspects, the script further performs operations comprising, after disabling the functionality, permitting the source script to execute to invoke the tracking tool for the webpage.</p><p id="p-0010" num="0009">In some aspects, the method further comprises: receiving, by the computing hardware, a second Hypertext Transfer Protocol (HTTP) request to render the webpage; and responsive to receiving the second HTTP request, sending, by the computing hardware, a second HTTP response comprising the script to a second computing device associated with a second user, wherein the second computing device is configured to execute, within a second browser and during a second rendering of the webpage, the script to perform operations comprising: identifying the source script attempting to execute; identifying the source script is configured to invoke the tracking tool based on the information on the tracking tool found embedded in the script; and responsive to identifying the source script is configured to invoke the tracking tool: determining a second location associated with the second user; determining a second prohibited data destination location based on the data structure mapping the second location associated with the second user to the second prohibited data destination location; determining the data destination location associated with the tracking tool based on the information embedded in the script; determining that the data destination location associated with the tracking tool is not the second prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permitting the tracking tool to execute for the webpage. In some aspects, permitting the tracking tool to execute for the webpage comprises permitting the source script to execute to invoke the tracking tool.</p><p id="p-0011" num="0010">In some aspects, the script is configured to determine the location associated with the user based on at least one of (a) a geographical location of the user, (b) a network address associated with the user, (c) browser information on the user, (d) a language associated with the user, or (e) consent data associated with the user. In some aspects, the data destination location associated with the tracking tool is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives the data, or (c) a location of a computing device or a storage device that stores the data.</p><p id="p-0012" num="0011">In accordance with various aspects, a non-transitory computer-readable medium storing computer-executable instructions is provided. Accordingly, the computer-executable instructions, when executed by one or more processing devices, configure the one or more processing devices to perform operations that comprise: scanning a webpage to identify a tracking tool that is associated with the webpage; determining a data destination location that is associated with the tracking tool, wherein the determining step is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives data via the tracking tool, or (c) a location of a computing device or a storage device that stores the data; and generating program code, wherein the program code is configured to: determine a location associated with a user who is associated with a rendering of the webpage; determine a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location; determine that the data destination location associated with the tracking tool is the prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool configured for processing the data from executing.</p><p id="p-0013" num="0012">In some aspects, the program code is further configured to: determine a second location associated with a second user who is associated with a second rendering of the webpage; determine a second prohibited data destination location based on the data structure mapping the second location associated with the user to the second prohibited data destination location; determine that the data destination location associated with the tracking tool is not the second prohibited data destination location; and responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permit the tracking tool to execute.</p><p id="p-0014" num="0013">In some aspects, the operations further comprise generating a computer-readable file comprising an identifier for the tracking tool and an identifier for the data destination location associated with the tracking tool, wherein the program code comprises the computer-readable file and is configured to identify the data destination location associated with the tracking tool from the computer-readable file. In some aspects, the computer-readable file further comprises the data structure. In some aspects, the program code is configured, prior to determining the location associated with the user, to determine that the tracking tool is authorized to run from the computer-readable file.</p><p id="p-0015" num="0014">In some aspects, the program code is configured, prior to determining the location associated with the user, to determine that the user has provided consent for the tracking tool. In some aspects, the program code is configured, prior to determining the location associated with the user to: determine that the user has not provided consent for the tracking tool; and responsive to determining the user has not provided the consent for the tracking tool, obtain the consent from the user.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0016" num="0015">In the course of this description, reference will be made to the accompanying drawings, which are not necessarily drawn to scale, and wherein:</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a flowchart of a process for identifying one or more tracking tools associated with a webpage in accordance with various embodiments of the present disclosure;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart of a process for evaluating a tracking tool in accordance with various embodiments of the present disclosure;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart of a process for implementing one or more tracking tools in accordance with various embodiments of the present disclosure;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart of a process for loading a tracking tool in accordance with various embodiments of the present disclosure;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an exemplary system architecture that may be used in accordance with various embodiments of the present disclosure; and</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic diagram of a computing entity that may be used in accordance.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0023" num="0022">Various embodiments for practicing the technologies disclosed herein are described more fully hereinafter with reference to the accompanying drawings, in which some, but not all embodiments of the technologies disclosed are shown. Indeed, the embodiments disclosed herein are provided so that this disclosure will satisfy applicable legal requirements and should not be construed as limiting or precluding other embodiments applying the teachings and concepts disclosed herein. Like numbers in the drawings refer to like elements throughout.</p><heading id="h-0007" level="2">Technical Contributions of Various Embodiments</heading><p id="p-0024" num="0023">Tracking tools are often used on websites to track users and/or the users' behaviors as they are using respective browsers to visit the websites. For example, cookies may be used to track a user's interests, location, age, and/or search trends. A technical challenge often encountered by many entities (e.g., e-commerce business) operating websites is controlling such use based on the visitors to the websites. Normally a tracking tool is loaded via a script during the rendering of a webpage of the website upon a visitor requesting to view the webpage. Under a conventional setting, the script executes in the same manner regardless of the visitor to the site. That is to say, the script loads the tracking tool regardless of the visitor.</p><p id="p-0025" num="0024">This may be true even in instances in which a visitor to a website may first need to provide consent before a tracking tool is used to track the visitor and/or visitor's behavior. For example, the visitor may be requested to consent to having his or her behavior tracked and, upon consent, the tracking tool may be loaded to begin tracking the visitor's behavior. However, in situations where the visitor has provided consent, the tracking tool may be loaded without regard to or consideration of the particular visitor who has provided the consent. However, there may be instances in which use of the tracking tool should still be avoided. This is because even though the visitor has provided consent, restrictions may still apply to the use of the tracking tool.</p><p id="p-0026" num="0025">For example, if an entity plans on transferring European Union (EU) personal data outside the EU, then the entity can only transfer such data to countries with robust data protection regulations. As a result, an entity (e.g., e-commerce business) that is operating a website with users from the EU and that is collecting any of the users' personal data such as email address, cookies analytics data, and/or the like falls under such restrictions. Such restrictions are generally in place regardless of whether or not the users have provided consent to having their personal data collected. Therefore, an entity that is operating a website and that collects personal data through the use of a tracking tool may want to avoid collecting personal data from EU customers who visit the website, even in instances in which the customer has provided consent to having his or her personal data collected. However, regulating the use of tracking tools for such situations can be a challenge under a conventional setting.</p><p id="p-0027" num="0026">Various embodiments of the disclosure address several of the technical challenges associated with using tracking tools that process (e.g., collect, store, transfer, and/or the like) personal data by providing a tracking tool blocking framework configured to dynamically detect one or more tracking tools (e.g., scripts, cookies, web beacons, and/or the like) associated with one or more webpages of websites so that particular tools (and/or various capabilities and/or functionality thereof) can be automatically blocked in response to determining that the particular tools result in a transfer of personal data to and/or from a prohibited location (e.g., jurisdiction such as a country, state, region, and/or the like). For instance, in particular embodiments, the framework can be used to automatically block one or more tracking tools associated with a webpage for a website that transfers any personal data associated with a particular user who is visiting the website from a location other than a location in which the particular user resides. In addition, in particular embodiments, the framework can be configured to limit the capabilities of one or more tracking tools so that, rather than entirely blocking such tools, the framework allows such tools to execute but prevents the tools from processing personal data in association with prohibited locations (e.g., jurisdictions).</p><p id="p-0028" num="0027">Accordingly, various embodiments of the disclosure provided herein address many of the technical disadvantages encountered in using tracking tools that process personal data involving parties who are subject to jurisdictions that place restrictions on the use and transfer of personal data. Specifically, embodiments of the disclosure provide a novel framework that can be implemented for various websites and configured to evaluate tracking tools used in conjunction with webpages as the webpages are being loaded so that the tracking tools can be disabled and/or so that capabilities/functionality of the tracking tools can be disabled if determined to involve the use of personal data in a restricted/prohibited location (e.g., jurisdiction). As a result, embodiments of the disclosure can increase security, reliability, capacity, and efficiency in using tracking tools in conjunction with webpages and personal data. In doing so, various embodiments of the present disclosure make major technical contributions to improving the use of tracking tools that involve the processing of personal data along with websites. This in turn translates to more computationally reliable, secure, and/or efficient systems that process personal data.</p><p id="p-0029" num="0028">For purposes of this disclosure, &#x201c;tracking tools&#x201d; may refer to, for example, cookies, beacons (e.g., visible elements such as graphics, banners, or buttons; non-pictorial HTML, elements such as the frame, style, script, input link, embed, object, etc. of the web page), scripts, image files, tags, tracking code, and/or any other tracking tools or technology. A geographic area may be referred to as a jurisdiction. Accordingly, a &#x201c;jurisdiction&#x201d; as used herein may refer to, for example, a country, region, group of countries, legal jurisdiction, federation of countries, and/or any other area to which a set of laws and/or regulations may apply. Furthermore, although the remainder of the disclosure makes reference to the use of various embodiments of the disclosure in conjunction with tracking tools used for processing (e.g., collecting, storing, transferring, and/or the like) personal data, those of ordinary skill in the art will recognize that embodiments of the disclosure can be used in conjunction with tracking tools used for processing other types of data such as, for example, confidential data associated with an entity such as an organization, charity, government, and/or the like.</p><heading id="h-0008" level="2">Tracking Tool Identification</heading><p id="p-0030" num="0029">Turning now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, additional details are provided regarding a process <b>100</b> for identifying one or more tracking tools associated with a webpage of a website in accordance with various embodiments of the disclosure. Accordingly, the process <b>100</b> may be implemented in various embodiments as suitable program code executed on computing hardware such as, for example, a server as described herein.</p><p id="p-0031" num="0030">Depending on the circumstances, the tracking tool identification process <b>100</b> may be performed to identify and categorize the tracking tools related to one or more webpages for a web site prior to a user visiting the web site or at a time when a user is actively visiting the web site. For instance, in particular embodiments, the tracking tool identification process <b>100</b> may be performed at a time when new content has been added to one or more webpages and as a result, a new tracking tool may have been added to one or more of the webpages. For example, a new code release may have been issued for the website and/or a tag manager used for the website may have been updated. In other instances, the tracking tool identification process <b>100</b> may be performed to identify and categorize the tracking tools for one or more webpages of a website &#x201c;on the fly&#x201d; at a time when a user is visiting the website and the one or more webpages are being rendered. Such a configuration can ensure that any tracking tool that has been newly added is identified and categorized.</p><p id="p-0032" num="0031">Accordingly, the tracking tool identification process <b>100</b> begins with performing a scan of a webpage to identify any tracking tools associated with the webpage and/or any respective scripts that may be used to execute, load, introduce, and/or the like the tracking tools at Step <b>110</b>. For example, in various embodiments, the tracking tool identification process <b>100</b> may involve using a scanner such as Chrome scanner to scan the webpage as it is being loaded to identify the tracking tools and/or associated scripts.</p><p id="p-0033" num="0032">For instance, in particular embodiments, the tracking tool identification process <b>100</b> may involve identifying a source for a particular tracking tool by analyzing one or more flows of data, for example, between a browser rending the webpage and a server serving the webpage to the browser, or between the browser and one or more remote systems (e.g., remote computing entities that one or more scripts loading on the webpage attempt to communicate with). For instance, one or more response headers may be scanned to identify a source or initiator of the particular tracking tool such as, for example, one or more response headers that have been sent to the browser by a host server associated with the particular tracking tool in response to the host server receiving an HTTP request. Here, the response header may include, for example, a date, size, and/or type of file that the host server is attempting to send to the browser, as well as, or instead of, other data such as data about the host server itself. Accordingly, the tracking tool identification process <b>100</b> may involve using this header information to match a source script with the particular tracking tool or otherwise determine a source script for the particular tracking tool.</p><p id="p-0034" num="0033">Alternatively, or in addition, in other embodiments, the tracking tool identification process <b>100</b> may involve employing a back-end synch with tags to identify a source for a particular tracking tool. In such an embodiment, a host identifier may be initially determined from the host field associated with a source script that may be associated with the particular tracking tool. The host identifier for the source script may then be matched to a host of a known tracking tool (e.g., as determined from a data source of known tracking tools) to determine that the particular source script is associated with the same host and, therefore, the associated particular tracking tool may be assumed to have a similar tracking purpose.</p><p id="p-0035" num="0034">Accordingly, in particular embodiments, the tracking tool identification process <b>100</b> continues with generating an output file for the identified tracking tools at Step <b>115</b>. Here, the output file may include an identifier for each tracking tool along with other information for the tools such as, for example, an identifier for an associated source script and/or other information acquired from the response header. Thus, the output file may associate an identified tracking tool with a respective source script that is used to execute, load, introduce, etc. the tracking tool along with other associated data.</p><p id="p-0036" num="0035">The tracking tool identification process <b>100</b> continues with selecting an identified tracking tool at Step <b>120</b> and evaluating the tracking tool at Step <b>125</b>. Accordingly, in various embodiments, the evaluation of the selected tracking tool is performed via an evaluate tracking tool process described in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. As detailed further herein, the evaluate tracking tool process involves evaluating one or more parameters for the tracking tool to identify one or more categories associated with the tracking tool, as well as one or more locations associated with the tracking. As discussed further herein, the one or more categories and/or locations can then be used in various embodiments in determining whether to have the tracking tool be loaded and executed in a normal fashion during a user's visit to the web site when the webpage is rendered, prohibit the tracking tool from loading and executing at all, or allow the tracking tool to load and execute but with limited capabilities and/or functionality.</p><p id="p-0037" num="0036">The tracking tool identification process <b>100</b> continues with determining whether another tracking tool has been identified at Step <b>130</b>. If so, then the tracking tool identification process <b>100</b> returns to Step <b>120</b>, selecting the next identified tracking tool, and evaluating the newly selected tracking tool as just described. Otherwise, the tracking tool identification process <b>100</b> advances to Step <b>135</b>, generating and/or populating a data set indicating the identified tracking tools (and/or their respective source scripts) and the respective one or more categories and one or more identified locations for each tracking tool. Accordingly, in various embodiments, this data set may be stored in an output file of any suitable format, such as a JavaScript&#xae; Object Notation (JSON) formatted file that can then be embedded into a webpage or code (e.g., JavaScript&#xae;) associated with the webpage or website. As detailed further herein, the information on the identified tracking tools can then be used as in various embodiments in controlling which and/or how the different identified tracking tools are loaded and/or executed when the associated webpage is rendered for a particular user who is visiting the website.</p><p id="p-0038" num="0037">Although not shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the tracking tool identification process <b>100</b> (or some other process) may involve generating computer-executable instructions (e.g., code) that make use of the output file to control the implementation of the one or more tracking tools for the webpage at times when a request has been received to load (render) the webpage as a result of a user visiting the website. For example, in particular embodiments, the computer-executable instructions may be configured as a script that is run as a first script (e.g., JavaScript&#xae;) on a webpage when the webpage is rendered by a browser.</p><heading id="h-0009" level="2">Evaluate Tracking Tool</heading><p id="p-0039" num="0038">Turning now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, additional details are provided regarding an evaluate tracking tool process for evaluating a tracking tool in accordance with various embodiments of the disclosure. Accordingly, the process <b>200</b> may be implemented in various embodiments as suitable program code executed on computing hardware such as, for example a server as described herein.</p><p id="p-0040" num="0039">The evaluate tracking tool process <b>200</b> begins with receiving the identified tracking tool for the webpage at Step <b>210</b>. Depending on the embodiment, the identified tracking tool may be received as input and/or accessed from a data source such as the output file described above. Accordingly, various information may be received for the identified tracking tool such as, for example, an identifier for the tracking tool, identifier for a source script associated with the tracking, and/or other related information that may have been included in the output file produced by the tracking tool identification module as described above.</p><p id="p-0041" num="0040">The evaluate tracking tool process <b>200</b> continues with comparing the identified tracking tool to known tracking tools at Step <b>215</b>. In various embodiments, this particular step is performed by accessing a data source (e.g., database, one or more files, and/or the like) that includes information on known tracking tools. For example, the data source may store information for each known tracking tool that may include, but is not limited to: (1) one or more vendors that are associated with the known tracking tool; (2) one or more purposes of the known tracking tool; (3) one or more types of personal data that the known tracking tool may collect and/or process; (4) one or more host identifiers associated with the known tracking tool; and/or (5) any other attributes and/or characteristics of the known tracking tool. Accordingly, the evaluate tracking tool process <b>200</b> may involve determining which one or more of the known tracking tools most closely matches with the identified tracking tool based at least in part on the comparison. For example, a purpose of a tracking tool may be to gather information on the products viewed by a user while he or she is visiting an e-commerce website. Thus, depending on the embodiment, information known for the identified tracking tool may be used in conducting the comparison to known tracking tools. For instance, an identifier for the tracking tool (e.g., name of the tracking tool), vendor of the tracking tool, source providing the tracking tool, and/or the like may be used in identifying one or more known tracking tools associated with the identified tracking tool.</p><p id="p-0042" num="0041">The evaluate tracking tool process <b>200</b> continues with identifying one or more categories for the identified tracking tool at Step <b>220</b>. Here, in particular embodiments, the one or more categories may be identified based at least in part on one or more purposes associated with the identified tracking tool as gathered from the known tracking tool(s) associated with the identified tracking tool. For instance, in some embodiments, information gathered for the identified tracking tool from the response header and provided in the output file may be used, in combination with information found in the data source for the known tracking tool(s) associated with the identified tracking tool, to determine one or more categories for the tracking tool.</p><p id="p-0043" num="0042">For example, if information gathered on the particular tracking tool indicates a purpose for the particular tracking tool matches a purpose of a known tracking tool that facilitates the collection of web browsing information, then the evaluate tracking tool process <b>200</b> may involve associating the category &#x201c;web browsing information collection&#x201d; with the particular tracking tool. In another example, if information gathered on the particular tracking tool indicates that the types of personal data collected by the particular tracking tool matches the types of personal data collected by a known tracking tool, then the evaluate tracking tool process <b>200</b> may involve associating a category associated with the types of personal data collected with the particular tracking tool. In yet another illustrative example, if the information gathered on the particular tracking tool indicates that a particular host server is associated with the particular tracking tool and the particular host server matches a host server associated with a known tracking tool, then the evaluate tracking tool process <b>200</b> may involve associating the category of the known tracking tool with the particular tracking tool. In yet another illustrative example, if information gathered for the particular tracking tool indicates that a particular vendor is associated with the particular tracking tool and that the vendor matches a vendor associated with a known tracking tool, then the evaluate tracking tool process <b>200</b> may involve associating the category of the known tracking tool with the particular tracking tool. Accordingly, depending on the embodiment, the evaluate tracking tool process <b>200</b> may be performed to use various other particular attributes of tracking tools and/or related information, and/or any combinations thereof, to determine one or more categories for the particular tracking tool.</p><p id="p-0044" num="0043">Continuing, in various embodiments, the evaluate tracking tool process <b>200</b> involves using information (e.g., found in the data source) for the associated known tracking tool(s) to identify one or more data destination locations for the identified tracking tool at Step <b>225</b>. For instance, the one or more data destination locations may be associated with locations to which the identified tracking tool transfers data or at which a computing entity such as a server is located that calls, loads, executes, etc. the identified tracking tool. In some embodiments, the evaluate tracking tool process <b>200</b> may also, or instead, involve analyzing the identified tracking tool and/or any source script that is used to execute, load, introduce, etc. the tracking tool to determine one or more data destination locations of one or more computing entities that call, load, execute, etc. the identified tracking tool. Alternatively, or in addition, the evaluate tracking tool process <b>200</b> may involve analyzing the identified tracking tool and/or any respective script used to execute and/or introduce the identified tracking tool to determine one or more data destination locations for data collected by the tracking tool and transmitted to a computing entity at such data destination locations.</p><p id="p-0045" num="0044">For example, in particular embodiments, the identified tracking tool and/or associated source script may be analyzed to determine a network address (e.g., IP address) of a server associated with calling or loading the tracking tool and/or source script. A reverse network address look-up (e.g., reverse IP address look-up) may then be performed to determine a geographical or jurisdictional location to associate with the particular tracking tool and/or source script. Alternatively, or in addition, a tracking tool and/or source script may be analyzed to determine a network address (e.g., IP address) associated with a remote device to which the tracking tool and/or source script is configured to transmit data. A reverse network address look-up (e.g., reverse IP address look-up) may then be used to determine a geographical or jurisdictional destination location to associate with the particular tracking tool and/or source script.</p><p id="p-0046" num="0045">In some embodiments, the evaluate tracking tool process <b>200</b> may involve tagging the identified tracking tool by storing one or more parameters (e.g., as metadata) associated with the particular tracking tool that indicate that a particular data destination location has been identified as being associated with the tool. Alternatively, or in addition, the evaluate tracking tool process <b>200</b> may involve determining that a data destination location, which has been identified as being associated with the particular tracking tool, is a particular type or category of location (e.g., outside the EU, within the EU, subject to a particular regulatory framework, not subject to a particular regulatory framework, etc.) and tagging the particular tracking tool by storing one or more parameters (e.g., as metadata) associated with the tool that indicate that the particular data destination location is of the determined location type or in the determined location category.</p><p id="p-0047" num="0046">As previously noted, in various embodiments, the one or more categories and/or one or more data destination locations identified for the particular tracking tool may then be recorded in a data set. As furthered noted, the one or more categories and/or data destination locations may then be used in controlling which different identified tracking tools are loaded and/or executed when the associated webpage is rendered for a particular user who is visiting the website (and/or how the tracking tools are loaded and/or executed).</p><heading id="h-0010" level="2">Tracking Tool Implementation</heading><p id="p-0048" num="0047">Turning now to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, additional details are provided regarding a tracking tool implementation process <b>300</b> for implementing one or more tracking tools in accordance with various embodiments of the disclosure. In particular embodiments, the tracking tool implementation process <b>300</b> may be implemented as a first script (e.g., JavaScript&#xae;) to run on a webpage when the webpage is rendered by a browser (e.g., a webpage previously analyzed as described herein). The script may be configured to include the data set described above with respect to the tracking tool identification process <b>100</b>. For example, the script may include the data set as an embedded JavaScript&#xae; Object Notation (JSON) formatted file that may include all of the identified tracking tools, source scripts, tags, and/or data destination location and categorization information discussed above. As discussed further herein, the script may use the embedded JSON formatted file to map the data destination locations associated with the various tracking tools associated with the webpage. In addition, the script may use the embedded JSON formatted file to map one or more locations associated with a user, as well as use the JSON formatted file to map permitted data destination locations and/or prohibited data destination locations to location(s) associated with the user. In other embodiments, the script may use alternative means to perform any one or more of these functions. To enhance performance, the script in various embodiments may have its own Content Delivery Network endpoint.</p><p id="p-0049" num="0048">Accordingly, a user visits the website and sends a request to render a webpage for the website. That is to say, in particular embodiments, a browser executing on a computing entity being used by the user sends an http request to render the webpage that is received by a computing entity such as a web server. In turn, the web server prepares and sends an http response to the request back to the browser and, as a result, the tracking tool implementation process <b>300</b> is executed via the webpage being loaded in the user's browser residing on the user's computing entity. Thus, the tracking tool implementation process <b>300</b> may be implemented in various embodiments as suitable program code (e.g., a script) executed on computing hardware such as, for example, a client computing device as described herein.</p><p id="p-0050" num="0049">Therefore, in various embodiments, the tracking tool implementation process <b>300</b> begins with determining one or more locations (e.g., jurisdictions) for the user visiting the website at Step <b>310</b>. Depending on the embodiment, the tracking tool implementation process <b>300</b> may involve determining the location(s) for the user by analyzing user information and using one, or a combination of, various techniques, such as a user geographical location, a user network address (e.g., IP Address), a reverse network address look-up of a user network address (e.g., a reverse IP address look-up), browser information, user language (e.g., the language selected by the user in using the website), user data collected and/or determined as part of obtaining consent from the user, and/or the like. In addition, in some embodiments, the tracking tool implementation process <b>300</b> may involve tagging the user (e.g., using metadata) as being located in the location(s), and/or otherwise store the location(s), in response to determining the user is associated with one or more particular locations such as the EU.</p><p id="p-0051" num="0050">For example, the user may be a resident of the EU who is currently visiting the United States. Therefore, in this example, the tracking tool implementation process <b>300</b> may involve determining that a first location associated with the user is the United States based at least in part on a current IP address for the user. However, in addition to the first location, the tracking tool implementation process <b>300</b> may involve determining that a second location associated with the user is the EU based at least in part on a language (e.g., French) selected by the user in which to have the webpages of the website rendered. Therefore, in this particular example, the tracking tool implementation process may involve taking both locations into consideration in evaluating whether to block certain tracking tools.</p><p id="p-0052" num="0051">It is noted that the tags on the location(s) that has been identified for the user (e.g., metadata) are used in particular embodiments in restricting particular uses of personal data collected for the user. For instance, metadata on the location(s) identified for the user may be stored along with personal data collected for the user that can then be used to restrict the user's personal data from being processed by and/or transferred to any system outside of the user's jurisdiction. For example, such metadata associated with a user's email address may be used to restrict the user's e-mail address from being transferred outside of the European Union, such as being propagated to US-based (e.g., or other country) marketing systems.</p><p id="p-0053" num="0052">The tracking tool implementation process <b>300</b> continues with analyzing the source scripts that are attempting to execute as the webpage is being loaded and determines that a particular script is associated with a tracking tool at Step <b>315</b>. Here, in particular embodiments, the tracking tool implementation process <b>300</b> may involve referencing the data set (e.g., the JSON formatted file) to identify a script that is attempting to execute and that is associated with a tracking tool of interest. Accordingly, in various embodiments, the tracking tool implementation process involves tagging the script with a category based at least in part on the tracking tool information found in the data set for the tracking tool at Step <b>320</b>.</p><p id="p-0054" num="0053">In particular embodiments, a category associated with the tracking tool may not be determined based on the information provided in the output file. In such cases, the tracking tool implementation process <b>300</b> may involve automatically disabling the source script for the tracking tool so that the tracking tool is not executed. Alternatively, the tracking tool implementation process <b>300</b> may involve allowing the source script to run. Accordingly, in some embodiments, this setting of whether to run scripts for which there is insufficient information may be a user-configurable setting or preconfigured by a system operator.</p><p id="p-0055" num="0054">In addition, in particular embodiments, the information provided in the output file may indicate whether the tracking tool is authorized or not authorized to run. Here, for example, the tracking tool implementation process <b>300</b> may involve matching the script that is attempting to execute with a source script for a tracking tool in the data set that indicates that the tracking tool is not authorized to execute (or does not match a source script for a tracking tool that is explicitly indicated in the data set as authorized to execute). In response, the tracking tool implementation process <b>300</b> may involve preventing that script from executing. Similarly, the tracking tool implementation process <b>300</b> may involve determining that the particular script that is attempting to execute matches a source script that is indicated in the data set as a tracking tool that is authorized to execute (or does not match a source script for a tracking tool that is explicitly indicated in the data set as being prohibited from executing) and in response, allowing that script to execute.</p><p id="p-0056" num="0055">The tracking tool implementation process <b>300</b> continues with determining whether consent has been provided by the user for the particular tracking tool, itself, and/or for the category associated with the tracking tool at Step <b>325</b>. In various embodiments, the tracking tool implementation process <b>300</b> may involve accessing a user consent data source (e.g., database file, matrix, vector, and/or the like) and based at least in part on the category tagged to the tracking tool, determining whether the user visiting the website had previously granted consent to process his or her personal data within the specific category. For example, the user may have previously provided consent (e.g., opted in) to having information on his or her browsing history on the web site recorded. As a result, the entity running the web site may have recorded the user's consent at that time so that such consent is reflected in the user consent data source.</p><p id="p-0057" num="0056">If consent has not been provided by the user, then the tracking tool implementation process <b>300</b> in various embodiments involves determining whether consent had been previously requested from the user at Step <b>330</b>. For example, in particular instances, the user consent data source may indicate that the user had expressly declined (e.g., opted out of) consent for the category of the tracking tool during a past visit. However, in other instances, the user may have passively declined consent by not expressly providing or declining consent. For example, the user may have visited the website in the past and been provided with an option to &#x201c;opt in&#x201d; or &#x201c;opt out&#x201d; for the category and not selected either option.</p><p id="p-0058" num="0057">Therefore, if the user has expressly declined consent or consent was previously requested but the user did not decline or provide consent, then the tracking tool implementation process <b>300</b> in various embodiment involves preventing the script from executing to facilitate loading of the tracking tool at Step <b>335</b>. However, if consent has not been previously requested, then the tracking tool implementation process <b>300</b> involves requesting the user's consent for the category of the tracking tool (and/or the particular tracking tool itself) at Step <b>340</b>. Accordingly, in various embodiments, the tracking tool implementation process may involve prompting the user for consent to load the tracking tool associated with the specific category. For instance, in particular embodiments, the user may be presented with a consent notice requesting permission to process data for the specific category.</p><p id="p-0059" num="0058">The tracking tool implementation process <b>300</b> continues with receiving an indication of consent and determines whether the user has provided consent for the tracking tool (category of tracking tool) at Step <b>345</b>. Accordingly, in some embodiments, the tracking tool implementation process <b>300</b> may involve recording/storing the indication of consent (e.g., permitted or declined) for the user in the user consent data source. If the user has not provided consent, then the tracking tool implementation process <b>300</b> involves preventing the script from executing to facilitate loading of the tracking tool at Step <b>335</b>. However, if the user has provided consent for the tracking tool (category of tracking tool), then the tracking tool is loaded at Step <b>350</b>.</p><p id="p-0060" num="0059">In various embodiments, the tracking tool is loaded via a load tracking tool process as described in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Accordingly, the load tracking tool process involves allowing the script to execute to load the tracking tool to execute normally, preventing the script from executing and the tracking tool from loading and executing entirely, or allowing the script to execute to load the tracking tool but with certain capabilities and/or functionality disabled from executing. As discussed further herein, the load tracking tool process involves determining how to implement the particular tracking tool in particular embodiments based at least in part on an evaluation of the tracking tool with respect to the data destination location(s) associated with the tracking tool and/or location(s) associated with the user. Therefore, in these embodiments, the load tracking tool process can enable the entity to operate the website in a manner that is in compliance with any regulations and/or restrictions associated with the processing of personal data of the user that may be performed by the tracking tool.</p><p id="p-0061" num="0060">At this point, the tracking tool implementation process <b>300</b> continues determining whether the webpage has loaded at Step <b>355</b>. If not, then the tracking tool implementation process <b>300</b> involves returning to Step <b>315</b> and analyzing any additional scripts as they attempt to execute on the webpage.</p><p id="p-0062" num="0061">At this point, a particular tracking tool identified for a particular webpage may: (1) function normally while the user is viewing and/or interacting with the webpage; (2) not function at all, thus eliminating the collection and use of any personal data for the user associated with the tracking tool; or (3) function with limited capabilities and/or functionality, thus minimizing and/or eliminating the collection and use of any personal data for the user associated with the tracking tool. Therefore, the tracking tool implementation process <b>300</b> may allow for the entity to operate the website and corresponding webpage(s) for the website and facilitate the processing (e.g., collecting, storing, transferring, and/or the like) of personal data of users who visit the website while remaining in conformance with any regulatory restrictions that may be in place on the processing of the personal data based at least in part on consent provided by the users, as well as the data destination location(s) associated with the processing of the personal data and/or the locations associated with the users.</p><p id="p-0063" num="0062">In addition, in particular embodiments, the tracking tool implementation process <b>300</b> may involve evaluating tracking tools (and/or the process may be invoked) at different times during the user's visit of the website. For example, the tracking tool implementation process <b>300</b> may be performed at a time after the webpage has been loaded (rendered) to evaluate tracking tools (or may be invoked) in response to particular information being received from the user as the user interacts with the webpage, even though such information may have not been received at a time when the webpage was being loaded. Accordingly, in these embodiments, the tracking tool implementation process <b>300</b> may be performed to disable a tracking tool that has been loaded based at least in part on the information that has been received by the user. For instance, the tracking tool may involve a cookie that has been installed on the user's computing entity and the tracking tool implementation process <b>300</b> may be performed to remove the cookie.</p><p id="p-0064" num="0063">For example, as the user interacts with the website, the user may provide information that may identify a location for the user. For instance, the user may provide a shipping address for a purchase the user is making through the website that indicates the user resides in the EU. As a result of this new information, the tracking tool implementation process <b>300</b> may be performed in some embodiments to determine that an additional location for the user is the EU and in response, conduct an analysis on any tracking tools being used for the current webpage being viewed by the user based at least in part on the additional location. Accordingly, the tracking tool implementation process <b>300</b> may be performed to remove a particular tracking tool that was initially loaded in response to the tracking tool involving the processing of personal data outside the EU. Thus, in particular embodiments, the tracking tool implementation process <b>300</b> may allow for the entity to adjust operation of the website and corresponding webpage(s) for the website during a user's visit of the web site to ensure conformance with any regulatory restrictions.</p><heading id="h-0011" level="2">Load Tracking Tool</heading><p id="p-0065" num="0064">Turning now to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, additional details are provided regarding a load tracking tool process <b>400</b> for loading a tracking tool in accordance with various embodiments of the disclosure. In various embodiments, similar to the tracking tool implementation process <b>300</b>, the load tracking tool process may be implemented as a script (e.g., JavaScript&#xae;) to run on the webpage when the webpage is rendered by a browser (e.g., a webpage previously analyzed as described herein). Thus, the load tracking tool process <b>400</b> may be implemented in various embodiments as suitable program code (e.g., a script) executed on computing hardware such as, for example, a client computing device as described herein.</p><p id="p-0066" num="0065">The load tracking tool process <b>400</b> begins with receiving the tracking tool at Step <b>410</b>. Here, in particular embodiments, the tracking tool is received via one or more pieces of information on the tracking tool such as, for example, an identifier for the source script that is attempting to execute the tracking tool and/or an identifier for the tracking tool itself.</p><p id="p-0067" num="0066">The load tracking tool process <b>400</b> continues with mapping whether each data destination location associated with the tracking tool is a permitted or prohibited data destination location (e.g., jurisdiction) with respect to the location(s) associated with the user at Step <b>415</b>. Here, in particular embodiments, the load tracking tool process <b>400</b> may involve using information associated with the identified tracking tool in the output file (e.g., the JSON formatted file) to identify the data destination locations associated with the tracking tool. Accordingly, the information may be accessed using the identifier for the source script and/or tracking tool. In addition, the load tracking tool process <b>400</b> may involve identifying the location(s) associated with the particular user (e.g., provided as input or accessed via metadata for the user). In various embodiments, the load tracking tool process <b>400</b> involves performing the mapping, and determining whether any of the data destination location(s) associated with the tracking tool is considered (e.g., matches) a prohibited data destination location for any of the location(s) associated with the particular user. For instance, in particular embodiments, the load tracking tool process <b>400</b> may involve determining one or more prohibited (and/or permitted) data destination locations based at least in part on the location(s) associated with the particular user using a data structure that maps the location(s) associated with the user with or one or more listings of prohibited data destination locations and/or one or more listings of permitted data destination locations. Accordingly, the load tracking tool process <b>400</b> may involve determining whether a data destination location associated with the tracking tool is identified in any of the one or more listings.</p><p id="p-0068" num="0067">In some embodiments, the load tracking tool process <b>400</b> may involve performing a comparison of indicators based at least in part on the one or more locations associated with the user and one or more data destination locations associated with the tracking tool to determine whether the particular tracking tool should be blocked (e.g., prohibited from executing) or limited for the user. For example, a &#x201c;non-EU&#x201d; indicator may have been stored in the output file for the particular tracking tool that indicates that the tool transfers data to a location outside the EU. In addition, an &#x201c;EU&#x201d; indicator may have been stored in metadata for the particular user indicating the user is an EU citizen. Here, the load tracking tool process <b>400</b> may involve making use of the listings mentioned above in determining whether the &#x201c;non-EU&#x201d; indicator associated with the tracking tool (e.g., in light of the &#x201c;EU&#x201d; indicator for the user) is a prohibited location.</p><p id="p-0069" num="0068">Thus, in various embodiments, the load tracking tool process <b>400</b> involves determining whether the tracking tool is associated with a prohibited data destination location at Step <b>420</b>. If none of the data destination locations associated with the particular tracking tool maps to a prohibited data destination location for the particular user, then the load tracking tool process <b>400</b> continues with allowing the source script for the tracking tool to execute and load the tracking tool normally at Step <b>425</b>. As a result, the tracking tool is permitted to execute normally.</p><p id="p-0070" num="0069">However, if the load tracking tool module determines that a data destination location associated with the particular tracking tool maps to a prohibited data destination location (or that at least one data destination location does not map to a permitted data destination location) for the particular user, then the load tracking tool process <b>400</b> involves prohibiting the tracking tool from executing normally. Accordingly, in particular embodiments, this particular step involves prohibiting (blocking) the source script associated with the tracking tool from executing, thus preventing the tracking tool from loading. However, alternatively, or in addition, in some embodiments, this particular step involves preventing the implementation of one or more capabilities and/or functionality of the particular tracking tool to limit and/or prohibit (not permit) processing of personal data involving prohibited data destination locations instead of entirely blocking the operation of the particular tracking tool. For example, the tracking tool may be allowed to operate but prevent the tool from tracking particular types of personal data and/or transferring personal data to particular data destination locations (e.g., jurisdictions).</p><p id="p-0071" num="0070">Therefore, in various embodiments, the load tracking tool process <b>400</b> involves determining whether capabilities and/or functionality for the tracking tool should be limited and/or prohibited or whether the tracking tool module should be prohibited from executing entirely at Step <b>430</b>. For example, the tracking tool may be configured to collect one or more pieces of data while the user is interacting with the webpage. A first piece of data may be information on various navigation functionality (e.g., buttons, dropdowns, slide bars, and/or the like) that the user makes use of while navigating around the webpage. A second piece of data may be a specific identifier of the user (e.g., a username and/or an account number) that indicates the user's identity. Thus, the second piece of data may be considered a piece of personal data for the user. Accordingly, in this example, a determination may be made as to whether the tracking tool should be entirely prohibited from operating or that certain capabilities and/or functionality should be prohibited based at least in part on information found in the output file for the tracking tool that identifies that the purpose of the tracking tool is to collect information on the navigation functionality used by the user, as well as an identifier for the user. Therefore, the load tracking tool process <b>400</b> may result in determining that the functionality of the tracking tool should be limited so that only the information on the navigation functionality is collected and not the identifier for the user.</p><p id="p-0072" num="0071">Accordingly, the load tracking tool process <b>400</b> may involve loading the tracking tool accordingly at Step <b>435</b>. Therefore, in the example, the script may be allowed to load the tracking tool but with particular capability and/or functionality disabled in the tracking tool that is used for collecting (e.g., recording) an identifier for the user. If instead the load tracking tool process <b>400</b> involves determining that the tracking tool should be prohibited from executing entirely, then the tracking tool is prohibited from loading at Step <b>440</b>. Therefore, in various embodiments, the source script used for loading the tracking tool would be prohibited from executing.</p><p id="p-0073" num="0072">It is noted that various embodiments of the disclosure are configured so that if a location associated with a tracking tool is prohibited or not permitted, the tracking tool may still be prohibited (e.g., blocked) from running or may be restricted with respect to one or more capabilities and/or functionality, even if the user has provided consent. That is to say, particular embodiments of the disclosure are configured to provide a mechanism to ensure compliance with any regulations and/or restrictions that may be in place for the processing of personal data, even in instances when the user may consent to such processing of his or her personal data. However, other embodiments of the disclosure may be configured to allow a user's consent to override a prohibited location associated with a tracking tool and allow the tracking tool to run normally. Further, it is noted that various embodiments of the disclosure may be used for any suitable type of element including scripts, images (e.g., beacons), iframe tags, etc.</p><heading id="h-0012" level="2">Example Technical Platforms</heading><p id="p-0074" num="0073">Embodiments of the present disclosure may be implemented in various ways, including as computer program products that comprise articles of manufacture. Such computer program products may include one or more software components including, for example, software objects, methods, data structures, and/or the like. A software component may be coded in any of a variety of programming languages. An illustrative programming language may be a lower-level programming language such as an assembly language associated with a particular hardware architecture and/or operating system platform. A software component comprising assembly language instructions may require conversion into executable machine code by an assembler prior to execution by the hardware architecture and/or platform. Another example programming language may be a higher-level programming language that may be portable across multiple architectures. A software component comprising higher-level programming language instructions may require conversion to an intermediate representation by an interpreter or a compiler prior to execution.</p><p id="p-0075" num="0074">Other examples of programming languages include, but are not limited to, a macro language, a shell or command language, a job control language, a script language, a database query or search language, and/or a report writing language. In one or more example embodiments, a software component comprising instructions in one of the foregoing examples of programming languages may be executed directly by an operating system or other software component without having to be first transformed into another form. A software component may be stored as a file or other data storage construct. Software components of a similar type or functionally related may be stored together such as, for example, in a particular directory, folder, or library. Software components may be static (e.g., pre-established or fixed) or dynamic (e.g., created or modified at the time of execution).</p><p id="p-0076" num="0075">A computer program product may include a non-transitory computer-readable storage medium storing applications, programs, program modules, scripts, source code, program code, object code, byte code, compiled code, interpreted code, machine code, executable instructions, and/or the like (also referred to herein as executable instructions, instructions for execution, computer program products, program code, and/or similar terms used herein interchangeably). Such non-transitory computer-readable storage media include all computer-readable media (including volatile and non-volatile media).</p><p id="p-0077" num="0076">Depending on the embodiment, a non-volatile computer-readable storage medium may include a floppy disk, flexible disk, hard disk, solid-state storage (SSS) (e.g., a solid state drive (SSD), solid state card (SSC), solid state module (SSM), enterprise flash drive, magnetic tape, or any other non-transitory magnetic medium, and/or the like. A non-volatile computer-readable storage medium may also include a punch card, paper tape, optical mark sheet (or any other physical medium with patterns of holes or other optically recognizable indicia), compact disc read only memory (CD-ROM), compact disc-rewritable (CD-RW), digital versatile disc (DVD), Blu-ray disc (BD), any other non-transitory optical medium, and/or the like. Such a non-volatile computer-readable storage medium may also include read-only memory (ROM), programmable read-only memory (PROM), erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), flash memory (e.g., Serial, NAND, NOR, and/or the like), multimedia memory cards (MMC), secure digital (SD) memory cards, SmartMedia cards, CompactFlash (CF) cards, Memory Sticks, and/or the like. Further, a non-volatile computer-readable storage medium may also include conductive-bridging random access memory (CBRAM), phase-change random access memory (PRAM), ferroelectric random-access memory (FeRAM), non-volatile random-access memory (NVRAM), magnetoresistive random-access memory (MRAM), resistive random-access memory (RRAM), Silicon-Oxide-Nitride-Oxide-Silicon memory (SONOS), floating junction gate random access memory (FJG RAM), Millipede memory, racetrack memory, and/or the like.</p><p id="p-0078" num="0077">Depending on the embodiment, a volatile computer-readable storage medium may include random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), fast page mode dynamic random access memory (FPM DRAM), extended data-out dynamic random access memory (EDO DRAM), synchronous dynamic random access memory (SDRAM), double data rate synchronous dynamic random access memory (DDR SDRAM), double data rate type two synchronous dynamic random access memory (DDR2 SDRAM), double data rate type three synchronous dynamic random access memory (DDR3 SDRAM), Rambus dynamic random access memory (RDRAM), Twin Transistor RAM (TTRAM), Thyristor RAM (T-RAM), Zero-capacitor (Z-RAM), Rambus in-line memory module (RIMM), dual in-line memory module (DIMM), single in-line memory module (SIMM), video random access memory (VRAM), cache memory (including various levels), flash memory, register memory, and/or the like. It will be appreciated that where embodiments are described to use a computer-readable storage medium, other types of computer-readable storage media may be substituted for or used in addition to the computer-readable storage media described above.</p><p id="p-0079" num="0078">As should be appreciated, various embodiments of the present disclosure may also be implemented as methods, apparatus, systems, computing devices, computing entities, and/or the like. As such, embodiments of the present disclosure may take the form of a data structure, apparatus, system, computing device, computing entity, and/or the like executing instructions stored on a computer-readable storage medium to perform certain steps or operations. Thus, embodiments of the present disclosure may also take the form of an entirely hardware embodiment, an entirely computer program product embodiment, and/or an embodiment that comprises combination of computer program products and hardware performing certain steps or operations.</p><p id="p-0080" num="0079">Embodiments of the present disclosure are described below with reference to block diagrams and flowchart illustrations. Thus, it should be understood that each block of the block diagrams and flowchart illustrations may be implemented in the form of a computer program product, an entirely hardware embodiment, a combination of hardware and computer program products, and/or apparatus, systems, computing devices, computing entities, and/or the like carrying out instructions, operations, steps, and similar words used interchangeably (e.g., the executable instructions, instructions for execution, program code, and/or the like) on a computer-readable storage medium for execution. For example, retrieval, loading, and execution of code may be performed sequentially such that one instruction is retrieved, loaded, and executed at a time. In some exemplary embodiments, retrieval, loading, and/or execution may be performed in parallel such that multiple instructions are retrieved, loaded, and/or executed together. Thus, such embodiments can produce specifically-configured machines performing the steps or operations specified in the block diagrams and flowchart illustrations. Accordingly, the block diagrams and flowchart illustrations support various combinations of embodiments for performing the specified instructions, operations, or steps.</p><heading id="h-0013" level="2">Example System Architecture</heading><p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram of a system architecture <b>500</b> that may be used in accordance with various embodiments of the disclosure. As may be understood from this figure, the system architecture <b>500</b> may include one or more computer networks <b>510</b>, one or more servers <b>520</b>, one or more storage devices <b>530</b> (that may contain, for example, one or more databases of information), and/or one or more client computing devices such as one or more tablet computers <b>540</b>, one or more desktop or laptop computers <b>550</b>, one or more handheld computing devices <b>560</b> such as one or more smart phones, one or more browser and Internet capable set-top boxes <b>570</b> connected with TVs <b>580</b>, smart TVs <b>580</b> having browser and Internet capability, and/or the like. In particular instances, the client computing device(s) attached to the network(s) <b>510</b> may also include devices such as scanners, copiers, printers, fax machines, and/or the like <b>590</b> having hard drives (a security risk since copies/prints may be stored on these hard drives). The one or more servers <b>520</b>, client computing devices, and/or storage devices <b>530</b> may be physically located in a same (e.g., central) location, such as the headquarters of an organization, for example, or in separate locations.</p><p id="p-0082" num="0081">Accordingly, the one or more servers <b>520</b> may be configured for performing different functionality within the system. For example, one or more of the servers <b>520</b> may be configured as web server(s) that provide functionality with respect to receiving http requests and providing content in the form of web pages for one or more websites visited by the various client computing devices. In addition, one or more of the servers <b>520</b> may be configured for performing different functionality such as backend services with respect to the one or more websites. In particular embodiments, such one or more servers <b>520</b> may be configured to perform the evaluate tracking tool process <b>200</b> as previously described. Further, in particular embodiments, the tracking tool implementation process <b>300</b> and load tracking tool process <b>400</b> previously described may be performed by one or more client computing devices.</p><p id="p-0083" num="0082">In various embodiments, the one or more computer networks <b>510</b> facilitate communication between the one or more servers <b>520</b>, client computing devices, and/or storage devices <b>530</b>. Here, the one or more computer networks <b>510</b> may include any of a variety of types of wired or wireless computer networks such as the Internet, a private intranet, a public switched telephone network (PSTN), or any other type of network. Accordingly, the communication link between the one or more servers <b>520</b>, client computing devices, and/or storage devices <b>530</b> may be, for example, implemented via a Local Area Network (LAN), a Wide Area Network (WAN), the Internet, and/or the like.</p><heading id="h-0014" level="2">Example Computing Entity</heading><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a diagrammatic representation of a computing entity <b>600</b> that may be used in accordance with various embodiments of the disclosure. For example, the computing entity <b>600</b> may be computing hardware such as a server <b>520</b> and/or a client computing device as described in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. In particular embodiments, the computing entity <b>600</b> may be connected (e.g., networked) to one or more other computing entities, storage devices, and/or the like via one or more networks such as, for example, a LAN, an intranet, an extranet, and/or the Internet. As noted above, the computing entity <b>600</b> may operate in the capacity of a server and/or a client device in a client-server network environment, or as a peer computing device in a peer-to-peer (or distributed) network environment. Accordingly, depending on the embodiment, the computing entity <b>600</b> may be a personal computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a mobile device (smart phone), a web appliance, a server, a network router, a switch or bridge, or any other device capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that device. Further, while only a single computing entity <b>600</b> is illustrated, the term &#x201c;computing entity&#x201d; shall also be taken to include any collection of computing entities that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.</p><p id="p-0085" num="0084">An exemplary computing entity <b>600</b> includes a processor <b>602</b>, a main memory <b>604</b> (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM), Rambus DRAM (RDRAM), and/or the like), a static memory <b>606</b> (e.g., flash memory, static random access memory (SRAM), and/or the like), and a data storage device <b>618</b>, that communicate with each other via a bus <b>632</b>.</p><p id="p-0086" num="0085">The processor <b>602</b> may represent one or more general-purpose processing devices such as a microprocessor, a central processing unit, and/or the like. In some embodiments, the processor <b>602</b> may be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, processor implementing other instruction sets, processors implementing a combination of instruction sets, and/or the like. In some embodiments, the processor <b>602</b> may be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, and/or the like. The processor <b>602</b> may be configured to execute processing logic <b>626</b> for performing various operations and/or steps described herein.</p><p id="p-0087" num="0086">The computing entity <b>600</b> may further include a network interface device <b>608</b>, as well as a video display unit <b>610</b> (e.g., a liquid crystal display (LCD), a cathode ray tube (CRT), and/or the like), an alphanumeric input device <b>612</b> (e.g., a keyboard), a cursor control device <b>614</b> (e.g., a mouse), and/or a signal generation device <b>616</b> (e.g., a speaker). The computing entity <b>600</b> may further include a data storage device <b>618</b>. The data storage device <b>618</b> may include a non-transitory computer-readable storage medium <b>630</b> (also known as a non-transitory computer-readable storage medium or a non-transitory computer-readable medium) on which is stored one or more sets of instructions <b>622</b> (e.g., software, software modules) embodying any one or more of the methodologies or functions described herein. The instructions <b>622</b> may also reside, completely or at least partially, within main memory <b>604</b> and/or within the processor <b>602</b> during execution thereof by the computing entity <b>600</b>&#x2014;main memory <b>604</b> and processor <b>602</b> also constituting computer-accessible storage media. The instructions <b>622</b> may further be transmitted or received over a network <b>510</b> via the network interface device <b>608</b>.</p><p id="p-0088" num="0087">While the computer-readable storage medium <b>630</b> is shown to be a single medium, the terms &#x201c;computer-readable storage medium&#x201d; and &#x201c;machine-accessible storage medium&#x201d; should be understood to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions. The term &#x201c;computer-readable storage medium&#x201d; should also be understood to include any medium that is capable of storing, encoding, and/or carrying a set of instructions for execution by the computing entity <b>600</b> and that causes the computing entity <b>600</b> to perform any one or more of the methodologies of the present disclosure. The term &#x201c;computer-readable storage medium&#x201d; should accordingly be understood to include, but not be limited to, solid-state memories, optical and magnetic media, and/or the like.</p><heading id="h-0015" level="2">Exemplary System Operation</heading><p id="p-0089" num="0088">The logical steps and/or operations described herein may be implemented (1) as a sequence of computer implemented acts or one or more program modules running on a computing system and/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly, the logical steps and/or operations described herein are referred to variously as states, operations, steps, structural devices, acts, or modules. These operations, steps, structural devices, acts, and modules may be implemented in software code, in firmware, in special purpose digital logic, and any combination thereof. Greater or fewer steps and/or operations may be performed than shown in the figures and described herein. These steps and/or operations may also be performed in a different order than those described herein.</p><heading id="h-0016" level="1">CONCLUSION</heading><p id="p-0090" num="0089">While this specification contains many specific embodiment details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments may also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment may also be implemented in multiple embodiments separately or in any suitable sub-combination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination may in some cases be excised from the combination, and the claimed combination may be directed to a sub-combination or variation of a sub-combination.</p><p id="p-0091" num="0090">Similarly, while operations are described in a particular order, this should not be understood as requiring that such operations be performed in the particular order described or in sequential order, or that all described operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components (e.g., modules) and systems may generally be integrated together in a single software product or packaged into multiple software products.</p><p id="p-0092" num="0091">Many modifications and other embodiments of the disclosure will come to mind to one skilled in the art to which this disclosure pertains having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore, it is to be understood that the disclosure is not to be limited to the specific embodiments disclosed and that modifications and other embodiments are intended to be included within the scope of the appended claims. Although specific terms are employed herein, they are used in a generic and descriptive sense only and not for the purposes of limitation.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>We claim:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method comprising:<claim-text>scanning, by computing hardware, a webpage to identify a tracking tool that is associated with the webpage;</claim-text><claim-text>determining, by the computing hardware, a data destination location that is associated with the tracking tool, wherein the determining step is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives data via the tracking tool, or (c) a location of a computing device or a storage device that stores the data; and</claim-text><claim-text>generating, by the computing hardware, program code, wherein the program code is configured to:<claim-text>determine a location associated with a user who is associated with a rendering of the webpage;</claim-text><claim-text>determine a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location;</claim-text><claim-text>determine that the data destination location associated with the tracking tool is the prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool configured for processing the data from executing.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the program code is further configured to:<claim-text>determine a second location associated with a second user who is associated with a second rendering of the webpage;</claim-text><claim-text>determine a second prohibited data destination location based on the data structure mapping the second location associated with the user to the second prohibited data destination location;</claim-text><claim-text>determine that the data destination location associated with the tracking tool is not the second prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permit the tracking tool to execute.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising generating, by the computing hardware, a computer-readable file comprising an identifier for the tracking tool and an identifier for the data destination location associated with the tracking tool, wherein the program code comprises the computer-readable file and is configured to identify the data destination location associated with the tracking tool from the computer-readable file.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the computer-readable file further comprises the data structure.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user, to determine that the tracking tool is authorized to run from the computer-readable file.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user, to determine that the user has provided consent for the tracking tool.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user to:<claim-text>determine that the user has not provided consent for the tracking tool; and</claim-text><claim-text>responsive to determining the user has not provided the consent for the tracking tool, obtain the consent from the user.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A method comprising:<claim-text>receiving, by computing hardware, a Hypertext Transfer Protocol (HTTP) request to render a webpage; and</claim-text><claim-text>responsive to receiving the HTTP request, sending, by the computing hardware, a HTTP response comprising a script to a computing device associated with a user,</claim-text><claim-text>wherein the computing device is configured to execute, within a browser and during a rendering of the webpage, the script to perform operations comprising:<claim-text>identifying a source script attempting to execute;</claim-text><claim-text>identifying the source script is configured to invoke a tracking tool based on information on the tracking tool found embedded in the script; and</claim-text><claim-text>responsive to identifying the source script is configured to invoke the tracking tool:<claim-text>determining a location associated with the user;</claim-text><claim-text>determining a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location;</claim-text><claim-text>determining a data destination location associated with the tracking tool based on the information embedded in the script;</claim-text><claim-text>determining that the data destination location associated with the tracking tool is the prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool involving processing certain data from executing.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the script further performs operations comprising, after disabling the functionality, permitting the source script to execute to invoke the tracking tool for the webpage.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> further comprising:<claim-text>receiving, by the computing hardware, a second Hypertext Transfer Protocol (HTTP) request to render the webpage; and</claim-text><claim-text>responsive to receiving the second HTTP request, sending, by the computing hardware, a second HTTP response comprising the script to a second computing device associated with a second user,</claim-text><claim-text>wherein the second computing device is configured to execute, within a second browser and during a second rendering of the webpage, the script to perform operations comprising:<claim-text>identifying the source script attempting to execute;</claim-text><claim-text>identifying the source script is configured to invoke the tracking tool based on the information on the tracking tool found embedded in the script; and</claim-text><claim-text>responsive to identifying the source script is configured to invoke the tracking tool:<claim-text>determining a second location associated with the second user;</claim-text><claim-text>determining a second prohibited data destination location based on the data structure mapping the second location associated with the second user to the second prohibited data destination location;</claim-text><claim-text>determining the data destination location associated with the tracking tool based on the information embedded in the script;</claim-text><claim-text>determining that the data destination location associated with the tracking tool is not the second prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permitting the tracking tool to execute for the webpage.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein permitting the tracking tool to execute for the webpage comprises permitting the source script to execute to invoke the tracking tool.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the script is configured to determine the location associated with the user based on at least one of (a) a geographical location of the user, (b) a network address associated with the user, (c) browser information on the user, (d) a language associated with the user, or (e) consent data associated with the user.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the data destination location associated with the tracking tool is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives the data, or (c) a location of a computing device or a storage device that stores the data.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A non-transitory computer-readable medium having computer-executable instructions that are stored thereon, the computer-executable instructions executable by one or more processing devices for performing operations comprising:<claim-text>scanning a webpage to identify a tracking tool that is associated with the webpage;</claim-text><claim-text>determining a data destination location that is associated with the tracking tool, wherein the determining step is based on at least one of (a) a location for a computing device that invokes the tracking tool, (b) a location of a computing device that receives data via the tracking tool, or (c) a location of a computing device or a storage device that stores the data; and</claim-text><claim-text>generating program code, wherein the program code is configured to:<claim-text>determine a location associated with a user who is associated with a rendering of the webpage;</claim-text><claim-text>determine a prohibited data destination location based on a data structure mapping the location associated with the user to the prohibited data destination location;</claim-text><claim-text>determine that the data destination location associated with the tracking tool is the prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is the prohibited data destination location, perform at least one of disabling the tracking tool from executing or disabling functionality of the tracking tool configured for processing the data from executing.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the program code is further configured to:<claim-text>determine a second location associated with a second user who is associated with a second rendering of the webpage;</claim-text><claim-text>determine a second prohibited data destination location based on the data structure mapping the second location associated with the user to the second prohibited data destination location;</claim-text><claim-text>determine that the data destination location associated with the tracking tool is not the second prohibited data destination location; and</claim-text><claim-text>responsive to determining that the data destination location associated with the tracking tool is not the second prohibited data destination location, permit the tracking tool to execute.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the operations further comprise generating a computer-readable file comprising an identifier for the tracking tool and an identifier for the data destination location associated with the tracking tool, wherein the program code comprises the computer-readable file and is configured to identify the data destination location associated with the tracking tool from the computer-readable file.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the computer-readable file further comprises the data structure.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user, to determine that the tracking tool is authorized to run from the computer-readable file.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user, to determine that the user has provided consent for the tracking tool.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the program code is configured, prior to determining the location associated with the user to:<claim-text>determine that the user has not provided consent for the tracking tool; and</claim-text><claim-text>responsive to determining the user has not provided the consent for the tracking tool, obtain the consent from the user.</claim-text></claim-text></claim></claims></us-patent-application>