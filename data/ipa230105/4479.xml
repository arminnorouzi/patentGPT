<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004480A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004480</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17825467</doc-number><date>20220526</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2021-108831</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>36</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3636</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>11</main-group><subgroup>3664</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">SIMULATION SYSTEM, METHOD FOR SIMULATION SYSTEM, AND NON-TRANSITORY COMPUTER-READABLE STORAGE MEDIUM STORING SIMULATION PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>OMRON CORPORATION</orgname><address><city>Kyoto-shi</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>IWAMURA</last-name><first-name>Shintaro</first-name><address><city>Kyoto-shi</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>OHNUKI</last-name><first-name>Haruna</first-name><address><city>Kyoto-shi</city><country>JP</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>OMRON CORPORATION</orgname><role>03</role><address><city>Kyoto-shi</city><country>JP</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Provided is a simulation technique that allows the program verification to be more efficiently performed. A simulation system includes: a simulator that executes simulation of an operation of one or more devices; a data input unit that obtains one or more execution times in the simulation, positional information of each one of objects in the simulation, and a value of each one of one or more variables referred to by a program to operate the devices; a data recorder that stores, as a first log, positional information of the objects and value of the variables for each of the one or more execution times in a manner that positional information and value are associated with each other; and a displayer that displays positional information of the objects and value of the variables for each of the one or more execution times included in first log.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="104.31mm" wi="148.08mm" file="US20230004480A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="212.85mm" wi="142.58mm" orientation="landscape" file="US20230004480A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="182.88mm" wi="150.88mm" file="US20230004480A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="208.20mm" wi="141.05mm" orientation="landscape" file="US20230004480A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="207.43mm" wi="95.93mm" orientation="landscape" file="US20230004480A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="200.49mm" wi="157.73mm" file="US20230004480A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="221.40mm" wi="142.58mm" orientation="landscape" file="US20230004480A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="221.49mm" wi="142.24mm" orientation="landscape" file="US20230004480A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="220.05mm" wi="140.63mm" orientation="landscape" file="US20230004480A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="63.75mm" wi="142.32mm" file="US20230004480A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="222.42mm" wi="80.18mm" orientation="landscape" file="US20230004480A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="236.47mm" wi="142.75mm" orientation="landscape" file="US20230004480A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="209.63mm" wi="147.49mm" orientation="landscape" file="US20230004480A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="198.37mm" wi="147.83mm" orientation="landscape" file="US20230004480A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="204.55mm" wi="158.75mm" orientation="landscape" file="US20230004480A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="159.94mm" wi="113.11mm" file="US20230004480A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="182.12mm" wi="157.82mm" file="US20230004480A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="164.17mm" wi="96.18mm" file="US20230004480A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading><heading id="h-0002" level="1">Field of the Invention</heading><p id="p-0002" num="0001">The present disclosure relates to a simulation system, more particularly to a program debugging feature.</p><heading id="h-0003" level="1">Description of the Background Art</heading><p id="p-0003" num="0002">Computer-assisted simulations have been applied to various technical fields. Such simulations may be a great help for preliminary discussions and considerations of devices and apparatuses even before they are ready to be used.</p><p id="p-0004" num="0003">Japanese Patent Laying-Open No. 2021-045797 describes an apparatus usable for the simulations. This apparatus is provided with a first behavior calculator and a second behavior calculator. The first behavior calculator calculates the behavior of a first target disposed in a virtual space that corresponds to a first device mounted with an accessory device. The second behavior calculator calculates the behavior of a second target disposed in a virtual space that corresponds to a second device mounted with an accessory device. It is further described in this literature that, for each one of predetermined time steps, the first behavior calculator calculates the behavior of the first target corresponding to the first device mounted with the accessory device in the relevant time step, and the second behavior calculator calculates the behavior of the accessory device mounted on the first device on the basis of the calculated behavior of the first target (refer to the &#x201c;Abstract&#x201d;).</p><heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading><p id="p-0005" num="0004">The technique described in Japanese Patent Laying-Open No. 2021-045797, may demand that the simulations be repeatedly reproduced in order to verify the programs to operate the devices. This apparatus, therefore, may often require a great deal of time for the program verification. Thus, a simulation technique that allows the program verification to be more efficiently performed is required.</p><p id="p-0006" num="0005">The present disclosure has been made in view of the above background, and an object in an aspect is to provide a simulation technique that allows the program verification to be more efficiently performed.</p><p id="p-0007" num="0006">In an embodiment of this disclosure, a simulation system is provided. The simulation system includes: a simulator configured to execute a simulation of an operation of one or more devices; a data input unit configured to obtain one or more execution times in the simulation, positional information of each one of one or more objects in the simulation, and a value of each one of one or more variables referred to by a program to operate the one or more devices; a data recorder configured to store, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and a displayer configured to display the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</p><p id="p-0008" num="0007">As disclosed herein, the simulation system may present the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times. This may allow a user to check both of the object position and variable value referred to by the program for each of the execution times of the simulation. In case, for example, the position or the operation of the object at an execution time A is not intended, the user can immediately check the variable value at the execution time A (can easily find a problem of the program) and thereby can debug the program efficiently.</p><p id="p-0009" num="0008">In the simulation system disclosed herein, the simulator is configured to reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log. The displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</p><p id="p-0010" num="0009">As disclosed herein, the simulation system may reproduce the simulation while stopping the simulation for each of the execution times.</p><p id="p-0011" num="0010">In the simulation system disclosed herein, the simulator is configured to reversely reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log. The displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</p><p id="p-0012" num="0011">As disclosed herein, the simulation system may reversely reproduce the simulation while stopping the simulation for each of the execution times. For example, a user can more closely follow the operation of the program by slightly rewinding the problematic simulation scene.</p><p id="p-0013" num="0012">The simulation system disclosed herein further includes a data differential extractor configured to extract a differential between the first log and data previously recorded. The data recorder is configured to store the differential.</p><p id="p-0014" num="0013">As disclosed herein, the simulation system can save the memory capacity of the log by storing only the differential.</p><p id="p-0015" num="0014">In the simulation system disclosed herein, the data input unit further includes a feature that obtains one or more time stamps in a real environment, positional information of one or more objects in the real environment, and a value of one or more variables referred to by the program to operate the one or more devices in the real environment. The data recorder further includes a feature that stores, as a second log, the positional information of the one or more objects in the real environment and the value of the one or more variables referred to by the program to operate the one or more devices in the real environment for each of the one or more time stamps in the real environment in a manner that the positional information and the value are associated with each other.</p><p id="p-0016" num="0015">As disclosed herein, the simulation system can obtain the log in the real environment as well as the log in the simulation.</p><p id="p-0017" num="0016">The simulation system disclosed herein further includes a synchronizer configured to allow an execution time of the first log and an execution time of the second log to correspond to each other. The displayer is configured to display the first log and the second log at a same execution time.</p><p id="p-0018" num="0017">As disclosed herein, the simulation system may synchronize and display the execution time of the first log in the simulation and the execution time of the second log in the real environment in a manner that the first and second logs are comparable to each other.</p><p id="p-0019" num="0018">In the simulation system disclosed herein, the displayer is configured to display a graph of the value of the one or more variables for each of the one or more execution times included in the first log.</p><p id="p-0020" num="0019">As disclosed herein, the simulation system can intuitively display any change in the value of the one or more variables using the graph.</p><p id="p-0021" num="0020">In the simulation system disclosed herein, the displayer is configured to display an operation of the program while reproducing the operation based on the value of the one or more variables for each of the one or more execution times included in the first log.</p><p id="p-0022" num="0021">The simulation system disclosed herein may present, to a user, the program status for each of the one or more execution times based on the value of the one or more variables.</p><p id="p-0023" num="0022">In the simulation system disclosed herein, the displayer is configured to display a screen of the simulation for each of the one or more execution times in the simulation and a flowchart of the program for each of the one or more execution times in the simulation. The displayer is configured to highlight and display a process on the flowchart currently executed for each of the one or more execution times in the simulation.</p><p id="p-0024" num="0023">As disclosed herein, the simulation system may simultaneously present, to a user, the simulation screen and the currently executed process on the flowchart.</p><p id="p-0025" num="0024">In the simulation system disclosed herein, the simulator further includes a feature that receives an input for selection of a variable having a value to be traced for each of the one or more execution times from the one or more variables included in the program.</p><p id="p-0026" num="0025">As disclosed herein, the simulation system allows a user to select a variable that needs to be traced.</p><p id="p-0027" num="0026">In the simulation system disclosed herein, the simulator further includes a feature that receives an input for setting a reproduction starting time and a reproduction ending time of the simulation.</p><p id="p-0028" num="0027">As disclosed herein, the simulation system can receive the input for setting the reproduction starting time and the reproduction ending time of the simulation.</p><p id="p-0029" num="0028">In the simulation system disclosed herein, the data recorder is configured to record a cycle and step count when the program is executed as an execution time in the simulation.</p><p id="p-0030" num="0029">As disclosed herein, the simulation system can record the cycle and step count when the program is executed as the execution time in the simulation.</p><p id="p-0031" num="0030">In another embodiment of this disclosure, a method executable by a simulation system is provided. The method includes: executing a simulation of an operation of one or more devices; obtaining one or more execution times in the simulation, positional information of one or more objects in the simulation, and a value of one or more variables referred to by a program to operate the one or more devices; storing, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and displaying the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</p><p id="p-0032" num="0031">According to the method disclosed herein, the positional information of the one or more objects and the value of the one or more variables may be both presented for each of the one or more execution times. This may allow a user to check both of the object position and variable value referred to by the program for each of the execution times of the simulation.</p><p id="p-0033" num="0032">In yet another embodiment of this disclosure, a non-transitory computer-readable medium comprising instructions is provided. The instructions, when executed by a simulation system, cause the simulation system to: execute a simulation of an operation of one or more devices; obtain one or more execution times in the simulation, positional information of one or more objects in the simulation, and a value of one or more variables referred to by a program to operate the one or more devices; store, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and display the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</p><p id="p-0034" num="0033">As disclosed herein, the positional information of the one or more objects and the value of the one or more variables may be both presented for each of the one or more execution times. This may allow a user to check both of the object position and variable value referred to by the program for each of the execution times of the simulation.</p><p id="p-0035" num="0034">The foregoing and other objects, features, aspects and advantages of the present invention will become more apparent from the following detailed description of the present invention when taken in conjunction with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating an example of a device whose operation can be simulated by a simulation system according to an embodiment.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating an example of simulation being executed by simulation system <b>500</b>.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating an example of a unit configuration of a control system <b>2</b> including devices to which a simulation technique according to the embodiment is applicable.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating an example of a hardware configuration of device <b>100</b>.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating an example of functional configurations of simulation system <b>500</b>.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a first example of ongoing simulation.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a second example of ongoing simulation.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a third example of ongoing simulation.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating a first example of data stored in repository <b>570</b>.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram illustrating a second example of data stored in repository <b>570</b>.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram illustrating a first example of a debug screen in simulation system <b>500</b>.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagram illustrating a second example of the debug screen in simulation system <b>500</b>.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram illustrating a third example of the debug screen in simulation system <b>500</b>.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram illustrating a fourth example of the debug screen in simulation system <b>500</b>.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of a simulation recording process by simulation system <b>500</b>.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a flowchart illustrating an example of the debugging process by simulation system <b>500</b>.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart illustrating an example of a comparison process for between a program simulation result by simulation system <b>500</b> and a program execution result in a real environment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading><p id="p-0053" num="0052">Embodiments of the technical idea according to the present disclosure are hereinafter described with reference to the accompanying drawings. In the description below, like components are illustrated with the same reference signs. Also, they are referred to likewise and have similar functional features. Such components, therefore, will not be repeatedly described in detail.</p><p id="p-0054" num="0053">&#x3c;A. Example of Application&#x3e;</p><p id="p-0055" num="0054">An exemplified scene to which the present invention is applied is described referring to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>.</p><p id="p-0056" num="0055">(a. Device Targeted for Simulation)</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a diagram illustrating an example of a device whose operation can be simulated by a simulation system according to an embodiment. A simulation system <b>500</b> according to this embodiment (see <figref idref="DRAWINGS">FIG. <b>5</b></figref>) may simulate the operation of an optional device used in factory automation (FA) in plants and the like. Simulation system <b>500</b> may simulate the operation of robot arms, belt conveyers, rotary knives, sensors and any other optional device(s), and the operations of combinations of these.</p><p id="p-0058" num="0057">A device <b>150</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a multifunction device including a conveyer <b>151</b> and a rotary knife <b>154</b>. Device <b>150</b> has a cutting feature that allows a sheet <b>158</b> carried on conveyer <b>151</b> to be cut in a predetermined length. Device <b>150</b> includes the following components; conveyer <b>151</b>, a motor <b>152</b>, a motor controller <b>153</b>, rotary knife <b>154</b>, a motor <b>155</b>, a motor controller <b>156</b>, and a sensor <b>157</b>.</p><p id="p-0059" num="0058">Conveyer <b>151</b> transports sheet <b>158</b>. Motor <b>152</b> is connected to a main shaft serving to rotate the conveyer and drives conveyer <b>151</b>. Motor controller <b>153</b> controls the speed or torque of motor <b>152</b>.</p><p id="p-0060" num="0059">Rotary knife <b>154</b> includes a rotatable roller and a knife attached onto this roller. As a result of the roller being rotated, the knife cuts sheet <b>158</b> carried on conveyer <b>151</b>. Motor <b>155</b> is connected to the roller of rotary knife <b>154</b> and drives rotary knife <b>154</b>. Motor controller <b>156</b> controls the speed or torque of motor <b>155</b>.</p><p id="p-0061" num="0060">Sensor <b>157</b> detects a cutting position <b>159</b> on sheet <b>158</b>. Rotary knife <b>154</b> cuts the sheet at cutting position <b>159</b> detected by sensor <b>157</b>.</p><p id="p-0062" num="0061">Motor controllers <b>153</b> and <b>156</b> and sensor <b>157</b> may be connected to a programmable logic controller (PLC) <b>200</b> (see <figref idref="DRAWINGS">FIG. <b>3</b></figref>). In this case, PLC <b>200</b> may read a signal from sensor <b>157</b> and control rotary knife <b>154</b> based on the read signal. PLC <b>200</b> controls device <b>150</b> on the basis of a program installed therein.</p><p id="p-0063" num="0062">Simulation system <b>500</b> reproduces, in an ongoing simulation, the operation of program-installed PLC <b>200</b> and the operation of device <b>150</b> controlled by PLC <b>200</b>. Thus, a user may debug the program of the PLC by checking the operation of device <b>150</b> in the simulation. In an aspect, the program that can be simulated by simulation system <b>500</b> may be an IEC program. The IEC program is a program that conforms to the IEC 61131-3 standards. This program includes a ladder program, structured text (ST), and the like.</p><p id="p-0064" num="0063">(b. Functional Features of Simulation System)</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a diagram illustrating an example of simulation being executed by simulation system <b>500</b>. Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, functional features of simulation system <b>500</b> are hereinafter described. Simulation system <b>500</b> includes a simulation recording feature and a program debugging feature using a recorded simulation result. The description is given below to the features of simulation system <b>500</b> using device <b>150</b> as an example.</p><p id="p-0066" num="0065">(b-1. Simulation Recording Feature)</p><p id="p-0067" num="0066">First, the simulation recording feature is described. As described, simulation system <b>500</b> reproduces the operation of program-installed PLC <b>200</b> and the operation of device <b>150</b> controlled by PLC <b>200</b>, in a simulation using a three-dimensional (3D) space.</p><p id="p-0068" num="0067">At the time, simulation system <b>500</b> records a simulation log <b>250</b>. Simulation log <b>250</b> contains positional information <b>252</b> of an object in the 3D space for each execution time (or execution timing) of the program, and also contains a variable value <b>254</b> of the program for each execution time. The object described herein in the 3D space may include, for example, a device in the 3D space, a component(s) constituting the device, a work, any other optional object(s), and a combination(s) of these items.</p><p id="p-0069" num="0068">In an aspect, the execution time (or execution timing) may be defined by the number of command steps of the program and the number of times when the program is repeatedly executed (cycles). The step may refer to one command of the program or commands in one row of the program entered in the editor (one command of the ladder program, commands in one row of ST entered in the editor, or the like). When one command or commands in one row of the program (one command of the ladder program, commands in one row of ST entered in the editor, or the like) has been executed, the program may be regarded as having proceeded by one step. Intervals between the steps may be determined by the command cycles of PLC <b>200</b>. An example is given below, in which the program contains commands for 10 steps. In this case, the program has been executed once (one cycle) at a point of time when execution of the commands for 10 steps is completed, and the program has been repeatedly executed 10 times (cycles) at a point of time when execution of the commands for 100 steps is completed. In another aspect, the execution time (or execution timing) may be defined by an optional time interval (one second, 100 milliseconds, or the like) determined beforehand.</p><p id="p-0070" num="0069">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, simulation system <b>500</b> records positional information <b>252</b> of the object in the 3D space and variable value <b>254</b> of the program at a certain execution time (3420 cycles, 118 steps) as simulation log <b>250</b> in a manner that they are associated with each other.</p><p id="p-0071" num="0070">Positional information <b>252</b> of the object in the 3D space contains the positional information of each of one or more objects present in the 3D space. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, positional information <b>252</b> of the object in the 3D space may contain the angle of a main shaft <b>240</b> (shaft of the conveyer connected to motor <b>152</b>), the angle of a driven shaft <b>245</b> (roller of rotary knife <b>154</b>), a cutting position <b>248</b> (blade position), and positions of the other objects.</p><p id="p-0072" num="0071">Variable value <b>254</b> of the program includes values of one or more variables referred to by a program <b>253</b> installed in PLC <b>200</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, variable value <b>254</b> of the program includes values of GEAROMPOS1_STARTSYNC, GEAROMPOS1_INSYNC, MC_Axis000.Act.Pos, MC_Axis001.Act.Pos, and values of other variables.</p><p id="p-0073" num="0072">(b-2. Debugging Feature)</p><p id="p-0074" num="0073">Next, the debugging feature is described. On the basis of simulation log <b>250</b>, simulation system <b>500</b> may reproduce the simulation and then display a simulation scene on a screen <b>251</b> for each step.</p><p id="p-0075" num="0074">Screen <b>251</b> includes a display <b>260</b> of the 3D space, a display <b>265</b> of the program, positional information <b>252</b> of the object in the 3D space per execution time, and variable value <b>254</b> of the program per execution time.</p><p id="p-0076" num="0075">Simulation system <b>500</b> includes a feature that reproduces or reversely reproduces the simulation while pausing the simulation for each step on the basis of an operation input from a user.</p><p id="p-0077" num="0076">For example, a simulation scene is assumed represent a first execution time. In this case, screen <b>251</b> presents display <b>260</b> of the 3D space, display <b>265</b> of the program, positional information <b>252</b> of the object in the 3D space, and variable value <b>254</b> of the program at the first execution time.</p><p id="p-0078" num="0077">For example, the simulation scene is assumed to have proceeded (or returned) by one step from the first execution time to a second execution time based on an operation input from a user. In this case, screen <b>251</b> presents display <b>260</b> of the 3D space, display <b>265</b> of the program, positional information <b>252</b> of the object in the 3D space, and variable value <b>254</b> of the program at the second execution time. In an aspect, display <b>265</b> of the program may include a state of execution of the program to which variable value <b>254</b> of the program has been assigned.</p><p id="p-0079" num="0078">By referring to screen <b>251</b>, a user can check display <b>260</b> of the 3D space, display <b>265</b> of the program, positional information <b>252</b> of the object in the 3D space, and variable value <b>254</b> of the program at the same time. Therefore, the user may easily debug the program while checking the operation of device <b>150</b>.</p><p id="p-0080" num="0079">&#x3c;B. System Configuration&#x3e;</p><p id="p-0081" num="0080">Next, referring to <figref idref="DRAWINGS">FIGS. <b>3</b> to <b>5</b></figref>, the whole structural features of a system to be simulated by simulation system <b>500</b>, hardware configurations of a device that operates as simulation system <b>500</b>, and functional configurations of simulation system <b>500</b> are hereinafter described.</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a diagram illustrating an example of a unit configuration of a control system <b>2</b> including devices to which a simulation technique according to this embodiment is applicable. Device <b>150</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be actualized as part of control system <b>2</b>.</p><p id="p-0083" num="0082">Control system <b>2</b> includes, for example, PLC <b>200</b>, an IO remote terminal <b>5</b> and servo motor drivers <b>531</b> and <b>532</b> that are connected to PLC <b>200</b> through a field network <b>22</b>, a robot controller <b>310</b>, and IO devices disposed in the field (a sensor <b>6</b>, encoders <b>236</b>, <b>238</b>, and the like).</p><p id="p-0084" num="0083">PLC <b>200</b> includes a computing unit <b>13</b> that executes main computing processes, one or more IO units <b>14</b>, and a special unit <b>17</b>. These units are configured to transmit and receive data to and from one another through a system bus <b>81</b> and receive power supply from a power supply unit <b>12</b>. A device <b>100</b> for simulation use is connectable to computing unit <b>13</b>.</p><p id="p-0085" num="0084">Device <b>100</b> may operate as simulation system <b>500</b>. Device <b>100</b> may install, in computing unit <b>13</b>, a program whose operation has been verified by the simulation. Computing unit <b>13</b> may control each device in control system <b>2</b> on the basis of the installed program. Device <b>100</b> may be connected to computing unit <b>13</b> through a network <b>80</b>.</p><p id="p-0086" num="0085">IO unit <b>14</b> collects detected values <b>61</b>, <b>237</b> and <b>239</b> from the IO devices including sensor <b>6</b> and encoders <b>236</b> and <b>238</b>. For example, sensor <b>6</b> may be sensor <b>157</b> that detects cutting position <b>159</b> of sheet <b>158</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Encoders <b>236</b> and <b>238</b> may be attached to motor <b>152</b> that drives conveyer <b>151</b> or motor <b>155</b> that drives rotary knife <b>154</b>. The detected values from the IO devices is set (written in) to corresponding bits of a memory of IO unit <b>14</b>.</p><p id="p-0087" num="0086">Computing unit <b>13</b> executes computations of the control program using values collected by IO unit <b>14</b> and sets (writes in) values of an obtained result to corresponding bits in IO unit <b>14</b>. A peripheral device(s) or the IO devices are operated with reference to the bit values in IO unit <b>14</b>. Thus, PLC <b>200</b> can control robot, conveyer, or the like, which are to be controlled, by transmitting and receiving data to and from the IO devices and the peripheral device(s) through IO unit <b>14</b>.</p><p id="p-0088" num="0087">Special unit <b>17</b> has features unsupported by IO unit <b>14</b>, including input and output of analog data, temperature control, communication through a particular communication system.</p><p id="p-0089" num="0088">For example, robot controller <b>310</b>, servo motor drivers <b>531</b> and <b>532</b>, IO remote terminal <b>5</b>, and the like may be connected to field network <b>22</b>.</p><p id="p-0090" num="0089">As with IO unit <b>14</b>, IO remote terminal <b>5</b> basically carries out typical processes associated with inputs and outputs. Specifically, IO remote terminal <b>5</b> includes one or more IO units <b>53</b> and a communication coupler <b>52</b> used to carry out processes associated with data transmission in field network <b>22</b>. These units are configured to transmit and receive data to and from one another through an IO remote terminal bus <b>51</b>.</p><p id="p-0091" num="0090">Servo motor drivers <b>531</b> and <b>532</b> are connected to computing unit <b>13</b> through field network <b>22</b> and drive servo motors <b>41</b> and <b>42</b> in accordance with command values received from computing unit <b>13</b>. Specifically, servo motor drivers <b>531</b> and <b>532</b> receive, from PLC <b>200</b>, command values including a position command value, a speed command value and a torque command value, at constant time intervals, for example, control periods. Computing unit <b>13</b> may generate these command values based on detected values <b>237</b> and <b>239</b> from encoders <b>236</b> and <b>238</b>. In an aspect, servo motors <b>41</b> and <b>42</b> may be used as motor <b>155</b> that drives rotary knife <b>154</b>.</p><p id="p-0092" num="0091">Computing unit <b>13</b> refers to the detected values from the IO devices described earlier and runs a predetermined control program. Thus, computing unit <b>13</b> may allow a robot hand <b>210</b> to perform handling of a work, for example, picking up, placing and pressing down the work.</p><p id="p-0093" num="0092">Specifically, computing unit <b>13</b> generates a control command <b>211</b> for the robot arm and a control command <b>222</b> for robot hand <b>210</b> and outputs these control command signals to robot hand <b>210</b> through robot controller <b>310</b>. Computing unit <b>13</b>, at the time of generating control command <b>211</b>, may refer to a value indicative of the status of robot hand <b>210</b> in addition to detected values <b>61</b> of the IO devices described earlier. The robot arm may include an optional number of servo motors, for example, servo motors <b>1301</b> to <b>1304</b>.</p><p id="p-0094" num="0093">The whole control system <b>2</b> may be targeted for simulation by simulation system <b>500</b>. Otherwise, only a part of configurations included in control system <b>2</b> may be targeted for simulation by simulation system <b>500</b>.</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram illustrating an example of a hardware configuration of device <b>100</b>. Device <b>100</b> may operate as simulation system <b>500</b>. In an aspect, simulation system <b>500</b> may be a system including a plurality of devices <b>100</b> or including at least a part of hardware configurations of device <b>100</b>. Otherwise, simulation system <b>500</b> may be a virtual machine on a cloud platform including at least a part of hardware configurations of device <b>100</b>.</p><p id="p-0096" num="0095">Device <b>100</b> includes, as its principal components, an operating system (OS), a processor <b>102</b> that executes a program on the OS, a main memory <b>104</b> that provides a working area in which data required for processor <b>102</b> to run the program is stored, an operation unit <b>106</b> (operation input unit) through which a keyboard and/or a mouse are manipulated by a user, a display <b>109</b>, indicators, an output unit <b>108</b> that outputs a processing result like a printing result, a network interface <b>110</b> connected to different networks including network <b>80</b>, an optical drive <b>112</b>, a local communication interface <b>116</b> that communicates with an external device(s), and a storage <b>111</b>. These components are interconnected through an internal bus <b>118</b> in a manner that they are allowed to communicate data to and from one another.</p><p id="p-0097" num="0096">Device <b>100</b> includes optical drive <b>112</b>. Programs may be read through this optical drive from a computer-readable recording medium <b>114</b> and then installed into storage <b>111</b>. Examples of computer-readable recording medium <b>114</b> may include optical recording media in which computer-readable programs are non-transitorily stored (for example, a digital versatile disc (DVD) or the like).</p><p id="p-0098" num="0097">The programs to be executed by device <b>100</b> may be installed into device <b>100</b> through computer-readable recording medium <b>114</b> or may be installed into device <b>100</b> through network interface <b>110</b> from a server device or the like (not illustrated) on a network.</p><p id="p-0099" num="0098">Storage <b>111</b> includes for example, a hard disk drive (HDD) or a flash solid state drive (SSD), and stores a program(s) executed by processor <b>102</b>. Specifically, storage <b>111</b> stores an OS <b>120</b> and an integrated developing environment <b>130</b>. Integrated developing environment <b>130</b> may be actualized in the form of an application that operates on OS <b>120</b>.</p><p id="p-0100" num="0099">Integrated developing environment <b>130</b> provides the functional features of simulation system <b>500</b> described referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In other words, the features of simulation system <b>500</b> can be actualized by processor <b>102</b> executing integrated developing environment <b>130</b> loaded in main memory <b>104</b>.</p><p id="p-0101" num="0100">In an aspect, the simulation recording feature and debugging feature described referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref> may be actualized as add-in features of integrated developing environment <b>130</b>.</p><p id="p-0102" num="0101">In an aspect, device <b>100</b> may actualize the features of integrated developing environment <b>130</b>, in whole or in part, using an application specific integrated circuit (ASIC), a field-programmable gate array (FPGA), or the like.</p><p id="p-0103" num="0102"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a diagram illustrating an example of functional configurations of simulation system <b>500</b>. The functional configurations illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> may be actualized as program components. In this case, the functional configurations may be allowed to operate, as software, on hardware of device <b>100</b>.</p><p id="p-0104" num="0103">Simulation system <b>500</b> may include, as its functional configurations, a 3D shape displayer <b>510</b>, a PLC simulator <b>520</b>, an IEC program editor <b>530</b>, a variable memory graph displayer <b>540</b>, a data manager <b>550</b>, a real device-simulation data comparator <b>560</b>, and a repository <b>570</b>.</p><p id="p-0105" num="0104">3D shape displayer <b>510</b> renders the simulation in the 3D space on a display. To this end, 3D shape displayer <b>510</b> includes a 3D shape reader <b>511</b>, a 3D shape renderer <b>512</b>, and a 3D memory displayer <b>513</b>.</p><p id="p-0106" num="0105">3D shape reader <b>511</b> reads a CAD file <b>580</b> used in the simulation and converts the read CAD file <b>580</b> into a form that can be rendered by 3D shape renderer <b>512</b>. In an aspect, 3D shape reader <b>511</b> may read CAD file <b>580</b> from storage <b>111</b>. In another aspect, 3D shape reader <b>511</b> may read CAD file <b>580</b> input from outside through network interface <b>110</b>, optical drive <b>112</b>, or local communication interface <b>116</b>.</p><p id="p-0107" num="0106">3D shape renderer <b>512</b> displays the object in the 3D space (data obtained from 3D shape reader <b>511</b>) and the motion of the object on display <b>109</b>. The object in the 3D space may include a work or the like in addition to the devices included in control system <b>2</b>. For example, 3D shape renderer <b>512</b> exhibits display <b>260</b> of the 3D space on display <b>109</b>.</p><p id="p-0108" num="0107">3D memory displayer <b>513</b> displays, on display <b>109</b>, positional information <b>252</b> of the object in the 3D space per execution time. Further, 3D memory displayer <b>513</b> reads simulation log <b>250</b> from repository <b>570</b> and reproduces the simulation recorded in the past. In an aspect, 3D memory displayer <b>513</b> may use the rendering feature of 3D shape renderer <b>512</b> at the time of reproducing the simulation recorded in the past. In an aspect, 3D memory displayer <b>513</b> may render all of the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>11</b> to <b>14</b></figref>.</p><p id="p-0109" num="0108">PLC simulator <b>520</b> executes the program installed in PLC <b>200</b> in the ongoing simulation. To this end, PLC simulator <b>520</b> includes a step executor <b>521</b>. In an aspect, PLC simulator <b>520</b> may include a display feature used at the time of reproduction of the simulation. In this case, PLC simulator <b>520</b> may render all of the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>11</b> to <b>14</b></figref>.</p><p id="p-0110" num="0109">Step executor <b>521</b> executes the program for each step. Step executor <b>521</b> may reproduce or reversely reproduce, for each step, simulation log <b>250</b> recorded in repository <b>570</b>. Further, step executor <b>521</b> display, on display <b>109</b>, variable value <b>254</b> of the program per execution time. 3D shape displayer <b>510</b> may update the display of the object in the 3D space based on the number of times when the program is executed (number of cycles) and a position at which the program is executed (step position) obtained from step executor <b>521</b>.</p><p id="p-0111" num="0110">IEC program editor <b>530</b> receives an operation input for editing of the program through operation unit <b>106</b>. In an aspect, step executor <b>521</b> may carry out the simulation by immediately reflecting any program change by IEC program editor <b>530</b>.</p><p id="p-0112" num="0111">Variable memory graph displayer <b>540</b> may display a graph <b>1310</b> and the like indicative of changes of the variable value (see <figref idref="DRAWINGS">FIG. <b>13</b></figref>) on display <b>109</b> based on variable memory <b>572</b> recorded in repository <b>570</b>.</p><p id="p-0113" num="0112">Data manager <b>550</b> manages simulation log <b>250</b>. To this end, data manager <b>550</b> includes a data input unit <b>551</b>, a data reader <b>552</b>, a data differential extractor <b>553</b>, and a data differential recorder <b>554</b>. In an aspect, data manager <b>550</b> may acquire recording settings of the simulation through operation unit <b>106</b>. The recording settings of the simulation include, for example, designating the object(s) to be recorded, designating the variable(s) to be recorded, and designating the duration of the simulation being executed. Data manager <b>550</b> may record simulation log <b>250</b> based on the obtained settings. In an aspect, the duration of the simulation being executed may be set based on the starting time and ending time of the simulation. In another aspect, the duration of the simulation being executed may be set based on the numbers of steps and of cycles of the program when the program starts and the numbers of steps and of cycles of the program when the program ends.</p><p id="p-0114" num="0113">Data input unit <b>551</b> acquires, from 3D shape displayer <b>510</b>, positional information <b>252</b> of the object in the 3D space per execution time. Data reader <b>552</b> acquires, from PLC simulator <b>520</b>, variable value <b>254</b> of the program per execution time.</p><p id="p-0115" num="0114">Data reader <b>552</b> transmits data stored in a 3D simulation memory <b>571</b> to 3D shape displayer <b>510</b> at the time of debugging (when the recorded simulation is reproduced). Similarly, data reader <b>552</b> transmits data stored in variable memory <b>572</b> to PLC simulator <b>520</b> at the time of debugging.</p><p id="p-0116" num="0115">Data differential extractor <b>553</b> extracts a differential per execution time of data acquired by data input unit <b>551</b> (positional information <b>252</b> of the object in the 3D space and variable value <b>254</b> of the program). Specifically, data differential extractor <b>553</b> compares positional information <b>252</b> of the object in the 3D space at the first execution time against positional information <b>252</b> of the object in the 3D space at the second execution time to extract a differential between these pieces of positional information of the object. Similarly, data differential extractor <b>553</b> compares variable value <b>254</b> of the program at the first execution time against variable value <b>254</b> of the program at the second execution time to extract a differential between these variable values.</p><p id="p-0117" num="0116">Data differential recorder <b>554</b> stores, as part of simulation log <b>250</b>, the extracted differential between the positions of the object in 3D simulation memory <b>571</b>. Data differential recorder <b>554</b> stores, as part of simulation log <b>250</b>, the extracted differential between the variable values in variable memory <b>572</b>.</p><p id="p-0118" num="0117">If pieces of positional information <b>252</b> of the object in all of the 3D spaces and all of the program variable values <b>254</b> are stored in repository <b>570</b> for each step, simulation log <b>250</b> may certainly contain an enormous volume of data. Therefore, data differential extractor <b>553</b> and data differential recorder <b>554</b> store only a differential to the previous record in repository <b>570</b> and thereby save the memory capacity of repository <b>570</b>.</p><p id="p-0119" num="0118">Real device-simulation data comparator <b>560</b> compares the results of program execution in the simulation and in a real environment. To this end, real device-simulation data comparator <b>560</b> includes a synchronizer <b>561</b>, a data comparator <b>562</b>, and a displayer <b>563</b>.</p><p id="p-0120" num="0119">In an aspect, based on a signal or the like obtained from a camera-captured image or a sensor, PLC simulator <b>520</b> may output, to data manager <b>550</b>, a time stamp, positional information of the object per execution time, and variable value of the program in the real environment in a manner that these pieces of information are associated with one another. Real device-simulation data comparator <b>560</b> reproduces simulation log <b>250</b> stored in repository <b>570</b> and a log in the real environment (not illustrated) and may thereby compare the results of program execution in the simulation and in the real environment.</p><p id="p-0121" num="0120">Synchronizer <b>561</b> makes cycles in the simulation and in the real environment coincide with each other. Specifically, synchronizer <b>561</b> associates the execution time in the simulation (cycles and steps) with the execution time in the real environment (times stamp or steps and cycles of the program in the real environment).</p><p id="p-0122" num="0121">Data comparator <b>562</b> compares the results of program execution in the simulation and in the real environment at the same execution time.</p><p id="p-0123" num="0122">Displayer <b>563</b> may display the results of program execution in the simulation and in the real environment at the same execution time. In an aspect, displayer <b>563</b> may display, on display <b>109</b>, a differential between the results of program execution in the simulation and in the real environment. In another aspect, displayer <b>563</b> may highlight and display a differential between the results of program execution in the simulation and in the real environment. This may help a user to easily correct the program in accordance with the real environment.</p><p id="p-0124" num="0123">Repository <b>570</b> records simulation log <b>250</b>. Repository <b>570</b> includes 3D simulation memory <b>571</b> and variable memory <b>572</b>. In an aspect, repository <b>570</b> may be a repository of a version management system.</p><p id="p-0125" num="0124">3D simulation memory <b>571</b> stores, for each step, positional information <b>252</b> of the object in the 3D space associated with the execution time.</p><p id="p-0126" num="0125">Variable memory <b>572</b> stores, for each step, variable value <b>254</b> of the program associated with the execution time.</p><p id="p-0127" num="0126">Repository <b>570</b> may record an execution log of the program in the real environment. In this case, repository <b>570</b> stores, for each step, the positional information of the object in the real environment associated with the execution time in the real environment. Likewise, repository <b>570</b> stores, for each step, the variable value of the program in the real environment associated with the execution time in the real environment.</p><p id="p-0128" num="0127">&#x3c;C. Steps of Recording Simulation Log&#x3e;</p><p id="p-0129" num="0128">Next, referring to <figref idref="DRAWINGS">FIGS. <b>6</b> to <b>10</b></figref>, steps of recording simulation log <b>250</b> by simulation system <b>500</b> are described. In the examples illustrated in <figref idref="DRAWINGS">FIGS. <b>6</b> to <b>10</b></figref>, simulation system <b>500</b> records simulation log <b>250</b> of device <b>150</b>.</p><p id="p-0130" num="0129"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a diagram illustrating a first example of ongoing simulation. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, simulation system <b>500</b> is executing a program <b>611</b> in the simulation. The motion and the position of each object are reproduced in a 3D space <b>601</b>. 3D space <b>601</b> includes the objects in the 3D space at an execution time (1920 cycles, 118 steps). The execution time (1920 cycles, 118 steps) may be rephrased as a point in time when PLC <b>200</b> completed the execution of program <b>611</b> 1920 times and PLC <b>200</b> completed the execution of 118 steps of program <b>611</b>.</p><p id="p-0131" num="0130">Simulation system <b>500</b> stores, in repository <b>570</b>, the positional information of the object in 3D space <b>601</b> and the variable value of the program at each execution time as simulation log <b>250</b> every time when PLC <b>200</b> executes program <b>611</b> for one step in the simulation. Specifically, simulation system <b>500</b> stores, in repository <b>570</b>, differential information indicative of any differential to the previous record.</p><p id="p-0132" num="0131">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, simulation system <b>500</b> stores, in repository <b>570</b>, positional information <b>602</b> of the object in the 3D space and a variable value <b>612</b> of the program at an execution time (1920 cycles, 118 steps) as simulation log <b>250</b>.</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram illustrating a second example of ongoing simulation. The example illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref> indicates that the execution of program <b>611</b> has proceeded by one step from the example illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. 3D space <b>601</b> includes the objects in the 3D space at an execution time (1920 cycles, 119 steps).</p><p id="p-0134" num="0133">Since PLC <b>200</b> has executed program <b>611</b> by one step in the simulation, simulation system <b>500</b> stores, in repository <b>570</b>, positional information <b>702</b> of the object in the 3D space and a variable value <b>712</b> of the program at the execution time (1920 cycles, 119 steps) as simulation log <b>250</b>.</p><p id="p-0135" num="0134">At the time, &#x201c;GEAROMPOS1_INSYNC&#x201d; is the only difference between positional information <b>602</b> of the object in the 3D space and variable value <b>612</b> of the program at the execution time (1920 cycles, 118 steps) and positional information <b>702</b> of the object in the 3D space and variable value <b>712</b> of the program at the execution time (1920 cycles, 119 steps). In this case, simulation system <b>500</b> stores the differential value, &#x201c;GEAROMPOS1_INSYNC&#x201d; in repository <b>570</b> as simulation log <b>250</b>. Thus, simulation system <b>500</b> may save the memory capacity of repository <b>570</b> by storing, in this repository, the differential to previously recorded simulation log <b>250</b>.</p><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating a third example of ongoing simulation. The example illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> indicates that the execution of program <b>611</b> has proceeded by 1500 cycles from the example illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. 3D space <b>601</b> includes the objects in the 3D space at an execution time (3420 cycles, 118 steps).</p><p id="p-0137" num="0136">Simulation system <b>500</b> continues to store simulation log <b>250</b> in repository <b>570</b> every time when PLC <b>200</b> executes program <b>611</b> for one step in the simulation. At the time, simulation system <b>500</b> stores, in repository <b>570</b>, only the differential to previously recorded simulation log <b>250</b>.</p><p id="p-0138" num="0137">At a point in time illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, positional information <b>802</b> of the object in the 3D space and a variable value <b>812</b> of the program at an execution time further ahead by 1500 cycles (3420 cycles, 118 steps) from a point in time illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> are stored in repository <b>570</b> as simulation log <b>250</b>.</p><p id="p-0139" num="0138"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram illustrating a first example of data stored in repository <b>570</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, simulation log <b>250</b> is stored in repository <b>570</b>. Simulation log <b>250</b> includes an IEC variable value <b>901</b>, a robot variable value <b>902</b>, a step and cycle count <b>903</b> of the IEC program, and positional information <b>252</b> of the object in the 3D space.</p><p id="p-0140" num="0139">IEC variable value <b>901</b> and robot variable value <b>902</b> are included in variable value <b>254</b> of the program. IEC variable value <b>901</b> includes one or more variable values referred to by the program executed by PLC <b>200</b>. Robot variable value <b>902</b> includes a variable(s) and the like for control of robot hand <b>210</b>.</p><p id="p-0141" num="0140">Step and cycle count <b>903</b> of the IEC program includes the number of times when the program is repeatedly executed (cycles) and a step previously executed. Step and cycle count <b>903</b> of the IEC program is associated with positional information <b>252</b> of the object in the 3D space and variable value <b>254</b> of the program as the simulation execution time (or execution timing).</p><p id="p-0142" num="0141">IEC variable value <b>901</b>, robot variable value <b>902</b>, step and cycle count <b>903</b> of the IEC program, and positional information <b>252</b> of the object are stored in repository <b>570</b> for each step as differential information relative to simulation log <b>250</b>.</p><p id="p-0143" num="0142">In an aspect, it is unnecessary for simulation system <b>500</b> to store current simulation log <b>250</b> in repository <b>570</b> in the case of no differential between current simulation log <b>250</b> and simulation log <b>250</b> previously stored in repository <b>570</b>. In another aspect, in the case of no differential between current simulation log <b>250</b> and simulation log <b>250</b> previously stored in repository <b>570</b>, simulation system <b>500</b> may store step and cycle count <b>903</b> of the IEC program in repository <b>570</b> instead of storing in repository <b>570</b>, IEC variable value <b>901</b>, robot variable value <b>902</b>, and positional information <b>252</b> of the object in the 3D space.</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a diagram illustrating a second example of data stored in repository <b>570</b>. In the example illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, simulation log <b>250</b> of the program and a log <b>1050</b> of the program in the real environment are stored in repository <b>570</b>.</p><p id="p-0145" num="0144">Log <b>1050</b> in the real environment includes an IEC variable value <b>1011</b> in the real environment, a robot variable value <b>1012</b> in the real environment, a step and cycle count <b>1013</b> of the IEC program in the real environment, and positional information <b>1014</b> of the object in the real environment.</p><p id="p-0146" num="0145">IEC variable value <b>1011</b> in the real environment includes one or more variable values referred to by the program executed by PLC <b>200</b> in the real environment.</p><p id="p-0147" num="0146">Robot variable value <b>1012</b> in the real environment includes a variable and the like for control of robot hand <b>210</b> when the program is executed in the real environment.</p><p id="p-0148" num="0147">Step and cycle count <b>1013</b> of the IEC program in the real environment indicates an execution time when the program is executed in the real environment. In an aspect, step and cycle count <b>1013</b> of the IEC program in the real environment may include a time stamp calculated from, an execution cycle or the like of the program by PLC <b>200</b>. In another aspect, simulation system <b>500</b> may determine that a point in time when the operation of the device or work is detected by any sensor is the first step of the program in the real environment. Simulation system <b>500</b> can synchronize the execution timing of the program in the simulation with the execution timing of the program in the real environment by associating the first step of the program in the real environment with the first step of the program in the simulation.</p><p id="p-0149" num="0148">Positional information <b>1014</b> of the object in the real environment indicates the position of the object when the program is executed in the real environment. In an aspect, positional information <b>1014</b> of the object in the real environment may be detected with use of a camera (or a 3D camera), a sensor, and the like. Simulation log <b>250</b> and log <b>1050</b> in the real environment are referred to by real device-simulation data comparator <b>560</b>. Real device-simulation data comparator <b>560</b> may compare the execution results of the program in the simulation and in the real environment by referring to simulation log <b>250</b> and log <b>1050</b> in the real environment.</p><p id="p-0150" num="0149">In an aspect, simulation system <b>500</b> may generate a plurality of branches using a version management system and store simulation log <b>250</b> and log <b>1050</b> in the real environment in each of the branches.</p><p id="p-0151" num="0150">&#x3c;D. Program Debugging Steps&#x3e;</p><p id="p-0152" num="0151">Next, referring to <figref idref="DRAWINGS">FIGS. <b>11</b> to <b>14</b></figref>, steps of debugging the program using simulation system <b>500</b> are described. In the examples illustrated in <figref idref="DRAWINGS">FIGS. <b>11</b> to <b>14</b></figref>, simulation system <b>500</b> reproduces, for each step, simulation log <b>250</b> of device <b>150</b> recorded in the past.</p><p id="p-0153" num="0152"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a diagram illustrating a first example of a debug screen in simulation system <b>500</b>. A screen <b>1100</b> includes a simulation scene reproduced based on simulation log <b>250</b> of device <b>150</b> recorded in the past. Screen <b>1100</b> is displayed on display <b>109</b>. Screen <b>1100</b> may include an operational UI <b>1101</b> used to input optional operations, for example, reproduction, reverse reproduction and pausing of the simulation scene for each step, and stoppage of the simulation. This may allow a user to update the simulation scene for each step by manipulating operational UI <b>1101</b>.</p><p id="p-0154" num="0153">Sheet <b>158</b> uncut at a cutting position <b>1120</b> is displayed on screen <b>1100</b>. In this case, a user may look into what is causing any trouble of the program by reproducing the simulation scene after tracking the simulation scene back to a point little earlier using operational UI <b>1101</b> (for example, around a point in time when sheet <b>158</b> is cut at a cutting position <b>1130</b> previous to cutting position <b>1120</b>).</p><p id="p-0155" num="0154">For example, a screen <b>1100</b>A displays a scene before sheet <b>158</b> is cut at cutting position <b>1130</b>. A screen <b>1100</b>B displays a scene when sheet <b>158</b> is cut at cutting position <b>1130</b>. A screen <b>1100</b>C displays a scene after sheet <b>158</b> is cut at cutting position <b>1130</b>. It is known from screens <b>1100</b>A to <b>1100</b>C that a blade <b>1110</b> fails to reach cutting position <b>1120</b> of sheet <b>158</b> after sheet <b>158</b> is cut at cutting position <b>1130</b>. In other words, it is known that the rotating speed of driven shaft <b>245</b> is behind the speed at which sheet <b>158</b> is carried forward. In an aspect, simulation system <b>500</b> may display successive simulation scenes, like screens <b>1100</b>A to <b>1100</b>C at the same time on display <b>109</b>.</p><p id="p-0156" num="0155">Thus, a user may easily grasp a problem or the like in the layout and operations of the devices by reproducing or reversely reproducing the simulation screen for each step and correct the program based on the grasped problem.</p><p id="p-0157" num="0156"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a diagram illustrating a second example of the debug screen in simulation system <b>500</b>. A screen <b>1200</b> includes a simulation scene <b>1201</b> reproduced based on simulation log <b>250</b> of device <b>150</b> recorded in the past (display of the 3D space), a program <b>1202</b>, positional information <b>1203</b> of the object, and a variable value <b>1204</b> of the program. In an aspect, simulation system <b>500</b> (or PLC simulator <b>520</b>) may receive an operation input for selection of a variable to be traced. Based on the received operation input for selection of the variable to be traced, simulation system <b>500</b> (or PLC simulator <b>520</b>) may include only the value of variable to be traced into variable value <b>1204</b> of the program.</p><p id="p-0158" num="0157">A user may update simulation scene <b>1201</b> for each step by manipulating operational UI <b>1101</b> to reproduce or reversely reproduce the simulation screen. Every time when simulation scene <b>1201</b> is updated for each step, program <b>1202</b>, positional information <b>1203</b> of the object, and variable value <b>1204</b> of the program are updated likewise.</p><p id="p-0159" num="0158">For example, when a user finds a problem in simulation scene <b>1201</b>, the user may check simulation scene <b>1201</b> for a few steps before and after the problematic scene by manipulating operational UI <b>1101</b>. The user may further easily grasp a problem of the program by checking program <b>1202</b>, positional information <b>1203</b> of the object, and variable value <b>1204</b> of the program for a few steps before and after the problematic scene at the same time.</p><p id="p-0160" num="0159"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram illustrating a third example of the debug screen in simulation system <b>500</b>. A screen <b>1300</b> includes variable graph <b>1310</b> generated based on variable value <b>254</b> of the program recorded in the past and program <b>1320</b> whose status is reproduced based on variable value <b>254</b> of the program recorded in the past.</p><p id="p-0161" num="0160">Simulation system <b>500</b> may update each variable value displayed on program <b>1320</b> for each step. In an aspect, simulation system <b>500</b> may update variable graph <b>1310</b> and program <b>1320</b> based on the operation input from a user for step reproduction or reverse reproduction. For example, simulation system <b>500</b> may reproduce the program operation per execution time by assigning a variable(s) to the program. In yet another aspect, simulation system <b>500</b> may highlight and display any variable having a changed value on program <b>1320</b>.</p><p id="p-0162" num="0161">A user can easily grasp a problem of the program by checking the timing of change of each variable value and change in the program status (program operation) at the same time.</p><p id="p-0163" num="0162"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a diagram illustrating a fourth example of the debug screen in simulation system <b>500</b>. A screen <b>1400</b> includes a program <b>1410</b>, a program flowchart <b>1420</b>, and a variable graph <b>1430</b> generated based on variable value <b>254</b> of the program recorded in the past.</p><p id="p-0164" num="0163">Simulation system <b>500</b> may update each variable value displayed on program <b>1410</b> based on the operation input from a user for step reproduction or reverse reproduction. Simulation system <b>500</b> may highlight and display a currently executed process on flowchart <b>1420</b> based on the operation input from a user for step reproduction or reverse reproduction. Simulation system <b>500</b> may update each variable graph <b>1430</b> based on the operation input received from a user for step reproduction or reverse reproduction.</p><p id="p-0165" num="0164">Thus, a user can easily grasp a problem of the program by checking the timing of change of each variable value, change in the program status (program operation), and a process on the flowchart currently executed at the same time.</p><p id="p-0166" num="0165">In an aspect, elements included in the screens illustrated in <figref idref="DRAWINGS">FIGS. <b>11</b> to <b>14</b></figref> may be optionally combined and displayed on display <b>109</b>. For example, simulation system <b>500</b> may display, on display <b>109</b>, simulation scene <b>1201</b>, program <b>1320</b> whose status is reproduced based on variable value <b>254</b> of the program recorded in the past, flowchart <b>1420</b>, and variable graph <b>1430</b>.</p><p id="p-0167" num="0166">&#x3c;E. Flowchart&#x3e;</p><p id="p-0168" num="0167">Next, referring to <figref idref="DRAWINGS">FIGS. <b>15</b> to <b>17</b></figref>, simulation result recording process and debugging process by simulation system <b>500</b> are described. In an aspect processor <b>102</b> may read, from storage <b>111</b> into main memory <b>104</b>, a program for processing steps of <figref idref="DRAWINGS">FIGS. <b>15</b> to <b>17</b></figref> to be executed (an optional program of integrated developing environment <b>130</b>) and then execute the program. In another aspect, the processing steps in whole or in part may be actualized in the form of circuit elements combined to execute these steps.</p><p id="p-0169" num="0168"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a flowchart illustrating an example of a simulation recording process by simulation system <b>500</b>.</p><p id="p-0170" num="0169">In step S<b>1510</b>, simulation system <b>500</b> starts the simulation based on, for example, an operation input from a user for starting the simulation.</p><p id="p-0171" num="0170">In step S<b>1520</b>, simulation system <b>500</b> starts to record data in 3D simulation memory <b>571</b> and in variable memory <b>572</b>.</p><p id="p-0172" num="0171">In step S<b>1530</b>, simulation system <b>500</b> repeatedly carries out processes in step S<b>1540</b> and in subsequent steps until the simulation is completed.</p><p id="p-0173" num="0172">In step S<b>1540</b>, simulation system <b>500</b> obtains positional information <b>252</b> of the object in the 3D space and variable value <b>254</b> of the program for each step of the simulation (or of the program).</p><p id="p-0174" num="0173">In step S<b>1550</b>, simulation system <b>500</b> transmits the obtained data (simulation log <b>250</b>, positional information <b>252</b> of the object in the 3D space, and variable value <b>254</b> of the program) to data manager <b>550</b>. Data manager <b>550</b> commits the obtained data to repository <b>570</b>.</p><p id="p-0175" num="0174">In step S<b>1560</b>, simulation system <b>500</b> makes the simulation (or program) proceed to a subsequent step(s).</p><p id="p-0176" num="0175">In step S<b>1570</b>, simulation system <b>500</b> determines whether recording of the simulation is completed. In an aspect, simulation system <b>500</b> may determine that recording of the simulation is completed when data for designated cycles is all recorded. In another aspect, simulation system <b>500</b> may determine that recording of the simulation is completed when a designated flag is put up (or put down). In yet another aspect, simulation system <b>500</b> may determine that recording of the simulation is completed in response to receipt of an operation input for stoppage of the simulation from a user. Simulation system <b>500</b> ends the process when it is determined that recording of the simulation is completed (YES in step S<b>1570</b>). Otherwise (NO in step S<b>1570</b>), simulation system <b>500</b> makes the process proceed to step S<b>1530</b>. In an aspect, simulation system <b>500</b> may carry out the process of step S<b>1570</b> in step S<b>1530</b>.</p><p id="p-0177" num="0176">In order to record a program execution result in the real environment, simulation system <b>500</b> may similarly record the data as described thus far, except for use of camera-captured images, sensor signals, and the like.</p><p id="p-0178" num="0177"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a flowchart illustrating an example of the debugging process by simulation system <b>500</b>.</p><p id="p-0179" num="0178">In step S<b>1610</b>, simulation system <b>500</b> reproduces a problematic part in the simulation in response to an operation input from a user.</p><p id="p-0180" num="0179">In step S<b>1620</b>, simulation system <b>500</b> receives an operation input for selection of a variable to be traced. In an aspect, PLC simulator <b>520</b> or data manager <b>550</b> may include a feature that receives an operation input for selection of a variable to be traced.</p><p id="p-0181" num="0180">In step S<b>1630</b>, simulation system <b>500</b> receives an operation input for designating a starting time and an ending time of graph drawing. In an aspect, the starting time and ending time of graph drawing may be designated based on the numbers of cycles and steps of the program at the starting time and the numbers of cycles and steps of the program at the ending time. The processes of steps S<b>1620</b> and S<b>1630</b> may be carried out prior to step S<b>1610</b>.</p><p id="p-0182" num="0181">In step S<b>1640</b>, simulation system <b>500</b> displays, on display <b>109</b>, a graph showing a variable tracing result (corresponding to graph <b>1310</b> indicative of variable value changes). Simulation system <b>500</b> may display, on display <b>109</b>, a graph representing a designated period in response to the input for designating the starting time and ending time of graph drawing in step S<b>1630</b>.</p><p id="p-0183" num="0182">In step S<b>1650</b>, simulation system <b>500</b> displays, on display <b>109</b>, the program when a problem occurs. For example, simulation system <b>500</b> may display, on display <b>109</b>, the program (variable-inputted program) corresponding to an execution time (steps and cycles) of a relevant problematic simulation scene in response to the simulation scene being displayed on display <b>109</b> in step S<b>1610</b>.</p><p id="p-0184" num="0183">In step S<b>1660</b>, simulation system <b>500</b> determines whether an operation input for request of program correction has been received. When it is determined that the program correction request has been received (YES in step S<b>1660</b>), simulation system <b>500</b> makes the process proceed to step S<b>1670</b>. Otherwise (NO in step S<b>1660</b>), simulation system <b>500</b> makes the process proceed to step S<b>1680</b>.</p><p id="p-0185" num="0184">In step S<b>1670</b>, simulation system <b>500</b> reflects the correction in the program.</p><p id="p-0186" num="0185">In step S<b>1680</b>, simulation system <b>500</b> receives an operation input for reselection of the variable to be traced. For example, a user reselects the variable to be traced when the problematic part of the program displayed in step S<b>1650</b> fails to be identified, so that the user can search the problematic part of the program from a different perspective.</p><p id="p-0187" num="0186"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a flowchart illustrating an example of a comparison process for between a program simulation result by simulation system <b>500</b> and a program execution result in a real environment.</p><p id="p-0188" num="0187">In step S<b>1710</b>, simulation system <b>500</b> receives an operation input for condition settings to start the comparison. The comparison-start conditions include conditions under which execution times in the simulation and in the real environment are associated with each other. In an aspect, simulation system <b>500</b> may, for example, associate the timing of signal output in response to detection of a work or device operation using a particular sensor in the real environment with the execution time in the simulation (0 cycle, one step).</p><p id="p-0189" num="0188">In step S<b>1720</b>, simulation system <b>500</b> compares simulation log <b>250</b> and log <b>1050</b> in the real environment at the same execution time (with the same number of program cycles and steps). In an aspect, simulation system <b>500</b> may compare the variable values or pieces of positional information of the object included in each log or may compare both of these values and information.</p><p id="p-0190" num="0189">In step S<b>1730</b>, simulation system <b>500</b> determines whether a differential is found between simulation log <b>250</b> and log <b>1050</b> in the real environment. When it is determined that the differential is found between simulation log <b>250</b> and log <b>1050</b> in the real environment (YES in step S<b>1730</b>), simulation system <b>500</b> makes the process proceed to step S<b>1740</b>. Otherwise (NO in step S<b>1730</b>), simulation system <b>500</b> makes the process proceed to step S<b>1720</b>.</p><p id="p-0191" num="0190">In step S<b>1740</b>, simulation system <b>500</b> displays the name and value of a differential-identified variable and simulation information. The simulation information described herein includes a simulation scene(s) in differential-confirmed step. In an aspect, the simulation information may include positional information <b>252</b> of the object in the 3D space.</p><p id="p-0192" num="0191">In step S<b>1750</b>, simulation system <b>500</b> determines whether a comparison process ending request is received. For example, simulation system <b>500</b> may receive the comparison process ending request through operation unit <b>106</b> or network interface <b>110</b>. Simulation system <b>500</b> ends the process when it is determined that the comparison process ending request has been received (YES in step S<b>1750</b>). Otherwise (NO in step S<b>1750</b>), simulation system <b>500</b> makes the process proceed to step S<b>1720</b>.</p><p id="p-0193" num="0192">As described thus far, simulation system <b>500</b> according to this embodiment includes a feature that records variable value <b>254</b> of the program and positional information <b>252</b> of the object in the 3D space during the ongoing simulation in a manner that they are associated with each other per execution time. Simulation system <b>500</b> further includes a feature that performs per-step reproduction and reverse reproduction of the simulation using positional information <b>252</b> of the object in the 3D space and variable value <b>254</b> of the program. Simulation system <b>500</b> further includes a feature that displays variable value <b>254</b> of the program and positional information <b>252</b> of the object in the 3D space for each step. These features may allow a user to reproduce the simulation per step and easily identify a simulation scene(s) suggesting trouble with the operation of any device. Then, a user may easily debug the program by referring to variable value <b>254</b> of the program in any problematic simulation scene.</p><p id="p-0194" num="0193">Simulation system <b>500</b> further includes a feature that compares simulation log <b>250</b> and log <b>1050</b> in the real environment against each other. This may allow a user to easily grasp a problem of the program in the real environment or a problem of the layout of devices.</p><p id="p-0195" num="0194">&#x3c;F. Supplementary Note&#x3e;</p><p id="p-0196" num="0195">As described thus far, the embodiments disclosed herein include the following technical aspects.</p><heading id="h-0007" level="2">[Aspect 1]</heading><p id="p-0197" num="0196">The simulation system (<b>500</b>) including:</p><p id="p-0198" num="0197">a simulator (<b>520</b>) configured to execute a simulation of an operation of one or more devices;</p><p id="p-0199" num="0198">a data input unit (<b>551</b>) configured to obtain one or more execution times in the simulation, positional information (<b>252</b>) of each one of one or more objects in the simulation, and a value (<b>254</b>) of each one of one or more variables referred to by a program to operate the one or more devices;</p><p id="p-0200" num="0199">a data recorder (<b>554</b>) configured to store, as a first log (<b>250</b>), the positional information (<b>252</b>) of the one or more objects and the value (<b>254</b>) of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and</p><p id="p-0201" num="0200">a displayer configured to display the positional information (<b>252</b>) of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log (<b>250</b>).</p><heading id="h-0008" level="2">[Aspect 2]</heading><p id="p-0202" num="0201">The simulation system (<b>500</b>) according to aspect 1, wherein</p><p id="p-0203" num="0202">the simulator (<b>520</b>) is configured to reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log (<b>250</b>), and</p><p id="p-0204" num="0203">the displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log (<b>250</b>) for each of the execution times.</p><heading id="h-0009" level="2">[Aspect 3]</heading><p id="p-0205" num="0204">The simulation system (<b>500</b>) according to aspect 1 or 2, wherein</p><p id="p-0206" num="0205">the simulator (<b>520</b>) is configured to reversely reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log (<b>250</b>), and</p><p id="p-0207" num="0206">the displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log (<b>250</b>) for each of the execution times.</p><heading id="h-0010" level="2">[Aspect 4]</heading><p id="p-0208" num="0207">The simulation system (<b>500</b>) according to any one of aspects 1 to 3, further including a data differential extractor (<b>553</b>) configured to extract a differential between the first log (<b>250</b>) and data previously recorded,</p><p id="p-0209" num="0208">wherein</p><p id="p-0210" num="0209">the data recorder (<b>554</b>) is configured to store the differential.</p><p id="p-0211" num="0210">[Aspect 5]</p><p id="p-0212" num="0211">The simulation system (<b>500</b>) according to any one of aspects 1 to 4, wherein</p><p id="p-0213" num="0212">the data input unit (<b>551</b>) further includes a feature that obtains one or more time stamps in a real environment, positional information (<b>252</b>) of one or more objects in the real environment, and a value (<b>254</b>) of one or more variables referred to by the program to operate the one or more devices in the real environment, and</p><p id="p-0214" num="0213">the data recorder (<b>554</b>) further includes a feature that stores, as a second log, the positional information (<b>252</b>) of the one or more objects in the real environment and the value (<b>254</b>) of the one or more variables referred to by the program to operate the one or more devices in the real environment for each of the one or more time stamps in the real environment in a manner that the positional information and the value are associated with each other.</p><heading id="h-0011" level="2">[Aspect 6]</heading><p id="p-0215" num="0214">The simulation system (<b>500</b>) according to aspect 5, further including a synchronizer (<b>561</b>) configured to allow an execution time of the first log (<b>250</b>) and an execution time of the second log to correspond to each other,</p><p id="p-0216" num="0215">wherein</p><p id="p-0217" num="0216">the displayer is configured to display the first log (<b>250</b>) and the second log at a same execution time.</p><heading id="h-0012" level="2">[Aspect 7]</heading><p id="p-0218" num="0217">The simulation system (<b>500</b>) according to any one of aspects 1 to 6, wherein</p><p id="p-0219" num="0218">the displayer is configured to display a graph of the value of the one or more variables for each of the one or more execution times included in the first log (<b>250</b>).</p><heading id="h-0013" level="2">[Aspect 8]</heading><p id="p-0220" num="0219">The simulation system (<b>500</b>) according to any one of aspects 1 to 7, wherein</p><p id="p-0221" num="0220">the displayer is configured to display an operation of the program while reproducing the operation based on the value of the one or more variables for each of the one or more execution times included in the first log (<b>250</b>).</p><heading id="h-0014" level="2">[Aspect 9]</heading><p id="p-0222" num="0221">The simulation system (<b>500</b>) according to any one of aspects 1 to 8, wherein</p><p id="p-0223" num="0222">the displayer is configured to display a screen of the simulation for each of the one or more execution times in the simulation and a flowchart of the program for each of the one or more execution times in the simulation, and</p><p id="p-0224" num="0223">the displayer is configured to highlight and display a process on the flowchart currently executed for each of the one or more execution times in the simulation.</p><heading id="h-0015" level="2">[Aspect 10]</heading><p id="p-0225" num="0224">The simulation system (<b>500</b>) according to any one of aspects 1 to 9, wherein the simulator (<b>520</b>) further includes a feature that receives an input for selection of a variable having a value to be traced for each of the one or more execution times from the one or more variables included in the program.</p><heading id="h-0016" level="2">[Aspect 11]</heading><p id="p-0226" num="0225">The simulation system (<b>500</b>) according to any one of aspects 1 to 10, wherein the simulator (<b>520</b>) further includes a feature that receives an input for setting a reproduction starting time and a reproduction ending time of the simulation.</p><heading id="h-0017" level="2">[Aspect 12]</heading><p id="p-0227" num="0226">The simulation system (<b>500</b>) according to any one of aspects 1 to 11, wherein the data recorder is configured to record a cycle and step count when the program is executed as an execution time in the simulation.</p><heading id="h-0018" level="2">[Aspect 13]</heading><p id="p-0228" num="0227">A method executable by a simulation system (<b>500</b>), including:</p><p id="p-0229" num="0228">executing a simulation of an operation of one or more devices;</p><p id="p-0230" num="0229">obtaining one or more execution times in the simulation, positional information (<b>252</b>) of one or more objects in the simulation, and a value (<b>254</b>) of one or more variables referred to by a program to operate the one or more devices;</p><p id="p-0231" num="0230">storing, as a first log (<b>250</b>), the positional information (<b>252</b>) of the one or more objects and the value (<b>254</b>) of the one or more variables for each of the one or more execution times in a manner that the positional information (<b>252</b>) and the value (<b>254</b>) are associated with each other; and</p><p id="p-0232" num="0231">displaying the positional information (<b>252</b>) of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log (<b>250</b>).</p><heading id="h-0019" level="2">[Aspect 14]</heading><p id="p-0233" num="0232">A program causing one or more processors to execute the method according to aspect 13.</p><p id="p-0234" num="0233">Although the present invention has been described and illustrated in detail, it is clearly understood that the same is by way of illustration and example only and is not to be taken by way of limitation, the scope of the present invention being interpreted by the terms of the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A simulation system, comprising:<claim-text>a simulator configured to execute a simulation of an operation of one or more devices;</claim-text><claim-text>a data input unit configured to obtain one or more execution times in the simulation, positional information of each one of one or more objects in the simulation, and a value of each one of one or more variables referred to by a program to operate the one or more devices;</claim-text><claim-text>a data recorder configured to store, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and</claim-text><claim-text>a displayer configured to display the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the simulator is configured to reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log, and</claim-text><claim-text>the displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the simulator is configured to reversely reproduce the simulation while stopping the simulation for each of the one or more execution times based on the first log, and</claim-text><claim-text>the displayer is configured to display a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a data differential extractor configured to extract a differential between the first log and data previously recorded,<claim-text>wherein the data recorder is configured to store the differential.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the data input unit further includes a feature that obtains one or more time stamps in a real environment, positional information of one or more objects in the real environment, and a value of one or more variables referred to by the program to operate the one or more devices in the real environment, and</claim-text><claim-text>the data recorder further includes a feature that stores, as a second log, the positional information of the one or more objects in the real environment and the value of the one or more variables referred to by the program to operate the one or more devices in the real environment for each of the one or more time stamps in the real environment in a manner that the positional information and the value are associated with each other.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The simulation system according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising a synchronizer configured to allow an execution time of the first log and an execution time of the second log to correspond to each other,<claim-text>wherein the displayer is configured to display the first log and the second log at a same execution time.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the displayer is configured to display a graph of the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the displayer is configured to display an operation of the program while reproducing the operation based on the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the displayer is configured to display a screen of the simulation for each of the one or more execution times in the simulation and a flowchart of the program for each of the one or more execution times in the simulation, and</claim-text><claim-text>the displayer is configured to highlight and display a process on the flowchart currently executed for each of the one or more execution times in the simulation.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the simulator further includes a feature that receives an input for selection of a variable having a value to be traced for each of the one or more execution times from the one or more variables included in the program.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the simulator further includes a feature that receives an input for setting a reproduction starting time and a reproduction ending time of the simulation.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The simulation system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data recorder is configured to record a cycle and step count when the program is executed as an execution time in the simulation.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A method executable by a simulation system, comprising:<claim-text>executing a simulation of an operation of one or more devices;</claim-text><claim-text>obtaining one or more execution times in the simulation, positional information of one or more objects in the simulation, and a value of one or more variables referred to by a program to operate the one or more devices;</claim-text><claim-text>storing, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and</claim-text><claim-text>displaying the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein executing the simulation includes reproducing the simulation while stopping the simulation for each of the one or more execution times based on the first log, and<claim-text>further comprising displaying a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein executing the simulation includes reversely reproducing the simulation while stopping the simulation for each of the one or more execution times based on the first log, and<claim-text>further comprising displaying a screen of the simulation for each of the one or more execution times and the first log for each of the execution times.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>extracting a differential between the first log and data previously recorded; and</claim-text><claim-text>storing the differential.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising:<claim-text>obtaining one or more time stamps in a real environment, positional information of one or more objects in the real environment, and a value of one or more variables referred to by the program to operate the one or more devices in the real environment; and</claim-text><claim-text>storing, as a second log, the positional information of the one or more objects in the real environment and the value of the one or more variables referred to by the program to operate the one or more devices in the real environment for each of the one or more time stamps in the real environment in a manner that the positional information and the value are associated with each other.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, further comprising:<claim-text>allowing an execution time of the first log and an execution time of the second log to correspond to each other; and</claim-text><claim-text>displaying the first log and the second log at a same execution time.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising displaying a graph of the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable medium comprising instructions that, when executed by a simulation system, cause the simulation system to:<claim-text>execute a simulation of an operation of one or more devices;</claim-text><claim-text>obtain one or more execution times in the simulation, positional information of one or more objects in the simulation, and a value of one or more variables referred to by a program to operate the one or more devices;</claim-text><claim-text>store, as a first log, the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times in a manner that the positional information and the value are associated with each other; and</claim-text><claim-text>display the positional information of the one or more objects and the value of the one or more variables for each of the one or more execution times included in the first log.</claim-text></claim-text></claim></claims></us-patent-application>