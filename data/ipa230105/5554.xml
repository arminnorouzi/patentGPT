<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005555A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005555</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943128</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>34</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>26</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>24</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>3495</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>102</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>16</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>26</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>3472</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>24</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>29</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SAFETY AND CORRECTNESS DATA READING AND PROGRAMMING IN A NON-VOLATILE MEMORY DEVICE</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16624728</doc-number><date>20191219</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11443818</doc-number></document-id></parent-grant-document><parent-pct-document><document-id><country>WO</country><doc-number>PCT/IB2019/000474</doc-number><date>20190531</date></document-id></parent-pct-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943128</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Micron Technology, Inc.</orgname><address><city>Boise</city><state>ID</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Mondello</last-name><first-name>Antonino</first-name><address><city>Messina</city><country>IT</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Troia</last-name><first-name>Alberto</first-name><address><city>Munich</city><country>DE</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure relates to a method for improving the safety of the reading phase of a non-volatile memory device including at least an array of memory cells and with associated decoding and sensing circuitry and a memory controller, the method comprising:</p><p id="p-0002" num="0000">storing in a dummy row of said memory block at least a known pattern;</p><p id="p-0003" num="0000">performing some reading cycles changing the read trimming parameters up to the moment wherein said known value is read correctly;</p><p id="p-0004" num="0000">adopting the trimming parameters of the correct reading for the subsequent reading phases.</p><p id="p-0005" num="0000">The disclosure further relates to a memory device structured for implementing the above method.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="127.34mm" wi="158.75mm" file="US20230005555A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="160.61mm" wi="144.70mm" orientation="landscape" file="US20230005555A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="229.02mm" wi="155.02mm" orientation="landscape" file="US20230005555A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="227.58mm" wi="159.94mm" orientation="landscape" file="US20230005555A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="198.71mm" wi="127.93mm" orientation="landscape" file="US20230005555A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="151.89mm" wi="110.24mm" orientation="landscape" file="US20230005555A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="240.11mm" wi="159.00mm" orientation="landscape" file="US20230005555A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="168.23mm" wi="151.05mm" orientation="landscape" file="US20230005555A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">PRIORITY INFORMATION</heading><p id="p-0006" num="0001">This application is a Continuation of U.S. application Ser. No. 16/624,728, filed on Dec. 19, 2019, which will issue as U.S. Pat. No. 11,443,818 on Sep. 13, 2022, which is a National Stage Application under 35 U.S.C. &#xa7; 371 of International Application Number PCT/M2019/000474, filed on May 31, 2019, the contents of which are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0007" num="0002">The present disclosure generally relates to memory devices, and more particularly relates to embodiments relating to safety and improved performances of data reading and programming in non-volatile memory device.</p><p id="p-0008" num="0003">Embodiments of the present disclosure relates more specifically to a method to retrim the setting of a memory component to improve the cross temp robustness of the memory device.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0009" num="0004">Memory devices are well known in the electronic field to store and allow accessing to digital information. In general, different kind of semiconductor memory devices may be incorporated into more complex systems including either non-volatile memory components as well as volatile memory components, for instance in so-called System-on-Chips (SoC) wherein the above-mentioned memory components are embedded.</p><p id="p-0010" num="0005">Nowadays, however, the need of Real Time Operative Systems, in particular for automotive applications requires SoC with more and more increased performances and efficiency and the known solutions partially satisfy these requirements but not at cost and yield effective.</p><p id="p-0011" num="0006">Non-volatile memory can provide persistent data by retaining stored data when not powered and can include NAND flash memory, NOR flash memory, <b>3</b>DXP memories, MRAMs, STTRAM and CBRAMs, among others. NAND flash has reduced erase and write times, and requires less chip area per cell, thus allowing greater storage density and lower cost per bit than NOR flash. However, the I/O interface of NAND flash does not provide a random-access external address bus. Rather, data must be read on a block-wise basis, with typical block sizes of hundreds to thousands of bits.</p><p id="p-0012" num="0007">Flash memory devices suffer temperature variation, in particular the increase of the temperature during their functioning. The reason is mainly due to the fact that when the floating gates forming the memory is biased in presence of a higher temperature may reach an energy level sufficient to allow a jump into the channel and the consequence is a charge lost. In other technologies using for instance charge traps, the high temperature accelerates the recombination and this means losing the stored info. These problems affect the safety and correctness of the data read from the memory device.</p><p id="p-0013" num="0008">An aim of the present disclosure is that of providing a Flash memory device and a reading method for Flash memory devices reducing the impact of age and temperature on the performances of the memory device thus reducing the risk to lose information.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0014" num="0009"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a schematic view of a system including a memory component associated to a controller exchanging data, address and control signals with the memory device;</p><p id="p-0015" num="0010"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic view of the memory component according to the present disclosure;</p><p id="p-0016" num="0011"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic layout view of an example of the memory component according to embodiments of the present disclosure;</p><p id="p-0017" num="0012"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic view of a memory block formed by a plurality of rows of the memory array according to one embodiment of the present disclosure;</p><p id="p-0018" num="0013"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic view of a group of address registers for a memory page in the memory component of the present disclosure;</p><p id="p-0019" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows in a schematic diagram the distribution of a well erased/programmed cell (1 bit/cell);</p><p id="p-0020" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram corresponding to <figref idref="DRAWINGS">FIG. <b>6</b></figref> reporting an enlarged distribution shifted toward the depletion state (negative Vth) due to aging, temperature and stress;</p><p id="p-0021" num="0016"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows in a block diagram the phases of a method according to the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0017">In the following detailed description, reference is made to the accompanying drawings that form a part hereof and in which is shown, by way of illustration, specific embodiments. In the drawings, like numerals describe substantially similar components throughout the several views. Other embodiments may be disclosed and structural, logical, and electrical changes may be made without departing from the scope of the present disclosure. The following detailed description is, therefore, not to be taken in a limiting sense.</p><p id="p-0023" num="0018">Several embodiments of the present disclosure are directed to memory devices, systems including memory devices and methods of operating memory devices avoiding the potential problems of aging, temperature and process drift during memory operation.</p><p id="p-0024" num="0019">In one embodiment of the present disclosure a new memory architecture is provided for an improved safety and performances of the data reading phase in the non-volatile memory device.</p><p id="p-0025" num="0020">More specifically, the present disclosure relates to a non-volatile memory device including at least an array of memory cells with a plurality of memory blocks;<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0021">at least a dummy row for each block for storing at least a known pattern;</li>        <li id="ul0002-0002" num="0022">a controller of the memory device;</li>        <li id="ul0002-0003" num="0023">sensing circuitry driven by the controller for reading the known pattern stored in the dummy row by performing some reading cycles and changing the read trimming parameters up to the moment wherein the value of said known pattern is read correctly.</li>    </ul>    </li></ul></p><p id="p-0026" num="0024">The known pattern is known to the memory controller.</p><p id="p-0027" num="0025">Moreover, the changed trimming parameter of the correct reading correspond to a set temperature value recorded in a programmable register at factory level.</p><p id="p-0028" num="0026">In said dummy row are also stored internal block variables of the reading and/or erasing phase. Those said internal block variables are parameters such as the reading pulses and/or the target voltages applied to the memory block during the reading phase.</p><p id="p-0029" num="0027">For a better understanding of the present disclosure, it should be noted that Flash memories typically use a basic storage element. For instance, a transistor as storage element is used in all technologies employing a floating gate, a charge trap, a split gate and the like. Other technologies like the <b>3</b>D XPoint memory or Phase Change Memory adopt another kind of basic storage element. However, in all cases there is a need to maintain in time the stored data and to read such a data in the faster manner.</p><p id="p-0030" num="0028">When a memory array is addressed, there may be one or more layers of address translation, for instance a translation between a logical address used by a host device and a physical address corresponding to a location in the memory array. Such a mechanism is very useful to implements advanced features like block wear leveling and or factory/on field block redundancy.</p><p id="p-0031" num="0029">Although uncommon, it may happen that a power loss occurs during an erase operation. In such scenario it is very important to have a mechanism that allows the detection of blocks not well erased or incompletely erased. An erase interruption is source of some problems:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0030">1) data can't be programmed because the memory block can show programmed bits;</li>    <li id="ul0003-0002" num="0031">2) the block can appear as erased but it has reliability, i.e. data retention issues;</li>    <li id="ul0003-0003" num="0032">3) the block can appear defective in certain locations due to depleted cells.</li></ul></p><p id="p-0032" num="0033">Since a not well erased block cannot be programmed, it would be extremely important to avoid any unexplained fail during a programming phase on a block wherein a power loss occurred.</p><p id="p-0033" num="0034">In some embodiments at each power-up and/or reset phase and/or on user demand all the blocks in the array are verified to determine if some of them are in a power loss condition. This can be done by verifying the presence of the known pattern in the above-mentioned dummy row.</p><p id="p-0034" num="0035">In case of a power loss:<ul id="ul0004" list-style="none">    <li id="ul0004-0001" num="0036">a warning message may reach the host device if a read operation of the status register is performed; and/or</li>    <li id="ul0004-0002" num="0037">an erase on such a block is done to recovery the whole block. This could happen automatically during the power on and/or when the problem is detected on host command. However, these measures do not prevent the problem.</li></ul></p><p id="p-0035" num="0038">Moreover, it may happen that temperature variations inside a same device may generate reading drifts called ghost temperature issue.</p><p id="p-0036" num="0039">The drawback connected to such temperature variations has an impact on the real bit distribution that is detected by the sense amplifiers as moved with respect to the ideal central value for which they have been programmed.</p><p id="p-0037" num="0040">Just to give a practical example, if the programming phase has been performed at &#x2212;40&#xb0; C., it may happen that at 120&#xb0; C. the reading results include many errors. This is a real issue for all chips incorporated into automotive devices wherein a raising of the temperature during the operation of a vehicle must be taken in consideration; moreover, a raise in temperature moves or enlarges either the distribution of the well erased/programmed cells to the left and/or to the right.</p><p id="p-0038" num="0041">Therefore, the reading phase of the memory device is most of the times performed in environments conditions similar to the original programming phase; this is true also for the erasing phase.</p><p id="p-0039" num="0042">A memory device may be defined a sort of &#x201c;real time&#x201d; device in the sense that if must release reliable data in all environment operation condition, no matter if it has been tested in the factory reporting an approval because of positive results of the test.</p><p id="p-0040" num="0043">Moreover, the drift due to temperature is further increased by the age of the device and this problem could be particularly delicate for memory devices incorporated into System-on-Chip driving autonomous vehicles.</p><p id="p-0041" num="0044"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a schematic example of a system <b>10</b> incorporating a flash memory device <b>100</b>. The system also includes a memory controller <b>101</b> that is coupled to the memory device <b>100</b>.</p><p id="p-0042" num="0045">The controller <b>101</b> is shown coupled to the memory device <b>100</b> over a data bus <b>105</b>, a control bus <b>106</b>, and an address bus <b>107</b>. In one embodiment, the data bus could be a 64 bit and/or 128 bit wide double data rate (DDR) bus.</p><p id="p-0043" num="0046">The system device <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> can be a host device or a System-on-Chip coupled to the memory component <b>100</b>, as will appear from the description of other embodiments of the present disclosure made with reference to other figures. In any case, a portion of the System-on-Chip <b>10</b> and the memory device <b>100</b> are realized on a respective die obtained by a different lithography process. In the following description by SoC it may be intended a portion of the whole system (e.g., the portion to which the memory device is coupled) or the system as a whole, e.g., the combination of the host device portion and the memory device.</p><p id="p-0044" num="0047">The memory component <b>100</b> is an independent structure but it is strictly associated to the host device or to the SoC structure. More particularly, the memory device <b>100</b> is associated and linked to the SoC structure partially overlapping such a structure while the corresponding semiconductor area of the SoC structure has been used for other logic circuits and for providing support for the partially overlapping structurally independent memory device <b>100</b> for instance through a plurality of pillars or other similar alternative connections such as bumping balls or with a technology similar to Flip-Chip.</p><p id="p-0045" num="0048">More specifically, with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the non-volatile memory component <b>100</b> includes an array <b>90</b> of Flash memory cells and a circuitry located around the memory array, as described in more detail below. The coupling between the SoC structure <b>10</b> and the memory component <b>100</b> is obtained by interconnecting a plurality of respective pads or pin terminals that are faced one toward the other in a circuit layout that keeps the alignment of the pads even if the size of the memory component is modified.</p><p id="p-0046" num="0049">In one embodiment of the present disclosure, the arrangement of the pads of the memory component has been realized on a surface of the memory component <b>100</b>, in practice on the top of the array. More specifically, the pads are arranged over the array so that, when the memory component <b>100</b> is reversed, its pads are faced to corresponding pads of the host or SoC structure <b>10</b>.</p><p id="p-0047" num="0050">At the end, the memory component <b>100</b> is manufactured according to the user's needs in a range of values that may vary according to the available technology, for instance from at least <b>128</b> Mbit to <b>512</b> Mbit or even more without any limitation for the applicant's rights. More specifically, the proposed external architecture allows to overpass the limit of the current eFlash (i.e. embedded flash technology) allowing the integration of bigger memory, as it can be 512 Mbit and/or 1 Gbit and/or more depending on the memory technology and technology node.</p><p id="p-0048" num="0051">The final configuration will be a face-to-face interconnection SoC/Flash Array with the sense amplifiers connected to the SoC in a Direct Memory Access configuration for user modes with high frequency accesses.</p><p id="p-0049" num="0052">The Direct Memory Access allows reducing the final latency that the SoC can experience when reading the data. Moreover, the final latency is also reduced by the block form factor, the sense amplifiers distribution between blocks, the selection of the comparison threshold in the sense amplifiers and the optimized path.</p><p id="p-0050" num="0053">For a better understanding of the principle of the present disclosure it should be noted that a direct memory access is a feature of computer systems that allows certain hardware subsystems to access main system memory (generally volatile such as random-access memory), independent of the CPU (Central Processing Unit).</p><p id="p-0051" num="0054">More Specifically, DMA is used when the CPU is using memory and it is typically occupied for some clock cycle of the read or write operation. Thus, whenever the I/O devices access the memory it takes a lot of time to get the data in and/or out of the memory.</p><p id="p-0052" num="0055">The I/O devices first initiates the transfer using DMA Controller, relinquishing the control of buses from the CPU, and then CPU does other operations while the transfer is in progress, and it finally receives an interrupt from the DMA controller when the operation is done, hence address or data buses can now be used by it for its internal operations. This feature is useful at any time that the CPU cannot keep up with the rate of data transfer, or when the CPU needs to perform work while waiting for a relatively slow I/O (Input or Output) data transfer. Many hardware systems use DMA, including disk drive controllers, graphics cards, network cards and sound cards.</p><p id="p-0053" num="0056">DMA is used according to the present disclosure for intra-chip data transfer in multi-core processors. The cores that have DMA channels can transfer data to and from the memory components with much less CPU overhead than cores without DMA channels. Similarly, a processing element inside a multi-core processor can transfer data to and from its local memory without occupying its processor time, allowing computation and data transfer to proceed in parallel.</p><p id="p-0054" num="0057">The direct memory access of the present disclosure employs boundary scan cells and sense amplifiers as a system and method for addressing direct memory access operation and locating the memory address to a specific DMA flash array. In this respect, a modified JTAG cell structure is implemented to allow enlarging the memory pages to be read in a direct access.</p><p id="p-0055" num="0058">With more specific reference to the example of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the main structure of the memory component <b>100</b> according to an embodiment of the present disclosure will be disclosed.</p><p id="p-0056" num="0059">The memory component <b>100</b> includes at least: an I/O circuit <b>5</b>, a micro-sequencer <b>3</b>, an array of memory cells <b>90</b>, voltage and current reference generators <b>7</b>, charge pumps <b>2</b> and decoding circuitry <b>8</b> located at the array periphery or below the array, sense amplifiers <b>9</b> and corresponding latches, a command user interface, for instance a CUI block <b>4</b>.</p><p id="p-0057" num="0060">The array of memory cells <b>90</b> includes non-volatile Flash memory cells. The cells can be erased in blocks instead of one byte at a time. Each erasable block of memory comprises a plurality of non-volatile memory cells arranged in a matrix of rows and columns. Each cell is coupled to an access line and/or a data line. The cells are programmed and erased by manipulating the voltages and timing on the access and data lines.</p><p id="p-0058" num="0061">To write and erase the memory cells of the Array <b>90</b> it is provided a dedicated logic circuit portion including a simplified Reduced Instruction Set Computer (RISC) controller or a Modify Finite State Machine or that is the logic circuit for handling the programming and erasing algorithms.</p><p id="p-0059" num="0062">To read the memory cells of the array <b>90</b> it is provided a dedicated circuit portion including an optimized Read Finite State Machine or RISC that is used to ensure high read performance, such as: branch prediction, fetch/pre-fetch, interrupt management, and so on. The error correction is left, as operation, to the SoC <b>10</b>; the additional bits are provided to the controller <b>101</b> to store any possible ECC syndrome associated with the page. The ECC cells allows the host controller to understand if corruption is happening in the data plus address content. The ECC allows the host also to correct the received data. the host is responsible to fix the data in the memory based on the correction made in the received data.</p><p id="p-0060" num="0063">The writing and erasing phases above reported are handled by the memory controller located inside the memory device, since the internal flash controller does not work in read operations that are driven by the host.</p><p id="p-0061" num="0064">Making now more specific reference to the example of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, in one embodiment of the present disclosure the memory array <b>90</b> is built as a collection of sub arrays <b>120</b>. In this manner, having smaller sectors if compared to known solutions the access time is significantly reduced and the whole throughput of the memory component is improved.</p><p id="p-0062" num="0065">The advantage of this architecture is that it is very scalable and expanding and/or reducing the density of the final device translated only in mirroring a sub-array and generating the connection.</p><p id="p-0063" num="0066">The host device or the System-on-Chip <b>10</b> normally includes more than one core and each core is coupled to a corresponding bus or channel for receiving and transferring data to the memory component <b>1</b>. Each sub-array <b>120</b> has access to a corresponding channel to communicate with a corresponding core of the System-on-Chip.</p><p id="p-0064" num="0067">The core of the host device can have access to a JTAG interface by using some internal pads. Such pads are high speed and have the capability to support the maximum frequency. Such pads however cannot manage analog voltage outside the flash array.</p><p id="p-0065" num="0068">In embodiments of the present disclosure a Direct Memory Access (DMA) allows to reduce the final latency that the SoC can experience when reading the data.</p><p id="p-0066" num="0069">To overcome the problems of flash memory devices embedded in System-on-Chips and obtaining a very low initial latency and high throughput, it has been designed a scalable, low-cost, effective and reliable memory apparatus and method involving completion of read operation with data, address and ECC by DMA flash array, ensuring that the data must be read from exactly the same memory location as the controller is asking for.</p><p id="p-0067" num="0070">Coming now to a closer look to the internal structure of the memory component <b>100</b> it should be noted that the architecture of the array <b>90</b> is built as a collection of sub arrays <b>120</b>, as shown schematically in <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0068" num="0071">Each sub array <b>120</b> is independently addressable inside the memory device <b>100</b>. Each sub-array <b>120</b> contains multiple memory blocks <b>160</b>, as depicted in <figref idref="DRAWINGS">FIGS. <b>3</b> and <b>4</b></figref>.</p><p id="p-0069" num="0072">In this manner, having smaller sectors if compared to known solutions the access time is significantly reduced and the whole throughput of the memory component is improved. The reduction of the initial latency time is at block level because the row and column lines, the read path associated latency and the external communication have been optimized.</p><p id="p-0070" num="0073">In the embodiments disclosed herewith the memory array <b>90</b> is structured with a number of sub-arrays <b>120</b> at least corresponding to the number of cores of the associated SoC <b>10</b> and, therefore to the number of corresponding communication channels. For instance, at least four memory sub arrays <b>120</b> one for each communication channel with a corresponding core of the SoC <b>10</b> are provided.</p><p id="p-0071" num="0074">The host device or the System-on-Chip <b>10</b> normally includes more than one core and each core is coupled to a corresponding bus or channel for receiving and transferring data to the memory component <b>100</b>.</p><p id="p-0072" num="0075">Therefore, in the present implementation each sub-array <b>120</b> has access to a corresponding channel to communicate with a corresponding core of the System-on-Chip <b>10</b>. The outcome of the memory blocks is driven directly to the SoC without using high power output buffers and optimizing the path.</p><p id="p-0073" num="0076">The advantage of this architecture is that it is very scalable, wherein expanding and/or reducing the density of the final device translates only in mirroring a sub-array and generating the connection or increasing the number of blocks of each subarray, that is the available density per core.</p><p id="p-0074" num="0077">Moreover, in one embodiment of the present disclosure each memory sub array <b>120</b> is structured in memory blocks <b>160</b> shown schematically in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0075" num="0078">Each independently addressable location of the blocks of each memory sub array <b>90</b> addresses an extended page <b>150</b> that will be also defined hereinafter with the term super page intending a double extended page.</p><p id="p-0076" num="0079">Said differently, the atomic page of <b>128</b> bits used in each sub-array <b>120</b> to fill the communication channel with the SoC device has been enlarged in the present implementation to contain the stored address and the ECC.</p><p id="p-0077" num="0080">As non-limiting example, this extended page <b>150</b> comprises a string including a first group of at least N Bits, for instance one-hundred-twenty-eight (128) Bit for the I/O data exchange with the SoC device <b>10</b> plus at least a second group of M Bits, for instance twenty-four (24) address Bit and a final or third group of at least R Bits, for instance sixteen (16) ECC Bit. The M address Bit (in the example the twenty-four address Bits) are sufficient to address up to 2 GigaBit of available memory space.</p><p id="p-0078" num="0081">According to the present disclosure, the outputs of the sense amplifiers SA prepare a double extended page at a time, i.e. a super-page <b>150</b> comprising a number of Bits given by the double combination of the above-mentioned three groups of data bits, address bits and ECC bits, according to the size of the memory array.</p><p id="p-0079" num="0082">In the specific but non-limiting example disclosed herewith each extended page <b>150</b> includes at least 168 Bit obtained by the combination of the above three groups of N+M+R=128+24+16 data, address and ECC Bit and each super-page is formed by a couple of extended pages, i.e. a group of 168&#xd7;2 Bits.</p><p id="p-0080" num="0083">Just to give a non-limiting numeric example, each row of a memory block <b>160</b> includes sixteen extended pages. Therefore, the resulting row includes 2688 Bit coming out from the combination of sixteen extended pages independently addressable and each including 168 Bit or, said differently, the combination of eight super-pages.</p><p id="p-0081" num="0084">Each memory block contains at least 256 rows and each row includes sixteen super pages of the above size. Each super page includes at least <b>168</b> Bits as a combination of data, addressing and ECC Bits. Therefore, each row of the memory array can contain up to sixteen double words of 32 bits each, plus the address and ECC syndrome spare bits per page.</p><p id="p-0082" num="0085">Just to give a numeric value, a super page is formed by 128+16+24=168 Bits and sixteen super pages per each row comprise 168*16=2688 bits.</p><p id="p-0083" num="0086">Therefore, each row <b>135</b> of a memory block <b>160</b> includes at least sixteen pages comprising a memory word plus the corresponding address Bits and the corresponding ECC Bits.</p><p id="p-0084" num="0087">Obviously, another size can be selected and the reported value are just for illustration purpose of a non-limiting example. The outcome of the blocks is driven directly by the host device or SoC <b>10</b> without using high power output buffers of the known solutions and optimizing the path thanks a modified and optimized JTAG interface.</p><p id="p-0085" num="0088">The outputs of the sense amplifiers SA per sub array <b>120</b> are latched by an internal circuit of a read interface. The memory structure can be expanded to allow multi-page read while shifting out the already read page.</p><p id="p-0086" num="0089">The sense amplifiers SA are connected directly to a modified JTAG cells, that will be later disclosed, so to integrate a JTAG structure and the sense amplifiers in a single circuit portion. This allows reducing as much as possible the delay in propagating the output of the memory array to the SoC.</p><p id="p-0087" num="0090">As previously said, the internal sense amplifiers <b>9</b> are preparing two pages of at least 128 bits plus address and ECC Bits for a total of 168 Bits and while the first page is ready to be shifted, internally it is performed a further read operation of a second page associated with the same address.</p><p id="p-0088" num="0091">This allows to prepare from five to eight double word, that are typical in the RTOS application allowing the sense amplifiers to execute a further internal read operation to prepare the second nibble or group of 168 Bits, if the system is structured with two pages of 168 Bits. This is the reason for having chosen a double page of 2&#xd7;128 bits plus corresponding addresses and ECC Bits.</p><p id="p-0089" num="0092">This second part of four double words is transferred to the output of the flash array <b>90</b>, using an additional enabling signal (i.e. an internal clock signal or an ADV signal) that transfers the content read at sense amplifier level to the host device or SoC device <b>10</b>. The signal names are load_data [0, 1]. . . there is no need of incrementing the address when using the super page.</p><p id="p-0090" num="0093">The combined string of data cells+address cells+ECC cells allows to implement the whole safety coverage of the communication channel according to the standard requirements of the rule ISO26262, because the host first corrects the data stream, if any, and then compares the sent address with the received one.</p><p id="p-0091" num="0094">Moreover, the ECC covers the whole bus communication (data cells+address cells), while the presence of the address cells provides the confidence that the data is coming exactly from the addressed location of the controller, i.e. if ADD==ADD<b>0</b>.</p><p id="p-0092" num="0095">A JTAG interface is adopted for the test of the memory component allowing the re-use of the testing tooling. The memory component of the present disclosure also comprises a JTAG logic including a JTAG interface.</p><p id="p-0093" num="0096">In more details, each memory array includes at least a JTAG interface receiving as inputs standard JTAG signals: TMS, TCK, TDI as well as data from a memory page, for instance the page schematically shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>. According to embodiments of the present disclosure, a flexible TDI signal is used. The flexibility is due to the fact that the number of parallel bits working as TDI are depending from a selected registers, i.e. the instruction register, the address register or the data register, etc.</p><p id="p-0094" num="0097">This JTAG interface produce as output data, addresses and control signals that are transferred to a memory address decoder and also to the internal flash controller to perform modify, testing, verification operations.</p><p id="p-0095" num="0098">The activity of the decoder is allowed by the mentioned charge pumps structured to keep secret the voltages and timings to manage the array. The decoding phase drives the data lines while the charge pumps provide the high voltage routed by the address decoder in the selected data lines.</p><p id="p-0096" num="0099">This decoder addresses the selected memory block. The address decoder is connected to the array to select the proper data lines, i.e. row and column for each super page. the read, modify and any other operations are using the address decoder to properly address bytes in the memory array.</p><p id="p-0097" num="0100">The memory blocks are connected to the sense amplifiers and the sense amplifiers of the read interface are connected to modified JTAG cells (not shown in the drawings) to integrate a JTAG structure and the sense amplifiers in a single circuit portion. This allows reducing as much as possible the delay in propagating the output of the memory array to the SoC.</p><p id="p-0098" num="0101">Each sub-array <b>120</b> contains multiple memory blocks. The sub arrays <b>120</b> serve each core of the host device and uses optimized block form factor circuitry to address the low latency.</p><p id="p-0099" num="0102">In this manner, having smaller sectors if compared to known solutions the access time is significantly reduced and the whole throughput of the memory component is improved.</p><p id="p-0100" num="0103">Each sub array <b>1120</b> is independently addressable inside the memory device <b>100</b>. Moreover, the memory array <b>90</b> is structured with at least four memory sub arrays <b>120</b> one for each communication channel with a corresponding core of the host device or SoC <b>10</b>. The host device or the System-on-Chip <b>10</b> normally includes more than one core and each core is coupled to a corresponding bus or channel for receiving and transferring data to the memory component <b>100</b>.</p><p id="p-0101" num="0104">Therefore, in the present implementation each sub-array <b>120</b> has access to a corresponding channel to communicate with a corresponding core of the System-on-Chip <b>10</b>.</p><p id="p-0102" num="0105">It should be further noted that each subarray <b>120</b> includes address registers connected to data buffer registers, similarly to an architecture used in a DRAM memory device.</p><p id="p-0103" num="0106">Moreover, according to one embodiment of the present disclosure, as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, at least a dummy row <b>200</b> is associated to each block <b>160</b> of the memory sub array <b>120</b>.</p><p id="p-0104" num="0107">This dummy row <b>200</b> is located outside the address space of the memory array <b>90</b> and is used for the optimization of the read, write and erase parameters. Moreover, this dummy row is used for erase robustness monitor, for good completion of modify operations and others purpose.</p><p id="p-0105" num="0108">According to another embodiment, the dummy row of a block <b>160</b> is provided in another block of the memory sub-array <b>120</b>.</p><p id="p-0106" num="0109">The presence of this dummy row allows storing the read parameters in a proper time and manner to use the monitor operation to optimize the further steps.</p><p id="p-0107" num="0110">Therefore, a main purpose of this dummy row <b>200</b> is that of tracking parameters that may be used during the read and erase phases of the memory component <b>100</b> and/or to store some parameters for discovering a possible occurred power loss.</p><p id="p-0108" num="0111">The dummy row <b>200</b> contains a pattern that is known to the controller <b>101</b> of the memory device <b>100</b>.</p><p id="p-0109" num="0112">Let's suppose to record in the dummy row <b>200</b> a known value like 0&#xd7;55 or 0&#xd7;AA in hexadecimal form. This value is particularly suitable since it includes the same amount of &#x201c;0&#x201d; logic values and &#x201c;1&#x201d; logic values that are stored inside the array in distinct flash memory cells, with two different threshold values. However, this does not mean that it is excluded the possibility to use multi-level technology, thus allowing to store more than two bits for each storage transistor or storage element.</p><p id="p-0110" num="0113">Since that value is known a priori also for the memory controller, the system will perform some reading cycles changing the read trimming parameters up to the moment wherein the value will be read correctly. The changed trimming parameter of the correct reading will correspond to a set temperature value recorded in the programmable register. In case of different storing technologies, such as for example the multilevel cell memory (N levels), the values to be stored must be chosen to cover all the N levels present in the memory array.</p><p id="p-0111" num="0114">Only when the trimming parameters set for the reading phase perfectly allow to retrieve the correct known value then the reading phase of the other memory blocks of the sub array <b>120</b> may be performed. In this case, the research of the optimized read parameter, corresponds to find out the best sampling point in that operating condition, as it happens when an eye diagram is used.</p><p id="p-0112" num="0115">According to one embodiment of the present disclosure, the temperature and aging drift affecting the memory array <b>90</b> may be detected by the memory component <b>100</b> itself using a stored reference.</p><p id="p-0113" num="0116">By using the drift information of the well-known pattern stored, it is possible to set the best parameters to be used on the next or any subsequent operation, including the programming phase. In particular, such information can be used for correctly trimming all the voltage values and the timing (i.e. signal shape) to be used in each phase of the read and/or erase algorithm.</p><p id="p-0114" num="0117">In general, the right level of voltage and timing to be used in each erase or programming phase must follow the technological guide line. Such guidelines are normally known for a given technology, since they may be provided by Flash cells technologist as a map between the level of aging and the associate values voltage/timing to be used.</p><p id="p-0115" num="0118">Let's now see the read, programming and/or erase procedures according to this methodology:</p><p id="p-0116" num="0119">The well known parameters are read from the dummy row <b>200</b> and elaborated by the internal controller in order to determine the best parameters to be used in the next steps. Then the read and program algorithm can start.</p><p id="p-0117" num="0120">If the parameters are not present in the dummy row <b>200</b> then it means that a power loss occurred. This event must be recovered by erasing the whole block. Otherwise the block cannot be correctly programmed or read and the host has to take care of this situation if the operation is not already an erase phase.</p><p id="p-0118" num="0121">During an erase pulse phase, the voltage and pulse duration can be set to fast and safe erase the cells in the block (according to the previous step).</p><p id="p-0119" num="0122">If the block is cycled (many program-erase cycles, estimated by using drift information) some appropriate strong voltages and pulses duration are used. Normally a block is erased by applying several erase pulses at different (negative for the gate voltage and/or positive for the body-source). This sequence is called staircase and is used to apply proper pulse to modify the content of the array. Sometimes, if the block is aged the staircase is bigger or lasts more time.</p><p id="p-0120" num="0123">Once an erase pulse is issued (as above) the erase cells status is verified by applying a proper cell gate voltage value to be used to perform an erase verify, with enough margin, to guarantee a well erased cell distribution. Also, here the drift information can be used to select the right erase verify values.</p><p id="p-0121" num="0124">For instance, <figref idref="DRAWINGS">FIG. <b>6</b></figref> shows in a schematic diagram the distribution of a good erased/programmed (1 bit/cell) cell. All the cell threshold population are correctly confined in the boundary assigned (i.e. programmed &#x2018;0&#x2019; or erased &#x2018;1&#x2019;). The steps #1 and #2 are repeated up to all the cells satisfy the erase verify criteria.</p><p id="p-0122" num="0125">Once all the cells are correctly (erased) verified, it is also checked if there are cells with a too low threshold. In the <figref idref="DRAWINGS">FIG. <b>6</b></figref> this is shown by the label depletion verify, DV.</p><p id="p-0123" num="0126">In case of depletion a soft-program operation is issued on the cells that need it. The parameters to be used to perform a soft-drift of the cells, in order to right place the thresholds inside the erase cell distribution can be chosen according the aging level of the cells.</p><p id="p-0124" num="0127">A wrong selection of such a parameter can cause a bad placement of the cells' threshold outside the erased distribution (over the erase verify value) and this would imply that the block must be erased again starting from the above step #<b>1</b> (this would be a time consuming).</p><p id="p-0125" num="0128">Once the erase is complete (the above phases are done) the well known pattern are written in the row <b>200</b> to be used on the next erase cycle. In particular, the pattern that was selected by the storing of the set values (0&#xd7;55, 0&#xd7;AA etc.) are programmed and verified (see the PV phase of <figref idref="DRAWINGS">FIG. <b>6</b></figref>) accordingly by using an appropriate program pulse which voltage and timing are depending on the current aging level of the block. The content of the dummy row <b>200</b> is also erased accordingly; that the flash controller has to restore it after the erase.</p><p id="p-0126" num="0129">By using the drift information and the number of erase pulses provided in the erase phase (bullet <b>1</b> above) it is possible to infer that a block is near to its end of life. This information could be used as warning for the customer or as flag for internal algorithm in order to trigger a possible block wear leveling or OFBR (On Field Block Redundancy) operation, if implemented.</p><p id="p-0127" num="0130"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram corresponding to <figref idref="DRAWINGS">FIG. <b>6</b></figref> but reporting an enlarged distribution due to aging, temperature and stress. With the aging, temperature and stress the distributions tend to enlarge and move. According to the methodology of the present disclosure it is possible to use the distribution enlargement to track the cells degradation and use this information to correct the next erase pulses. This permits to improve the reliability and the performances of the erase phase.</p><p id="p-0128" num="0131">The trimming sequence to perform a reading phase of the memory array at different temperatures or different aging of the memory devices may be detected in a lab and stored in a programmable register of the memory controller <b>101</b>.</p><p id="p-0129" num="0132">Similarly, a regulation of the parameters used during the erasing and programming phase may be performed in the same manner during actual operation.</p><p id="p-0130" num="0133">For the content of a correct reading phase it is not important the real temperature value at which the reading phase is performed. Such a temperature could be higher (even much higher) or lower if compared to the level of temperature at which the programming phase of the known value has been performed.</p><p id="p-0131" num="0134">The system is automatically protected by any thermal drift since the reading trimming parameters are selected after having performed the correct reading of the known sequence stored in the dummy row <b>200</b> and having set accordingly the trimming parameter for reading correctly that known value. This feature can be a capability left and driven to the host device since during the read phase there is no time to read in parallel the dummy row. The same applies before the reading phase is started due to the low initial latency that the present embodiments supports.</p><p id="p-0132" num="0135">The procedure allowing to identify the more suitable reading trimming parameters for a correct reading phase at a certain temperature value are not necessarily repeated at any reading phase. On the contrary, such a procedure may be performed periodically or, in a more appropriate manner, when possible problems are detected by the ECC bits.</p><p id="p-0133" num="0136">It happens for instance that an increased number of ECC bits is indicative of an excessive number of wrong reading from the memory device (e.g., when a number of bits corrected by the error correction engine exceeds a threshold number). In such a case, the system may automatically start the procedure for detecting a possible thermal drift or aging and a consequent need to change the trimming parameters.</p><p id="p-0134" num="0137">In one embodiment the above procedure could be triggered by a host command. In some embodiments the procedure may be triggered by a particular event, such as a temperature variation detection, for example.</p><p id="p-0135" num="0138">The dummy row <b>200</b> may be configured to store information indicative of a fail of the erase operation.</p><p id="p-0136" num="0139">The method of the present disclosure allows to properly perform the reading phase of the memory component <b>100</b>, or better of a memory block <b>160</b>.</p><p id="p-0137" num="0140">The method phases are schematically illustrated in the block diagram of <figref idref="DRAWINGS">FIG. <b>8</b></figref>.</p><p id="p-0138" num="0141">The method <b>800</b> for improving the safety of the reading phase of a non-volatile memory device including at least an array of memory cells and with associated decoding and sensing circuitry and a memory controller, the method comprising:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0142">storing in a dummy row of said memory block at least a known pattern;</li>        <li id="ul0006-0002" num="0143">performing some reading cycles changing the read trimming parameters up to the moment wherein said known value is read correctly;</li>        <li id="ul0006-0003" num="0144">adopting the trimming parameters of the correct reading for the subsequent reading phases.</li>    </ul>    </li></ul></p><p id="p-0139" num="0145">The above steps are shown in the respective squared blocks <b>810</b>, <b>820</b> and <b>830</b>.</p><p id="p-0140" num="0146">In one embodiment the known pattern has a large number of bit programmed (&#x2018;0&#x2019;) and erased (&#x2018;1&#x2019;) in equal number, for instance adopting an hexadecimal configuration of (0&#xd7;AA, 0&#xd7;55 etc.).</p><p id="p-0141" num="0147">Moreover, the regulation based on the dummy row content can involve the selection of the bias values of the cells to be read and/or the selection of a proper value to be used as read reference cell.</p><p id="p-0142" num="0148">Only when the trimming parameters set for the reading phase allow retrieving the correct known value then the reading phase of the other memory blocks of the sub array <b>120</b> is may be performed.</p><p id="p-0143" num="0149">Each sub array <b>120</b> can have its own blocks and he optimum parameters can even be different from one sub array to the other sub array and from block to block.</p><p id="p-0144" num="0150">The changed trimming parameters of the correct reading correspond to a set temperature value recorded in the programmable register.</p><p id="p-0145" num="0151">As a matter of fact, the storage of the critical parameters can provide feedback on the healthiness of the block, determining also the way the wear leveling must be applied to the block <b>160</b> of the sub-array <b>120</b>.</p><p id="p-0146" num="0152">The presence of the known pattern at the end of the dummy row ensures the correctness of the operation.</p><p id="p-0147" num="0153">The method of the present disclosure allows obtaining a dynamic erase verification of the erasing phase since it is possible obtaining a secure feedback of the correctness of the erase operation even in different operating environmental conditions.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus, comprising:<claim-text>a plurality of memory blocks;</claim-text><claim-text>a dummy row corresponding to blocks of the plurality of memory blocks for storing a corresponding known pattern and a read trimming parameter for reading the known pattern outside of an addressable space of a corresponding memory block of the plurality of memory blocks; and</claim-text><claim-text>control circuitry configured to:<claim-text>read the known pattern stored in the dummy row of the corresponding memory block by performing reading phases and changing the read trimming parameter stored in the dummy row up to a moment a value of the known pattern stored in the dummy row is read correctly;</claim-text><claim-text>determine, in at least one of the reading phases, that a power loss has occurred; and</claim-text><claim-text>erase the memory block responsive to the determination the power loss has occurred.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the known pattern stored in the dummy row corresponding to the memory block is known to the control circuitry, and wherein the known pattern stored in the dummy row includes an equal number of bits programmed to logical values of one and zero.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the changed read trimming parameter corresponds to a temperature value recorded in a programmable register.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the dummy row is configured to store internal block variables.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the internal block variables include reading pulses or target voltages, or both, applied to the memory block during the reading phases.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the control circuitry is configured to utilize the read trimming parameter when the known pattern stored in the dummy row corresponds to the memory block being read correctly to select a value of a read reference cell.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the known pattern stored in the dummy row is known to the control circuitry, and wherein the known pattern stored in the dummy row includes an equal number of bits programmed to programmed values and erased values.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. An apparatus, comprising:<claim-text>a memory component comprising a plurality of memory blocks, wherein:<claim-text>a memory block of the plurality of memory blocks stores data in an addressable space; and</claim-text><claim-text>a dummy row corresponding to the memory block of the plurality of memory blocks stores a known pattern and trimming parameters to read the known pattern outside the addressable space of the memory block;</claim-text></claim-text><claim-text>a system-on-chip (SoC) coupled to the memory component, wherein the SoC is configured to perform error correction operations on data retrieved from the addressable space of the memory block; and</claim-text><claim-text>a controller configured to:<claim-text>determine a number of corrected bits based on the data retrieved from the addressable space of the memory component by the SoC exceeding a threshold associated with the known pattern stored in the dummy row;</claim-text><claim-text>determine, based on a determined absence of the trimming parameters in the dummy row, that a power loss has occurred; and</claim-text><claim-text>erase the entire memory block responsive to the determination the power loss has occurred.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the dummy row is configured to store internal block variables of the reading phase or an erasing phase, or both.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the internal block variables include pulses or target voltages, or both, applied to the memory block.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein:<claim-text>the memory component comprises an array of memory cells,</claim-text><claim-text>the array of memory cells includes a plurality of independently addressable memory blocks, and</claim-text><claim-text>each of the plurality of independently addressable memory blocks block includes at least 256 rows of memory cells and each row includes at least sixteen super pages each formed by a combination of data bits, address bits, and error correction code bits.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the memory component physically overlaps a portion of the SoC.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the memory component comprises a plurality of pads arranged in a configuration that, when the component is reversed, the plurality of pads are couplable to corresponding pads of the SoC.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A method, comprising:<claim-text>storing a known pattern in a dummy row corresponding to a memory block of a plurality of memory blocks, wherein:<claim-text>the memory block stores data in an addressable location of the memory block and the dummy row stores the known pattern outside an addressable space of the memory block;</claim-text></claim-text><claim-text>determining, based on a determined absence of a parameter in the dummy row utilizable to read the known pattern, that a power loss has occurred; and</claim-text><claim-text>erasing the entire memory block responsive to the determination the power loss has occurred.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the known parameter corresponds to a temperature value recorded in a programmable register associated with the plurality of memory blocks.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the known pattern includes values in hexadecimal form.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the known pattern comprises a same amount of &#x201c;0&#x201d; logic values and &#x201c;1&#x201d; logic values.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the dummy row is configured to store information indicative of a failure involving an erase operation.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising initiating an erasing phase on the memory block based on retrieving internal block variables of a previous erasing phase from the dummy row.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the reading phase is performed automatically when an increased number of error correction code bits involving the memory block is detected.</claim-text></claim></claims></us-patent-application>