<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004555A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004555</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17367605</doc-number><date>20210705</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>242</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>243</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>248</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">AUTOMATICALLY AND INCREMENTALLY SPECIFYING QUERIES THROUGH DIALOG UNDERSTANDING IN REAL TIME</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>INTERNATIONAL BUSINESS MACHINES CORPORATION</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Ferreira Moreno</last-name><first-name>Marcio</first-name><address><city>Rio de Janeiro</city><country>BR</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Drabik Chaves Chambers Ramos</last-name><first-name>Isabela</first-name><address><city>Rio de Janeiro</city><country>BR</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>de Mello Brandao</last-name><first-name>Rafael Rossi</first-name><address><city>Rio de Janeiro</city><country>BR</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Ferreira Lima</last-name><first-name>Guilherme Augusto</first-name><address><city>Sao Paulo</city><country>BR</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computer-implemented method of performing an incremental specification of a query includes extracting text from each of a plurality of participants in a dialog. A contextual information is determined of the extracted text of one or more of the plurality of participants. A dialog understanding operation is performed by processing at least the contextual information of the extracted text in a knowledge graph to identify in the dialog at least one or more of a structural gap, an information about entities, relationships, and actions. Query information is provided responsive to the dialog for at least one of filling the identified structural gap, or for providing additional information about one or more of the identified entities, relationships or actions in the dialog.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="96.10mm" wi="158.75mm" file="US20230004555A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="133.77mm" wi="162.22mm" file="US20230004555A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="134.79mm" wi="191.26mm" file="US20230004555A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="132.84mm" wi="183.98mm" file="US20230004555A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="133.94mm" wi="192.19mm" file="US20230004555A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="198.37mm" wi="170.94mm" file="US20230004555A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="131.91mm" wi="157.82mm" file="US20230004555A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="118.03mm" wi="159.00mm" file="US20230004555A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><heading id="h-0002" level="1">Technical Field</heading><p id="p-0002" num="0001">The present disclosure generally relates to systems and methods of querying, and more particularly, to a computer method and system for performing collaborative queries using artificial intelligence (AI).</p><heading id="h-0003" level="1">Description of the Related Art</heading><p id="p-0003" num="0002">Recently, developed query systems and applications are mainly directed to activity recognition and/or information retrieval. For example, when a user clearly asks for a particular piece of information, such query systems can normally provide a response aligned with the query.</p><p id="p-0004" num="0003">In the case of a collaboration of users, the substance of a query may be less developed because of multiple users searching for a solution in a particular discipline. For example, experts may be trying to work together to develop a solution, and such experts could benefit from assistance in the specified content of a query. Current query systems cannot fill in structural gaps of information between participants/collaborators based on an understanding of the context of a dialog, nor incrementally provide information based on a continuing dialog and/or feedback from participants/collaborators.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">According to one embodiment, a computer-implemented method of performing an incremental query specification includes extracting text from each of a plurality of participants in a dialog. The contextual information of the text extracted from one or more of the plurality of participants is determined. A dialog understanding operation is performed by processing at least the contextual information of the extracted text and a knowledge graph is used to identify in the dialog at least one or more of a structural gap, an information about entities, relationships, or actions. Query information is provided responsive to the dialog for at least one of filling the identified structural gap, or for providing additional information about one or more of the identified entities, relationships or actions in the dialog. The participants are provided with assistance in a collaboration that results in fast and accurate solutions.</p><p id="p-0006" num="0005">In one embodiment, the query information is provided in real time. Real time is particularly advantageous when a conversation is occurring.</p><p id="p-0007" num="0006">In one embodiment, the computer-implemented method includes incrementally providing additional query information based on additional dialog of the plurality of participants. The additional dialog may narrow the search or add items to obtain information. In this way, additional flexibility and accuracy is added to the method.</p><p id="p-0008" num="0007">In one embodiment, the computer-implemented method includes incrementally providing additional query information in response to receiving feedback regarding a previously-provided query information. The feedback results in more accurate assistance.</p><p id="p-0009" num="0008">In one embodiment, the computer-implemented method provides query information of a collaborative query based on multiple participants in the dialog. The method further includes processing text extracted from a current speech, structuring gaps and information as entities, relations and actions in a knowledge graph according to a domain ontology. Faster and more accurate results are provided to participants.</p><p id="p-0010" num="0009">In one embodiment, the computer-implemented method includes identifying an indirect query based on at least one participant asking other participants a question, and providing the query information to all of the participants. Sometimes, the participants may not know how to directly query for certain information, but the indirect query inference procedure can provide assistance to the participants.</p><p id="p-0011" num="0010">In one embodiment, the computer-implemented method includes building nested contextualized hypergraphs to represent possible or indirect queries. The nested hypergraphs will aid in providing query information more accurately and faster.</p><p id="p-0012" num="0011">In one embodiment, the computer-implemented method includes mapping each contextualized hypergraph with ontologies according to a hierarchy of specified concepts and indirections. The mapping will help provide faster and accurate response for future queries of similar information.</p><p id="p-0013" num="0012">In one embodiment, the computer-implemented method includes using natural language processing for the determining of the contextual information of the extracted text of the plurality of participants. As the participants speak or type in natural language, more flexibility and ease of use is provided.</p><p id="p-0014" num="0013">In one embodiment, the computer-implemented method includes identifying and contextualizing concepts according to a dialog evolution, an environment and a profile of the plurality of participants. Faster and more accurate query information can be provided.</p><p id="p-0015" num="0014">In an embodiment, a computing device is configured to perform query specification incrementally. The computing device includes a processor, a memory coupled to the processor. The memory stores instructions to cause the processor to perform acts including extracting text from each of a plurality of participants in a dialog. A contextual information of the extracted text of one or more of the plurality of participants is determined. A dialog understanding operation is performed by processing at least the contextual information of the extracted text in a knowledge graph to identify in the dialog at least one or more of a structural gap, an information about entities, relationships, and actions. Query information is output responsive to the dialog for at least one of filling the identified structural gap, or for providing additional information about one or more of the identified entities, relationships or actions in the dialog. The participants are provided with assistance in a collaboration that results in fast and accurate solutions.</p><p id="p-0016" num="0015">In one embodiment, the query information is output to a dashboard, and the instructions cause processor to perform additional acts including the providing of the query information as a collaborative query based on multiple participants in the dialog. The query information is provided in real time. The dashboard provides a faster and more accurate way to query between participants.</p><p id="p-0017" num="0016">In one embodiment, the instructions cause the processor to perform an act including providing additional query information based on additional dialog of the plurality of participants. Additional information can clarify the query, reducing the search and provision of less accurate results.</p><p id="p-0018" num="0017">In one embodiment, the instructions cause the processor to perform an act including incrementally providing additional query information in response to receiving feedback regarding previously-provided query information. The incremental query information helps to tune the query so that a more accurate response can be provided.</p><p id="p-0019" num="0018">In one embodiment, the instructions cause the processor to perform an act including identifying an indirect query based on at least one participant asking other participants a question, and outputting the query information to one or more of the participants. Indirect queries can anticipate a user query, saving time, and can provide information that can assist the participants.</p><p id="p-0020" num="0019">In one embodiment, the instructions cause the processor to perform an act including building directed nested contextualized hypergraphs to represent possible or indirect queries. The directed nested contextualized hypergraphs will result in subsequent provisions of query information faster and more accurately.</p><p id="p-0021" num="0020">In one embodiment, the instructions cause the processor to perform an act including mapping each contextualized hypergraph with ontologies according to a hierarchy of specified concepts and indirections. The mapping will speed up future queries and increase accuracy.</p><p id="p-0022" num="0021">In one embodiment, the instructions cause the processor to perform an act including using natural language processing for the determining of the contextual information of the extracted text of the plurality of participants. Natural language processing increases the ease of use by the participants.</p><p id="p-0023" num="0022">In one embodiment, the instructions cause the processor to perform an act including identifying and contextualizing concepts according to a dialog evolution, an environment and a profile of the plurality of participants. The profiles can be used to provide retrieval of more accurate information.</p><p id="p-0024" num="0023">In an embodiment, a computing device is configured to perform query specification incrementally. The computing device includes one or more processors including a dialog processor configured to process extracted text from a plurality of participants of a collaborative query. A memory is coupled to the one or more processors. A plurality of modules are configured in the one or more processors including a capture manager configured to provide audio content to the dialog processor. A knowledge structurer is configured to identify structural gaps and information in the extracted text as entities, relationships, or actions in a knowledge graph. A dialog manager is configured to process the knowledge graph and to retrieve from a knowledge graph base a set of entities, relationships and actions to fill previously-identified gaps. Faster, more accurate query information and assistance with collaborative queries is provided.</p><p id="p-0025" num="0024">These and other features will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0026" num="0025">The drawings are of illustrative embodiments. They do not illustrate all embodiments. Other embodiments may be used in addition to or instead. Details that may be apparent or unnecessary may be omitted to save space or for more effective illustration. Some embodiments may be practiced with additional components or steps and/or without all the components or steps that are illustrated. When the same numeral appears in different drawings, it refers to the same or like components or steps.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an architectural overview of a computer-implemented device to automatically and incrementally specify queries through dialog understanding in real time, consistent with an illustrative embodiment</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a non-exhaustive example of an incremental specification of queries through dialog understanding, consistent with an illustrative embodiment.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another non-exhaustive example of incremental specifying queries through dialog understanding, consistent with an illustrative embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart illustrating a computer-implemented method of automatically performing and incrementally specifying queries through dialog understanding in real time, consistent with an illustrative embodiment.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a functional block diagram illustration of a particularly configured computer hardware platform, consistent with an illustrative embodiment.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts an illustrative cloud computing environment, consistent with an illustrative embodiment.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>7</b></figref> depicts a set of functional abstraction layers provided by a cloud computing environment, consistent with an illustrative embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><heading id="h-0007" level="1">Overview</heading><p id="p-0034" num="0033">In the following detailed description, numerous specific details are set forth by way of examples to provide a thorough understanding of the relevant teachings. However, it should be understood that the present teachings may be practiced without such details. In other instances, well-known methods, procedures, components, and/or circuitry have been described at a relatively high level, without detail, to avoid unnecessarily obscuring aspects of the present teachings.</p><p id="p-0035" num="0034">A computer-implemented device and method to automatically and incrementally specify queries through dialog understanding in real time includes support of collaborative and indirect query specification from multiple user inputs in natural language.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an architectural overview <b>100</b> of a computer-implemented device to automatically and incrementally specify queries through dialog understanding in real time, consistent with an illustrative embodiment. It is to be understood that the present disclosure is not limited to the drawings, as there may be fewer elements or more elements than shown and described.</p><p id="p-0037" num="0036">A dashboard graphic user interface (GUI) <b>105</b> is one way that participants may interact with the incremental query computing device and computer-implemented method. For example, selection of a domain ontology and starting of the capture manager <b>110</b> can occur through the dashboard GUI <b>105</b>. In a case where participants are collaborating in oil exploration, a domain ontology selection will &#x201c;tune&#x201d; the query systems to terminology of that particular discipline (oil exploration). Thus, if there are structural gaps in a collaborative discussion, terms and information in this field can be provided to assist the participants.</p><p id="p-0038" num="0037">The capture manager <b>110</b> delivers audio content for processing by a dialog processor <b>115</b>. In turn, the dialog processor <b>115</b> processes content, and extracts text by participants identified as contextual information. The knowledge structurer <b>120</b> is configured to process text from extracted speech and generate a knowledge graph in a knowledge graph base <b>130</b>. The knowledge structurer <b>120</b> identifies structuring gaps in the collaborative discussion and information as entities, relationships and actions in a selected ontology.</p><p id="p-0039" num="0038">With continued reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the dialog understanding manager <b>125</b> works in conjunction with the Query engine <b>135</b> to process from the knowledge graph base a retrieved set of entities, relationships and actions that fill previously-identified gaps. The contextual information module <b>140</b> contextualizes and identifies the user speaking, which can include the type of device and the environment. The contextual information module <b>140</b> determines whether the user is adding information to fill in gaps, or asking for more information about any specific entities, relationships, or actions.</p><p id="p-0040" num="0039">The reasoning engine <b>145</b> is configured to infer and obtain insights to create solutions to providing query information to the participants by processing current information and the graph in the knowledge graph base <b>130</b>.</p><p id="p-0041" num="0040">The computer-implemented method and computer device of the present disclosure advantageously provide improved accuracy and performance in query systems heretofore unknown, at least in terms of providing an understanding of the context of a collaboration by participants based in a particular ontology and providing query information to assist participants in a collaboration. The query information of the present disclosure advantageously provides an improvement in computer operation above and beyond the operation of known query systems, because the query information is provided in response to a conversation between participants. By virtue of the teachings herein, more accurate answers can be provided to collaborators, thus resulting in a reduction in processing overhead and storage realized, as well as a reduction in power consumed.</p><p id="p-0042" num="0041">Additional advantages of the computer-implemented method and device of the present disclosure are disclosed herein.</p><heading id="h-0008" level="1">EXAMPLE EMBODIMENTS</heading><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates in <b>200</b> a non-exhaustive example of an incremental specification of queries through dialog understanding, consistent with an illustrative embodiment. <figref idref="DRAWINGS">FIG. <b>2</b></figref> is a collaborative conversation between geology experts (Geoexperts 1 and 2). Geoexpert 1 asks what was the salt dome <b>205</b> that Colleague 3 found in that repository while working on Client project B? The system at <b>207</b> processes the query and extracts entities/actions about salt domes in an undefined repository of Client B project.</p><p id="p-0044" num="0043">Geoexpert 2 replies at <b>210</b> that it was the salt dome found on OpendTect and said we do should a 3D draft. The system at <b>212</b> contextualizes that Geoexpert 2's reply narrows the scope of the query by asking Geoexpert 1 confirms whether the second instance should be 3D. Geoexpert 1 at <b>215</b> confirms the second instance, and Geoexpert 1 then asks whether they were in The Netherlands block. At <b>217</b>, the system suggests a list of matches with multiple structures. At <b>220</b>, the Geoexpert 2 responds to confirm to the system. At <b>225</b>, the Geoexpert 1 agrees with Geoexpert 2 and adds information about what Colleague 3 found. At <b>227</b>, the system then understands confirmation of proximity of convergent strata and infers accurate answers and offers results. Finally, Geoexpert 1 notes he found the dome that was second on the list, and the system confirms and updates a knowledge graph. Thus, the query system assists in the collaboration of information being exchanged with the two Geoexperts to provide them with accurate information much faster than if they tried without the system, in particular, because they did not know how to formulate a query for that specific information.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates another non-exhaustive example <b>300</b> of incremental specifying queriers through dialog understanding, consistent with an illustrative embodiment. Whereas in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, an ontology domain of geology (e.g., via dashboard GUI) could have been entered to narrow the focus of the query system, <figref idref="DRAWINGS">FIG. <b>3</b></figref> is directed to popular knowledge, particularly movies. At <b>335</b> and <b>340</b>, User 1 and User 2 are trying to remember or find out the name of an actor in a movie. At <b>337</b>, the system processes queries and extracts entities about actors, directors, and retrieves a subgraph of male actors and/or directors (the first entity) and movies (the second entity). At <b>342</b>, the system contextualizes that User 2 is asking details about the second entity (movies). At <b>345</b>, in response to user 1 providing more information (the type of vehicle used in the movie), at <b>347</b> the system suggests a list of movies. User 2 notes at <b>350</b> he knows the movie based on the list, but the system needs confirmation at <b>352</b> from User 1 that the movie identified by User 2 is correct. After User 1 confirms the correct movie at <b>355</b>, the system at <b>375</b> confirms the movie and processes the movie to extract actions from it and retrieves the actor's name. Thus, the query system assists the two users in obtaining information that they wanted.</p><p id="p-0046" num="0045">Example Process</p><p id="p-0047" num="0046">With the foregoing overview of the example architecture, it may be helpful now to consider a high-level discussion of an example process. To that end, <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flowchart illustrating a computer-implemented method of automatically performing and incrementally specifying queries through dialog understanding in real time, consistent with an illustrative embodiment. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is shown as a collection of blocks, in a logical order, which represents a sequence of operations that can be implemented in hardware, software, or a combination thereof. In the context of software, the blocks represent computer-executable instructions that, when executed by one or more processors, perform the recited operations. Generally, computer-executable instructions may include routines, programs, objects, components, data structures, and the like that perform functions or implement abstract data types. In each process, the order in which the operations are described is not intended to be construed as a limitation, and any number of the described blocks can be combined in any order and/or performed in parallel to implement the process.</p><p id="p-0048" num="0047">At operation S<b>405</b>, the user selects a domain ontology and starts the Capture Manager (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>) through a dashboard. It is to be understood that operation S<b>405</b> is optional, as the query system can also activate in response to receiving audio information, and can operate with a domain ontology selected. However, selection of a domain ontology will likely speed up the computer-implemented method. If no domain ontology is selected, the query system can infer this information, and/or may prompt for confirmation.</p><p id="p-0049" num="0048">At operation S<b>410</b>, the capture manger delivers content to the dialog processor (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>), which processes the content extracts text identified by each participant by the contextual information.</p><p id="p-0050" num="0049">At operation S<b>415</b>, the knowledge structurer processes text extracted from current speech, structuring gaps in a collaborative conversation and information as entities, relationships and actions in a knowledge graph according to the selected ontology. A knowledge base can be used to store a knowledge graph.</p><p id="p-0051" num="0050">At operation S<b>420</b>, the dialog understanding manager uses a query engine to process the knowledge graph base to retrieve a set of entities, relationships and actions that fill previously identified gaps. For example, in <figref idref="DRAWINGS">FIG. <b>2</b></figref> the system at <b>217</b> and <b>222</b> is providing lists, and asks for confirmation of information provided and also sends a list of information of responses.</p><p id="p-0052" num="0051">At operation S<b>425</b>, the contextual module will contextualize information and determine which user is talking in which type of device. The system determines if the user is clarifying or asking for more information.</p><p id="p-0053" num="0052">At operation S<b>430</b>, the dialog understanding manager communicates with the reasoning engine to infer and gain insight to create a solution by processing current information and a graph in the knowledge graph base.</p><p id="p-0054" num="0053">At operation S<b>435</b>, there is a determination as to whether any entity, relationship or gap needs a solution. For example, the participants may be still striving to find an answer to a question, and the query system can determine if additional assistance is to be provided.</p><p id="p-0055" num="0054">At operation S<b>440</b>, as the system has determined at S<b>435</b> that additional solutions are required, a least one solution is presented to participants, which may be presented via the dashboard. The method then returns to operation S<b>410</b>. Based on user feedback, the query system learns to improve the accuracy and response of current queries and future queries as well.</p><p id="p-0056" num="0055">If at S<b>435</b> it is determined that there are no additional solutions requested, the system presents the solution S<b>445</b>, for example, through the dashboard, and learns through feedback.</p><heading id="h-0009" level="1">Example Particularly Configured Computer Hardware Platform</heading><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>5</b></figref> provides a functional block diagram illustration <b>500</b> of a computer hardware platform. In particular, <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a particularly configured network or host computer platform <b>500</b>, as may be used to implement the method shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0058" num="0057">The computer platform <b>500</b> may include a central processing unit (CPU) <b>504</b>, a hard disk drive (HDD) <b>506</b>, random access memory (RAM) and/or read-only memory (ROM) <b>508</b>, a keyboard <b>510</b>, a mouse <b>512</b>, a display <b>514</b>, and a communication interface <b>516</b>, which are connected to a system bus <b>502</b>. The HDD <b>506</b> can include data stores.</p><p id="p-0059" num="0058">In one embodiment, the HDD <b>506</b> has capabilities that include storing a program that can execute various processes, such as machine learning.</p><p id="p-0060" num="0059">In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, there are various modules shown as discrete components for ease of explanation. However, it is to be understood that the functionality of such modules and the quantity of the modules may be fewer or greater than shown. It is to be understood that the modules shown and described herein can be trained by machine learning both to train and update their various operations.</p><p id="p-0061" num="0060">The incremental query module <b>540</b> is configured to control the operation of the incremental queries based on dialog understanding in modules <b>542</b>-<b>552</b> to perform incrementally in real time, consistent with an illustrative embodiment.</p><p id="p-0062" num="0061">The capture module <b>542</b> is configured to deliver audio content to the dialog processing module <b>544</b>. The dialog processing module <b>544</b> is configured to process audio and text content, and identify extracted text of each participant as contextual information (see <figref idref="DRAWINGS">FIG. <b>3</b></figref> at <b>342</b> for contextual information).</p><p id="p-0063" num="0062">The knowledge graph manager <b>546</b> is configured to process text from current speech, and identify structuring gaps in the speech. The knowledge graph manager <b>546</b> also identifies information to be a subject of the query as entities. The entities and their relationships and actions, and the structuring gaps in the speech are arranged in a knowledge graph.</p><p id="p-0064" num="0063">The query module <b>548</b> is an engine configured to configured to process the knowledge graph base (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>) to retrieve a set of entities, relationships, and actions that fill previously identified structural gaps in a collaborative conversation between participants.</p><p id="p-0065" num="0064">The contextual processing module <b>550</b> is configured to contextualize and determine which user is speaking in which type of device and environment. The contextual processing module <b>550</b> can also determine if the user is adding or asking for more information about specific entities relationships, actions or gaps.</p><p id="p-0066" num="0065">The reasoning module <b>552</b> is an engine to infer and obtain insights to create a solution by processing current information in the knowledge graph base. The communication interface module <b>554</b> is configured for communication with, for example, a dashboard GUI (<figref idref="DRAWINGS">FIG. <b>1</b>, <b>105</b></figref>).</p><heading id="h-0010" level="1">Example Cloud Platform</heading><p id="p-0067" num="0066">As discussed above, functions relating to the low bandwidth transmission of high-definition video data may include a cloud. It is to be understood that although this disclosure includes a detailed description of cloud computing as discussed herein below, implementation of the teachings recited herein is not limited to a cloud computing environment. Rather, embodiments of the present disclosure are capable of being implemented in conjunction with any other type of computing environment now known or later developed.</p><p id="p-0068" num="0067">Cloud computing is a model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services) that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics, at least three service models, and at least four deployment models.</p><p id="p-0069" num="0000">Characteristics are as follows:</p><p id="p-0070" num="0068">On-demand self-service: a cloud consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with the service's provider.</p><p id="p-0071" num="0069">Broad network access: capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, laptops, and PDAs).</p><p id="p-0072" num="0070">Resource pooling: the provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction (e.g., country, state, or datacenter).</p><p id="p-0073" num="0071">Rapid elasticity: capabilities can be rapidly and elastically provisioned, in some cases automatically, to quickly scale out and rapidly released to quickly scale in. To the consumer, the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.</p><p id="p-0074" num="0072">Measured service: cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported, providing transparency for both the provider and consumer of the utilized service.</p><p id="p-0075" num="0000">Service Models are as follows:</p><p id="p-0076" num="0073">Software as a Service (SaaS): the capability provided to the consumer is to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser (e.g., web-based e-mail). The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.</p><p id="p-0077" num="0074">Platform as a Service (PaaS): the capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks, servers, operating systems, or storage, but has control over the deployed applications and possibly application hosting environment configurations.</p><p id="p-0078" num="0075">Infrastructure as a Service (IaaS): the capability provided to the consumer is to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, deployed applications, and possibly limited control of select networking components (e.g., host firewalls).</p><p id="p-0079" num="0000">Deployment Models are as follows:</p><p id="p-0080" num="0076">Private cloud: the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on-premises or off-premises.</p><p id="p-0081" num="0077">Community cloud: the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns (e.g., mission, security requirements, policy, and compliance considerations). It may be managed by the organizations or a third party and may exist on-premises or off-premises.</p><p id="p-0082" num="0078">Public cloud: the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.</p><p id="p-0083" num="0079">Hybrid cloud: the cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load-balancing between clouds).</p><p id="p-0084" num="0080">A cloud computing environment is service-oriented with a focus on statelessness, low coupling, modularity, and semantic interoperability. At the heart of cloud computing is an infrastructure that includes a network of interconnected nodes.</p><p id="p-0085" num="0081">Referring now to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, an illustrative cloud computing environment <b>600</b> utilizing cloud computing is depicted. As shown, cloud computing environment <b>600</b> includes cloud <b>750</b> 6 having one or more cloud computing nodes <b>610</b> with which local computing devices used by cloud consumers, such as, for example, personal digital assistant (PDA) or cellular telephone <b>654</b>A, desktop computer <b>654</b>B, laptop computer <b>654</b>C, and/or automobile computer system <b>654</b>N may communicate. Nodes <b>610</b> may communicate with one another. They may be grouped (not shown) physically or virtually, in one or more networks, such as Private, Community, Public, or Hybrid clouds as described hereinabove, or a combination thereof. This allows cloud computing environment <b>600</b> to offer infrastructure, platforms, and/or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices <b>654</b>A-N shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref> are intended to be illustrative only and that computing nodes <b>610</b> and cloud computing environment <b>600</b> can communicate with any type of computerized device over any type of network and/or network addressable connection (e.g., using a web browser).</p><p id="p-0086" num="0082">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a set of functional abstraction layers <b>700</b> provided by cloud computing environment <b>600</b> (<figref idref="DRAWINGS">FIG. <b>6</b></figref>) is shown. It should be understood in advance that the components, layers, and functions shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref> are intended to be illustrative only and embodiments of the disclosure are not limited thereto. As depicted, the following layers and corresponding functions are provided:</p><p id="p-0087" num="0083">Hardware and software layer <b>760</b> include hardware and software components. Examples of hardware components include: mainframes <b>761</b>; RISC (Reduced Instruction Set Computer) architecture-based servers <b>762</b>; servers <b>763</b>; blade servers <b>764</b>; storage devices <b>765</b>; and networks and networking components <b>766</b>. In some embodiments, software components include network application server software <b>767</b> and database software <b>768</b>.</p><p id="p-0088" num="0084">Virtualization layer <b>770</b> provides an abstraction layer from which the following examples of virtual entities may be provided: virtual servers <b>771</b>; virtual storage <b>772</b>; virtual networks <b>773</b>, including virtual private networks; virtual applications and operating systems <b>774</b>; and virtual clients <b>775</b>.</p><p id="p-0089" num="0085">In one example, management layer <b>780</b> may provide the functions described below. Resource provisioning <b>781</b> provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing <b>782</b> provide cost tracking as resources are utilized within the cloud computing environment, and billing or invoicing for consumption of these resources. In one example, these resources may include application software licenses. Security provides identity verification for cloud consumers and tasks, as well as protection for data and other resources. User portal <b>783</b> provides access to the cloud computing environment for consumers and system administrators. Service level management <b>784</b> provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement (SLA) planning and fulfillment <b>785</b> provide pre-arrangement for, and procurement of, cloud computing resources for which a future requirement is anticipated in accordance with an SLA.</p><p id="p-0090" num="0086">Workloads layer <b>790</b> provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include: mapping and navigation <b>791</b>; software development and lifecycle management <b>792</b>; virtual classroom education delivery <b>793</b>; data analytics processing <b>794</b>; transaction processing <b>795</b>; and an incremental query module <b>796</b> configured to perform incrementally specific queries through dialog understanding in real time, as discussed herein above.</p><heading id="h-0011" level="1">Conclusion</heading><p id="p-0091" num="0087">The descriptions of the various embodiments of the present teachings have been presented for purposes of illustration, but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments, the practical application or technical improvement over technologies found in the marketplace, or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.</p><p id="p-0092" num="0088">While the foregoing has described what are considered to be the best state and/or other examples, it is understood that various modifications may be made therein and that the subject matter disclosed herein may be implemented in various forms and examples, and that the teachings may be applied in numerous applications, only some of which have been described herein. It is intended by the following claims to claim any and all applications, modifications, and variations that fall within the true scope of the present teachings.</p><p id="p-0093" num="0089">The components, operations, steps, features, objects, benefits, and advantages that have been discussed herein are merely illustrative. None of them, nor the discussions relating to them, are intended to limit the scope of protection. While various advantages have been discussed herein, it will be understood that not all embodiments necessarily include all advantages. Unless otherwise stated, all measurements, values, ratings, positions, magnitudes, sizes, and other specifications that are set forth in this specification, including in the claims that follow, are approximate, not exact. They are intended to have a reasonable range that is consistent with the functions to which they relate and with what is customary in the art to which they pertain.</p><p id="p-0094" num="0090">Numerous other embodiments are also contemplated. These include embodiments that have fewer, additional, and/or different components, steps, features, objects, benefits and advantages. These also include embodiments in which the components and/or steps are arranged and/or ordered differently.</p><p id="p-0095" num="0091">The flowchart, and diagrams in the figures herein illustrate the architecture, functionality, and operation of possible implementations according to various embodiments of the present disclosure.</p><p id="p-0096" num="0092">While the foregoing has been described in conjunction with exemplary embodiments, it is understood that the term &#x201c;exemplary&#x201d; is merely meant as an example, rather than the best or optimal. Except as stated immediately above, nothing that has been stated or illustrated is intended or should be interpreted to cause a dedication of any component, step, feature, object, benefit, advantage, or equivalent to the public, regardless of whether it is or is not recited in the claims.</p><p id="p-0097" num="0093">It will be understood that the terms and expressions used herein have the ordinary meaning as is accorded to such terms and expressions with respect to their corresponding respective areas of inquiry and study except where specific meanings have otherwise been set forth herein. Relational terms such as first and second and the like may be used solely to distinguish one entity or action from another without necessarily requiring or implying any such actual relationship or order between such entities or actions. The terms &#x201c;comprises,&#x201d; &#x201c;comprising,&#x201d; or any other variation thereof, are intended to cover a non-exclusive inclusion, such that a process, method, article, or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. An element proceeded by &#x201c;a&#x201d; or &#x201c;an&#x201d; does not, without further constraints, preclude the existence of additional identical elements in the process, method, article, or apparatus that comprises the element.</p><p id="p-0098" num="0094">The Abstract of the Disclosure is provided to allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, it can be seen that various features are grouped together in various embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments have more features than are expressly recited in each claim. Rather, as the following claims reflect, the inventive subject matter lies in less than all features of a single disclosed embodiment. Thus, the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separately claimed subject matter.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method of performing an incremental specification of a query, the method comprising:<claim-text>extracting text from each of a plurality of participants in a dialog;</claim-text><claim-text>determining a contextual information of the text extracted from one or more of the plurality of participants;</claim-text><claim-text>performing a dialog understanding operation by processing at least the contextual information of the extracted text in a knowledge graph to identify in the dialog at least one or more of a structural gap, an information about entities, relationships, or actions; and</claim-text><claim-text>providing query information responsive to the dialog for at least one of filling the identified structural gap, or for providing additional information about one or more of the identified entities, relationships or actions in the dialog.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the query information is provided in real time.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising incrementally providing additional query information based on an additional dialog of the plurality of participants.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising incrementally providing additional query information in response to receiving feedback regarding previously-provided query information.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the providing of the query information comprises a collaborative query based on multiple participants in the dialog, and the method further comprises:<claim-text>processing text extracted from a current speech; and</claim-text><claim-text>structuring gaps and information as entitles, relations, and actions in a knowledge graph according to a domain ontology.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>identifying an indirect query based on at least one participant asking other participants a question; and</claim-text><claim-text>providing the query information to all of the participants.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising building directed nested contextualized hypergraphs to represent possible or indirect queries.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising mapping each contextualized hypergraph with ontologies according to a hierarchy of specified concepts and indirections.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising using natural language processing for the determining of the contextual information of the extracted text of the plurality of participants.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer-implemented method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising identifying and contextualizing concepts according to a dialog evolution, an environment, and a profile of the plurality of participants.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A computing device configured to perform an incremental specification of a query, the computing device comprising:<claim-text>a processor;</claim-text><claim-text>a memory coupled to the processor, the memory storing instructions to cause the processor to perform acts comprising:</claim-text><claim-text>extracting text from each of a plurality of participants in a dialog;</claim-text><claim-text>determining a contextual information of the text extracted from one or more of the plurality of participants;</claim-text><claim-text>performing a dialog understanding operation by processing at least the contextual information of the extracted text in a knowledge graph to identify in the dialog at least one or more of a structural gap, an information about entities, relationships, or actions; and</claim-text><claim-text>outputting query information responsive to the dialog that for at least one of filling the identified structural gap, or for providing additional information about one or more of the identified entities, relationships or actions in the dialog.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:<claim-text>the query information is output to a dashboard;</claim-text><claim-text>the instructions cause processor to perform additional acts including the providing of the query information as a collaborative query based on multiple participants in the dialog; and</claim-text><claim-text>the query information is provided in real time.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform an act comprising providing additional query information based on additional dialog of the plurality of participants.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform an act comprising incrementally providing additional query information in response to receiving feedback regarding previously-provided query information.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform additional acts comprising:<claim-text>identifying an indirect query based on at least one participant asking other participants a question; and</claim-text><claim-text>outputting the query information to one or more of the participants.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform additional acts comprising building directed nested contextualized hypergraphs to represent possible or indirect queries.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform additional acts comprising mapping each contextualized hypergraph with ontologies according to a hierarchy of specified concepts and indirections.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform additional acts comprising using a natural language processing for the determining of the contextual information of the extracted text of the plurality of participants.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computing device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions cause the processor to perform additional acts comprising identifying and contextualizing concepts according to a dialog evolution, an environment, and a profile of the plurality of participants.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A computing device configured to perform an incrementally specific query, the computing device comprising:<claim-text>one or more processors including a dialog processor configured to process extracted text from a plurality of participants of a collaborative query;</claim-text><claim-text>a memory coupled to the one or more processors;</claim-text><claim-text>a plurality of modules configured in the one or more processors including:<claim-text>a capture manager configured to provide audio content to the dialog processor;</claim-text><claim-text>a knowledge structurer configured to identify structuring gaps and information in the extracted text as entities, relationships, or actions in a knowledge graph; and</claim-text><claim-text>a dialog manager configured to process the knowledge graph and to retrieve from a knowledge graph base a set of entities, relationships and actions to fill previously-identified gaps.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>