<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230000568A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230000568</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942777</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>37</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>A</section><class>61</class><subclass>B</subclass><main-group>90</main-group><subgroup>94</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20160201</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>20</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20160201</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20160201</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>34</main-group><subgroup>37</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20160201</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>90</main-group><subgroup>94</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20160201</date></cpc-version-indicator><section>A</section><class>61</class><subclass>B</subclass><main-group>2090</main-group><subgroup>3983</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONFIGURATION MARKER DESIGN AND DETECTION FOR INSTRUMENT TRACKING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16859755</doc-number><date>20200427</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11471221</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942777</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15699858</doc-number><date>20170908</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10675098</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16859755</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>12428691</doc-number><date>20090423</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>9867669</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>15699858</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>61203975</doc-number><date>20081231</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>INTUITIVE SURGICAL OPERATIONS, INC.</orgname><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Zhao</last-name><first-name>Tao</first-name><address><city>Sunnyvale</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Zhao</last-name><first-name>Wenyi</first-name><address><city>Weston</city><state>FL</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Nowlin</last-name><first-name>William C.</first-name><address><city>Los Altos Hills</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system may comprise a tool including at least one reference feature. a processor, and a memory having computer readable instructions stored thereon. The computer readable instructions, when executed by the processor, may cause the system to receive image data including an image of the tool and the at least one reference feature, determine a pose of the tool from the image data, and modify the image data to visually decrement a portion of the image data corresponding to the at least one reference feature.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="122.77mm" wi="158.75mm" file="US20230000568A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="176.95mm" wi="146.56mm" orientation="landscape" file="US20230000568A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="185.50mm" wi="142.16mm" file="US20230000568A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="178.56mm" wi="98.55mm" file="US20230000568A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="180.59mm" wi="156.29mm" file="US20230000568A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="177.88mm" wi="156.21mm" orientation="landscape" file="US20230000568A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="151.47mm" wi="166.12mm" file="US20230000568A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="219.88mm" wi="123.87mm" orientation="landscape" file="US20230000568A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="167.47mm" wi="169.42mm" file="US20230000568A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="174.16mm" wi="85.26mm" file="US20230000568A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="152.15mm" wi="155.19mm" file="US20230000568A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="214.80mm" wi="144.95mm" file="US20230000568A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="227.08mm" wi="118.11mm" file="US20230000568A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="235.71mm" wi="170.01mm" file="US20230000568A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="223.60mm" wi="158.67mm" orientation="landscape" file="US20230000568A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="175.60mm" wi="126.07mm" file="US20230000568A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="185.67mm" wi="129.54mm" file="US20230000568A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="209.55mm" wi="164.68mm" file="US20230000568A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="172.64mm" wi="131.66mm" file="US20230000568A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="222.17mm" wi="152.57mm" file="US20230000568A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="185.67mm" wi="129.54mm" file="US20230000568A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="177.63mm" wi="150.20mm" file="US20230000568A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="151.47mm" wi="102.19mm" file="US20230000568A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="201.42mm" wi="171.53mm" file="US20230000568A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="214.21mm" wi="156.80mm" file="US20230000568A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="196.68mm" wi="169.25mm" file="US20230000568A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="224.87mm" wi="143.85mm" file="US20230000568A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="195.50mm" wi="153.33mm" file="US20230000568A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation application of U.S. patent application Ser. No. 12/428,691, entitled &#x201c;Configuration Mark Design and Detection for Instrument Tracking,&#x201d; filed on Apr. 23, 2009, which is a non-provisional application that claims the benefit under 35 U.S.C. &#xa7; 119(e) of provisional U.S. Pat. App. No. 61/203,975 (filed Dec. 31, 2008), all of which are incorporated herein by reference in their entirety.</p><p id="p-0003" num="0002">This application is related to non-provisional U.S. patent application Ser. No. 12/428,657, entitled &#x201c;Fiducial Marker Design and Detection for Locating Surgical Instrument Images&#x201d;, and filed Apr. 23, 2009, which claims priority to provisional U.S. Pat. App. No. 61/204,084 (filed Dec. 31, 2008), both of which are incorporated herein by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Minimally-invasive surgical techniques are aimed at reducing the amount of extraneous tissue that is damaged during diagnostic or surgical procedures, thereby reducing patient recovery time, discomfort, and deleterious side effects. As a consequence, the average length of a hospital stay for standard surgery may be shortened significantly using minimally-invasive surgical techniques. Also, patient recovery times, patient discomfort, surgical side effects, and time away from work may also be reduced with minimally-invasive surgery.</p><p id="p-0005" num="0004">A common form of minimally-invasive surgery is endoscopy, and a common form of endoscopy is laparoscopy, which is minimally-invasive inspection and surgery inside the abdominal cavity. In standard laparoscopic surgery, a patient's abdomen is insufflated with gas, and cannula sleeves are passed through small (approximately &#xbd; inch or less) incisions to provide entry ports for laparoscopic instruments.</p><p id="p-0006" num="0005">Laparoscopic surgical instruments generally include a laparoscope or an endoscope (for viewing the surgical field), and working tools. The working tools are similar to those used in conventional (open) surgery, except that the working end or end effector of each tool is separated from its handle by an extension tube. As used herein, the term &#x201c;end effector&#x201d; means the actual working part of the surgical instrument and can include clamps, graspers, scissors, staplers, and needle holders, for example.</p><p id="p-0007" num="0006">To perform surgical procedures, the surgeon passes these working tools or instruments through cannula sleeves to an internal surgical site and manipulates them from outside the abdomen. The surgeon views the procedure by means of a monitor that displays an image of the surgical site taken from the laparoscope. Similar endoscopic techniques are employed in, e.g., arthroscopy, retroperitoneoscopy, pelviscopy, nephroscopy, cystoscopy, cisternoscopy, sinoscopy, hysteroscopy, urethroscopy, and the like.</p><p id="p-0008" num="0007">Minimally-invasive telesurgical robotic systems are being developed to increase a surgeon's dexterity when working within an internal surgical site, as well as to allow a surgeon to operate on a patient from a remote location. In a telesurgery system, the surgeon is often provided with an image of the surgical site at a control console. While viewing a three-dimensional (3-D) image of the surgical site on a suitable viewer or display, the surgeon performs the surgical procedures on the patient by manipulating master input or control devices of the control console. Each of the master input devices controls the motion of a servomechanically operated surgical instrument. During the surgical procedure, the telesurgical system can provide mechanical actuation and control of a variety of surgical instruments or tools having end effectors that perform various functions for the surgeon, e.g., holding or driving a needle, grasping a blood vessel, dissecting tissue, or the like, in response to manipulation of the master input devices.</p><p id="p-0009" num="0008">During the surgical procedure, however, the surgeon may manipulate the tool so that its end effector is moved outside of the endoscope's field of view, or the end effector may become difficult to see due to occlusion by fluids or other intervening objects. In such cases it would be useful to be able to provide assistance to the surgeon in locating and/or identifying the end effector on the workstation's display screen. Accurate information regarding a tool's 3-D pose (location and orientation) can be used to provide this assistance. In general, accurate information of a tool's 3-D pose is important for a number of image guided surgical and user interface applications.</p><p id="p-0010" num="0009">One approach that has been used to provide accurate tool tracking involves a fusion of kinematics-based pose information with image-derived pose information. Such a fusion of tool tracking information can provide the advantages of both types of data without the associated disadvantages. While kinematics joint data are usually available at a very high update rate, a kinematics estimated pose may not be very accurate due to error accumulation at each joint, with errors in joints located farther away from the tool having a greater impact on accuracy. In contrast, image-derived tool pose estimation can be highly accurate, but may run at a slower update rate that what is useful for many real-time applications. By correcting the higher-update kinematics-pose estimation using the more accurate image-derived tool pose estimation, a more accurate higher-update tool pose estimation can be obtained.</p><p id="p-0011" num="0010">Some existing technologies have been used for surgical tool tracking. In one approach, an optical tracker is used to track the position of a marker assembly that is attached to a location on the surgical instrument outside the patient's body. However, the optical tracker requires a dedicated stereo camera and dedicated lighting, which take space in an already crowded operating room. Attaching such optical trackers also reduces the range of motion of the robotic arms due to the potential for collision. There can also be some level of error that results from propagating the 3-D pose to the surgical tool tip. Additional problems include: the extra space required, limited visibility range, the added hardware setup in the operating room, and cost. Another approach uses an electromagnetic tracker, which has its own associated disadvantages. For example, most surgical instruments have metal parts that can cause distortion, which can vary in time due to changes in distances between an electromagnetic tracker attached to one tool tip and metal components of an adjacent surgical tool. An electromagnetic tracker also involves extra cost.</p><p id="p-0012" num="0011">Computing the 3-D pose of a rigid body with respect to a camera is a well-studied problem in computer/robot vision. A 3-D pose can be solved by starting with the known features of an object and matching these features with their 2D correspondence in the image. Features such as point and line segments are commonly used. Determination of the 3-D pose of a rigid body from a single 2D image is referred to as &#x201c;pose estimation&#x201d; in computer vision (see introduction in Christophe Doignon, &#x201c;Scene Reconstruction, Pose Estimation and Tracking,&#x201d; 2007). If using point-based correspondences, the problem is known as &#x201c;perspective-n-point,&#x201d; where n is the number of correspondences. Three non-collinear points provides four solutions. Four or more non-collinear points provides a unique solution.</p><p id="p-0013" num="0012">Determination of the 3-D pose of a rigid object using a stereo camera can be accomplished using two approaches. First, the determination of the 3-D pose can be approached as an optimization problem where the 3-D pose is selected that provides the best fit between the projected 3-D points with the image correspondences in both images. In the other approach, image points in both views can be used to determine corresponding 3-D points using stereo triangulation and relative pose is determined by solving a rigid transformation between the determined 3-D points and corresponding model points. (See A. Lorusso, D. W. Eggert and R. B. Fisher, &#x201c;A comparison of four algorithms for estimating 3-d rigid transformations,&#x201d; 1995.)</p><p id="p-0014" num="0013">However, a number of factors can hamper the ability to obtain an image-derived tool pose estimation. For one, an image-derived estimate is only available when the object's features are within the field of view of the imaging device(s) and they can be extracted. Some of the factors that may prevent the extraction of features include: occlusion of the features by anatomical structure or other instruments, degenerated image quality caused by fast instrument or camera motion (i.e., motion blur), adverse lighting conditions (e.g., saturation when the light is too strong, lack of contrast when the light is too weak, strong specularity due to the relative geometric configurations of the light source, instrument, and imaging device), and complex background clutter.</p><p id="p-0015" num="0014">More reliable image-derived tool pose estimation would, therefore, be beneficial in order to increase the rate at which highly-accurate tool pose estimates are available, which in turn may help to provide more accurate overall tool tracking. Accordingly, improved methods and systems providing improved image-derived tool pose estimates would be desirable, particularly those with reduced sensitivities to adverse conditions, such as occlusions, motion blur, and adverse lighting conditions.</p><heading id="h-0003" level="1">BRIEF SUMMARY</heading><p id="p-0016" num="0015">In accordance with embodiments, improved systems, methods, and tools for performing 3-D tool tracking using image-derived data from one or more tool located reference features are provided. The use of one or more reference features can provide for improved image-derived tool pose estimation by supplying one or more features that can be more reliably imaged and processed. Effective and reliable image-derived tool pose estimation can be particularly useful during minimally-invasive surgery, where accurate and reliable tool tracking can provide a number of advantages, such as to provide assistance to a Surgeon in locating an occluded or out-of-view tool. However, it is appreciated that the disclosed systems, methods, and tools can be used in a wide variety of applications, both inside and outside a human body, as well as in non-surgical tool tracking applications. In general, accurate information of a tool's 3-D pose is important for a number of image-guided and user interface applications.</p><p id="p-0017" num="0016">Thus, the following presents a simplified summary of some embodiments of the invention in order to provide a basic understanding of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some embodiments of the invention in a simplified form as a prelude to the more detailed description that is presented later.</p><p id="p-0018" num="0017">In accordance with an embodiment, a robotic surgical method for determining a tool state for an imaged tool is provided. The method includes: capturing a first image of a tool that includes multiple features defining a first marker, where at least one of the features of the first marker includes an identification feature; determining a position for the first marker by processing the first image; determining an identification for the first marker by using the at least one identification feature by processing the first image; and determining a tool state for the tool by using the position and the identification of the first marker.</p><p id="p-0019" num="0018">A robotic surgical method for determining a tool state for an imaged tool can involve a number of options. For example, the first marker can include redundant features defining error-checking data and/or check sum data, and the method can include: processing the first image to detect the redundant features and read the error-checking data and/or check sum data; and validating the identification of the first marker by verifying that the first marker identification is consistent with the error-checking data and/or check sum data.</p><p id="p-0020" num="0019">Some options involve a tool having two or more markers. Each of the two or more markers can have at least one identification feature associated with an identification that differs from other markers on the tool. The image processing can be accomplished using a processor having data indicating, for each marker, an associated predetermined positional relationship between the marker and a joint of the surgical tool. Determining a tool state for the tool can include using the position of a first marker, the identification of the first marker, and the associated positional relationship data for the first marker. The first image can include a second marker of the tool. A method can include: determining a position for the second marker by processing the first image; and determining the identification of the second marker by processing the first image; determining a tool state for the tool by using the second marker position, the second marker identification, and the predetermined positional relationship data associated with the second marker.</p><p id="p-0021" num="0020">Some options involve multiple images of a tool. For example, a method can include steps that can be used where the second marker is obscured in the first image, such as: moving the tool after determining the tool state by using the first marker, capturing a second image of the moved tool where the first marker is obscured but the second marker is not obscured; determining a position for the second marker by processing the second image; determining the identification of the second marker by processing the second image; and determining a moved tool state for the tool using the second marker position, the second marker identification, and the predetermined positional relationship data associated with the second marker.</p><p id="p-0022" num="0021">Some options involve stereo images of a tool. For example, a stereo-imaging device, such as a stereoscopic endoscope, can be used to capture a first and second image of the surgical tool, which can be processed so as to determine 3-D positional data for the first marker. A tool state can be determined in three dimensions or more.</p><p id="p-0023" num="0022">Some options involve tools having multiple markers having certain types of features. For example, each marker can have at least one localizer feature, and at least one identification feature at a known positional relationship relative to at least one localizer feature. The position of the first marker can be determined by using the localizer feature and the orientation feature. The identification of the first marker can be determined by identifying at least one localizer feature of the first marker and reading the identification feature according to the known positional relationship between the localizer feature and the identification feature.</p><p id="p-0024" num="0023">Some options involve a &#x201c;hypothesis and test&#x201d; approach. For example, a method can include: processing the first image so as to identify the at least one localizer feature; selecting a candidate identity for the first marker; generating a candidate view of a marker having the candidate identity by using the identified at least one localizer feature; and comparing the candidate view with the first image so as to verify that the selected candidate identity is the first marker identity. Selecting a candidate identity for the first marker can include generating an estimated pose for the surgical tool by using at least one prior tool state from a prior image of the tool or joint data from a robotic actuation system effectuating movement of the tool. The candidate identity can be selected so as to result in a candidate pose for the surgical tool that is within a predetermined deviation of the estimated pose for the surgical tool. A method can include processing an image containing multiple surgical tools, where each surgical tool has an identity. An identity can be associated with an imaged tool having the first marker by verifying that the candidate identity for the first marker results in a candidate pose that is within a predetermined deviation of the estimated pose for the surgical tool having the first marker.</p><p id="p-0025" num="0024">A variety of approaches can be used to determine position data for a marker. For example, a Maximum Stable Extremal Region (MSER) approach can be used. As another example, adaptive thresholding can be used.</p><p id="p-0026" num="0025">In accordance with another embodiment, a robotic surgical system that can be used for determining a tool state for an imaged tool is provided. The system includes: a surgical tool having multiple features defining a first marker, with at least one of the features including an identification feature; an imaging device for capturing a first image of the tool during use and outputting first image data in response thereto; and a processor coupled with the imaging device and adapted to process the first image so as to: determine positional data for the first marker, determine an identification of the first marker by using the identification feature; and determine tool state data for the imaged tool by using the positional data for the first marker and the identification of the first marker.</p><p id="p-0027" num="0026">A robotic surgery system for determining a tool state for an imaged tool can include optional components and/or variations. For example, a system can include a tangible medium that includes machine-readable instructions executable by the processor for processing a captured image. A system can include an input for non-endoscopically derived tool state data that is derived from robotic joints supporting the tool, and the processor can be configured to process the non-endoscopically derived tool state information and the image-derived tool state information for tracking the state of the tool. The imaging device can be adapted to capture a second image of the surgical tool at substantially the same time as the first image and output second image data in response thereto. The processor can be configured so as to determine 3-D positional data for the first marker by processing the first and second image data. The imaging device can include a stereoscopic endoscope.</p><p id="p-0028" num="0027">Optional components and/or variations can involve marker features. For example, a first marker can include redundant features defining error-checking data. The processor can be configured to process the first image data so as to: detect the first marker redundant features; read the error-checking data; and validate the identification of the first marker by verifying that the first marker identification is consistent with the error-checking data. Redundant features can also define check sum data and the processor can be configured to process the first image data so as to read the check sum data. The processor can validate the identification of the first marker by verifying that the first marker identification is consistent with the check sum data. Markers can have various configurations. For example, at least one marker can include at least one localizer feature that is shared with an adjacent marker. The features of one or more markers can be arranged in a two-dimensional (2-D) pattern. One or more markers can use circles or corners as localizer features. The corners can include saddle points. One or more markers can include three localizer features. One or more markers can include four localizer features. One or more marker can include four circles and a bar as localizer features. A marker can include text, which can be modified to increase positional data or discriminative features.</p><p id="p-0029" num="0028">Optional components and/or variations can involve multiple markers. Multiple markers can be distributed around a tool and the processor can include data for each marker indicating an associated marker identification and an associated predetermined positional relationship between the marker and a joint of the surgical tool. Multiple markers can have identification features that differ sufficiently for the processor to determine the identification of the markers encompassed within the first image.</p><p id="p-0030" num="0029">A processor can use the determined 3-D pose to modify a displayed image of the tool in a variety of ways. For example, the displayed image can be modified so that the added reference features are less visually obtrusive, or are &#x201c;erased&#x201d; entirely by altering portions of the images corresponding to the reference features.</p><p id="p-0031" num="0030">In accordance with another embodiment, a surgical tool for use with a robotic surgery system is provided. The surgery system includes an imaging device for capturing an image of the surgical tool during use and a processor coupled with the imaging device for processing the captured image so as to determine image-derived positional information for the surgical tool. The surgical tool includes multiple markers, where each marker has at least one identification feature. The identification features of each marker differ sufficiently for the surgery system to discriminate between the markers based on images encompassing the markers.</p><p id="p-0032" num="0031">In accordance with another embodiment, a robotic surgical method is provided. The method includes capturing a first image of a surgical tool, the surgical tool including multiple features defining multiple markers where each marker has a predetermined positional relationship with the surgical tool, the first image including one of the markers; determining a position for the imaged marker by processing the first image; generating an estimated tool state for the tool by using at least one prior tool state from a prior image of the tool or joint data from a robotic actuation system effectuating movement of the tool; and determining a tool state for the tool using the position of the imaged marker, the predetermined positional relationship between the surgical tool and the imaged marker, and the estimated tool state for the tool.</p><p id="p-0033" num="0032">In accordance with another embodiment, a surgical robotic tool tracking method is provided. The method includes: directing illuminating light from a light source onto a robotic surgical tool within a patient body where the illuminating light includes a visible light spectrum, the tool including a plurality of primitive features having known positions on the tool, and where each feature includes a spherical reflective surface; capturing stereo images of a plurality of the primitive features when the tool is within the patient body, the stereo images being captured by a stereo image capture device adjacent the illumination source so that the illumination light reflected from the imaged primitive features towards the image capture device substantially aligns with spherical centers of the surfaces of the imaged primitive features; and determining a position for the tool by processing the stereo images so as to locate the spherical centers of the imaged primitive features by using the reflected light.</p><p id="p-0034" num="0033">A surgical robotic tool tracking method can involve a number of options. Determining a position for the tool by processing the image can be accomplished so as to identify at least one of the primitive features by using specular reflected light. The stereo images can be processed so as to determine 3-D positional data for the spherical centers of the imaged primitive features. A constellation algorithm can be used to identify a pattern of primitive features in the first image. A method can include generating an estimated tool state for the tool by using at least one prior tool state from a prior image of the tool or joint data from a robotic actuation system effecting movement of the tool, and using the estimated tool state in the constellation algorithm. A method can include: capturing stereo images for multiple time points; generating an estimated tool state for the multiple time points; and rejecting any incompatible pattern detection using a robust estimation technique, which can be a Random Sample Consensus (RANSAC) technique. A model based image signature can be used in the identification of a primitive feature in an image. A method can include: processing the stereo images so as to identify a natural feature of the tool in both of the images; determine a 3-D position for the identified natural feature; and determine an image-derived tool state by using the 3-D position for the natural feature in combination with the 3-D positional data for the imaged primitive features. A method can include generating an estimated tool state for the tool by using at least one prior tool state from a prior image of the tool or joint data from a robotic actuation system effecting movement of the tool, and using the estimated tool state to reject an incompatible pattern detection. At least one of the primitive feature can include convex or concave spherical reflective surface aligned with a joint axis of the tool and the reflective surface can be defined by a joint structure.</p><p id="p-0035" num="0034">In accordance with another embodiment, a minimally-invasive robotic surgery system is provided. The system includes: a robotic surgical tool having multiple primitive features having know positions on the tool, where each feature includes a spherical reflective surface; a light source oriented to transmit illumination light within a patient body; a stereo image capture device adjacent the illumination source so that the illumination light reflected from the primitive features toward the image capture device substantially aligns with a spherical centers of the spherical surfaces; and a processor coupled with the image capture device and configured for determining a position for the tool by processing stereo images so as to locate the spherical centers of the primitive features by using the reflected light.</p><p id="p-0036" num="0035">A minimally-invasive robotic surgery system can involve a number of options. For example, a system can include a tangible medium that includes machine-readable instructions executable by the processor for processing the stereo images. The processor can be configured to determine a position for the tool by processing the stereo images so as to identify at least one of the multiple primitive features by using specular reflected light. A primitive feature can be aligned with a joint axis of the tool and can include a reflective spherical surface defined by a joint structure. The processor can be further configured so as to determine 3-D positional data for the spherical centers of the imaged primitive features by processing the stereo images. The imaging device can include a stereoscopic endoscope. A spherical reflective surface can include a convex or concave surface.</p><p id="p-0037" num="0036">In accordance with another embodiment, a surgical tool for use with a robotic surgery system is provided. The system includes: a stereo imaging device for capturing stereo images of the surgical tool during use; and a processor coupled with the imaging device for processing the captured stereo images so as to determine image-derived positional information for the surgical tool. The surgical tool includes multiple primitive features with each primitive feature including a spherical reflective surface.</p><p id="p-0038" num="0037">In accordance with another embodiment, an object tracking system is provided. The system includes: an object having multiple primitive features with each primitive feature including a spherical reflective surface; a light source oriented to transmit illumination light toward the object; a stereo image capture device for capturing stereo images of the object, the image device being disposed adjacent the illumination source so that illumination light reflected from a plurality of the primitive features towards the image capture device substantially aligns with spherical centers of the spherical surfaces, the image device outputting image data for the stereo images; and a processor coupled with the image capture device and configured to process the image data so as to: determine 3-D position data for three or more of the imaged primitive features; and determine a position for the tool by processing the 3-D position data.</p><p id="p-0039" num="0038">In accordance with another embodiment, a method for estimating the pose of a surgical tool having three or more substantially corner-less primitive features having known positions on the tool is provided. The method includes: using a stereoscopic endoscope to capture stereo images of three or more of the primitive features, the stereo images including a first image and a second image; extracting at least three primitive feature images from the first image; extracting at least three primitive feature images from the second image; determining correspondences between extracted primitive feature images by using image signatures; using the determined correspondences to determine 3-D positions for at least three of the primitive features; identifying a pattern of extracted primitive feature images that corresponds to a pattern of the tool primitive features; and estimating a pose for the surgical tool by using the identified pattern and the determined 3-D positions.</p><p id="p-0040" num="0039">For a fuller understanding of the nature and advantages of the present invention, reference should be made to the ensuing detailed description and accompanying drawings. Other aspects, objects and advantages of the invention will be apparent from the drawings and detailed description that follows.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a plan view of a minimally-invasive robotic surgery system being used to perform a surgery, in accordance with embodiments.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a front view of a surgeon's control console for a robotic surgery system, in accordance with embodiments.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a front view of a robotic surgery system vision cart, in accordance with embodiments.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>4</b></figref> diagrammatically illustrates a robotic surgery system, in accordance with embodiments.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a front view of a patient side cart (surgical robot) of a robotic surgery system, in accordance with embodiments.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIGS. <b>5</b>B and <b>5</b>C</figref> are respective front views of an 8 mm shaft robotic surgery tool and a 5 mm shaft robotic surgery tool, in accordance with embodiments.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>6</b></figref> diagrammatically illustrates relative differences between a kinematics-estimated tool pose, an image-derived estimated tool pose, and a true tool pose, in accordance with embodiments.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>7</b></figref> diagrammatically illustrates variations with time of a raw kinematics-estimated tool pose, an image-derived estimated tool pose, an estimate of the true tool pose, and a true tool pose, in accordance with embodiments.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a diagram illustrating surgical instruments working in close and far range to a stereoscopic imaging device.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow diagram of a tool tracking method employing imaging of markers, in accordance with embodiments.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>10</b></figref> diagrammatically illustrates a system for tracking tools with markers, in accordance with embodiments.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flow diagram of a tool tracking method for determining a tool state showing steps for processing stereoscopic images of markers and kinematics data to generate a corrected-kinematics estimated tool state using an image-derived pose offset, in accordance with embodiments.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>12</b>A</figref> diagrammatically illustrates a marker pattern that can be used on a surgical instrument to provide additional reference points, in accordance with embodiments.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIGS. <b>12</b>B and <b>12</b>C</figref> are images of surgical instruments with the marker pattern of <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> during a minimally-invasive robotic surgery, in accordance with embodiments.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIGS. <b>13</b>A, <b>13</b>B, and <b>13</b>C</figref> illustrate versions of a 2-D marker, in accordance with embodiments.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIGS. <b>14</b>A and <b>14</b>B</figref> respectively illustrate 2-D markers that can be used for an 8 mm instrument shaft and an 8 mm instrument shaft with the markers, in accordance with embodiments.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIGS. <b>15</b>A and <b>15</b>B</figref> respectively illustrate 2-D markers that can be used for a 10 mm (ultrasound) instrument shaft and a 10 mm (ultrasound) instrument shaft with the markers, in accordance with embodiments.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> respectively illustrate 2-D markers that can be used for a 5 mm instrument shaft and a 5 mm instrument shaft with the markers, in accordance with embodiments.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIGS. <b>17</b>A and <b>17</b>B</figref> respectively illustrate 2-D markers that can be used for an ultrasound transducer and an ultrasound transducer with the markers, in accordance with embodiments.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flow diagram of a method for processing stereoscopic images of tool tracking markers, in accordance with embodiments.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flow diagram of a method for processing stereoscopic images of 2-D tool tracking markers, in accordance with embodiments.</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIGS. <b>20</b>A, <b>20</b>B, <b>20</b>C, <b>20</b>D, and <b>20</b>E</figref> illustrate steps for processing an image of a 2-D tool tracking marker, in accordance with embodiments.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIGS. <b>21</b>A and <b>21</b>B</figref> illustrate how markers at multiple locations can support different operational ranges, in accordance with embodiments.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>22</b>A</figref> diagrammatically illustrates a one-dimensional (1-D) tool tracking marker, in accordance with embodiments.</p><p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. <b>22</b>B</figref> diagrammatically illustrates a surgical tool having multiple 1-D tool tracking markers, in accordance with embodiments.</p><p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. <b>22</b>C</figref> diagrammatically illustrates another 1-D tool tracking marker, in accordance with embodiments.</p><p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a flow diagram for processing stereoscopic images of 1-D tool tracking markers, in accordance with embodiments.</p><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>24</b></figref> diagrammatically illustrates primitive features, each feature having a reflective concave spherical surface, being illuminated/imaged from three different directions, in accordance with embodiments.</p><p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. <b>25</b></figref> diagrammatically illustrates primitive features, each feature having a reflective convex spherical surface, in accordance with embodiments.</p><p id="p-0070" num="0069"><figref idref="DRAWINGS">FIGS. <b>26</b>A and <b>26</b>B</figref> are endoscopic images of prototype surgical tools having point configuration markers with reflective spherical surfaces, in accordance with embodiments.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a flow diagram of a tool tracking method that employs processing of stereoscopic images of a surgical tool having primitive features with reflective spherical surfaces, in accordance with embodiments.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIGS. <b>28</b>A and <b>28</b>B</figref> illustrate discernible tool markers, in accordance with embodiments.</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIGS. <b>29</b>A, <b>29</b>B, <b>29</b>C, <b>29</b>D, <b>29</b>E, <b>29</b>F, <b>29</b>G, and <b>29</b>H</figref> illustrate some exemplary approaches that can be used to incorporate positional and/or identification information within a discernible marker, in accordance with embodiments.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIGS. <b>30</b>A, <b>30</b>B, <b>30</b>C, and <b>30</b>D</figref> illustrate some additional exemplary discernible marker designs, in accordance with embodiments.</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flow diagram of a tool tracking method that employs processing of an image of a surgical tool having a discernible marker, in accordance with embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0076" num="0075">In accordance with embodiments, improved methods and systems are provided for three-dimensional (3-D) object tracking using image-derived data from one or more object located reference features. Such methods and systems can be particularly advantageous when employed for tracking surgical tools during minimally-invasive robotic surgery.</p><p id="p-0077" num="0076">The following terms are used herein. A &#x201c;feature&#x201d; is a general term used to denote whatever useful information can be extracted from an image. A &#x201c;primitive feature&#x201d; is used to denote small or simple features that can be extracted locally from an image (e.g., a salient blob, a small circle, a dot, a bar, etc.). A primitive feature is in contrast with a &#x201c;composite feature&#x201d;, where multiple primitive features are used to create a composite feature. A &#x201c;marker&#x201d; is some discernible (typically visible) pattern used for locating an object or computing the pose of an object. A marker can be composed of multiple primitive features. A &#x201c;tool state&#x201d; is a general term used to denote any information relating to a tool, such as pose (position and orientation), as well as related information for any articulated parts of the tool or any robotic or positioning system used to manipulate the tool. For example, a tool state can include the pose of the tool, robotic joint parameters of a robotic actuation system used to effectuate movement of the tool, articulated end effecter positions, velocity of the tool, acceleration of the tool, forces on the tool, and the like. A &#x201c;localizer feature&#x201d; is a feature that can be processed so as to provide positional information for the feature. Multiple primitive localizer features can be processed so as to provide position and orientation (i.e., alignment) information for the rest of the features of a pattern. A &#x201c;model&#x201d; is a general term used to refer to any prior knowledge of the physical tool being tracked. This can include a physical model, a virtual model, the locations of the features on the tool and their properties, and the like.</p><p id="p-0078" num="0077">One advantage, for example, of a tool-located reference feature is that it provides at least one feature that can be more easily detected within an image. Some tool use environments, such as minimally-invasive robotic surgery, present challenges to the use of image-derived tool tracking, such as the presence of bodily fluids on the tool and/or the presence of cauterization vapors, which can result in partial or total occlusion of the tool. By configuring a tool to include one or more reference features, the impact of the environment on image-derived tool tracking can be reduced.</p><p id="p-0079" num="0078">Another advantage, for example, is that multiple reference features can be used to define a marker that includes position/orientation information and/or identification information. With sufficient position/orientation information, a 3-D pose (position and orientation) of an object (e.g., tool) can be determined. Position and orientation information can be included within a single marker, or it can be included within a combination of markers. Identification information can be used to relate an imaged marker with associated positional relationship data for that imaged marker and the object. Such identification can be used to distinguish between imaged markers where multiple markers features are used on the object.</p><p id="p-0080" num="0079">Another advantage, for example, is that multiple markers can be employed so as to provide redundancy. For example, a tool can include multiple markers distributed around the tool so as to provide reference features regardless of the particular orientation of the tool during use. Any single marker in a collection of markers can include a number of features so as to provide positional and orientation information for the determination of the 3-D pose of the tool. Any particular marker in a collection of markers can include identification features associated with an identification for the particular marker. The redundancy provided by multiple markers can contribute to a more accurate pose estimation by providing multiple pose estimations that can be averaged so as to reduce random error that may arise during feature localization.</p><p id="p-0081" num="0080">Another advantage, for example, is that redundant features can be employed so as to provide for error checking. For example, a marker can include redundant features defining error-checking data. The error-checking data can be checked for consistency with a identification for the marker so as to validate the determined identification. Additionally, the redundant features can include check sum data, which can be used to guard against misidentification due to occlusion (or non-imaging in general) of one or more marker features. The explicit error-checking mechanism provides confidence in the detection of such markers by reducing the chance of falsely detecting a marker from background clutter or accidental alignment of markers close by to a very low probability.</p><p id="p-0082" num="0081">A determined 3-D pose can be used to modify a displayed image of the tool in a variety of ways. For example, the displayed image can be modified so that the added reference features are less visually obtrusive, or are &#x201c;erased&#x201d; entirely by altering portions of the images located at the reference features.</p><heading id="h-0006" level="2">Minimally-Invasive Robotic Surgery</heading><p id="p-0083" num="0082"><figref idref="DRAWINGS">FIG. <b>1</b></figref> provides an appropriate starting point for a discussion of the present invention. <figref idref="DRAWINGS">FIG. <b>1</b></figref> is a plan view illustration of a Minimally-Invasive Robotic Surgical (MIRS) system <b>10</b>, typically used for performing a minimally-invasive diagnostic or surgical procedure on a Patient <b>12</b> who is lying on an Operating table <b>14</b>. The system can include a Surgeon's Console <b>16</b> for use by a Surgeon <b>18</b> during the procedure. One or more Assistants <b>20</b> may also participate in the procedure. The MIRS system <b>10</b> can further include a Patient Side Cart <b>22</b> (surgical robot), and a Vision Cart <b>24</b>. The Patient Side Cart <b>22</b> can manipulate at least one removably coupled instrument or tool assembly <b>26</b> (hereinafter simply referred to as a &#x201c;tool&#x201d;) through a minimally invasive incision in the body of the Patient <b>12</b> while the Surgeon <b>18</b> views the surgical site through the Console <b>16</b>. An image of the surgical site can be obtained by an endoscope <b>28</b>, such as a stereoscopic endoscope, which can be manipulated by the Patient Side Cart <b>22</b> so as to orient the endoscope <b>28</b>. The Vision Cart <b>24</b> can be used to process the images of the surgical site for subsequent display to the Surgeon <b>18</b> through the Surgeon's Console <b>16</b>. The number of surgical tools <b>26</b> used at one time will generally depend on the diagnostic or surgical procedure and the space constraints within the operating room among other factors. If it is necessary to change one or more of the tools <b>26</b> being used during a procedure, an Assistant <b>20</b> may remove the tool <b>26</b> no longer being used at the time from the Patient Side Cart <b>22</b>, and replace it with another tool <b>26</b> from a tray <b>30</b> in the operating room. An illustrative example of system <b>10</b> is the da Vinci&#xae; Surgical System manufactured by Intuitive Surgical, Inc., Sunnyvale, Calif.</p><p id="p-0084" num="0083"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a front view of the Surgeon's Console <b>16</b>. The Surgeon's Console <b>16</b> includes a left eye display <b>32</b> and a right eye display <b>34</b> for presenting the Surgeon <b>18</b> with a coordinated stereo view of the surgical site that enables depth perception. The Console <b>16</b> further includes one or more control devices <b>36</b>, which in turn cause the Patient Side Cart <b>22</b> (shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) to manipulate one or more tools. Preferably, control devices <b>36</b> will provide the same degrees of freedom as their associated tools <b>26</b> (shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) so as to provide the Surgeon with telepresence, or the perception that the control devices <b>36</b> are integral with the tools <b>26</b> so that the Surgeon has a strong sense of directly controlling the tools <b>26</b>. To this end, position, force, and tactile feedback sensors (not shown) are preferably employed to transmit position, force, and tactile sensations from the tools <b>26</b> back to the Surgeon's hands through the control devices <b>36</b>.</p><p id="p-0085" num="0084">The Surgeon's Console <b>16</b> is usually located in the same room as the patient so that the Surgeon may directly monitor the procedure, be physically present if necessary, and speak to an Assistant directly rather than over the telephone or other communication medium. However, it will be understood that the Surgeon can be located in a different room, a different building, or other remote location from the Patient, thus allowing for remote surgical procedures.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a front view of a Vision Cart <b>24</b>. A Vision Cart <b>24</b> can be coupled with the endoscope <b>28</b> and can include a processor to process captured images for subsequent display, such as to a Surgeon on the Surgeon's Console or on any other suitable display located locally and/or remotely. For example, where a stereoscopic endoscope is used, the Vision Cart <b>24</b> can process the captured images so as to present the Surgeon with coordinated stereo images of the surgical site. Such coordination can include alignment between the opposing images and can include adjusting the stereo working distance of the stereoscopic endoscope. As another example, image processing can include the use of previously determined camera calibration parameters so as to compensate for imaging errors of the image capture device, such as optical aberrations. Exemplary details of some of the possible image processing that can used are described in numerous patents and patent applications assigned to Intuitive Surgical, Inc., including, for example U.S. Pat. No. 7,277,120 (filed Mar. 7, 2004), the full disclosure of which is included herein by reference.</p><p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. <b>4</b></figref> diagrammatically illustrates a robotic surgery system <b>50</b> (such as MIRS system <b>10</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>), showing communication paths between components. As discussed above, Surgeon's Console <b>52</b> (such as Surgeon's Console <b>16</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can be used by a Surgeon to control a Patient Side Cart (Surgical Robot) <b>54</b> (such as Patent-Side Cart <b>22</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) during a minimally-invasive procedure. The Patient Side Cart <b>54</b> can use an imaging device, such as a stereoscopic endoscope, to capture images of the procedure site and output the captured images to a Vision Cart <b>56</b> (such as Vision Cart <b>24</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). As discussed above, a Vision Cart <b>56</b> can process the captured images in a variety of ways prior to any subsequent display. Alternatively, the Patient Side Cart <b>54</b> can output the captured images for processing outside the Vision Cart <b>56</b>. For example, the Patient Side Cart <b>54</b> can output the captured images to a processor <b>58</b>, which can be used to process the captured images. The images can also be processed by a combination the Vision Cart <b>56</b> and the processor <b>58</b>, which can be coupled together so as to process the captured images jointly, sequentially, and/or combinations thereof. One or more separate displays <b>60</b> can also be coupled with the processor <b>58</b> and/or the Vision Cart <b>56</b> for local and/or remote display of images, such as images of the procedure site, or any other related images.</p><heading id="h-0007" level="2">Robotic Surgery Tool Tracking</heading><p id="p-0088" num="0087"><figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B, and <b>5</b>C</figref> show a Patient Side Cart <b>22</b>, an 8 mm shaft surgical tool <b>62</b>, and a 5 mm shaft surgical tool <b>64</b>, respectively. Surgical tools <b>62</b> and <b>64</b> are examples of surgical tools <b>26</b>. The Patient Side Cart <b>22</b> shown provides for the manipulation of three surgical tools <b>26</b> and an imaging device <b>28</b>, such as a stereoscopic endoscope used for the capture of images of the site of the procedure. Manipulation is provided by robotic mechanisms having a number of robotic joints. The imaging device <b>28</b> and the surgical tools <b>26</b> (e.g., the end effectors <b>66</b>) can be positioned and manipulated through incisions in the patient so that a kinematic remote center is maintained at the incision so as to minimize the size of the incision required. Images of the surgical site can include images of distal ends of the surgical tools <b>26</b> when they are positioned within the field of view of the imaging device <b>28</b>.</p><p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. <b>6</b></figref> diagrammatically illustrates relative differences between a kinematics-estimated surgical tool pose <b>70</b>, an image-derived estimated surgical tool pose <b>72</b>, and a true surgical tool pose <b>74</b>. As discussed above, accurate information of a tool's 3-D pose is important for a number of image-guided surgical and user-interface applications. When kinematic joint sensor data is used to estimate the tool's 3-D pose, a significant amount of error can be introduced. Although many sources of error exist, such as random sensor noise, a predominant portion of this error can be attributed to offset error, which arises due to fixed differences between a kinematic joint's true position and a kinematic joint's indicated position as indicated by kinematic joint sensor data. Offset errors in kinematic joints located farther away from the tool's distal working end typically contribute more to the total offset error than joints located closer to the tool's distal working end. As a result, a kinematics-estimated pose <b>70</b> can deviate significantly from a true pose <b>74</b> for the surgical tool. For example, a kinematics-estimated tool pose for an exemplary surgical robot may differ from a true pose for the tool by up to 10 to 15 mm on a well-calibrated system, and even more if the system has not been recently and/or accurately calibrated. As a result, it can be advantageous to use non-kinematics based methods to obtain more accurate tool pose estimates, which can be used to determine a positional correction for use in correcting the kinematics estimates.</p><p id="p-0090" num="0089">An image-derived tool pose estimate <b>72</b> can be significantly more accurate than a raw kinematics-estimated tool pose <b>70</b>. This increased accuracy is diagrammatically illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> by the relatively small positional difference between the image-derived tool pose <b>72</b> and the true tool pose <b>74</b> shown. However, an image-derived tool pose <b>72</b> may be available at a significantly lower rate (e.g., less than or equal to approximately 30 frames per second) than a raw kinematics-estimated tool pose (e.g., updated at an approximately 1333 Hz rate) due to a number of factors, such as required image processing times, and at certain times it may not be available at all where the tool is outside the view of the imaging device, or is occluded for some reason, such as by patient tissue, by patient bodily fluids, and/or by opaque or translucent vapors due to cauterization, or the like.</p><p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. <b>7</b></figref> diagrammatically illustrates variations with time between various estimated poses and the true pose <b>76</b> of a tool. As shown, a raw-kinematics estimate <b>78</b> for a pose for the tool can deviate significantly from the true pose <b>76</b>. As discussed above, a predominant portion of this deviation may be associated with a fixed offset error, which is illustrated by way of the substantially constant offset between the raw-kinematics estimate <b>78</b> and the true pose <b>76</b>. Due to the relatively high rate of availability of kinematics sensor data, the raw kinematics-estimated pose <b>78</b> can be available at a high rate, such as 1333 times per second. In contrast, an image-derived pose estimate <b>80</b> may be available at a lower rate, but can be relatively accurate. Advantageously, a combination of kinematics-estimated poses and image-derived estimated poses can be used to determine a true pose estimate <b>82</b>, which may track the true pose <b>76</b> relatively well. Details of the use of a combination of raw kinematics-estimated poses and image-derived estimated poses for the determination of a true pose estimate <b>82</b> are described in numerous patents and patent applications assigned to Intuitive Surgical, Inc. including, for example in U.S. Pat. App. Pub. No. 2006/0258938 A1 (filed May 16, 2005), the full disclosure of which is included herein by reference.</p><p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates variations that can occur in the portion of a surgical instrument <b>84</b> (e.g., the tool <b>26</b>) that may be within view of an imaging device <b>86</b>, such as the stereoscopic endoscope <b>28</b>. The imaging device <b>86</b> can include two overlapping fields of view <b>88</b> used to capture images of the procedure site and any surgical instrument portion within a field of view <b>88</b>. When the instrument <b>84</b> is working in far range from the imaging device <b>86</b>, a greater portion of the surgical instrument <b>84</b> may be included within the captured image, but the relative size of any imaged tool feature(s) will be smaller as compared with the field of view as a whole. When the instrument <b>84</b> is working in close range to the imaging device <b>86</b>, a relatively smaller portion may be included within the captured image, but the relative size of any imaged tool feature(s) will be larger as compared with the field of view as a whole.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow diagram of a tool tracking method <b>100</b> employing imaging of one or more markers attached to a tool. As will be described in more detail below, a tool, such as the tool <b>26</b>, can include one or more markers so as to provide features that can be imaged and processed to provide an image-derived tool pose estimate. In step <b>102</b>, one or more images of the tool and marker are captured. The captured image(s) can be a single image obtained through the use of a mono-vision imaging device or stereo images obtained with a stereo-vision imaging device, such as a stereo endoscope. In step <b>104</b>, the captured image(s) are processed so as to determine positional data associated with one or more marker(s). The positional data can include the location of one or more marker features within the image(s). At least where two or more markers having different identifications are used on one or more surgical tools, the image can be processed in step <b>106</b> to determine the identification of one or more of the markers. As will be described below in more detail, a marker can contain one or more identification features that can be imaged and subsequently processed to determine the identification of the marker. In step <b>108</b>, the positional data and any identification can be used to determine tool state data, such as the tool's 3-D pose. Additional information, such as relative positional data between a marker and the tool can be used during the determination of tool state data. For example, relative 3-D pose offset data (offset position and offset orientation) between the 3-D pose of the marker and the 3-D pose of the tool can provide the relative positional data.</p><p id="p-0094" num="0093">The tool state data determined in step <b>108</b> can be rejected if it is insufficiently consistent with an expected tool state data range. For example, an estimated 3-D pose for the tool can be generated by using a prior image of the tool or joint data from a robotic actuation system effecting movement of the tool. This estimated 3-D pose can be compared with the tool state data determined in step <b>108</b> so as to verify that they are consistent with each other. Any inconsistency can be evaluated to determine whether to reject the determined tool state data as being an outlier.</p><p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. <b>10</b></figref> diagrammatically illustrates a system <b>110</b> for tracking a tool with marker(s) <b>112</b>. The system includes at least one tool with a marker(s) <b>112</b>, similar to the tool <b>26</b>. An imaging device <b>114</b>, such as the stereoscopic endoscope <b>28</b>, is used to capture one or more image(s) of the tool with marker(s) <b>112</b>. The imaging device <b>114</b> is coupled with a processor <b>116</b> and transfers image data to the processor <b>116</b> in response to imaging the tool with marker(s) <b>112</b>. The processor <b>116</b> is configured to process the received image data so as to generate tool state data <b>118</b>, which can include an estimated 3-D pose for the tool with marker(s) <b>112</b>.</p><p id="p-0096" num="0095"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a flow diagram of a tool tracking method <b>120</b> for determining a tool state showing steps for processing stereo images of markers and raw-kinematics data to generate a corrected kinematics-estimated tool state using an image-derived 3-D pose offset, in accordance with an embodiment. Because of the higher update rate of the joint sensor data used to generate an estimated tool state from raw kinematics data <b>124</b> as compared to an image-derived estimated tool state, an image-derived pose offset can be combined with an estimated tool state from raw kinematics to generate a corrected kinematics estimated tool state. In this way, a series of corrected kinematics estimated tool states can be generated using a single pose offset combined with a corresponding series of estimated tool states from raw kinematics data <b>124</b>. The pose offset can be updated over time in response to new image data <b>122</b>.</p><p id="p-0097" num="0096">The determination of a pose offset starts in step <b>126</b> with the acquisition of image data of the tool with marker(s) and corresponding raw kinematics data <b>124</b> for the tool with marker(s). As shown, the image data <b>122</b> can include left image data and right image data, but it should be understood that a single image of one or more marker features can be processed so as to generate image-derived positional information useful in generating a pose offset. For example, the location within an image of a single marker feature can be compared with an expected location within the image for the single marker feature so as to generate a one-dimensional (1-D) correction for the previous pose offset. Where a single image contains four non-collinear features, the locations of the four non-collinear features within the image are sufficient to determine an image-derived 3-D pose for the tool. Where stereo images contain three non-collinear features, the locations of the three non-collinear features within the stereo images are sufficient to determine an image-derived 3-D pose for the tool. The raw kinematics data <b>124</b> can include basic sensor data, such as kinematic joint position parameters, and/or can include a current raw kinematics-derived tool state.</p><p id="p-0098" num="0097">In step <b>128</b>, the left image and the right image are processed so as to detect marker features. The position of the marker(s) feature(s) within the left image and the position of the marker(s) feature(s) within the right image are used in step <b>130</b> to generate 3-D coordinates for the marker(s) feature(s). For details of stereo triangulation, see for instance chapter 12 of R. Hartley and A. Zisserman, &#x201c;Multiple View Geometry in Computer Vision,&#x201d; Cambridge University Press, 2000. As will be described in more detail below with respect to certain embodiments, with some markers having an identification, a marker can include at least one identification feature that can be processed to determine the identification of the marker.</p><p id="p-0099" num="0098">In step <b>132</b>, the 3-D coordinates for the marker(s) features(s) can be processed in combination with any identification(s) of markers(s) so as to determine an image-derived tool state. Although images of a number of markers can be used to provide sufficient pose information for determining a 3-D pose for the tool, it can be advantageous for a single marker to contain a sufficient number of features for determining a 3-D pose for the tool. Additionally, it can be advantageous for each marker on a tool to have an identification that differs from neighboring markers. With such a marker, an image-derived tool state can be determined by determining the 3-D pose of the marker, determining the identification of the marker, and using data regarding how the identified marker is positioned and oriented on the tool. It is appreciated that variations of this approach can be used. For example, features from a combination of markers can be combined to determine the 3-D pose of the combination of markers, which can be combined with data regarding how the features from the combination of markers are positioned and oriented on the tool. During this process, a corrected kinematics estimated tool state (from a previously determined pose offset) can be compared against the image-derived estimated tool state so as to reject any image-derived estimated tool states that differ too much from the corrected kinematics estimated tool state.</p><p id="p-0100" num="0099">In step <b>134</b>, the pose offset is determined so that it can be combined with a raw kinematics data <b>124</b> estimated tool state to obtain a corrected-kinematics estimated tool state. It is appreciated that a variety of approaches may be used to determine the pose offset. For example, the pose offset can be calculated as a difference between an estimate of the true tool pose (shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>) and a corresponding raw kinematics data <b>124</b> estimated tool state for substantially the same point in time. As a further example, the pose offset can be calculated as a difference between an image-derived estimated tool state and a corresponding raw kinematics data <b>124</b> estimated tool state for substantially the same point in time.</p><p id="p-0101" num="0100">In step <b>136</b>, a corrected-kinematics based tool state is determined. As discussed above, a single pose offset can be used to correct one or more raw kinematics data <b>124</b> based tool states so as to compensate when raw kinematics data <b>124</b> based tool states are available at a higher rate as compared to image-derived tool states. The corrected kinematics can then be provided back to the start of the process (step <b>126</b>), where the &#x201c;fetched&#x201d; current image and kinematics data can include image data, raw kinematics data, and the current pose offset and/or corrected-kinematics data.</p><heading id="h-0008" level="2">Marker Design</heading><p id="p-0102" num="0101">A goal in the use of tool markers is to provide a level of robustness and confidence with regard to an image-derived tool state that is difficult to achieve without the use of markers, especially for a critical application such as image-guided robotic surgery. As such, in an embodiment, a marker design: (i) provides sufficient constraint for tool pose estimation; (ii) is distinguishable under various realistic conditions (e.g., viewpoint, lighting) and under various realistic backgrounds; (iii) works with different operational ranges of the tool; (iv) is resilient and/or robust to partial occlusions; (v) is visually acceptable; (vi) is easily manufactured; (vii) is compact enough to allow the use of multiple markers within the space provided (e.g., enough to supply a sufficient level of redundancy), and (viii) can be extracted by an image analysis algorithm.</p><p id="p-0103" num="0102">One-dimensional (1-D) and two-dimensional (2-D) markers can provide a number of advantageous aspects. These include: (i) the use of separate localizer and identification features that support more efficient detection and parsing; (ii) the use of explicit coding schemes for primitive feature locations; (iii) the use of explicit error checking and error correction; (iv) the ability to create a large number of different patterns; (v) the use of a compact marker with dense information; and (vi) the use of a &#x201c;hypothesize and test&#x201d; detection algorithm framework, which scales very well with the total number of marker patterns.</p><heading id="h-0009" level="2">Two-Dimensional Marker Designs</heading><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIGS. <b>12</b>A, <b>12</b>B, and <b>12</b>C</figref> illustrate a marker design <b>140</b>, tools <b>146</b> employing the marker design <b>140</b> operating at a far range from the imaging device, and a tool employing the marker design <b>140</b> operating in close range to the imaging device, respectively. The marker design <b>140</b> of <figref idref="DRAWINGS">FIG. <b>12</b>A</figref> includes three groups of identical patterns <b>142</b> that can be placed at 120-degree intervals around a tool shaft. Each pattern <b>142</b> has 16 circles in 8 rows and 2 columns on a yellow background. Each pattern <b>142</b> can be aligned with the longitudinal axis of a tool shaft so that all of the center points of the 16 circles reside on a single plane. The two columns of circles <b>144</b> are spaced relatively closer as compared to the spacing between each pattern <b>142</b>. This differential spacing, combined with a corrected-kinematics estimated tool state, can be used to identify the specific pattern <b>142</b> in an image. Since the three patterns <b>142</b> are arranged around a tool at 120-degree intervals, there may be a sufficient differential between identical images of the overall marker <b>140</b>, given the inherent level of accuracy of a corrected-kinematics estimated tool state, to discriminate between imaged patterns <b>142</b>. Marker <b>140</b> provides an example how marker features, such as the identical patterns <b>142</b> shown, can be arranged so as to present features that can be imaged so as to determine a tool state. Drawbacks of this marker design include: (i) the yellow background is very bright under surgical illumination and appears intrusive; (ii) although the marker <b>140</b> covers the end of the instrument shaft, in most cases it is not fully visible during surgery; (iii) there is a need to rely on the assumption that the maximum error in an estimated tool roll angle is less than 60 degrees to associate the image observation with one of the three patterns <b>142</b>; and (iv) it is difficult to add more markers on another part of the instrument since the markers are difficult to differentiate.</p><p id="p-0105" num="0104"><figref idref="DRAWINGS">FIGS. <b>13</b>A, <b>13</b>B, and <b>13</b>C</figref> illustrate three embodiments of a 2-D marker <b>150</b>, <b>170</b>, <b>190</b> that can be used on a tool for tracking the tool's state. A 2-D marker includes primitive features arranged in two dimensions. Some of the features can serve as localizer features, and the other features can serve as identification features. Localizer features provide positional or orientation information to determine pose/alignment of the marker, and the identification features are used to differentiate different markers. The identification features can follow a certain coding scheme and can include redundant information for error checking and/or correction. By using compact 2-D markers, multiple markers can be arranged in different ways to fit the geometric shapes of different tools. The markers can also be arranged at different locations on the tool shaft to cope with different operational ranges. The markers can also be used to estimate the roll of the tool or instrument. Compared to multiple 1-D patterns stacked together, a 2-D marker pattern may advantageously provide better information compactness and locality.</p><p id="p-0106" num="0105">These 2-D self-discriminative markers have been designed to meet a number of considerations. The size of the markers has been selected to be as small as possible given the constraint of image resolution. These 2-D markers do not rely on a specific color, because color can be an unreliable feature due to dependence on lighting and white balance. Additionally, some colors can be visually intrusive. These 2-D markers were designed to include features that could be reliably detected in images, because some features are easier to detect than others.</p><p id="p-0107" num="0106">The above considerations resulted in designs for these 2-D markers that included certain design features. For example, these 2-D markers were designed to include localizer shapes (the black circles <b>152</b>, <b>154</b>, <b>156</b>, <b>158</b>; <b>172</b>, <b>174</b>, <b>176</b>, <b>178</b>; the black bar <b>160</b>; <b>180</b>; and the saddle points <b>192</b>) and a number of information bits or identification features (nine gray dots <b>162</b> in <figref idref="DRAWINGS">FIG. <b>13</b>A</figref>, thirteen gray dots <b>182</b> in <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>, and the 16 dots <b>194</b> in <figref idref="DRAWINGS">FIG. <b>13</b>C</figref>). (The numbers in the circles and dots in <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> are used for convenience of reference only.) A circle was chosen as a localizer shape because its topology (a dark blob inside a bright blob, or vice versa) is invariant to view point and it usually does not appear in the background. Other such features include certain corners, especially a saddle point <b>192</b> as shown in <figref idref="DRAWINGS">FIG. <b>13</b>C</figref>. Although the marker designs do not restrict how the information bits <b>162</b>, <b>182</b>, <b>194</b> (identification features) are used, they can be divided into data and error checking bits. The presence or absence of the dots corresponding to data bits can be used to designate a number of unique codes (or identifications). The presence or absence of the gray dots corresponding to error checking bits can be used to validate a code or identification determination. The size of the marker patterns <b>150</b>, <b>170</b>, <b>190</b> were selected considering a desired working distance range for minimally-invasive robotic surgery. However, it is appreciated that if the instrument usually works closer or farther away from an imaging device, the size of the pattern could be made smaller or larger accordingly. Although the markers <b>150</b> and <b>170</b> shown in <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> include a white background and dark features, as can be seen in subsequent figures, a dark background with white features was selected based on clinical feedback on the visual experience. However, it is appreciated that a white background and dark features can also be used.</p><p id="p-0108" num="0107">When placed on the surface of an instrument of a certain diameter, the 3-D geometry of the pattern (the 3-D coordinates of all the circles and dots in a local coordinate system) is fixed and known. If a single image is used to provide 2-D coordinates, coordinates of four points are sufficient to determine the pose of the marker (and hence the tool). If stereo images are used to provide 3-D coordinates, coordinates of three points are sufficient to determine the pose of the instrument. Accordingly, the design of these 2-D markers <b>150</b> and <b>170</b> includes four circles, thereby providing a sufficient number for either single image or stereo image processing. The dots can also be used for object pose estimation. Also, although the markers can be placed on a tool in any number of different orientations, it is presently preferred that the markers be placed so that the vertical direction aligns with the instrument axial direction.</p><p id="p-0109" num="0108">The marker designs <b>150</b> and <b>170</b> of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> represent two separate design versions, with the design version of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> representing an improved version after experiments. Although the overall size of the pattern did not change, a number of differences exist. The number of information bits <b>162</b> and <b>182</b> (or identification features) was increased from nine to thirteen, which effectively increased the number of unique patterns. The number of columns for the information bits <b>162</b> and <b>182</b> increased from three to four, which provided for a more efficient use of limited space. Because it was observed that many typical viewing directions in robotic surgery led to more severe foreshortening of the tool image in the axial direction than in the lateral direction, the pattern of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> includes larger vertical spacing between the information bits <b>182</b> than horizontal spacing. The rows of the information bits <b>182</b> in the pattern of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> are also interleaved, which also helps alleviate foreshortening relative to a non-interleaved pattern. The diameter of the information bits <b>162</b> and <b>182</b> (dots) and the thickness of the circles were also reduced, which resulted from an observation that the testing vision system usually dilated bright features. Accordingly, the features were made thinner to maintain isolation.</p><p id="p-0110" num="0109">The information bits <b>162</b>, <b>182</b>, <b>194</b> in these 2-D patterns can be used in a variety of ways, such as using a number for identification bits and the remaining number for error checking/correction bits. The partition between identification bits and error checking/correction bits and their arrangement are flexible and can be determined based upon the specific application requirements. One may use fewer numbers of bits for error checking/correction if the imaging situation is less challenging. In one approach, the thirteen information bits of the marker of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref> are separated into six bits used to carry identification information (resulting in 64 unique codes), with the remaining seven bits used for error checking/correction. Among the seven error checking/correction bits, six can be set to be the inverse of the identification bits, and the remaining bit can be used as checksum data. The rationale for this approach is to always ensure that there are six or seven bits that are physically present in a pattern (i.e., they are set to one). This avoids an all zero (all blank) pattern as a valid code and provides alternative features that can be used to provide positional information for pose estimation if required. It is appreciated that the above described coding scheme may not be optimal from a coding theory point of view. Coding schemes having more Hamming distance between valid code words are preferred. It is also appreciated that there may not be a distinction between identification bits and error-checking bits from a coding theory point of view. Redundancy results from the fact that valid code words only occupy a portion of the code space (i.e., the Hamming distance between two valid code words is greater than 1).</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIGS. <b>14</b>A, <b>14</b>B, <b>15</b>A, <b>15</b>B, <b>16</b>A, <b>16</b>B, <b>17</b>A, and <b>17</b>B</figref> show four different multiple marker patterns by themselves and as applied to specific robotic tool instruments. <figref idref="DRAWINGS">FIGS. <b>14</b>A and <b>14</b>B</figref> respectively illustrate 2-D markers that can be used for an 8 mm (diameter, same convention for other instruments) instrument shaft and an 8 mm instrument shaft with the markers. <figref idref="DRAWINGS">FIGS. <b>15</b>A and <b>15</b>B</figref> respectively illustrate 2-D markers that can be used for a 10 mm instrument shaft and a 10 mm instrument shaft with the markers. <figref idref="DRAWINGS">FIGS. <b>16</b>A and <b>16</b>B</figref> respectively illustrate 2-D markers that can be used for a 5 mm instrument shaft and a 5 mm instrument shaft with the markers. <figref idref="DRAWINGS">FIGS. <b>17</b>A and <b>17</b>B</figref> respectively illustrate a 2-D markers that can be used for an ultrasound transducer and an ultrasound transducer with the markers. On thinner instruments, multiple rows of patterns can be shifted by a half a pattern to ensure some pattern is fully visible at any angle.</p><heading id="h-0010" level="2">Two-Dimensional Marker Extraction</heading><p id="p-0112" num="0111">It is appreciated that a variety of approaches can be used to extract marker features from images and process the extracted information to determine image-derived tool pose estimates. For example, as described below, possible approaches can include a top-down approach, a bottom-up approach, and combined top-down/bottom-up approach.</p><p id="p-0113" num="0112">In a top-down approach, 2-D images can be rendered from a 3-D model of the instrument at a given pose, and the rendered images can be compared with the real input images to evaluate how well they match. The pose that gives the best matching score is the best solution. Although the idea sounds straightforward, in practice it can be difficult to implement due to high related expenses and processing times.</p><p id="p-0114" num="0113">A bottom-up approach tries to find some local feature in the image and then compute the solution. A bottom-up approach can apply to scenarios where salient local features can be extracted and grouped easily, often under some assumptions or using some heuristics. Since local features are more likely to have ambiguity, markers or background color can be added to ensure the robustness of the method. A bottom-up approach is generally more computationally efficient than a top-down approach, since the features can be computed locally and the approach does not involve search or iterative optimization.</p><p id="p-0115" num="0114">A combined top-down/bottom-up approach can be used that integrates the advantages of both of the above two classes of methods. For example, a bottom-up approach can be used to report a finite number of hypotheses, which are then tested and verified using a top-down method. This type of method has sometimes been called &#x201c;hypothesize and test.&#x201d;</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flow diagram of a method <b>200</b> for processing stereoscopic endoscope images of tool tracking markers. In step <b>206</b>, left image data <b>202</b> and right image data <b>204</b> are processed to extract primitive image features. &#x201c;Primitive image features&#x201d; refers to visually salient features that can be detected locally, such as blobs and corners. A blob is a small patch with sufficient contrast with respect to its surroundings. A corner is the intersection of two edges. A Maximum Stable Extremal Region (MSER) approach provides an excellent way to detect blobs at an affordable cost. MSER is based on a very minimal assumption of boundary contrast and is therefore able to detect salient regions (blobs) of any size, and any shape. For details on MSER, see J. Matas, O. Chum, M. Urban, and T. Pajdla, &#x201c;Robust wide baseline stereo from maximally stable extremal regions.&#x201d; In. <i>Proc. BMVC, </i>2002. We have found MSER to be very effective in detecting artificial fiducial markers.</p><p id="p-0117" num="0116">An alternative feature (blob) detector approach is to use adaptive thresholding plus connected component analysis. The threshold used for binarization is computed adaptively according to the mean grey value of its neighborhood. The kernel convolution to compute the mean at each pixel can be implemented using integral image for fast mean within a rectangular window. A limitation of adaptive thresholding is that it works for a fixed scale. For multiple scales, it has to be run multiple times at different scales. One may also consider to run adaptive thresholding and connected component analysis in a pyramid fashion.</p><p id="p-0118" num="0117">There are many ways to detect corner points from images. For examples of widely used corner detection methods, see Chris Harris and Mike Stephens. &#x201c;A combined corner and edge detector,&#x201d; pages 147-151, In. <i>Proc. British Machine Vision Conference, </i>1995; and Jiambo Shi and Carlo Tomasi, &#x201c;Good features to track,&#x201d; pages 593-600, In <i>Proc. IEEE Conference on Computer Vision and Pattern Recognition, </i>1994. For more specific corners (e.g., a saddle point), analysis can be done on the result of the above generic corner detectors to look for the desired properties.</p><p id="p-0119" num="0118">A learning-based approach is also available for dot detection that considers the fine appearance of the dot to disambiguate with background dots (see D. Claus and A. W. Fitzgibbon, &#x201c;Reliable fiducial detection in natural scenes,&#x201d; In <i>Proc. European Conf Computer Vision, </i>2004). This approach could be used for more complex marker patterns than dots.</p><p id="p-0120" num="0119">The output from a blob detector is a list of blobs from the image. It can be much faster to analyze these blobs than all the image pixels. We detected the bars of the 2-D markers by checking their flatness (the ratio of the first and second eigen values of the covariance matrix). We detected circles by a simple heuristics that the centroid of a bright blob is inside the bounding box of a dark blob and the bounding box of the dark blob is fully contained by the bounding box of the bright blob. There may be better ways to detect bars and circles (e.g., by analyzing their higher order moments). Since our overall method is tolerant to the errors in the lower level processing, we have found these methods to be sufficient.</p><p id="p-0121" num="0120">Following the extraction of the primitive image features, the remaining steps of method <b>200</b> can be accomplished. In step <b>208</b>, the extracted features are grouped. Grouping refers to the process of establishing correspondences between the extracted primitive features and the object being imaged, such as a particular marker. This process also needs to account for extracted features that belong to the background instead of the object. The primitive feature grouping relies on knowledge of the marker's configuration to assemble extracted features into groups of features belonging to any particular marker. In step <b>210</b>, the grouped features of the left image data <b>202</b> are matched with corresponding grouped features of the right image data <b>204</b>. In step <b>212</b>, the stereo image matched features can be processed to determine 3-D data for the features. The 3-D data for the features can be processed so as to identify the marker and determine a 3-D pose for the marker (data <b>214</b>), which can then be used to determine a 3-D pose for the tool having the marker.</p><p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flow diagram of a method <b>220</b> that can be used for processing stereo images of tool tracking markers (embodiments of which are shown in <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>). Method <b>220</b> follows a &#x201c;hypothesize and test&#x201d; framework. In step <b>226</b>, the left image data <b>222</b> and the right image data <b>224</b> can be processed to extract primitive features, which can be accomplished using a variety of methods such as an above described method.</p><p id="p-0123" num="0122">In step <b>228</b> some of the extracted primitive features are processed so as to generate one or more localizer hypotheses (for one or more markers) by identifying one or more primitive features that exhibit characteristics of one or more marker localizer features. A localizer hypothesis is a tentative assumption that one or more extracted primitive features correspond to one or more localizer features in a marker. One or more localizer features can be used to determine positional and at least partial orientation of the marker. For example, in the 2-D markers of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>, the four circles and the bar can be used as localizer features. With these 2-D markers, the extracted primitive features (or the image data in general) can be processed to look for two circles (designated in <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> as &#x201c;0&#x201d; and &#x201c;1&#x201d;) within a minimum and maximum distance that have a bar in the middle that is aligned with a line connecting the two circles. By identifying the side of the line that the bar is on, a partial orientation of the pattern can be determined (i.e., about a line in the image). It is appreciated that a range of different marker patterns can be used and that various combinations of any of the features within a marker pattern can be used as one or more localizer feature.</p><p id="p-0124" num="0123">In step <b>230</b> the extracted primitive features are processed so as to generate one or more full pattern hypotheses. A full pattern hypothesis is a tentative assumption that multiple primitive features correspond to one or more marker features that can be used to determine the basic position and orientation of the marker pattern within the image, which can be skewed or foreshortened as determined by the 3-D pose of the marker relative to the imaging device. For example, with the 2-D marker patterns of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>, the localizer hypothesis (the identified circles &#x201c;0&#x201d; and &#x201c;1&#x201d; with the bar in between) can be used as a starting point to search for the remaining localizer circles (designated in <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> as &#x201c;2&#x201d; and &#x201c;3&#x201d;). The search can look for all the compatible localizer &#x201c;2&#x201d; and &#x201c;3&#x201d; features within a search area defined by a minimum and a maximum pattern skew, and a minimum and a maximum pattern aspect ratio. Advantageously, the &#x201c;2&#x201d; and &#x201c;3&#x201d; circles do not have bar between them, which can be used to aid in their identification. The combination of the localizer hypothesis and the identified &#x201c;2&#x201d; and &#x201c;3&#x201d; localizer circles can be used generate a full pattern hypothesis. The full pattern hypothesis can also be checked to see if its perspective is less than a maximum value, by which the consistency of skew and aspect ratio can be checked.</p><p id="p-0125" num="0124">In step <b>232</b> one or more of the generated full pattern hypotheses are verified by processing the image features so as to identify the marker. It is appreciated that a variety of approaches can be used to process the image data so as to identify the marker. For example, in method <b>220</b> the generation of a full pattern hypothesis provides information regarding the position and orientation of a marker pattern within the image. This information can be used to orient or align candidate marker patterns with the imaged pattern. The imaged patterns and the aligned candidate marker patterns can then be checked for consistency. Where consistency exists, the imaged marker pattern can be identified as the candidate marker pattern. For example, with the 2-D marker patterns of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>, the location of detected 2-D blobs within a full pattern hypothesis can be compared with locations of information bits set to &#x201c;1&#x201d; (i.e., physically present) of a candidate marker pattern model that has been aligned with the full pattern hypothesis.</p><p id="p-0126" num="0125">The alignment of a candidate marker pattern with a marker image can be accomplished by estimating the 3-D pose of the marker relative to the imaging device and aligning a candidate marker with the estimated pose. Pose estimation computes the 3-D pose of the marker by knowledge of the 3-D geometry of the marker and its 2-D projections in the image. The imaging-device calibration is used in the pose estimation process using known methods. For the two dimensional marker patterns of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>, the pose estimation can be accomplished using the locations within the image of the four localizer circles. Once the pose of the marker relative to the imaging device is estimated, the 3-D coordinates of a candidate marker's features can be determined and be projected into the image using the known image-device calibration. The pixels at these image locations can be checked to decide if there is a dot at that location.</p><p id="p-0127" num="0126">The alignment of a candidate marker pattern with a marker image can also be accomplished by homography. Four 2-D point correspondences define a plane perspective transformation (i.e., homography), which contains all the possible transformations of a plane under perspective transformation. Even though a marker pattern attached to a cylindrical tool shaft is not planar, a plane approximation can be useful for a wide range of viewpoints. This approach involves an approximation that the marker features reside on a plane, which provides a simplified process for aligning a candidate marker pattern with a marker image. For example, the image locations for the dots can be based on the image locations of the four circles by assuming the pattern is attached to a plane through a plane perspective transformation (see R. Hartley and A Zisserman, &#x201c;Multiple View Geometry in Computer Vision,&#x201d; chapter 2, Cambridge University Press, 2000). Due to the deviation from the planar assumption, the &#x201c;planar&#x201d; model dots do not exactly coincide with the marker image dots. To compensate for the planar assumption, the on/off status of a model dot can be determined using a nearest-neighbor scheme. When the nearest-neighbor scheme fails, the verification fails. Empirically, homography has been found to be able to detect the 2-D pattern correctly for oblique angles up to 45 degrees. Compared to pose estimation, alignment by homography is an approximation. However, it is still appealing in that the imaging-device calibration is not required. Additionally, the exact 3-D geometry of the marker does not need to be known (e.g., it does not matter if the marker is attached to a 5 mm, a 8 mm, or a 10 mm tool shaft) and therefore allows markers to be attached to different instrument geometries at the same time. These flexibilities may not be critical in a surgical instrument tracking application but may enable other applications.</p><p id="p-0128" num="0127">Marker design is closely related to how marker features are detected from images. The design of marker embodiments disclosed herein and feature detection methods disclosed herein have been co-evolved for better overall system performance. For example, with respect to the 2-D marker patterns of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref>, if the bar between the localizer circles &#x201c;0&#x201d; and &#x201c;1&#x201d; did not exist, the specific details of the detection method would likely need to be modified. However, it is appreciated that a wide variety of marker patterns and corresponding marker feature detection methods can be practice and still be within the spirit and scope of the present invention.</p><p id="p-0129" num="0128"><figref idref="DRAWINGS">FIGS. <b>20</b>A, <b>20</b>B, <b>20</b>C, <b>20</b>D, and <b>20</b>E</figref> illustrate the method of <figref idref="DRAWINGS">FIG. <b>19</b></figref> as applied to the 2-D marker of <figref idref="DRAWINGS">FIG. <b>13</b>B</figref>. In <figref idref="DRAWINGS">FIG. <b>20</b>A</figref>, the bright circles in the image are detected (as shown by the cross-hair annotations). In <figref idref="DRAWINGS">FIG. <b>20</b>B</figref>, two localizer hypotheses are formed using adjacent bright circles that have aligned bars. In <figref idref="DRAWINGS">FIG. <b>20</b>C</figref>, a full pattern hypothesis is formed by identifying the designated bright circles by searching relative to the associated localizer hypothesis. In <figref idref="DRAWINGS">FIG. <b>20</b>D</figref>, a candidate marker pattern is aligned with the image full pattern hypothesis and the location of candidate marker pattern features relative to the image are determined. The determined locations are used to check the image to see if corresponding detected features are present. When the patterns match, a candidate marker pattern is verified (<figref idref="DRAWINGS">FIG. <b>20</b>E</figref> illustrates an exemplary pattern identification code for a verified candidate marker pattern). It is appreciated that any existing pose estimates, such as a raw kinematics pose estimate or a corrected kinematics pose estimate, may be used to limit the number of candidate marker patterns. It is also appreciated that the detected marker features may be used directly to determine an identification of a marker pattern by determining directly what marker pattern features are present and which are not present.</p><p id="p-0130" num="0129">Marker patterns can be arranged on a tool in a variety of ways for a variety of purposes. For example, markers can be arranged at multiple locations on a tool so as to provide for multiple operational ranges. <figref idref="DRAWINGS">FIGS. <b>21</b>A and <b>21</b>B</figref> illustrate a robotic surgical tool having two circumferential bands of markers that are separated by an axial distance along the tool shaft. In <figref idref="DRAWINGS">FIG. <b>21</b>A</figref>, the tool is being operated close to the imaging device, thereby placing one of the bands of markers outside the view. In <figref idref="DRAWINGS">FIG. <b>21</b>B</figref>, the tool is being operated farther away from the imaging device, thereby placing both bands of markers within the view. As shown in <figref idref="DRAWINGS">FIG. <b>21</b>B</figref>, the features in the marker band closest to the imaging device are larger than the features in the marker band farthest from the imaging device. These larger features may be more readily detectable as compared to the smaller, farther away features, especially if the marker features farthest away are partially or fully occluded, such as by patient tissues or fluids. As shown in <figref idref="DRAWINGS">FIG. <b>21</b>A</figref>, the band of markers disposed closest to the distal operating end of the surgical tool can provide distinct features for imaging when the other band is out of view.</p><heading id="h-0011" level="2">One-Dimensional Marker Designs</heading><p id="p-0131" num="0130">One-dimensional markers can be used to determine instrument pose. A 1-D marker includes primitive features arranged in one dimension. Some of the features can serve as localizer features, and the rest of the features can serve as identification features. Similar to 2-D markers, localizer features can be used to provide positional or orientation information to determine the pose/alignment of the marker, and identification features can be used to differentiate different markers. Identification features can follow a coding scheme and can include redundant information for error checking and/or correction. For example, <figref idref="DRAWINGS">FIGS. <b>22</b>A, <b>22</b>B, and <b>22</b>C</figref> illustrate 1-D markers, which employ dots, or a combination of circles and dots. <figref idref="DRAWINGS">FIG. <b>22</b>A</figref> illustrates a 1-D marker <b>240</b> that includes dots forming a straight line. While it is appreciated that different colors can be used to convey information, marker <b>240</b> employs dots that are either present (i.e., set to &#x201c;l&#x201d;) or absent (i.e., set to &#x201c;0&#x201d;). Marker <b>240</b> includes a start pattern <b>242</b>, an end pattern <b>244</b>, and a center portion <b>246</b> having 12 data bits. These 12 data bits can be used in a variety of ways, such as by using some of the data bits as identification bits and some of the data bits as error checking/correction bits, which can include one or more checksum data bits. The start pattern <b>242</b> and the end pattern <b>244</b> can be delineated by adjacent blank areas <b>248</b>.</p><p id="p-0132" num="0131">One-dimensional patterns have advantages and disadvantages. For example, an advantage of using a 1-D pattern is that it works for very thin instruments, such as a needle where a 2-D pattern would not work. A disadvantage of a 1-D pattern is that a single 1-D marker does not give the full six-dimensional pose for the object. At least two non-collinear markers are required for a full six-dimensional pose. For very thin objects, the axial roll is not typically observable, so the five-dimensional pose provided by a single 1-D marker is already the most that can be typically obtained.</p><p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. <b>22</b>B</figref> illustrates an image of a surgical tool <b>250</b> having l-D markers <b>240</b>, showing three such markers <b>240</b> placed in alignment with the surgical tool's shaft axis. When attaching a 1-D marker to a cylindrical surface, the marker can be aligned with the axis of the cylinder, which results in the marker being disposed along a straight line in 3-D space. Such markers may be particularly advantageous when used on relatively small diameter tool shafts, where more 1-D markers can typically be arranged around the shaft than comparable 2-D markers. However, one concern with a 1-D marker is the length that it requires on an instrument shaft, which may become an issue at close operational ranges that may result in part of a 1-D marker being out of view.</p><p id="p-0134" num="0133"><figref idref="DRAWINGS">FIG. <b>22</b>C</figref> illustrates a modified version of the 1-D marker <b>240</b> of <figref idref="DRAWINGS">FIG. <b>22</b>A</figref>. Marker <b>260</b> incorporates circular features <b>262</b> that can be used as localizer features similar to the localizer features of the 2-D markers of <figref idref="DRAWINGS">FIGS. <b>13</b>A and <b>13</b>B</figref> described above. Advantageously, the use of the circle features <b>262</b> may help to reduce the length of the pattern, thereby providing a better close range pattern. Dots <b>264</b> can be used for marker identification and error checking/correction data.</p><p id="p-0135" num="0134"><figref idref="DRAWINGS">FIG. <b>22</b>D</figref> illustrates an alternative version of the 1-D marker <b>260</b> of <figref idref="DRAWINGS">FIG. <b>22</b>C</figref>. Marker <b>265</b> incorporates a combination of circular features <b>266</b> and bar features <b>268</b>. Circular features <b>266</b> can be used as localizer features and bar features <b>268</b> can be used for marker identification and error checking/correction data. A difference between dots <b>264</b> of marker <b>260</b> and bar features <b>268</b> of marker <b>265</b> is that with marker <b>265</b> information is coded by the positions of the transitions between dark and bright regions, whereas marker <b>260</b> uses the positions of the centers of the dots to carry information.</p><heading id="h-0012" level="2">One-Dimensional Marker Extraction</heading><p id="p-0136" num="0135"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a flow diagram of a method <b>270</b> that can be used for processing stereo images of one or more 1-D tool tracking markers (embodiments of which are shown in <figref idref="DRAWINGS">FIGS. <b>22</b>A, <b>22</b>B, and <b>22</b>C</figref>). In step <b>276</b>, left image data <b>272</b> and right image data <b>274</b> can be processed to extract 2-D blobs (i.e., features), which can be accomplished using approaches as described above with reference to the extraction of 2-D blobs from 2-D markers (see <figref idref="DRAWINGS">FIG. <b>19</b></figref> and related discussion). In step <b>278</b>, the extracted blobs are grouped into lines. Line grouping can be performed using a Random Sample Consensus (RANSAC) approach by extracting multiple straight lines from all the detected feature points. (For details of Random Sample Consensus, refer to M. A. Fischler and R. C. Bolles, &#x201c;Random sample Consensus: A paradigm for model fitting with applications to image analysis and automated cartography&#x201d; <i>Comm. of the ACM, </i>24: 381-395, 1981, which is hereby incorporated by reference.) More discriminative features against background clutter, such as the circles in the marker of <figref idref="DRAWINGS">FIG. <b>22</b>C</figref>, can also be used to form hypotheses.</p><p id="p-0137" num="0136">In step <b>280</b>, one or more lines are rectified. Line rectification refers to removing the perspective effect on the line to restore the metric relationship of the information bits (e.g., dots). The vanishing point of the lines parallel to the shaft is sufficient to rectify the line. (See R. Hartley and A Zisserman, &#x201c;Multiple View Geometry in Computer Vision,&#x201d; Cambridge University Press, 2000, which is hereby incorporated by reference.) There are a number of ways to obtain the location of the vanishing point. For example, if there are more than one visible linear markers on the shaft, the vanishing point is the intersection of these lines. As another example, images of points with equal or known spaces can be used to compute the vanishing point. (See, for example, <figref idref="DRAWINGS">FIG. <b>22</b>C</figref> for examples of linear markers having equally spaced circles.)</p><p id="p-0138" num="0137">In step <b>282</b>, one or more markers are identified. Marker identification can involve locating the start and end patterns and then reading the data bits to identify the pattern. It is appreciated that the coding scheme can be designed so as to encode sufficient redundancy for error checking. Where some data bits have been used for error checking, the error checking bits can be read to validate the identification. As discussed above, the error checking data bits can include at least one data bit used as checksum data.</p><p id="p-0139" num="0138">When a stereo camera is used, once a marker (1-D or 2-D) has been identified, the 3-D reconstruction of step <b>282</b> becomes a simple step. The correspondences between the imaged features in both the left and right images are known at this state, and only triangulation is needed. The resulting 3-D marker feature locations can then be used in combination with the known relative spatial arrangement of the marker features relative to the tool to determine a 3-D pose for the tool.</p><heading id="h-0013" level="2">Configuration Marker</heading><p id="p-0140" num="0139">A tool, such as the surgical tool <b>26</b>, can be configured to include a configuration marker so as to provide multiple primitive features that can be detected within an image. An individual primitive feature is usually not sufficient to serve as a marker because it may not be unique and does not provide enough geometric constraints to determine object pose. A number of primitive features can be used to form a pattern having a unique configuration in 3-D space, which is herein referred to as a &#x201c;configuration marker.&#x201d; The pattern (i.e., configuration) as a whole combines the discriminative power of each individual primitive feature and that of their geometric relationship to be more easily detected from the background. Three non-collinear features extracted from stereo images provides sufficient information to determine pose for the tool. However, having more features than the minimum requirement can be beneficial in gaining more confidence in detection and better accuracy in pose determination. The shape or appearance of the primitive features can be identical (e.g., circular disks of the same size), can include a few variations, or can be unique. As such, a wide variety of primitive features can be used, such as circles, dots, bars, corners, etc. Where the primitive features used include some level of variations, the resulting differences in appearance can be used to help match image locations for particular features between two stereoscopic images (i.e., using feature signatures during feature matching) and the images with the model (i.e., using feature signatures invariant or less sensitive to viewpoint and lighting changes).</p><p id="p-0141" num="0140">One such primitive feature is a reflective spherical surface. A reflective spherical surface has the nice property that it appears as a bright spot irrespective of viewpoint as long as a light source and an imaging device are aligned along a common direction, as is typically the case with endoscopic imaging during minimally-invasive robotic surgery. The center of the bright spot also coincides with the projection of the center of the spherical surface. A reflective spherical surface can be either concave or convex. In most cases, a reflective spherical surface may produce a bright spot with sufficient contrast with respect to its background to allow detection in an image for a variety of viewpoints and distances. However, this contrast may be reduced to an undesirable level if the adjacent background surfaces are perpendicular to the light direction and the entire area reflects a significant amount of light back at the imaging device (thereby leading to image saturation). In this circumstance, improved gain control or a high dynamic range video may help alleviate the problem.</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. <b>24</b></figref> illustrates a primitive feature <b>300</b> that includes a concave spherical surface and that is being illuminated/imaged from three directions. The spherical surface <b>302</b> of the marker <b>300</b> has a center point <b>304</b> through which illumination light that is reflected directly back towards the imaging device travels. Illumination light that does not travel substantially through the center point is reflected away from the illumination/imaging direction.</p><p id="p-0143" num="0142">Some natural features on a tool (or mechanical device in general) may also appear as salient visual features in captured images. These natural features may provide additional image-derived information regarding the 3-D pose of a tool. Examples of such natural features for an exemplary surgical tool can include the end of a bolt having an approximately spherical surface, and the end of a hinge of an articulated instrument having a reflective concave spherical surface. Such natural features may form stable bright blobs in images similar to those of artificial markers. However, for many tools, such natural features by themselves may not provide a sufficient number of features to form patterns distinctive enough to be extracted against a cluttered background. By introducing artificial primitive features in conjunction with such natural features, sufficient distinctiveness can be achieved. The use of existing natural features helps reduce the number of artificial features added and therefore reduces the changes (such as appearance) to the mechanical device to be tracked.</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>25</b></figref> illustrates a primitive feature <b>320</b> that includes a convex spherical surface <b>322</b> and that is being illuminated/imaged from three directions. Similar to the primitive feature of <figref idref="DRAWINGS">FIG. <b>24</b></figref>, the spherical surface <b>322</b> has a center point <b>324</b> through which illumination light that is reflected directly back towards the imaging device travels. Illumination light that does not travel substantially through the center point is reflected away from the illumination/imaging direction. Reflective convex spherical surfaces may be more suitable for surgical applications than concave reflective spherical surfaces in that blood (or any fluid or substance in general) may be more easily trapped in concave recesses, which may cause a concave primitive feature to lose its contrast with adjacent areas of the tool, or become darker than adjacent areas depending on the amount of blood trapped. In contrast, a reflective convex spherical surface is less likely to trap blood. Furthermore, the interaction of the reflective convex spherical surface and tissue may help keep the surface clean, which may help it to produce a bright spot even in a heavy blood field.</p><p id="p-0145" num="0144"><figref idref="DRAWINGS">FIGS. <b>26</b>A and <b>26</b>B</figref> show surgical tools having primitive features with reflective spherical surfaces. These surgical tools are for use without any special illumination, but instead are for use with an existing stereo imaging system used by a surgeon to view a procedure site in an exemplary robotic surgery system. This use is in contrast with existing systems that use controlled active infra-red (IR) illumination, which ensures that only the marker points are bright in the view, which significantly simplifies related image processing and estimation. However, the use of an existing stereo imaging system avoids the added system complexity associated with controlled active IR illumination. Although these surgical tools have primitive features placed on their distal clevis, it is appreciated that primitive features can be placed at other locations, such as on the instrument shaft and/or the proximal clevis. It may be advantageous to select locations that are not prone to reflective image saturation.</p><heading id="h-0014" level="2">Configuration Marker Detection</heading><p id="p-0146" num="0145"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a flow diagram of a tool tracking method <b>340</b> that employs processing of stereo images of a tool having a configuration marker. The method makes use of the geometric invariance between the primitive features in 3-D space, therefore stereo matching/3-D reconstruction is performed first. In step <b>346</b>, left image data <b>342</b> and right image data <b>344</b> can be separately processed so as to extract primitive features that exhibit a qualifying amount of contrast relative to adjacent areas (i.e., bright spots).</p><p id="p-0147" num="0146">In step <b>348</b>, the extracted primitive image features are processed so as to identify &#x201c;image signatures&#x201d; that are consistent with the primitive features used. &#x201c;Signatures&#x201d; can be extracted for every primitive image feature. Where the primitive features used are identical in shape, their image signatures may be substantially similar. Where the primitive features used have shape or appearance variations, the resulting differences in appearance can be used to help associate a particular primitive feature with a particular primitive image feature, such as a bright spot. A primitive image feature signature can be extracted from the primitive image feature (i.e., image patch) around the feature point. A simple feature signature approach is to use the extracted primitive image feature (image patch) itself as used in traditional stereo. More recently, signatures that are invariant/insensitive to some transformation or deformation have been proposed that are capable of handling more illumination and viewpoint change than image patch. Histogram of Gradient (HOG) is a good example. (See D. Lowe, &#x201c;Distinctive image features from scale-invariant keypoints,&#x201d; In. <i>International Journal of Computer Vision, volume </i>20, pages 91-110, 2003, which is hereby incorporated by reference.)</p><p id="p-0148" num="0147">In step <b>350</b>, features in the two stereo images (e.g., left image and right image) are matched. Different signatures approaches may require different matching methods. For example, normalized correlation is used for an image patch signature (see David Forsyth and Jean Ponce, &#x201c;Computer Vision A Modem Approach,&#x201d; page 240, Prentice Hall, 2003). With an HOG signature, it has been proposed to use the relative matching score as a measure of confidence, which may likely be a useful approach. Epipolar constraint can be used to constrain the matching only on a straight line (see R. Hartley and A. Zisserman, &#x201c;Multiple View Geometry in Computer Vision,&#x201d; Cambridge University Press, 2000). Where multiple good matches exist, all can be kept for processing in the next step. The matched features are used to generate 3-D coordinates by using stereo triangulation.</p><p id="p-0149" num="0148">In an optional approach to step <b>350</b>, model based signatures may be used in step <b>354</b>. Matching feature signatures between image and model is expected to be more difficult than matching feature signatures between left and right stereo images since stereo images have similar viewpoints, illumination, and epipolar constraint. In order to match image signatures with model signatures, the features may need to be invariant to viewpoint and lighting conditions. If identical primitive features are used, it may be more difficult to match against a model. However, primitive features can be designed to have shapes (and resulting appearances) that are easy to match under large viewpoint variations. One approach is to rely on topological properties that are invariant to viewpoint change. An example is a circle, such as described above with reference to 1- and 2-D markers. As a variation on a circle, a primitive feature can use multiple bright dots inside a dark dot. Even if not all of the dots are matched with a model, or even if the matches are not unique, partial matching can be useful in feature grouping.</p><p id="p-0150" num="0149">In step <b>352</b>, the matched features are used to perform 3-D feature grouping so that the correspondence of the observed features with features in the model is established (i.e., to get identified marker points in 3-D <b>358</b>). The process uses 3-D positions of the features and optionally their matching score with the model primitive features and/or optionally prior knowledge on the instrument pose. Step <b>352</b> can be performed by a &#x201c;Constellation algorithm.&#x201d; The Constellation algorithm performed is an efficient Bayesian approach for 3-D grouping based on geometric constraint, appearance constraint, and other prior pose information on the object pose (i.e., prior object pose data <b>356</b>). The use of appearance constraint is an option if the geometric constraint is insufficient. The output of the Constellation algorithm is the label for each observed feature, taking values from one of the model primitive features or background clutter. Random Sample Consensus (RANSAC) is used at the end to enforce the rigidity constraint.</p><heading id="h-0015" level="2">The Constellation Algorithm&#x2014;Problem Formation</heading><p id="p-0151" num="0150">Assume we have n known patterns {C<sub>1</sub>, . . . , C<sub>n</sub>}, each of which contains k<sub>i </sub>nodes. We use C<sub>0 </sub>(k<sub>0</sub>=1) to denote anything which is not part of the pattern. &#x3a3;<sub>i=0</sub><sup>n</sup>k<sub>i</sub>=t. Assume the nodes are contiguously labeled as 0, . . . , t. We use p[i] to refer to the index of the pattern of a node label i. c<sub>1</sub>, . . . , c<sub>t </sub>are the coordinates of the nodes in some coordinate system (it is OK that each pattern has its own coordinate system). There are m input nodes with label 1, . . . , m and coordinates p<sub>1</sub>, . . . , p<sub>m</sub>. The input nodes contains an unknown number of patterns. Missing data and background nodes can exist. We denote O=[o<sub>1</sub>, . . . , o<sub>m</sub>] to be the ownership of each input node; o<sub>i</sub>&#x2208;[0, t]. It is possible that we know a priori knowledge of the ownership of each input node. The prior ownership knowledge can be from local node observation (independent of other nodes) or other sources. q<sub>i</sub>(l) denotes the probability of input node i corresponds to model label l. q<sub>i</sub>(0) should be set to be a small probability.</p><p id="p-0152" num="0151">Each input node can take t labels, therefore the total number of possible solutions is m&#x2032;. Solving it by trying every possibility is an exponential problem. If the prior ownership knowledge is strong, this problem can be solved by a randomized &#x201c;hypothesize and test&#x201d; approach (i.e., RANSAC). However if there is no or weak prior ownership knowledge, the generated hypotheses are almost random and the performance is close to an exhaustive search.</p><p id="p-0153" num="0152">Here we simplify the problem by considering pair-wise distance constraints. We add a link between any two input nodes whose distance is less than the maximum distance between two model nodes plus allowed error. This results in a graph. The joint probability of the graph is therefore defined by pair-wise distance compatibilities and the prior ownership knowledge probabilities.</p><p id="p-0154" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <mi>P</mi>      <mo>&#x2061;</mo>      <mo>(</mo>      <mi>O</mi>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mfrac>       <mn>1</mn>       <mi>Z</mi>      </mfrac>      <mo>&#x2062;</mo>      <mrow>       <mo>(</mo>       <mrow>        <munder>         <mo>&#x220f;</mo>         <mrow>          <mi>i</mi>          <mo>,</mo>          <mrow>           <mi>j</mi>           <mo>&#x2208;</mo>           <mrow>            <mrow>             <mrow>              <mo>[</mo>              <mrow>               <mn>1</mn>               <mo>,</mo>               <mi>m</mi>              </mrow>              <mo>]</mo>             </mrow>             <mo>&#x2062;</mo>             <mrow>              <mo>&#xf605;</mo>              <mrow>               <msub>                <mi>P</mi>                <mi>i</mi>               </msub>               <mo>-</mo>               <msub>                <mi>P</mi>                <mi>j</mi>               </msub>              </mrow>              <mo>&#xf606;</mo>             </mrow>            </mrow>            <mo>&#x3c;</mo>           </mrow>           <mo>&#x2208;</mo>          </mrow>         </mrow>        </munder>        <mrow>         <mi>&#x3c8;</mi>         <mo>&#x2061;</mo>         <mo>(</mo>         <mrow>          <msub>           <mi>o</mi>           <mi>i</mi>          </msub>          <mo>,</mo>          <msub>           <mi>o</mi>           <mi>j</mi>          </msub>         </mrow>         <mo>)</mo>        </mrow>       </mrow>       <mo>)</mo>      </mrow>      <mo>&#x2062;</mo>      <mrow>       <mo>(</mo>       <mrow>        <munder>         <mo>&#x220f;</mo>         <mrow>          <mi>i</mi>          <mo>&#x2208;</mo>          <mrow>           <mo>[</mo>           <mrow>            <mn>1</mn>            <mo>,</mo>            <mi>m</mi>           </mrow>           <mo>]</mo>          </mrow>         </mrow>        </munder>        <mrow>         <msub>          <mi>q</mi>          <mi>i</mi>         </msub>         <mo>(</mo>         <msub>          <mi>o</mi>          <mi>i</mi>         </msub>         <mo>)</mo>        </mrow>       </mrow>       <mo>)</mo>      </mrow>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>1</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0155" num="0000">where &#x3c8;<sub>i,j</sub>(o<sub>i</sub>, o<sub>j</sub>) is the pair-wise distance compatibility function within each pattern. &#x2208; is a neighborhood radius defined by the maximum pattern spread in the model.</p><p id="p-0156" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mrow>      <msub>       <mi>&#x3c8;</mi>       <mrow>        <mi>i</mi>        <mo>,</mo>        <mi>j</mi>       </mrow>      </msub>      <mo>(</mo>      <mrow>       <msub>        <mi>o</mi>        <mi>i</mi>       </msub>       <mo>,</mo>       <msub>        <mi>o</mi>        <mi>j</mi>       </msub>      </mrow>      <mo>)</mo>     </mrow>     <mo>=</mo>     <mrow>      <mo>{</mo>      <mtable>       <mtr>        <mtd>         <mrow>          <mrow>           <mfrac>            <mn>1</mn>            <mrow>             <mi>&#x3c3;</mi>             <mo>&#x2062;</mo>             <msqrt>              <mrow>               <mn>2</mn>               <mo>&#x2062;</mo>               <mi>&#x3c0;</mi>              </mrow>             </msqrt>            </mrow>           </mfrac>           <mo>&#x2062;</mo>           <mi>exp</mi>           <mo>&#x2062;</mo>           <mrow>            <mo>{</mo>            <mrow>             <mo>-</mo>             <mfrac>              <mtable>               <mtr>                <mtd>                 <mrow>                  <mo>(</mo>                  <mrow>                   <mrow>                    <mo>&#xf605;</mo>                    <mrow>                     <msub>                      <mi>c</mi>                      <msub>                       <mi>o</mi>                       <mi>i</mi>                      </msub>                     </msub>                     <mo>-</mo>                     <msub>                      <mi>c</mi>                      <msub>                       <mi>o</mi>                       <mi>j</mi>                      </msub>                     </msub>                    </mrow>                    <mo>&#xf606;</mo>                   </mrow>                   <mo>-</mo>                  </mrow>                 </mrow>                </mtd>               </mtr>               <mtr>                <mtd>                 <msup>                  <mrow>                   <mrow>                    <mo>&#xf605;</mo>                    <mrow>                     <msub>                      <mi>p</mi>                      <mi>i</mi>                     </msub>                     <mo>-</mo>                     <msub>                      <mi>p</mi>                      <mi>j</mi>                     </msub>                    </mrow>                    <mo>&#xf606;</mo>                   </mrow>                   <mo>)</mo>                  </mrow>                  <mn>2</mn>                 </msup>                </mtd>               </mtr>              </mtable>              <mrow>               <mn>2</mn>               <mo>*</mo>               <msup>                <mi>&#x3c3;</mi>                <mn>2</mn>               </msup>              </mrow>             </mfrac>            </mrow>            <mo>}</mo>           </mrow>          </mrow>          <mo>,</mo>         </mrow>        </mtd>        <mtd>         <mtable>          <mtr>           <mtd>            <mrow>             <mrow>              <mi>if</mi>              <mo>&#x2062;</mo>              <mtext>   </mtext>              <mrow>               <mi>p</mi>               <mo>[</mo>               <msub>                <mi>o</mi>                <mi>i</mi>               </msub>               <mo>]</mo>              </mrow>             </mrow>             <mo>=</mo>             <mrow>              <mrow>               <mi>p</mi>               <mo>[</mo>               <msub>                <mi>o</mi>                <mi>j</mi>               </msub>               <mo>]</mo>              </mrow>              <mo>&#x2062;</mo>              <mtext>   </mtext>              <mi>and</mi>             </mrow>            </mrow>           </mtd>          </mtr>          <mtr>           <mtd>            <mrow>             <mrow>              <msub>               <mi>o</mi>               <mi>i</mi>              </msub>              <mo>&#x2260;</mo>              <msub>               <mi>o</mi>               <mi>j</mi>              </msub>             </mrow>             <mo>;</mo>            </mrow>           </mtd>          </mtr>         </mtable>        </mtd>       </mtr>       <mtr>        <mtd>         <mn>0</mn>        </mtd>        <mtd>         <mrow>          <mrow>           <mi>if</mi>           <mo>&#x2062;</mo>           <mtext>   </mtext>           <msub>            <mi>o</mi>            <mi>i</mi>           </msub>          </mrow>          <mo>=</mo>          <mrow>           <mrow>            <msub>             <mi>o</mi>             <mi>j</mi>            </msub>            <mo>&#x2062;</mo>            <mtext>   </mtext>            <mi>and</mi>            <mo>&#x2062;</mo>            <mtext>   </mtext>            <msub>             <mi>o</mi>             <mi>i</mi>            </msub>           </mrow>           <mo>&#x3e;</mo>           <mn>0</mn>          </mrow>         </mrow>        </mtd>       </mtr>       <mtr>        <mtd>         <mi>&#x3b1;</mi>        </mtd>        <mtd>         <mi>otherwise</mi>        </mtd>       </mtr>      </mtable>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>2</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0157" num="0000">where &#x3c3; is the measurement noise of the distance between nodes and &#x3b1; is a background likelihood which should be lower than the likelihood of a true match.</p><p id="p-0158" num="0153">The prior knowledge on the pose of the object can be used as the following. The prior on translation can be represented in the prior q( ) since this knowledge can be applied to each individual node. The prior on rotation can be represented in the pair-wise potential &#x3c8;( ) by the relative orientation of two nodes.</p><heading id="h-0016" level="2">The Constellation Algorithm&#x2014;A Belief Propagation Solution</heading><p id="p-0159" num="0154">The joint probability function, equation (1), is in a form of a combination of local potentials and pair-wise potentials. This problem can be solved efficiently using the belief propagation (BP) algorithm. The algorithm gives the marginal distribution (ownership) of each node as output. In these particular cases, the interconnection of the nodes can form loops. This class of method is referred to as loopy belief propagation (see K. Murphy, Y. Weiss, and M. Jordan, &#x201c;Loopy-belief propagation for approximate inference: An empirical study,&#x201d; In <i>UAI</i>, volume 15, pages 467-475, 1999). It shows very good empirical result even though the optimality is not proven. For details on the implementation of the BP algorithm, see Judea Pearl, &#x201c;Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference,&#x201d; Morgan Kaufmann, 1988.</p><heading id="h-0017" level="2">The Constellation Algorithm&#x2014;Verification</heading><p id="p-0160" num="0155">It is possible that some of the nodes get incorrect labels in the solution from BP because it only enforces local constraints. However it is expected that a large part of the nodes can get correct labels. This is a big advantage compared to a random guess of the label. A verification step should follow to enforce the global rigidity constraint. This step can be achieved using RANSAC on the correspondences from BP.</p><heading id="h-0018" level="2">Discernible Markers</heading><p id="p-0161" num="0156">A discernible marker that includes text and/or one or more symbols can be used for tool tracking. Such a discernible marker can include a wide range of text and symbols. For example, a discernible marker can include a company name, a company trademark symbol, a product name, a product trademark symbol, a component name, and/or a user name. A discernible marker can use a variety of colors set on a variety of backgrounds. For example, text and/or symbols may be light colored (such as white) set against a dark background (such as black), and vice-versa. <figref idref="DRAWINGS">FIGS. <b>28</b>A and <b>28</b>B</figref> illustrate some exemplary discernible tool markers. It can be advantageous to use a discernible marker that is familiar to a human user. Familiar information tends to blend well with the scene and may cause less distraction to users compared to other markers with similar information content.</p><p id="p-0162" num="0157">Discernible markers can include local features that can be used for object pose estimation. Standard text can be used as markers. However, some modifications to the font can increase the number of stable features (e.g., corner points), create features that are highly discriminative against background (e.g., a corner within a &#x201c;checkerboard&#x201d; pattern or array, or a saddle point), and/or enable more efficient detection methods. For example, a marker can include text and/or a symbol that is constructed from a number of rectangular elements selected from a rectangular &#x201c;checkerboard&#x201d; array. The selected elements can have a color or a range of colors, and the unselected elements can have a contrasting color or range of colors. Local patterns of the selected and/or unselected elements can provide a local feature that can be imaged and processed so as to determine position and/or identification information for the local feature. Such local patterns can include a variety of patterns. For example, a local pattern can include variations in the rectangles themselves (e.g., such as size, aspect ratio, color, etc.), variations in local combinations of rectangles (e.g., such as at corners), variations in lines, and variations in scale (e.g., markers at multiple scales or markers within markers).</p><p id="p-0163" num="0158"><figref idref="DRAWINGS">FIGS. <b>29</b>A, <b>29</b>B, <b>29</b>C, <b>29</b>D, <b>29</b>E, <b>29</b>F, <b>29</b>G, and <b>29</b>H</figref> illustrate some exemplary approaches that can be used to incorporate positional and/or identification information within a discernible marker. <figref idref="DRAWINGS">FIG. <b>29</b>A</figref> illustrates variations in local combinations of rectangles that can be used at text corner locations. Three exemplary corner types are shown, specifically corner type 1 <b>360</b>, corner type 2 <b>362</b>, and corner type 3 <b>364</b>. Although three are shown, additional corner types can be formulated using four adjacent grid squares. Additionally, other combinations of grid squares can be used to formulate patterns that can be imaged and processed so as to be identified (e.g., a 3 by 3 pattern, a 3 by 2 pattern, etc.). <figref idref="DRAWINGS">FIGS. <b>29</b>B and <b>29</b>C</figref> illustrate discernible text constructed using rectangular features selected from a 2-D array (i.e., checkerboard array) of rectangular primatives. <figref idref="DRAWINGS">FIG. <b>29</b>D</figref> illustrates how a discernible text marker can be configured to have more corner features while still being readable. <figref idref="DRAWINGS">FIGS. <b>29</b>E and <b>29</b>F</figref> illustrate how a variation in the amount of overlap between adjacent rectangles can be used to change the appearance of the resulting text (<figref idref="DRAWINGS">FIG. <b>29</b>E</figref> having no overlap and <figref idref="DRAWINGS">FIG. <b>29</b>F</figref> having slight overlap, which makes the &#x201c;cross&#x201d; point/saddle point look like a cross point). Such an overlap may help compensate where an imaging system dilates the white area(s). <figref idref="DRAWINGS">FIGS. <b>290</b> and <b>29</b>H</figref> illustrates discernible text markers having features at multiple scales. Unlike the marker shown in <figref idref="DRAWINGS">FIG. <b>290</b></figref>, the marker shown in <figref idref="DRAWINGS">FIG. <b>29</b>H</figref> does not include a second level that is readily discernible by a human viewer, which may be advantageous in certain situations.</p><p id="p-0164" num="0159"><figref idref="DRAWINGS">FIGS. <b>30</b>A, <b>30</b>B, <b>30</b>C, and <b>30</b>D</figref> illustrate some additional exemplary discernible marker designs. Marker <b>370</b> is similar to marker <b>190</b> (shown in <figref idref="DRAWINGS">FIG. <b>13</b>C</figref>), but information dots <b>194</b> are replaced with discernible letters <b>372</b>. Marker <b>380</b> is similar to marker <b>370</b>, but has been extended to multiple rows. Marker <b>390</b> is an example where the text background <b>392</b> differs from its surroundings <b>394</b> so that the rectangular structure of the text background can be used to provide alignment. Marker <b>400</b> is similar to marker <b>390</b>, but includes four corners <b>402</b> having saddle points, which are more distinctive relative to surroundings. Marker <b>410</b> illustrates the use of a portion of text as a localizer, such as the letter &#x201c;V&#x201d; <b>412</b> shown, and the rest of the text for identification and/or verification (i.e., error checking/correction). The part(s) chosen for a localizer(s) can be enlarged or modified with more visual features to ensure they can be detected reliably from images. Marker <b>420</b> illustrates the use of added localizer features, such as circles <b>422</b>, that are blended with the text.</p><heading id="h-0019" level="2">Discernible Marker Detection</heading><p id="p-0165" num="0160"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a flow diagram of a tool tracking method <b>430</b> that employs processing of an image of a tool having a discernible marker. The method <b>430</b> produces matched feature points that can be used to estimate a 3-D pose for a tool using above described methods.</p><p id="p-0166" num="0161">In step <b>434</b> (feature detection), feature points (e.g., corners), which are stable against viewpoint changes, are located (i.e., detected) by processing the tool image data <b>432</b>. As discussed above, a discernable marker can be configured to boost the number of such stable features, such as by using a rectangular font or by including zigzagged strokes (e.g., see <figref idref="DRAWINGS">FIG. <b>29</b>D</figref>). A variety of approaches can be used for feature detection. One such approach is to use a corner detector. (See C. Harris and M. Stephens (1988), &#x201c;A combined corner and edge detector,&#x201d; in <i>Proceedings of the </i>4<sup>th </sup><i>Alvey Vision Conference</i>: pages 147-151.) Another approach is to locate distinctive image features from scale-invariant keypoints. (See D. Lowe (2004), &#x201c;Distinctive Image Features from Scale-Invariant Keypoints,&#x201d; in <i>International Journal of Computer Vision, </i>2004.)</p><p id="p-0167" num="0162">In step <b>436</b> (feature description), a description of the neighborhood around a feature point(s) is determined. A variety of approaches can be used for feature description. One such approach is to use adaptive thresholding to convert a gray scale image to a binary image and use Shape Context as the descriptor. (See S. Belongie, J. Malik, and J. Puzicha, &#x201c;Shape Matching and Object Recognition Using Shape Contexts,&#x201d; in <i>IEEE Transaction on Pattern Analysis and Machine Intelligence </i>2002, which is hereby incorporated by reference.) Another approach is to use Histogram of Orientation as the descriptor on a gray scale image. (see D. Lowe (2004), &#x201c;Distinctive Image Features from Scale-Invariant Keypoints,&#x201d; in <i>International Journal of Computer Vision, </i>2004, which is hereby incorporated by reference.)</p><p id="p-0168" num="0163">In step <b>438</b> (feature matching), individual feature points are matched against feature points from images of models using model features with descriptions data <b>450</b>. The model feature with descriptions data <b>450</b> can be formulated off-line (using 442) by processing model image data <b>444</b> so as to detect (step <b>446</b>) and generate descriptions (step <b>448</b>) for model features, which can be accomplished using the above described approaches. A number of model images from various viewpoints can be used to facilitate the matching of markers viewed at different viewpoints.</p><p id="p-0169" num="0164">In step <b>440</b> (feature grouping), the matched features are grouped so as to enforce geometric constraints among the matched points. Pose estimation and robust estimation can be used during the grouping of the feature points and can provide for outlier rejection of inconsistent feature points. The resulting matched feature points data <b>452</b> can be used for tool state estimation using above-described methods.</p><heading id="h-0020" level="2">Integrating Additional Constraint Data</heading><p id="p-0170" num="0165">Pose data from multiple time instances can be used in the determination of an object's pose. For example, different video frames over time can provide extra constraint on the pose of an object, such as a minimally invasive surgical instrument, that can be used to help outliers which are not consistent with the constraint.</p><p id="p-0171" num="0166">Kinematic constrains can also be used in the determination of an object's pose. For example, in minimally invasive surgery the surgical instruments are inserted into the patient body through insertion points on the body wall. These insertion points are fixed and surgical tools are constrained to pass through these points. Such insertion point constraint implies that the surgical tool's axes at different times intersect at a common point. Accordingly, a tool pose whose axis does not pass through the insertion point can be classified as an outlier and therefore discarded by using a robust estimation technique, such as RANSAC.</p><p id="p-0172" num="0167">Additionally, as discussed above, kinematics joint data can also be used in the determination of an object's pose. For example, in the context of robotic surgery, there is a strong temporal constraint that is provided by using the relationship between an image-derived tool pose and a kinematics-derived tool pose. For details, see commonly owned U.S. Pat. App. Pub. No. 2006/0258938 A1.</p><p id="p-0173" num="0168">Pose data for multiple tools for multiple time instances can be used to identify a tool in an image of two or more tools. For example, when two or more tools in an image have identical markers, an image-derived pose for one of the tools can be compared with an estimated pose for that tool. The estimated pose can be generated by using at least one prior tool state from a prior image of the tool or joint data from a robotic actuation system effectuating movement of the tool. Where the imaged-derived tool pose is within a predetermined deviation of the estimated pose, the identity of the tool can be confirmed.</p><p id="p-0174" num="0169">It is understood that the examples and embodiments described herein are for illustrative purposes and that various modifications or changes in light thereof will be suggested to persons skilled in the art and are to be included within the spirit and purview of this application and the scope of the appended claims. Numerous different combinations are possible, and such combinations are considered to be part of the present invention.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230000568A1-20230105-M00001.NB"><img id="EMI-M00001" he="8.13mm" wi="76.20mm" file="US20230000568A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230000568A1-20230105-M00002.NB"><img id="EMI-M00002" he="19.05mm" wi="76.20mm" file="US20230000568A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-01-20" num="01-20"><claim-text><b>1</b>-<b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. A system comprising:<claim-text>a tool including at least one reference feature;</claim-text><claim-text>a processor; and</claim-text><claim-text>a memory having computer readable instructions stored thereon, the computer readable instructions, when executed by the processor, cause the system to:<claim-text>receive image data including an image of the tool and the at least one reference feature;</claim-text><claim-text>determine a pose of the tool from the image data; and</claim-text><claim-text>modify the image data to visually decrement a portion of the image data corresponding to the at least one reference feature.</claim-text></claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the at least one reference feature comprises a plurality of reference features.</claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the plurality of reference features comprises a plurality of markers, each marker including identification features, and wherein the computer readable instructions, when executed by the processor, further cause the system to:<claim-text>determine the identification of each marker based on the image data.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the at least one reference feature comprises at least one natural feature of the tool.</claim-text></claim><claim id="CLM-00025" num="00025"><claim-text><b>25</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the at least one reference feature comprises at least one artificial feature.</claim-text></claim><claim id="CLM-00026" num="00026"><claim-text><b>26</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the at least one reference feature comprises a discernible marker.</claim-text></claim><claim id="CLM-00027" num="00027"><claim-text><b>27</b>. The system of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the discernible marker comprises text including a localizer feature.</claim-text></claim><claim id="CLM-00028" num="00028"><claim-text><b>28</b>. The system of <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the computer readable instructions, when executed by the processor, further cause the system to:<claim-text>detect feature points of the at least one reference feature; and</claim-text><claim-text>match the feature points to corresponding points of a model.</claim-text></claim-text></claim><claim id="CLM-00029" num="00029"><claim-text><b>29</b>. The system of <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the computer readable instructions, when executed by the processor, further cause the system to:<claim-text>determine a description of an area around each feature point.</claim-text></claim-text></claim><claim id="CLM-00030" num="00030"><claim-text><b>30</b>. The system of <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the computer readable instructions, when executed by the processor, further cause the system to:<claim-text>group at least some of the matched feature points; and</claim-text><claim-text>reject outlier feature points.</claim-text></claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. A tool tracking method comprising:<claim-text>receiving image data including an image of a tool and at least one reference feature;</claim-text><claim-text>determining a pose of the tool from the image data; and</claim-text><claim-text>modifying the image data to visually decrement a portion of the image data corresponding to the at least one reference feature.</claim-text></claim-text></claim><claim id="CLM-00032" num="00032"><claim-text><b>32</b>. The tool tracking method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the at least one reference feature comprises a plurality of reference features.</claim-text></claim><claim id="CLM-00033" num="00033"><claim-text><b>33</b>. The tool tracking method of <claim-ref idref="CLM-00032">claim 32</claim-ref>, wherein the plurality of reference features comprises a plurality of markers, each marker including identification features, the method further comprising:<claim-text>determining the identification of each marker based on the image data.</claim-text></claim-text></claim><claim id="CLM-00034" num="00034"><claim-text><b>34</b>. The tool tracking method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the at least one reference feature comprises at least one natural feature of the tool.</claim-text></claim><claim id="CLM-00035" num="00035"><claim-text><b>35</b>. The tool tracking method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the at least one reference feature comprises at least one artificial feature.</claim-text></claim><claim id="CLM-00036" num="00036"><claim-text><b>36</b>. The tool tracking method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the at least one reference feature comprises a discernible marker.</claim-text></claim><claim id="CLM-00037" num="00037"><claim-text><b>37</b>. The tool tracking method of <claim-ref idref="CLM-00036">claim 36</claim-ref>, wherein the discernible marker comprises text including a localizer feature.</claim-text></claim><claim id="CLM-00038" num="00038"><claim-text><b>38</b>. The tool tracking method of <claim-ref idref="CLM-00031">claim 31</claim-ref>, further comprising:<claim-text>detecting feature points of the at least one reference feature; and</claim-text><claim-text>matching the feature points to corresponding points of a model.</claim-text></claim-text></claim><claim id="CLM-00039" num="00039"><claim-text><b>39</b>. The tool tracking method of <claim-ref idref="CLM-00038">claim 38</claim-ref>, further comprising:<claim-text>determining a description of an area around each feature point.</claim-text></claim-text></claim><claim id="CLM-00040" num="00040"><claim-text><b>40</b>. The tool tracking method of <claim-ref idref="CLM-00038">claim 38</claim-ref>, further comprising:<claim-text>grouping at least some of the matched feature points; and</claim-text><claim-text>rejecting outlier feature points.</claim-text></claim-text></claim></claims></us-patent-application>