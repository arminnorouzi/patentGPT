<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004422A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004422</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17943896</doc-number><date>20220913</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20180101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>455</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>568</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20220101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>45558</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>67</main-group><subgroup>568</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>5077</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1441</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2009</main-group><subgroup>45587</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR ADVERSARY DETECTION AND THREAT HUNTING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16780547</doc-number><date>20200203</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11442766</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17943896</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Architecture Technology Corporation</orgname><address><city>Eden Prairie</city><state>MN</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Bahr</last-name><first-name>Nathan</first-name><address><city>Eden Prairie</city><state>MN</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Joyce</last-name><first-name>Robert A.</first-name><address><city>Eden Prairie</city><state>MN</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Architecture Technology Corporation</orgname><role>02</role><address><city>Eden Prairie</city><state>MN</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed herein are embodiments of systems, methods, and products that provide adversary detection and threat hunting. A server may comprise a user side virtual machine facing the cyber protection users, a collection virtual machine facing the at-risk network, and a data repository. The server may receive user requests requesting status data from the at-risk network via the user side virtual machine. The server may collect status data from the at-risk network via the collection virtual machine and store the collected data into the data repository. Different users may request duplicate information from the at-risk network. The server may retrieve the requested information from the data repository for duplicate requests and return the responses immediately for such requests. Because the server does not query the at-risk network for duplicate requests, the server may reduce the amount of bandwidth needed to acquire and distribute the requested information.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="205.40mm" wi="158.75mm" file="US20230004422A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="214.46mm" wi="162.39mm" file="US20230004422A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="214.46mm" wi="173.48mm" file="US20230004422A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="222.67mm" wi="161.37mm" file="US20230004422A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading><p id="p-0002" num="0001">This application is a continuation application of U.S. application Ser. No. 16/780,547, entitled &#x201c;Systems and Methods for Open Threat Hunt,&#x201d; filed Feb. 3, 2020, which is incorporated by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">This application relates generally to methods and systems for open threat hunting.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">High value information technology (IT) assets, such as endpoints, servers, and devices within an at-risk network, face constant attack from adversaries. The impact of a significant compromise may be catastrophic. Adversaries may leverage component product and software defects to gain control of the at-risk network. The cyberattacks from adversaries may be any type of offensive maneuver that attempts to access data, functions, or other restricted areas of the at-risk network without authorization, potentially with malicious intent.</p><p id="p-0005" num="0004">As systems grow and are aggregated, assessment complexity grows exponentially due to potential interconnections and interdependencies, as well as more organizations involved in management and maintenance. For example, the at-risk network may comprise any number of distributed systems and network infrastructures and may comprise a plurality of subnets. Assessing the cybersecurity risks and their impacts for the at-risk network may be complex.</p><p id="p-0006" num="0005">The existing and conventional methods for security assessment and threat hunting may involve a large number of cyber protection users that constantly monitor and request various status information from the at-risk network. Such constant requests in the conventional methods may generate a large amount of traffic in the at-risk network. However, the at-risk network may have limited resources and low bandwidth. As a result, when tasked with hunting adversaries on comparatively low-bandwidth at-risk networks, cyber protection teams (CPT) may require more throughput than the analyzed at-risk network can provide. While the different cyber protection users may need to collect status data and hunt open threats of the at-risk network, the low-bandwidth at-risk network may not be able to process the large number of requests and may cause severely slow speeds. Consequently, the security assessment and threat hunting of the at-risk network may be negatively affected.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">What is therefore desired is to have a system that provides adversary detection and hunting and supports multiple cyber protection users at once in a low bandwidth network. Embodiments disclosed herein describe a hypervised open threat hunter system that dramatically reduces bandwidth requirements. The hypervised open threat hunter may serve as an intermediary between existing cyber protection team hardware kits and the at-risk network by employing a shared intelligent data-collection front-end to gather information from the at-risk network and caching common analysis tools and threat models in a high-capacity virtualized backbone.</p><p id="p-0008" num="0007">Specifically, a server may comprise a user side virtual machine facing the cyber protection users, a collection virtual machine facing the at-risk network, and a data repository. The user side virtual machine may be a protected virtual machine that is separated from the collection virtual machine. Users may access data from the user side virtual machine and the repository, while the separate collection virtual machine acts as the direct interface to the at-risk network. The server may receive user requests requesting status data of the at-risk network via the user side virtual machine.</p><p id="p-0009" num="0008">The server may collect status data from the at-risk network via the collection virtual machine and store the collected data into the data repository. Because different users may request duplicate information for the at-risk network, the server may retrieve the requested information from the data repository for duplicate requests and return the responses immediately for such requests. Because the server does not query the at-risk network for duplicate requests, the server may reduce the amount of bandwidth needed to acquire and distribute the requested information.</p><p id="p-0010" num="0009">As the number of cyber protection users increases, and presumably the data that each user needs is redundant, advantages of the embodiments disclosed herein may increase. Specifically, the time it takes a user to access the state of the at-risk network, determine the presence of threats and adversaries, and take actions against them decreases because of fast access to cached data and reduced load on the at-risk network.</p><p id="p-0011" num="0010">In one embodiment, a computer-implemented method comprises receiving, by a server from a first electronic user device, a first request requesting a first status data of an at-risk network via a first virtual machine of the server; collecting, by the server, the first status data from the at-risk network via a second virtual machine of the server that is isolated from the first virtual machine of the server; transmitting, by the server, the collected first status data to the first electronic user device via the first virtual machine of the server; caching, by the server, the collected first status data into a data repository of the server; receiving, by the server from a second electronic user device, a second request requesting a second status data of the at-risk network via the first virtual machine of the server; upon the second status data corresponding to the first status data, retrieving, by the server, the first status data from the data repository instead of the at-risk network; and transmitting, by the server, the retrieved first status data to the second electronic user device via the first virtual machine of the server.</p><p id="p-0012" num="0011">In another embodiment, a computer system comprises a first electronic user device, a second electronic user device, a server in communication with the first and second electronic user devices and configured to: receive, from the first electronic user device, a first request requesting a first status data of an at-risk network via a first virtual machine of the server; collect the first status data from the at-risk network via a second virtual machine of the server that is isolated from the first virtual machine of the server; transmit the collected first status data to the first electronic user device via the first virtual machine of the server; cache the collected first status data into a data repository of the server; receive, from the second electronic user device, a second request requesting a second status data of the at-risk network via the first virtual machine of the server; upon the second status data corresponding to the first status data, retrieve the first status data from the data repository instead of the at-risk network; and transmit the retrieved first status data to the second electronic user device via the first virtual machine of the server.</p><p id="p-0013" num="0012">It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the disclosed embodiment and subject matter as claimed.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0014" num="0013">The accompanying drawings constitute a part of this specification and illustrate embodiments of the subject matter disclosed herein.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates a computer system for hypervised open threat hunter, according to an embodiment.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates data flow of the hypervised open threat hunter system, according to an embodiment.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a flowchart for the hypervised open threat hunting, according to an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0018" num="0017">Reference will now be made to the illustrative embodiments illustrated in the drawings, and specific language will be used here to describe the same. It will nevertheless be understood that no limitation of the scope of the claims or this disclosure is thereby intended. Alterations and further modifications of the inventive features illustrated herein, and additional applications of the principles of the subject matter illustrated herein, which would occur to one ordinarily skilled in the relevant art and having possession of this disclosure, are to be considered within the scope of the subject matter disclosed herein. The present disclosure is here described in detail with reference to embodiments illustrated in the drawings, which form a part here. Other embodiments may be used and/or other changes may be made without departing from the spirit or scope of the present disclosure. The illustrative embodiments described in the detailed description are not meant to be limiting of the subject matter presented here.</p><p id="p-0019" num="0018">Embodiments disclosed herein provide an adversary detection and hunting system capable of supporting multiple cyber protection users at once in a low bandwidth network. The system combines hypervised virtual machines, an efficient data repository, and secure inter-domain communication. The hypervised virtual machines may include the user side virtual machine and the collection virtual machine running on a hypervisor (e.g., the server).</p><p id="p-0020" num="0019">The embodiments disclosed herein may leverage virtual machine technology to realize network efficiency and security. The system may enforce a separation boundary, or partition, between the user side virtual machine and the collection virtual machine. With this hypervised partition, the system may need a way to move the relevant data for network sensing and caching to the user side. The system may comprise an inter-domain communication channel over which the virtual machines may exchange data with each other. The inter-domain communication channel may be robust enough to both protect the cyber protection kits associated with the users from infection and prevent unnecessary or duplicate traffic from the user side from taking up bandwidth on the at-risk network side.</p><p id="p-0021" num="0020">The efficient data repository may be a single data repository that is capable of caching network-level data in a way that is useful for cyber protection analytical tools. The system may remove duplicate or near-duplicate information flowing from the at-risk network to the cyber protection users. For example, in a given type of cyber protection mission, the commands requesting the heaviest traffic flows and the most used applications might be called frequently and by different users. The embodiments disclosed herein may recognize the duplicate requests and allow the access to the data repository without issuing multiple packets with the same essential information on the at-risk network. The use of this cached information in the data repository may free up bandwidth and resources on the at-risk network, while still providing the required information to the cyber protection users.</p><p id="p-0022" num="0021">Cyber protection users may access data repository through the user side virtual machine. The data collection on the at-risk network may be through the collection virtual machine. The two virtual machine may be isolated from each other. All data flowing in both directions between the user devices and the at-risk network may pass through the server and the network-efficient repository, guaranteeing the controlling of exactly how much bandwidth to use.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> illustrates components of a hypervised open threat hunter system <b>100</b>A, according to an embodiment. The system <b>100</b>A may include a server <b>102</b> connected with a set of electronic user devices <b>110</b>A, <b>110</b>B, <b>110</b>C (collectively referred to as <b>110</b>) via hardware and software of a high-capacity network <b>112</b>. The server <b>102</b> may also connect to an at-risk network <b>114</b>. The high-capacity network <b>112</b> may support high speed network communication and have the capacity to process large amount of network traffic. Examples of the high-capacity network <b>112</b> include, but are not limited to, Local Area Network (LAN), Wireless Local Area Network (WLAN), Metropolitan Area Network (MAN), Wide Area Network (WAN), and the Internet. The communication over the network <b>112</b> may be performed in accordance with various communication protocols, such as Transmission Control Protocol and Internet Protocol (TCP/IP), User Datagram Protocol (UDP), and IEEE communication protocols.</p><p id="p-0024" num="0023">The server <b>102</b> may be any computing device comprising a processor and other computing hardware and software components. The server <b>102</b> may be logically and physically organized within the same or different devices or structures, and may be distributed across any number of physical structures and locations (e.g., cabinets, rooms, buildings, cities).</p><p id="p-0025" num="0024">The server <b>102</b> may be a computing device comprising a processing unit. The processing unit may include a processor with computer-readable medium, such as a random access memory coupled to the processor. The server <b>102</b> may be running algorithms or computer executable program instructions, which may be executed by a single processor or multiple processors in a distributed configuration. The server <b>102</b> may be configured to interact with one or more software modules of a same or a different type operating within the system <b>100</b>A.</p><p id="p-0026" num="0025">Non-limiting examples of the processor may include a microprocessor, an application specific integrated circuit, and a field programmable object array, among others. Non-limiting examples of the server <b>102</b> may include a server computer, a workstation computer, a tablet device, and a mobile device (e.g., smartphone). Some embodiments may include multiple computing devices functioning as the server <b>102</b>. Some other embodiments may include a single computing device capable of performing the various tasks described herein.</p><p id="p-0027" num="0026">In some embodiments, the server <b>102</b> may be a device with specific resource limits to ensure viability in low-SWaP (size, weight, and power), low-bandwidth use case common to cyber protection missions. For example, the server may be a motherboard ensuring a design with dimensions 12&#x2033;&#xd7;6&#x2033;&#xd7;12&#x2033; and a weight under 30 pounds, capable of being transported by a single person as a carry-on item. This form factor may also allow for tens of terabytes of storage along with a processor that is powerful enough to execute the process described herein. The server <b>102</b> may be compatible with existing user device kits.</p><p id="p-0028" num="0027">For example, the server <b>102</b> may comprise an Intel processor in the 3-4 GHz range, with 8-16 TB of storage and 32-64 GB of memory, gigabit network connections, along with a GPU (graphic processing unit) for running the user programs or other more intensive network sensing and analytics algorithms. The system may use a development platform (e.g., OpenXT, Xen, Hyper-V, and the like) for security and virtualization to ensure the system disclosed herein is hardened against adversarial threats present in any at-risk network <b>114</b> it may connect to. The server <b>102</b> may comprise any other configurations. The open threat hunter system disclosed herein may run on a variety of platforms.</p><p id="p-0029" num="0028">The electronic user device <b>110</b> may be any computing device allowing a user to interact with the server <b>102</b>. The electronic user device <b>110</b> may be any computing device comprising a processor and non-transitory machine-readable storage medium. The examples of the computing device may include, but are not limited to, a personal digital assistant (PDA), a smartphone, a tablet computer, and the like. The electronic user device <b>110</b> may be a mobile device or handheld computer that provide a touchscreen interface with digital buttons and keyboard or physical buttons along with a physical keyboard. The electronic user device <b>110</b> may comprise integrated cameras, digital media players, and the global positional system (GPS) capabilities. The electronic user device <b>110</b> may comprise any number of input and output devices supporting various types of data, such as text, image, audio, video, and the like.</p><p id="p-0030" num="0029">The at-risk network <b>114</b> may be any network comprising distributed systems and network infrastructures. The at-risk network <b>114</b> may comprise a plurality of subnets. The at-risk network <b>114</b> may be the target of cyberattacks from one or more adversaries. The cyberattacks from adversaries may be any type of offensive maneuver that attempts to access data, functions or other restricted areas of the at-risk network <b>114</b> without authorization, potentially with malicious intent. The adversaries may steal, alter, and/or destroy one or more network devices within the at-risk network <b>114</b>. The cyberattacks may range from installing spyware on a particular computer to attempting to destroy the infrastructure of entire system of the at-risk network <b>114</b>.</p><p id="p-0031" num="0030">The at-risk network <b>114</b> may have limited resources and low bandwidth. While the different cyber protection users may need to collect status data and hunt open threats of the at-risk network <b>114</b>, the low-bandwidth at-risk network <b>114</b> may not be able to process the large number of requests and may cause severely slow speeds.</p><p id="p-0032" num="0031">The server <b>102</b> may be between the cyber protection user devices <b>110</b> and the at-risk network <b>114</b>, and provide the users a high-bandwidth enclave for their mission even if the at-risk network <b>114</b> is much slower. The server <b>102</b> may decrease bandwidth consumption on the at-risk network <b>114</b>, which in turn may increase the efficiency of the threat hunting.</p><p id="p-0033" num="0032">The server <b>102</b> may receive one or more requests from the electronic user devices <b>110</b> associated with the cyber protection users. The requests may request status information of the at-risk network <b>114</b>. For example, a first cyber protection user may request to scan a host computer of the at-risk network <b>114</b> for open ports. The server <b>102</b> may intercept the IP (Internet protocol) packet of the request. Furthermore, the server <b>102</b> may collect the requested data from the at-risk network <b>114</b>. For example, the server <b>102</b> may make a record of the packet, forward the packet to the at-risk network <b>114</b> and wait for a response. Upon receiving/collecting the requested data from the at-risk network <b>114</b>, the server <b>102</b> may store the initial request and the collected data (e.g. response) to the data repository <b>104</b>. The server <b>102</b> may also transmit the response comprising the collected date to the user device associated with the first cyber protection user.</p><p id="p-0034" num="0033">At a later time, a second cyber protection user may request to initiate a scan of the same host computer. The server <b>102</b> may intercept the packet of the request and determine that the request of the second user requests the same information as the first user. The server <b>102</b> may immediately return a copy of the response returned to the first user. Certain types of the information requested, such as which ports are open on the target host computer, may not change rapidly. As a result, the server <b>102</b> may use the same information for different user requests. The embodiments disclosed herein may allow different users to obtain relevant data from the at-risk network <b>114</b> while reducing the amount of bandwidth needed to acquire and distribute the data.</p><p id="p-0035" num="0034">The server <b>102</b> may comprise a network-efficient data repository <b>104</b>, a user side virtual machine (VM) <b>106</b> and a collection virtual machine <b>108</b>. The server <b>102</b> may be a hypervisor that performs the hypervised open threat hunting using the virtual machines <b>106</b>, <b>108</b> running on it. The server (e.g., hypervisor) <b>102</b> may perform data collection on the at-risk network <b>114</b> through the collection virtual machine <b>108</b> that interfaces the at-risk network <b>114</b>. The collection virtual machine <b>108</b> may identify the duplicate requests from multiple users. Further, the collection virtual machine <b>108</b> may ensure that the requests generated by the users do not overrun the at-risk network <b>114</b>. The majority of the relevant data requested by the users may be application layer data, such as NetFlow information, or data specific to a network-connected machine, such as usernames or process information. Such requested data may ensure that the server <b>102</b> is able to aggregate data from network infrastructure and network-connected devices.</p><p id="p-0036" num="0035">The data repository <b>104</b> may comprise one or more databases to store the requests and the responses (e.g., collected data on the at-risk network) of different users. The data repository <b>104</b> may be any non-transitory machine-readable media configured to store the requests and the responses. The data repository <b>104</b> may be part of the server <b>102</b>. The data repository <b>104</b> may be a separate component in communication with the server <b>102</b>. The data repository <b>104</b> may have a logical construct of data files, which may be stored in non-transitory machine-readable storage media, such as a hard disk or memory, controlled by software modules of a database program (e.g., SQL), and a database management system that executes the code modules (e.g., SQL scripts) for various data queries and management functions.</p><p id="p-0037" num="0036">When a user requests a piece of information that another user or application has recently requested, the server <b>102</b> may return the requested data from the data repository <b>104</b> without retrieving the data from the at-risk network <b>114</b> (e.g., forwarding the requests to the at-risk network). As a result, many cyber protection users and/or hardware kits can effectively share the data they need from the at-risk network <b>114</b> without constantly retrieving the data from the at-risk network <b>114</b>, tying up resources and using more bandwidth on the at-risk network <b>114</b>. The data repository <b>104</b> may include a common interface for all cyber protection users or applications to interact with, so as to view and analyze the sum total of the collected data.</p><p id="p-0038" num="0037">The server <b>102</b> may use a filter mechanism to determine which requests to be forwarded to the at-risk network <b>114</b> and which responses from the at-risk network are allowed back to the user side virtual machine. The filter mechanism may ensure that an adversary residing on the at-risk network <b>114</b> cannot access the user device resources.</p><p id="p-0039" num="0038">The server (e.g., hypervisor) <b>102</b> may leverage virtual machine technology to realize network efficiency and security. The server <b>102</b> may enforce a separation boundary (e.g., partition) between the user side virtual machine <b>106</b> and the collection virtual machine <b>108</b> to isolate the two virtual machines from each other. With this hypervised partition, the server (e.g., hypervisor) <b>102</b> may also need a way to move the relevant data for networking sensing and caching from the at-risk network side to the user side. The server may use an inter-domain communication channel to exchange data between the virtual machines. All data flowing in both directions between the cyber protection user devices <b>110</b> and the at-risk network <b>114</b> may pass through the server <b>102</b>, guaranteeing the possibility of controlling exactly how much bandwidth the system can use.</p><p id="p-0040" num="0039">The cyber protection user devices <b>110</b> may use different kits with diverse applications for network assessment, host forensics, and defense mechanisms. Many of these applications may rely on the same set of data about the at-risk network <b>114</b>. In other words, all users may need basic information about the at-risk network <b>114</b>. The server <b>102</b> may decide which requested information is the most important and cache such information in the data repository <b>104</b> for access by users without increasing the load on the low-bandwidth at-risk network <b>114</b>. As a result, the users may require fewer at-risk network resources, and all users may acquire essential data faster, decreasing the time adversary hunting could potentially take. Furthermore, the data repository <b>104</b> may replay collected data as part of post-mortem analysis.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> illustrates data flow of the hypervised open threat hunter system, according to an embodiment. Initially, the server <b>102</b> may receive a first request from a first electronic user device <b>110</b>A via the user side virtual machine <b>106</b>. The first request may request status data and/or any other information regarding the at-risk network <b>114</b>. The server <b>102</b> may collect the requested data from the at-risk network <b>114</b> through the collection virtual machine <b>108</b>. The user side virtual machine <b>106</b> and the collection virtual machine <b>108</b> are isolated from each other. The communication between the user side virtual machine <b>106</b> and the collection virtual machine <b>108</b> may be through the inter-domain communication channel <b>118</b>.</p><p id="p-0042" num="0041">After the server <b>102</b> receives the requested data through the inter-domain communication channel <b>118</b>, the server <b>102</b> may store the request and the collected data corresponding to the request into the data repository <b>104</b>. The server <b>102</b> may return the response comprising the collected data to the first electronic user device <b>110</b>A through the user side virtual machine <b>106</b>. The server <b>102</b> may communicate with the user device <b>110</b>A over the high-capacity network <b>112</b>.</p><p id="p-0043" num="0042">For the purpose of security, the server <b>102</b> may be partitioned into two isolated areas. The first area may be the user side area that comprises the user side virtual machine <b>106</b> and the data repository <b>104</b>. The data repository <b>104</b> may store all data in a structured database for cyber protection user applications to hunt for adversaries and threats. The second area may be the at-risk network side area that comprises the collection virtual machine <b>108</b>. The collection virtual machine <b>108</b> may comprise required applications to access the state and traffic of the at-risk network <b>114</b>. The communication between these two areas may be through the inter-domain communication channel <b>118</b>. Upon the user side virtual machine <b>106</b> receiving the request, the server <b>102</b> may transport the request from the user side area to the at-risk network side area over the inter-domain communication channel <b>118</b>, specifically, from the user side virtual machine <b>106</b> to the collection virtual machine <b>108</b>. Upon the collection virtual machine <b>108</b> receiving/collecting the requested data regarding the at-risk network, the server <b>102</b> may transport the collected data from the at-risk network side area (e.g., collection virtual machine) over the inter-domain communication channel <b>118</b> into the user side area that includes the user side virtual machine <b>106</b> and the data repository <b>104</b>. The server <b>102</b> may further store the collected data to the data repository <b>104</b>.</p><p id="p-0044" num="0043">The partition may assure both that an adversary cannot infiltrate the threat hunter system, and that the threat hunter system will not increase the strain on the low bandwidth network. The inter-domain communication channel <b>118</b> may move relevant data across this partition. For example, the embodiments disclosed herein may use a method named V4V (virtual machine for virtual machine) to move network data into the efficient repository to allow cyber protection users to access the data. In addition to being secure, having V4V broker all communications with the at-risk network may allow the server to manage all potential traffic to the at-risk network. The inter-domain communication channel <b>118</b> may allow the server to measure and limit the amount of traffic generated so as to not adversely affect a low bandwidth network (e.g., the at-risk network <b>114</b>). This also means that the server <b>102</b> may be aware of the effect certain commands will have on the at-risk network <b>114</b>.</p><p id="p-0045" num="0044">At a later time, the server <b>102</b> may receive a second request from a second electronic user device <b>110</b>B via the user side virtual machine <b>106</b>. The second request may request status data and/or any other information regarding the at-risk network <b>114</b>. The server <b>102</b> may perform cache lookup <b>116</b> and determine whether the requested data is stored in the data repository <b>104</b>. If the requested data is already cached within the data repository <b>104</b>, the server <b>102</b> may retrieve the requested data from the data repository <b>104</b> and return the response (e.g., comprising the requested data) immediately to the second electronic user device <b>110</b>B through the user side virtual machine <b>106</b>. The server <b>102</b> may communicate with the second electronic user device <b>110</b>B over the high-capacity network <b>112</b>. If the requested data is not cached within the data repository <b>104</b>, the server <b>102</b> may determine that the data repository <b>104</b> needs update. The server <b>102</b> may utilize the inter-domain communication channel <b>118</b> to forward the request to the at-risk network <b>114</b> through the collection virtual machine <b>108</b>. The server <b>102</b> may collect the requested data from the at-risk network <b>114</b> as discussed above. The server may store the newly collected data into the data repository <b>104</b>.</p><p id="p-0046" num="0045">The data repository <b>104</b> may be the centralized cache of all network data requested by the cyber protection users via user applications, any analysis tools, and threat models that the users use. The data repository <b>104</b> may exist as a virtual machine to which the server controls data access. Specifically, only the cache-lookup <b>116</b> and inter-domain communication channels <b>118</b>, which are implemented as their own virtual machines, are allowed to access the data repository <b>104</b>.</p><p id="p-0047" num="0046">In the likely scenario of multiple users accessing the same data, duplicate requests from the at-risk network are eliminated; responses to data are faster on average; the at-risk network's utilization is not overrun by the users; and the server provides an additional layer of the security between the users and adversaries.</p><p id="p-0048" num="0047">The embodiments disclosed herein may allow the system to use physical resources and processor time efficiently and let multiple users take advantage of the same set of hardware and software without increasing the overall footprint of the system. The single data repository <b>104</b> stores all data collected from the at-risk network <b>114</b> to efficiently move relevant information out of the low-bandwidth at-risk network <b>114</b> into the high bandwidth enclave the cyber protection users equipped with. The inter-domain communication channel <b>118</b> may enable the movement of data across the partition in the server <b>102</b>, ensuring quick movement of data while minimizing the possibility of infecting more devices.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a flowchart for the hypervised open threat hunting, according to an embodiment. Other embodiments may comprise additional or alternative steps, or may omit some steps altogether.</p><p id="p-0050" num="0049">At step <b>202</b>, the server may receive a first request from a first electronic user device requesting a first status data of the at-risk network. The server may receive the first request through the user side virtual machine (e.g., a first virtual machine) of the server. The user side virtual machine may interface the user devices over a high-capacity network. The first electronic user device may be associated with a first cyber protection user. The first request may request status data and/or any other information regarding the at-risk network. For example, a first cyber protection user may request to scan a host computer of the at-risk network for open ports. The server may intercept the IP (Internet protocol) packet of the first request. The server may also make a record of the first request by storing the IP packet into a data repository of the server.</p><p id="p-0051" num="0050">The at-risk network may have limited resources and low bandwidth. While different cyber protection users may need to collect status data and hunt open threats of the at-risk network, the low-bandwidth at-risk network may not be able to process the large number of requests and may cause severely slow speeds.</p><p id="p-0052" num="0051">As discussed above, for security purpose, the server may be partitioned into two isolated areas. The first area may be the user side area that comprises the user side virtual machine and the data repository. The second area may be the at-risk network side area that comprises the collection virtual machine. The communication between these two areas may be through the inter-domain communication channel. Upon the user side virtual machine receiving the request, the server may transport the request from the user side area to the at-risk network side area over the inter-domain communication channel, specifically, from the user side virtual machine to the collection virtual machine. In other words, the server may utilize the inter-domain communication channel to forward the request from the user side virtual machine to the collection virtual machine.</p><p id="p-0053" num="0052">The secure hypervisor architecture disclosed herein may be resistant to detection and compromise by the attackers. Even if an adversary gains access to the network-facing side of the server (e.g., the collection virtual machine), the adversary would not have access to the user side due to the partition. The system and method disclosed herein may provide an additional assurance of security with the use of the virtual machine for virtual machine (V4V) framework for inter-domain communications. The framework does not let the virtual machines share any memory, keeping the user side and the at-risk network side of the hypervised partition separate. All communication between the user side and the at-risk network side flows though one channel managed by the server to improve the security. Further, the server may be able to check all traffic to see if the cache could be used instead of using the network resources of the at-risk network.</p><p id="p-0054" num="0053">At step <b>204</b>, the server may collect the requested data (e.g., first status data) from the at-risk network. The server may collect the requested data through the collection virtual machine (e.g., a second virtual machine) of the server. The collection virtual machine may interface the at-risk network and collect the requested data from the at-risk network. Upon the collection virtual machine receiving/collecting the requested data regarding the at-risk network, the server may transport the collected data from the collection virtual machine over the inter-domain communication channel into the user side area that includes the user side virtual machine and the data repository. The server may further store the collected data to the data repository.</p><p id="p-0055" num="0054">The collection virtual machine may be able to query the state of the machines and networks within the at-risk network. The collection virtual machine may be able to collect Netflow and other application layer protocol traffic, as well as information about the routers and other devices included in the at-risk network.</p><p id="p-0056" num="0055">The server may also transmit the response comprising the collected date to the first electronic user device associated with the first cyber protection user. The server may return the response comprising the collected data to the first electronic user device through the user side virtual machine. The server may communicate with the user device over the high-capacity network.</p><p id="p-0057" num="0056">At step <b>206</b>, the server may store the collected data (e.g., first status data) into the data repository. The server may store the collected data, the timestamp of the data collection, the type of the collected data, and any other related information of the collected data into the data repository.</p><p id="p-0058" num="0057">The at-risk network may comprise multiple smaller subnets. Each of these subnets may generate data individually, which may require large storage. A &#x201c;collect it all&#x201d; approach may be unrealistic especially when the server is an equipment with SWaP (size, weight, and power) constraints. For the system to be agnostic to the variety of tools users employ over the course of their mission, the server may make decisions about what to cache by analyzing application-layer data exchanged over the at-risk network. The system may employ a caching technique, where recently accessed data is stored. If a user requests data that was recently cached, a local copy of the data will be served to the user instead of accessing the at-risk network again. Examples of relevant information may include which network connections relay the most traffic (e.g., information that may be captured by Netflow-enabled devices) or an anomalous event detected in a specific host (e.g., information that could be contained in operating system specific log files). The server may monitor the user requests for the broad range of information and record both the users' requests and subsequent data collected from the at-risk network.</p><p id="p-0059" num="0058">In terms of passively gathered data, such as the data captured by a promiscuous-mode protocol analyzer running on the collection virtual machine's at-risk network interface, the server may categorize the gathered data by the time it was collected. Cyber protection users may request historical packet capture data from the system disclosed herein.</p><p id="p-0060" num="0059">In some embodiments, the server may determine when cached data is stale, and when to request an update through the inter-domain channel. The server may update status data in the data repository based on a last-update timestamp and a type of the status data. In some embodiments, the server may use a combination of the last update and the type of information requested by the users. Some types of requests may be for information that is more fixed in the state of the at-risk network, such as a host's IP address. Such information may be cached and infrequently updated. Other information may change more frequently, such as which applications are the most active on the at-risk network. Such information may still be cached, but may be updated more frequently to better reflect the state of the at-risk network.</p><p id="p-0061" num="0060">The embodiments disclosed herein may use an emulated test network to recognize how often relevant information needs to be updated. Network sensing and analytics requests may be made, while a control network monitors what data is actually returned, and which types of requests use the most bandwidth. This may also reveal which types of relevant network information change frequently and which types are static. The test network may comprise dozens of nodes representing various infrastructure components that are connected. The testing may aggregate data both on what is worth caching and how often that cache should be updated. Based on such data, the system disclosed herein may determine the best policy for caching network analysis data, which is central to the development of the network-efficient data repository.</p><p id="p-0062" num="0061">At step <b>208</b>, the server may receive a second request from a second electronic device requesting a second status data of the at-risk network. The server may receive the second request through the user side virtual machine (e.g., a first virtual machine) of the server. The user side virtual machine may interface the user devices over a high-capacity network. The second electronic user device may be associated with a second cyber protection user. The second request may request status data and/or any other information regarding the at-risk network. The server may intercept the IP (Internet protocol) packet of the second request. The server may also make a record of the second request by storing the IP packet into the data repository of the server.</p><p id="p-0063" num="0062">At step <b>210</b>, the server may determine whether the second status data is corresponding to the first status data. In other words, the server may determine whether the requested data (e.g., second status data) is already included in the data repository. In one embodiment, the server may determine that the requested data is included in the data repository when the requested second status data is identical to the first status data that is stored within the data repository. In an alternative embodiment, the server may determine that the requested data is included in the data repository when the requested second status data can be derived from the first status data that is stored within the data repository. If the data is already cached/included in the data repository, the process may proceed to step <b>212</b>; otherwise, the process may proceed to step <b>214</b>.</p><p id="p-0064" num="0063">At step <b>212</b>, the server may retrieve the requested data from the data repository and return the response (e.g., comprising the requested data) immediately to the second electronic user device via the user side virtual machine. Because the requested data (e.g., second status data) is identical to or can be derived from the first status data that are stored within the data repository, the server may retrieve the first status data from the data repository and transmit the retrieved first status data to the second electronic device via the user side virtual machine.</p><p id="p-0065" num="0064">The embodiments disclosed herein may work with common networking standards and may work as a proxy server for network information. The server may forward traffic between the user device and the at-risk network unless similar traffic has been recently observed. If there is a similar requested, the server may return a cached version of the requested data from the data repository instead of forwarding the request to the at-risk network.</p><p id="p-0066" num="0065">As discussed above, the user side area of the server may comprise the user side virtual machine and the data repository. After the server receives the second request through the user side virtual machine, the server may access the data repository to retrieve the requested data. The data repository may comprise a database where all data about the network will be consolidated. A potential base for this service may be a combination of ElasticSearch, Logstash, and Kibana, abbreviated as the ELK Stack. ElasticSearch provides a search engine on top of diverse data. Logstash takes multiple formats and types of data, such as logging data, and modifies it for consistent storage in the search engine. Kibana gives the user a fast way to look at the data. A stack such as the ELK Stack demonstrates the power of combining many data sources into one place.</p><p id="p-0067" num="0066">The embodiments disclosed herein may feature a newly-developed central repository specifically tailored to deployed networks and the needs of cyber protection users. For example, the central repository may be tailored based on storage requirements for a network with the ideal number of network connections.</p><p id="p-0068" num="0067">At step <b>214</b>, the server may collected the requested data (e.g., second status data) from the at-risk network via the collection virtual machine, transmit the second status data to the second electronic device via the user side virtual machine, and store the requested data (e.g., second status data) into the data repository.</p><p id="p-0069" num="0068">If the requested data is not cached within the data repository, the server may determine that the data repository needs update. The server may utilize the inter-domain communication channel to forward the request to the at-risk network through the collection virtual machine. The server may collect the requested data from the at-risk network as discussed above. Specifically, the collection virtual machine may comprise required applications to access the state and traffic of the at-risk network. The collected data may comprise state, protocol traffic, as well as other information about the machines, routers, and any other devices included in the at-risk network.</p><p id="p-0070" num="0069">The server may store the newly collected data into the data repository. By storing the collected data corresponding to different requests into the data repository, the server may build a database storing various status information regarding the at-risk network. Different users may request duplicate information from the at-risk network. For example, in a given type of cyber protection mission, the different users may issue commands requesting the heaviest traffic flows and the most used applications frequently. The server may recognize the duplicate requests and retrieve the requested information from the data repository and return the responses immediately for such requests. Because the server does not query the same essential information from the at-risk network for multiple times, the embodiments disclosed herein may free up bandwidth and resources on the at-risk network, while providing the required information to the different cyber protection users.</p><p id="p-0071" num="0070">The open threat hunter system disclosed herein may rely on the collaboration of multiple virtual machines to securely move data out of the at-risk network and into the cyber protection user enclave. The efficient data repository may efficiently use the resources/data supplied to it. Virtualization not only efficiently uses computing resources, but also helps reduce the strain the various user devices could place on the at-risk network. The server may be configured to manage two separate virtual machines with a partition between them to ensure that the server monitors/brokers all communication between the user side and the at-risk network side. The server may be able to accurately restrict the amount of traffic users could create in the at-risk network, ensuring a minimum footprint on the low bandwidth at-risk network.</p><p id="p-0072" num="0071">The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various embodiments must be performed in the order presented. The steps in the foregoing embodiments may be performed in any order. Words such as &#x201c;then,&#x201d; &#x201c;next,&#x201d; etc. are not intended to limit the order of the steps; these words are simply used to guide the reader through the description of the methods. Although process flow diagrams may describe the operations as a sequential process, many of the operations can be performed in parallel or concurrently. In addition, the order of the operations may be re-arranged. A process may correspond to a method, a function, a procedure, a subroutine, a subprogram, and the like. When a process corresponds to a function, the process termination may correspond to a return of the function to a calling function or a main function.</p><p id="p-0073" num="0072">The various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of this disclosure or the claims.</p><p id="p-0074" num="0073">Embodiments implemented in computer software may be implemented in software, firmware, middleware, microcode, hardware description languages, or any combination thereof. A code segment or machine-executable instructions may represent a procedure, a function, a subprogram, a program, a routine, a subroutine, a module, a software package, a class, or any combination of instructions, data structures, or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and/or receiving information, data, arguments, parameters, or memory contents. Information, arguments, parameters, data, etc. may be passed, forwarded, or transmitted via any suitable means including memory sharing, message passing, token passing, network transmission, etc.</p><p id="p-0075" num="0074">The actual software code or specialized control hardware used to implement these systems and methods is not limiting of the claimed features or this disclosure. Thus, the operation and behavior of the systems and methods were described without reference to the specific software code being understood that software and control hardware can be designed to implement the systems and methods based on the description herein.</p><p id="p-0076" num="0075">When implemented in software, the functions may be stored as one or more instructions or code on a non-transitory computer-readable or processor-readable storage medium. The steps of a method or algorithm disclosed herein may be embodied in a processor-executable software module, which may reside on a computer-readable or processor-readable storage medium. A non-transitory computer-readable or processor-readable media includes both computer storage media and tangible storage media that facilitate transfer of a computer program from one place to another. A non-transitory processor-readable storage media may be any available media that may be accessed by a computer. By way of example, and not limitation, such non-transitory processor-readable media may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other tangible storage medium that may be used to store desired program code in the form of instructions or data structures and that may be accessed by a computer or processor. Disk and disc, as used herein, include compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk, and Blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media. Additionally, the operations of a method or algorithm may reside as one or any combination or set of codes and/or instructions on a non-transitory processor-readable medium and/or computer-readable medium, which may be incorporated into a computer program product.</p><p id="p-0077" num="0076">The preceding description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the embodiments described herein and variations thereof. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the subject matter disclosed herein. Thus, the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein.</p><p id="p-0078" num="0077">While various aspects and embodiments have been disclosed, other aspects and embodiments are contemplated. The various aspects and embodiments disclosed are for purposes of illustration and are not intended to be limiting, with the true scope and spirit being indicated by the following claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method comprising:<claim-text>receiving from an at-risk network, by a server, status data for the at-risk network via a collection virtual machine hosted by a hypervisor of the server;</claim-text><claim-text>caching, by the server, the status data for the at-risk network into a data repository accessible to a plurality of client virtual machines hosted by the hypervisor of the server, wherein the collection virtual machine is isolated from the plurality of client virtual machines; and</claim-text><claim-text>transmitting, by the server, the status data for the at-risk network to a client device via a client virtual machine of the plurality of client virtual machines, the server transmitting the status data via an inter-domain communication channel hosted by the hypervisor of the server.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>detecting, by the server, duplicate traffic between the plurality of client virtual machines and the data repository via the inter-domain communication channel; and</claim-text><claim-text>removing, by the computer, data packets of the duplicate traffic detected at the inter-domain communication channel.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the server detects the duplicate traffic associated with a cyber-protection application accessible to the client device.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the inter-domain communication channel partitions the at-risk network from a high-capacity network and isolates the collection virtual machine from the plurality of client virtual machines.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the plurality of client virtual machines interface to a plurality of client devices over a high-capacity network having a comparatively higher bandwidth to the at-risk network.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the collection virtual machine interfaces to the at-risk network.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the server is partitioned into a first isolation area configured to host the plurality of client first virtual machines and the data repository, and a second isolation area comprising the collection virtual machine.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>receiving, by the server, a status request for the status data of the at-risk network from the client virtual machine accessible the client device; and</claim-text><claim-text>collecting, by the server, the status data from the at-risk network via the collection virtual machine hosted by the server.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the server receives a plurality of duplicate requests, including the status request, for the status data of the at-risk network, the method further comprising:<claim-text>identifying, by the server, the plurality of duplicate requests, including the status request, received via a plurality of client virtual machines; and</claim-text><claim-text>querying, by the server, the data repository according to only the status request for the status data of the at-risk network, wherein the server transmits the status data for the at-risk network to each of the client virtual machines.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising updating, by the server, the status data for the at-risk network stored in the data repository based upon a last-update timestamp and a type of the status data.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system comprising:<claim-text>a server comprising a processor configured to:<claim-text>receive, from an at-risk network, status data for the at-risk network via a collection virtual machine hosted by a hypervisor of the server;</claim-text><claim-text>cache the status data for the at-risk network into a data repository accessible to a plurality of client virtual machines hosted by the hypervisor of the server, wherein the collection virtual machine is isolated from the plurality of client virtual machines; and</claim-text><claim-text>transmit the status data for the at-risk network to a client device via a client virtual machine of the plurality of client virtual machines, the server configured to transmit the status data via an inter-domain communication channel hosted by the hypervisor of the server.</claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the server is further configured to:<claim-text>detect duplicate traffic between the plurality of client virtual machines and the data repository via the inter-domain communication channel; and</claim-text><claim-text>remove data packets of the duplicate traffic detected at the inter-domain communication channel.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the server is configured to detect the duplicate traffic associated with a cyber-protection application accessible to the client device.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the inter-domain communication channel is configured to partition the at-risk network from a high-capacity network, and is configured to isolate the collection virtual machine from the plurality of client virtual machines.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the plurality of client virtual machines are configured to interface to a plurality of client devices over a high-capacity network having a comparatively higher bandwidth to the at-risk network.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the collection virtual machine is configured to interface to the at-risk network.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the server is partitioned into a first isolation area configured to host the plurality of client first virtual machines and the data repository, and a second isolation area configured to host the collection virtual machine.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the server is further configured to:<claim-text>receive a status request for the status data of the at-risk network from the client virtual machine accessible the client device; and</claim-text><claim-text>collect the status data from the at-risk network via the collection virtual machine hosted by the server.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the server is receives a plurality of duplicate requests, including the status request, for the status data of the at-risk network, wherein the server is further configured to:<claim-text>identify the plurality of duplicate requests, including the status request, received via a plurality of client virtual machines; and</claim-text><claim-text>query the data repository according to only the status request for the status data of the at-risk network, and wherein the server transmits the status data for the at-risk network to each of the client virtual machines.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the server is further configured to update the status data for the at-risk network stored in the data repository based upon a last-update timestamp and a type of the status data</claim-text></claim></claims></us-patent-application>