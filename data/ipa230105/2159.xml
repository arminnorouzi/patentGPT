<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230002160A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230002160</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17939755</doc-number><date>20220907</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>B</section><class>65</class><subclass>G</subclass><main-group>1</main-group><subgroup>137</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>08</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>65</class><subclass>G</subclass><main-group>1</main-group><subgroup>1371</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>Q</subclass><main-group>10</main-group><subgroup>087</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>B</section><class>65</class><subclass>G</subclass><main-group>1</main-group><subgroup>1373</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DYNAMIC CART OPTIMIZATION SYSTEM</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16942541</doc-number><date>20200729</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11465846</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17939755</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62882158</doc-number><date>20190802</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>PACKSIZE, LLC</orgname><address><city>Salt Lake City</city><state>UT</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Rasmussen</last-name><first-name>Jeffrey L.</first-name><address><city>South Jordan</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Bulloch</last-name><first-name>Eric Branch</first-name><address><city>Midvale</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Maughan</last-name><first-name>Kevin Bradon</first-name><address><city>Riverton</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Harnesk</last-name><first-name>Andreas</first-name><address><city>Sandy</city><state>UT</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Gallaway</last-name><first-name>Rodney</first-name><address><city>McRae</city><state>AR</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A computer system for optimizing node and edge selections within a digital graph model accesses a digital graph model of a physical warehouse location. The digital graph model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location. The computer system identifies a set of orders that each comprise one or more items and an order priority. The computer system then maps each item in each order selected from the set or orders to the multiple nodes within the digital graph model. The computer system identifies a ranking node from the multiple nodes. The computer system then traverses one or more edges that extend from the ranking node to identify a shortest path within the digital graph model to fill a digital model of a picking cart above a packing threshold level.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="117.09mm" wi="154.26mm" file="US20230002160A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="128.69mm" wi="135.47mm" file="US20230002160A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="129.46mm" wi="156.29mm" file="US20230002160A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="131.83mm" wi="164.00mm" file="US20230002160A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="132.33mm" wi="176.11mm" file="US20230002160A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="185.84mm" wi="168.32mm" file="US20230002160A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="231.73mm" wi="149.69mm" file="US20230002160A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="235.20mm" wi="115.49mm" file="US20230002160A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. application Ser. No. 16/942,541 filed on Jul. 29, 2020 and entitled &#x201c;DYNAMIC CART OPTIMIZATION SYSTEM,&#x201d; which application claims the benefit of and priority to U.S. Provisional Patent Application Ser. No. 62/882,158 filed on Aug. 2, 2019 and entitled &#x201c;DYNAMIC CART OPTIMIZATION SYSTEM.&#x201d; The entire contents of each of the above applications is incorporated herein by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The recent and rapid growth of e-commerce has placed significant burdens on the shipping and packaging industry. Not only has the volume of shipped products significantly increased, but the speed with which the products are expected to be delivered has also significantly increased. Previously, it may have been acceptable for packages to arrive 5-6 business days after placing an order. Current market forces, however, demand that packages arrive within two days, and in some cases on the same day that the order was placed.</p><p id="p-0004" num="0003">In order to meet these quickly growing demands, the packaging and shipping industries have been required to innovate and develop new systems and machines to increase efficiency and speed. One area that efficiency has been increased is through the use of custom-made packaging systems that are able to create made-to-fit packages for a wide assortment of different orders. These custom-made packages reduce wasted space within shipping vehicles and within storage facilities allowing for more orders to be shipped within the same vehicle.</p><p id="p-0005" num="0004">An area of packaging and shipping that is in need of technological improvements is the area relating to picking technologies. &#x201c;Picking&#x201d; is the process of gathering items within a warehouse for shipping. Typically, an order is received at the warehouse, and a pick request is made to go gather the items in the order so that they can be shipped to the recipient of the order. The processes and machines utilized in gathering the order can significantly impact the efficiency, cost, and speed with which an order is gathered and prepared for shipping. There is a need in this field for technological solutions that improve picking systems.</p><p id="p-0006" num="0005">The subject matter claimed herein is not limited to embodiments that solve any disadvantages or that operate only in environments such as those described above. Rather, this background is only provided to illustrate one exemplary technology area where some embodiments described herein may be practiced.</p><heading id="h-0003" level="1">BRIEF SUMMARY</heading><p id="p-0007" num="0006">Disclosed embodiments include a computer system for optimizing node and edge selections within a digital graph model. The computer system comprises one or more processors and one or more computer-readable media having stored thereon executable instructions that when executed by the one or more processors configure the computer system to perform various acts. For example, the computer system can access a digital graph model of a physical warehouse location. The digital graph model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location. Additionally, the digital graph model comprises multiple nodes and multiple edges, the multiple nodes each representing a different physical area within the physical warehouse location and the multiple edges each representing a physical pathway between each node within the multiple nodes and each node's immediate neighbors.</p><p id="p-0008" num="0007">The computer system can further identify, within an order request database, a set of orders, wherein each order within the set of orders comprises one or more items and an order priority. The computer system then maps each item in each order selected from the set or orders to the multiple nodes within the digital graph model. The computer system identifies a ranking node from the multiple nodes. The ranking node comprises a node with the highest number of mapped items. The computer system then traverses one or more edges that extend from the ranking node to identify a shortest path within the digital graph model to fill a digital model of a picking cart above a packing threshold level.</p><p id="p-0009" num="0008">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.</p><p id="p-0010" num="0009">Additional features and advantages will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by the practice of the teachings herein. Features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. Features of the present invention will become more fully apparent from the following description and appended claims, or may be learned by the practice of the invention as set forth hereinafter.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">In order to describe the manner in which the above-recited and other advantages and features can be obtained, a more particular description of the subject matter briefly described above will be rendered by reference to specific embodiments which are illustrated in the appended drawings. Understanding that these drawings depict only typical embodiments and are not therefore to be considered to be limiting in scope, embodiments will be described and explained with additional specificity and detail through the use of the accompanying drawings.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an embodiment of a packaging cell.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a schematic of an embodiment of a warehouse location.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the schematic of the embodiment of a warehouse location of <figref idref="DRAWINGS">FIG. <b>2</b></figref> with nodes and order items superimposed upon the schematic.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a digital graph model of a physical warehouse location depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a schematic of an embodiment of a computer system for identifying a pick request path and generating a pick request.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a flowchart of an embodiment of steps in a method for generating a pick request.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a flowchart of an embodiment of steps in a method for identifying a pick request path.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0019" num="0018">Disclosed embodiments are directed towards systems for optimizing node and edge selections within a digital graph model of a warehouse location. In particular, disclosed embodiments generate a digital graph model that comprises nodes that represent a physical layout of a warehouse location. The digital graph model also comprises edges extending between one or more of the nodes. In at least one embodiment, the digital graph model comprises a graph database. A computer system is configured to map items within one or more orders onto the digital graph model and iteratively traverse edges within the model in order to generate an optimized selection of nodes and edges. As used herein, an &#x201c;order&#x201d; comprises a group of items intended for packaging within a single package. One will appreciate, however, that in some embodiments, multiple orders may be packaged within a single package. Similarly, a customer may order a large number of items, which may be divided into multiple orders that are divided between multiple packages.</p><p id="p-0020" num="0019">Optionally, the computer system may also utilize a cubing processor to process a cubing algorithm on the items within the one or more orders while the computer system is traversing the edges and the nodes. The output of the cubing algorithm may be applied against a packing threshold level to determine when an optimal node and edge selection has been identified. In at least one embodiment, the packing threshold level is applied to a picking cart to determine when the selected items within the one or more orders would sufficiently fill the picking cart.</p><p id="p-0021" num="0020">One will appreciate that the embodiments disclosed herein provide for more efficient picking systems. Pick requests are dynamically generated within an optimized route to ensure the most efficient, best use of a picking cart within the warehouse location. Further, disclosed embodiments are highly customizable such that they can be implemented at a wide number of different locations, within different picking systems, and with different picking technologies.</p><p id="p-0022" num="0021">Turning now to the figures, in at least one embodiment, as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a shipper can have one or more packaging cells <b>100</b>, which can include equipment for packaging available orders and preparing the same for shipment. For example, the packaging cell <b>100</b> can include a packaging system <b>110</b>, an available-order transport system <b>120</b>, a work area <b>130</b>, a tracking-code scanner <b>132</b>, and a processed-order transport system <b>140</b>. The packaging system <b>110</b> can include a converting machine <b>112</b> that can receive fanfold material <b>150</b> from one or more bales <b>152</b>. The packaging system <b>110</b> can process the fanfold material <b>150</b> into custom made-to-order packaging templates <b>160</b>. An operator can retrieve the packaging templates <b>160</b> from the packaging system <b>110</b> and can form boxes <b>170</b> for shipment of available orders <b>180</b>. As used herein, the term &#x201c;available order&#x201d; refers to any order (whether a single-item order or multi-item order) that can be processed as one unit by the shipper.</p><p id="p-0023" num="0022">The picking cart <b>120</b> can transport various available orders <b>180</b> to the work area <b>130</b> for packaging and preparation for shipment. In some embodiments, the picking cart <b>120</b> can be a conveyor system or movable shelving system that can transport the available orders <b>180</b> to the work area <b>130</b>. When the available orders <b>180</b> arrive at the work area <b>130</b>, the operator can request packaging templates <b>160</b> to be prepared by the packaging system <b>110</b>. In at least one embodiment, an operator requests the packaging templates <b>160</b> by scanning, with the tracking-code scanner <b>132</b>, a code associated with each respective available-order <b>180</b>. As further described below, such packaging templates <b>160</b> can be custom-sized based on the particular dimensions of the available orders <b>180</b> to be packaged.</p><p id="p-0024" num="0023">In addition to packaging the available orders <b>180</b>, the operator can prepare the available orders <b>180</b> for shipment by attaching required labels and other materials. Once the available order <b>180</b> is processed (i.e., packaged and/or prepared for shipment), such processed order <b>190</b> can be transported away from the work area <b>130</b> via the processed-order transport system <b>140</b>. For instance, the processed-order transport system <b>140</b> can transport the processed orders <b>190</b> to a shipping area. In some implementations, the processed-order transport system <b>140</b> can be a conveyor belt that can connect the work area <b>130</b> and a desired location for the processed orders <b>190</b>. In other embodiments, the processed-order transport system <b>140</b> can be a movable shelving system that can transport the processed orders <b>190</b> away from the work area <b>130</b>.</p><p id="p-0025" num="0024">One will appreciate that the packaging cell <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> is provided only for the sake of example and context. In various embodiments, different configurations and types of packaging systems can be utilized. For example, the packaging system may utilize standard die-cut boxes, dunnage systems, different workflows, or any number of other packaging systems and styles. Similarly, the packing cell <b>100</b> may utilize a number of different picking cart <b>120</b> configurations. For example, the picking cat <b>120</b> may compromise automated picking carts, human-driven picking carts, tote-based picking carts, or any number of other picking carts. Unless specifically mentioned otherwise, all embodiments of the dynamic cart optimization system disclosed herein can be used within any packaging configuration, picking configuration, or warehouse configuration. As such, when specific examples of packaging configuration, picking configuration, or warehouse configuration are used herein, they are provided only for the sake of example and explanation and do not limit the invention to a particular embodiment.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a schematic of an embodiment of a warehouse location <b>200</b>. As used herein, a &#x201c;warehouse location&#x201d; <b>200</b> comprises any physical location that is utilized for temporarily holding goods for processing and shipping. The depicted warehouse location <b>200</b> comprises multiple aisles <b>210</b> divided by multiple shelves <b>220</b>. One will appreciate that in a typical warehouse location <b>200</b>, the multiple shelves <b>220</b> are stocked with items waiting for shipment.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>2</b></figref> further illustrates arrows that indicate the conventional flow of picking traffic throughout the warehouse location <b>200</b>. As indicated, conventional picking carts <b>120</b> are pushed along a common path around the warehouse location <b>200</b>. When an aisle is reached that holds items of interest, the human operator will push the picking cart <b>120</b> down the aisle and remove the desired goods from the shelf. Such a process can typically require each and every human operator and picking cart <b>120</b> to travel a complete, or nearly complete, circuit of the entire warehouse location <b>200</b> for every pick request that is generated.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates the schematic of the embodiment of a warehouse location <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> with nodes and order items superimposed upon the schematic. The nodes are depicted as circles and labelled with letters A-R. The nodes represent different locations within the warehouse location <b>200</b>. For example, each aisle is divided into multiple nodes based upon the length of the aisle. The depicted spacing of the nodes (A-R) is provided for the sake of example and explanation. In other embodiments, the nodes (A-R) may be placed closer or farther apart based upon a desired resolution within the warehouse location <b>200</b>.</p><p id="p-0029" num="0028">The order items are depicted as hexagons <b>300</b>(<i>a</i>-<i>c</i>), triangles <b>310</b>(<i>a</i>-<i>c</i>), squares <b>320</b>(<i>a</i>-<i>d</i>), and diamonds <b>330</b>(<i>a</i>-<i>d</i>). The order items are grouped by shape based upon orders. As such, each item associated with a particular order is shown with a common shape. For example, each of items <b>300</b>(<i>a</i>-<i>c</i>) are associated with a hexagon and are included within a single order. In particular, item <b>300</b><i>a </i>is positioned on a shelf near Node C, item <b>300</b><i>b </i>is positioned on a shelf near Node E, and item <b>300</b><i>c </i>is on a shelf near Node G. The different items <b>300</b>(<i>a</i>-<i>c</i>) within the order may comprise any type or combination of goods that are housed within the warehouse location <b>200</b>.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a digital graph model <b>400</b> of a physical warehouse location <b>200</b> depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The digital graph model <b>400</b> comprises a computer representation of the nodes of <figref idref="DRAWINGS">FIG. <b>3</b></figref> connected through edges, which are depicted as arrows connecting various nodes. The edges are representative of physical pathways within the warehouse location <b>200</b> between different nodes. For example, a user and a picking cart <b>120</b> can travel directly between node A and node C as indicated by the connecting edge.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a schematic of an embodiment of a node and edge optimization computer system <b>500</b> for identifying a pick request path and generating a pick request. In at least one embodiment, the one or more processors <b>510</b> within the computer system <b>500</b> pre-calculate or calculate the shortest distances (also referred to as &#x201c;hops&#x201d;) between each and every node. For example, the computer system <b>500</b> determines that the shortest hop between node A and node B is one hop. In contrast, the computer system determines that the shortest distances between node A and node N is six hops. This process is continued until the shortest distances between every node is identified.</p><p id="p-0032" num="0031">In at least one embodiment, the computer system <b>500</b> receives an order and stores it within the order request database <b>540</b>. The order may be received through a network interface <b>520</b> from one or more customers <b>580</b>(<i>a</i>-<i>c</i>) over a network connection <b>570</b>, such as the Internet. In at least one embodiment, multiple users can request a cart at the same time. Additionally, in at least one embodiment, the computer system <b>500</b> is capable of handling multiple build cart requests at the same time.</p><p id="p-0033" num="0032">In response to receiving the order, one or more processors <b>510</b> access the digital graph model <b>400</b> of the physical warehouse location <b>200</b>. As explained above and depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the digital graph model <b>400</b> comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location <b>200</b>. Additionally, the digital graph model <b>400</b> comprises multiple nodes (A-R) and multiple edges connecting the nodes (A-R). The multiple nodes (A-R) each represent a different physical area within the physical warehouse location <b>200</b> and the multiple edges each representing a physical pathway between each node within the multiple nodes and each node's immediate neighbors.</p><p id="p-0034" num="0033">The computer system <b>500</b> identifies, within the order request database <b>540</b>, a set of orders that each comprises one or more items and an order priority. The order request database <b>540</b> comprises a queue of orders that are ready to be picked and packaged. In some embodiments, one or more orders may be associated with an order priority. The order priority indicates the urgency with which an order needs to be picked and shipped. For instance, the warehouse location <b>200</b> may offer same day shipping for some orders. Such an order would be associated with a high priority level. Similarly, particular orders may be associated with particular shippers that arrive at the warehouse location <b>200</b> for shipping at specific times of day. In such a case, orders associated with those shippers may become high priority if the arrival time of the shipper is approaching.</p><p id="p-0035" num="0034">The one or more processors <b>510</b> map each item in each order selected from the set of orders to the multiple nodes within the digital graph model <b>400</b>. The one or more processors <b>510</b> utilize information stored within the inventory map <b>560</b> to map the items to the appropriate nodes. For example, the inventory map <b>560</b> may comprise a database associating every item within the warehouse location <b>200</b> with its nearest node (A-R). In at least one embodiment, the inventory map <b>560</b> and the order request database <b>540</b> are stored within the same database. Accordingly, the computer system <b>500</b> is configured to lookup each item in an order and determine which items map to which nodes within the warehouse location <b>200</b>.</p><p id="p-0036" num="0035">Once the one or more processors <b>510</b> map each item in each order to the multiple nodes (A-R) with the digital graph model <b>400</b>, the one or more processors <b>510</b> identify the nodes with which each order within the set of orders is associated. For instance, the one or more processors <b>510</b> identify that the order <b>300</b> (depicted by the hexagons) is associated with Nodes C, E, and G, order <b>310</b> (depicted by triangles) is associated with nodes C, G, and D, order <b>320</b> (depicted by squares) is associated with nodes B, G, J, and Q, and order <b>330</b> (depicted by diamonds) is associated with nodes J, M, I, and K.</p><p id="p-0037" num="0036">The one or more processors <b>510</b> then identify a ranking node from the multiple nodes. The ranking node comprises a node with the highest number of mapped items. For example, as depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, node G is the ranking node because it is associated with three different items (<b>300</b><i>c</i>, <b>310</b><i>b</i>, and <b>320</b><i>c</i>), which is higher than the number of items associated with any other node. One will appreciate that any number of methods can be used to identify the ranking node when a subset of nodes have the same highest number of associated items. For example, in such a case, the ranking node can be selected at random from the subset of nodes.</p><p id="p-0038" num="0037">Once a ranking node (e.g., node G) is identified, the one or more processors <b>510</b> traverse one or more edges that extend from the ranking node to identify a shortest path within the digital graph model to fill a digital model of a cart above a packing threshold level. The packing threshold may be determined by results of a cubing algorithm that cubes the ordered items with respect to volume available on a picking cart <b>120</b>. The packing threshold may additionally and/or alternatively comprise a weight metric that ensures that a picking cart <b>120</b> does not exceed a predetermined weight.</p><p id="p-0039" num="0038">In at least one embodiment, traversing the one or more edges that extend from the ranking node G to identify the shortest path within the digital graph model <b>400</b> comprises accessing the ranking node within the digital graph model <b>400</b> and then identifying a subset of orders within the one or more orders that are each associated with at least one item located at the ranking node G. For instance, as depicted in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, order <b>300</b> (i.e., items <b>300</b><i>a</i>, <b>300</b><i>b</i>, <b>300</b><i>c</i>, and <b>300</b><i>d</i>) has an item <b>300</b><i>c </i>associated with ranking Node G. Additionally, order <b>310</b> (i.e., items <b>310</b><i>a</i>, <b>310</b><i>b</i>, and <b>310</b><i>c</i>) has an item <b>310</b><i>b </i>associated with ranking Node G. Similarly, order <b>320</b> (i.e., items <b>320</b><i>a</i>, <b>320</b><i>b</i>, <b>320</b><i>c</i>, and <b>320</b><i>d</i>) has an item <b>320</b><i>c </i>associated with ranking node G. As such, the subset of orders <b>300</b>, <b>310</b>, and <b>320</b> each have an item associated with ranking node G.</p><p id="p-0040" num="0039">The computer system <b>500</b> then identifies a set of the associated nodes that are associated with orders having items at node G. For instance, item <b>300</b><i>c </i>of order <b>300</b> is associated with node G. The remaining nodes associated with order <b>300</b> are Nodes C and E. Additionally, item <b>310</b><i>b </i>of order <b>310</b> is associated with node G. The remaining nodes associated with order <b>310</b> are nodes C and D. Further, item <b>320</b><i>c </i>of order <b>320</b> is associated with Node G. The remaining nodes associated with order <b>320</b> are nodes B, J, and Q. Accordingly, in the example depicted by <figref idref="DRAWINGS">FIG. <b>4</b></figref>, nodes B, C, D, E, G, J, and Q are all considered &#x201c;associated nodes.&#x201d;</p><p id="p-0041" num="0040">Once the associated nodes are identified, the one or more processors <b>510</b> traverse each edge extending from the ranking node G to the one or more associated nodes. As the computer system <b>500</b> traverses along the edges between ranking node G and each associated node (B, C, D, E, J, and Q), the computer system <b>500</b> identifies additional items associated with orders within the subset of orders. For example, at node E, the computer system <b>500</b> identifies item <b>300</b><i>b</i>, which is associated with order <b>300</b>. At node J, the computer system <b>500</b> identifies item <b>320</b><i>b</i>, which is associated with order <b>320</b>. While traversing to node Q, at node P the computer system <b>500</b> does not identify any items associated with the subset of orders.</p><p id="p-0042" num="0041">The computer system <b>500</b> identifies one or more completed orders by continuing to traverse each edge extending from the ranking node to each of the one or more associated nodes until the one or more completed orders are completely accounted for among the traversed nodes. As used herein, a &#x201c;completed order&#x201d; is an order where every item in the order has been identified along the traversal path from the ranking node to the associated nodes.</p><p id="p-0043" num="0042">The computer system <b>500</b> then generates a pick request based upon a shortest path within the digital graph model to fill a digital model of a picking cart <b>120</b> above a packing threshold level. The pick request comprises one or more orders selected from the set of orders that are located along the shortest path. The shortest path comprises the shortest physical travel distance, as represented by the edges within the digital graph model <b>400</b>, needed to fill the digital model of the cart above the packing threshold level.</p><p id="p-0044" num="0043">In at least one embodiment, determining that the digital model of the picking cart is filled above the packing threshold level with the one or more completed orders comprises the application of a cubing algorithm to the one or more completed orders. Any of a number of conventional cubing algorithm may be utilized to determine whether the identified items in the one or more completed orders are capable of fitting within the available shelf space of the picking cart <b>120</b>. Additionally, the packing threshold level may comprise a volume utilization limit and/or a weight limit. For instance, a picking cart <b>120</b> may only be configured to hold a predetermined maximum amount of weight. Further, the individual shelves within the picking cart <b>120</b> may be configured to hold a predetermined maximum amount of weight. Similarly, each shelf within the picking cart <b>120</b> may be associated with a particular volume. Using this information, the cubing algorithm is able to determine whether items within a particular completed order are capable of fitting on the picking cart <b>120</b> on a weight and/or volume utilization basis. Additionally, the cubing algorithm is able to determine whether a picking cart <b>120</b> has been underutilized and only filled below a desired packing level threshold. For example, the picking cart <b>120</b> may only be filled such that it utilizes half of its available volume. In contrast, the packing level threshold may indicate that picking carts should be filled to utilize at least eighty-percent of their volume. Accordingly, in at least one embodiment, the packing level threshold may comprise both lower and upper bounds.</p><p id="p-0045" num="0044">As the computer system <b>500</b> processes each completed order through the cubing algorithm, orders that contain items that do not fit on the picking cart <b>120</b> are removed from the subset of orders and are left in place to be picked up by a later pick request. As such, as the computer system <b>500</b> traverses the edges within the digital graph model <b>400</b> of the warehouse location <b>200</b>, the cubing algorithm and the packing threshold are used to filter out orders that are not suitable for a given pick request. In at least one embodiment, orders that are outside the subset of orders but that happen to be completable based upon the traversal path through the digital graph model <b>400</b> may be added to the subset of orders.</p><p id="p-0046" num="0045">In at least one embodiment, the computer system <b>500</b> is also capable of dynamically adapting to an order priority. As mentioned above, an order priority may be associated with one or more items within the order request database <b>540</b>. In at least one embodiment, if an order is of a high enough priority, the computer system <b>500</b> includes, within the pick request, a particular order that is associated with a particular order priority that exceeds a priority threshold. For example, a particular warehouse location <b>200</b> may set a priority threshold such that same day deliveries are placed within a pick request as soon as possible. In such, a warehouse location <b>200</b>, the computer system <b>500</b> may identify an order with a same-day priority. In response to identifying that the order priority exceeds the priority threshold, the order may be added to a pick request even through the particular order does not fall along the shortest path.</p><p id="p-0047" num="0046">In at least one embodiment, once a pick request is generated, the computer system <b>500</b> displays, on a user interface, one or more visual directions for a user to travel within the physical warehouse location <b>200</b> to complete the pick request. For example, a mobile computing device held by the user may depict a map with instructions for traveling within the warehouse location <b>200</b> in order to complete the pick request. Similarly, the instructions may be displayed on a device integrated into the picking cart <b>120</b>, integrated into shelves within the warehouse location <b>200</b>, or otherwise displayed to the user. Further, in at least one embodiment, the computer system <b>500</b> may be configured to generate one or more computer instructions for communication to an automated picking device, wherein the one or more computer instructions cause the automated picking device to travel along the shortest path.</p><p id="p-0048" num="0047">The following discussion now refers to a number of methods and method acts that may be performed. Although the method acts may be discussed in a certain order or illustrated in a flow chart as occurring in a particular order, no particular ordering is required unless specifically stated, or required because an act is dependent on another act being completed prior to the act being performed.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a flowchart of an embodiment of steps in a method <b>600</b> for generating a pick request. Method <b>600</b> includes a step <b>610</b> of selecting a subset of orders. In at least one embodiment, this subset is selected based on what orders need to go out sooner and how many picks they have.</p><p id="p-0050" num="0049">Method <b>600</b> also includes a step <b>620</b> of backfilling orders. As described above, in at least one embodiment, the computer system <b>500</b> can backfill orders by adding to the subset of orders, orders that are on the search path but not on the hottest pick area. Such a system allows for a picking cart <b>120</b> to be more fully loaded and for other areas to be gathered more quickly.</p><p id="p-0051" num="0050">Additionally, Method <b>600</b> includes step <b>630</b> of setting initial pick areas. In at least one embodiment, the computer system <b>500</b> will pick the smallest set of nodes to start from. For instance, in at least one embodiment, the computer system <b>500</b> may identify a large number of orders that are associated with the ranking node. In such a case, the computer system <b>500</b> may dynamically limit the number of searched orders by randomly selecting a particular number of orders from the large number of orders. Additionally or alternatively, the computer system <b>500</b> may select only the orders with the highest order priorities.</p><p id="p-0052" num="0051">Method <b>600</b> then includes step <b>640</b> of filling the picking cart <b>120</b>. Step <b>640</b> comprises the utilization of the cubing algorithm in order to determine that a picking cart <b>120</b> is full by volume utilization and/or weight. As indicated by step <b>650</b>, if the picking cart <b>120</b> is not filled on the selected nodes, the computer system <b>500</b> perform step <b>660</b> and expand the pick areas by adding a new node to the selection of associated nodes and try to fill the picking cart <b>120</b> again. It will repeat this process until the picking cart <b>120</b> is full. Once a picking cart <b>120</b> is full, step <b>670</b> provides setup statistics and returns to the first step <b>610</b>. The provided statistics may provide insights about the picking cart <b>120</b> that was created, such as feet per unit, utilization and more.</p><p id="p-0053" num="0052">Turning now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, <figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a flowchart of an embodiment of steps in a method <b>700</b> for identifying a pick request path. Method <b>700</b> includes a step <b>710</b> of accessing a digital graph model <b>400</b> of a physical warehouse location <b>200</b>. Act <b>710</b> comprises access a digital graph model of a physical warehouse location. The digital graph model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location. Additionally, the digital graph model comprises multiple nodes and multiple edges, the multiple nodes each representing a different physical area within the physical warehouse location and the multiple edges each representing a physical pathway between each node within the multiple nodes and each node's immediate neighbors. For example, as depicted and described with respect to <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref> and the accompanying description, a physical warehouse location <b>200</b> can be converted into a digital graph model <b>400</b> that depicts nodes representative of picking areas within the warehouse location <b>200</b> and edges representative of paths between the nodes.</p><p id="p-0054" num="0053">Method <b>700</b> also includes a step <b>720</b> of identifying a set of orders. Step <b>720</b> comprises identifying, within an order request database <b>540</b>, a set of orders, wherein each order within the set of orders comprises one or more items and an order priority. As depicted and described with respect to <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>5</b></figref> and the accompanying description, the computer system <b>500</b> can access, from within the order request database <b>540</b>, orders that were received from customer computers <b>580</b>(<i>a</i>-<i>c</i>).</p><p id="p-0055" num="0054">Additionally, Method <b>700</b> includes step <b>730</b> of mapping items in orders to nodes within the digital graph model. Step <b>730</b> comprises mapping each item in each order selected from the set or orders to the multiple nodes within the digital graph model. For example, as depicted and described with respect to <figref idref="DRAWINGS">FIG. <b>3</b>-<b>5</b></figref>, the computer system <b>500</b> utilizes inventory map <b>560</b> to map items within orders to nodes within the warehouse location <b>200</b>.</p><p id="p-0056" num="0055">Further, method <b>700</b> includes step <b>740</b> of identifying a ranking node. Step <b>740</b> comprises identifying a ranking node from the multiple nodes, wherein the ranking node comprises a node with the highest number of mapped items. For example, as depicted in <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, the computer system <b>500</b> identifies Node G as the ranking node because Node G is associated with the greatest number of items from the orders.</p><p id="p-0057" num="0056">Further still, method <b>700</b> includes a step <b>750</b> of traversing one or more edges to identify a shortest path. Step <b>750</b> comprises traversing one or more edges that extend from the ranking node to identify a shortest path within the digital graph model to fill a digital model of a picking cart above a packing threshold level. For example, as depicted and described with respect to <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>, the computer system <b>500</b> iteratively traverses edges extending away from the ranking node until a pick request is generated based upon a picking cart <b>120</b> being filled to a threshold.</p><p id="p-0058" num="0057">Further, the methods may be practiced by a computer system including one or more processors and computer-readable media such as computer memory. In particular, the computer memory may store thereon computer-executable instructions that when executed by one or more processors cause various functions to be performed, such as the acts recited in the embodiments.</p><p id="p-0059" num="0058">Computing system functionality can be enhanced by a computing systems' ability to be interconnected to other computing systems via network connections. Network connections may include, but are not limited to, connections via wired or wireless Ethernet, cellular connections, or even computer to computer connections through serial, parallel, USB, or other connections. The connections allow a computing system to access services at other computing systems and to quickly and efficiently receive application data from other computing systems.</p><p id="p-0060" num="0059">Interconnection of computing systems has facilitated distributed computing systems, such as so-called &#x201c;cloud&#x201d; computing systems. In this description, &#x201c;cloud computing&#x201d; may be systems or resources for enabling ubiquitous, convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, services, etc.) that can be provisioned and released with reduced management effort or service provider interaction. A cloud model can be composed of various characteristics (e.g., on-demand self-service, broad network access, resource pooling, rapid elasticity, measured service, etc.), service models (e.g., Software as a Service (&#x201c;SaaS&#x201d;), Platform as a Service (&#x201c;PaaS&#x201d;), Infrastructure as a Service (&#x201c;IaaS&#x201d;), and deployment models (e.g., private cloud, community cloud, public cloud, hybrid cloud, etc.).</p><p id="p-0061" num="0060">Cloud and remote based service applications are prevalent. Such applications are hosted on public and private remote systems such as clouds and usually offer a set of web based services for communicating back and forth with clients.</p><p id="p-0062" num="0061">Many computers are intended to be used by direct user interaction with the computer. As such, computers have input hardware and software user interfaces to facilitate user interaction. For example, a modern general purpose computer may include a keyboard, mouse, touchpad, camera, etc. for allowing a user to input data into the computer. In addition, various software user interfaces may be available.</p><p id="p-0063" num="0062">Examples of software user interfaces include graphical user interfaces, text command line based user interface, function key or hot key user interfaces, and the like.</p><p id="p-0064" num="0063">Disclosed embodiments may comprise or utilize a special purpose or general-purpose computer including computer hardware, as discussed in greater detail below. Disclosed embodiments also include physical and other computer-readable media for carrying or storing computer-executable instructions and/or data structures. Such computer-readable media can be any available media that can be accessed by a general purpose or special purpose computer system. Computer-readable media that store computer-executable instructions are physical storage media. Computer-readable media that carry computer-executable instructions are transmission media. Thus, by way of example, and not limitation, embodiments of the invention can comprise at least two distinctly different kinds of computer-readable media: physical computer-readable storage media and transmission computer-readable media.</p><p id="p-0065" num="0064">Physical computer-readable storage media includes RAM, ROM, EEPROM, CD-ROM or other optical disk storage (such as CDs, DVDs, etc.), magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store desired program code means in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer.</p><p id="p-0066" num="0065">A &#x201c;network&#x201d; is defined as one or more data links that enable the transport of electronic data between computer systems and/or modules and/or other electronic devices. When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a transmission medium. Transmissions media can include a network and/or data links which can be used to carry program code in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. Combinations of the above are also included within the scope of computer-readable media.</p><p id="p-0067" num="0066">Further, upon reaching various computer system components, program code means in the form of computer-executable instructions or data structures can be transferred automatically from transmission computer-readable media to physical computer-readable storage media (or vice versa). For example, computer-executable instructions or data structures received over a network or data link can be buffered in RAM within a network interface module (e.g., a &#x201c;NIC&#x201d;), and then eventually transferred to computer system RAM and/or to less volatile computer-readable physical storage media at a computer system. Thus, computer-readable physical storage media can be included in computer system components that also (or even primarily) utilize transmission media.</p><p id="p-0068" num="0067">Computer-executable instructions comprise, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions. The computer-executable instructions may be, for example, binaries, intermediate format instructions such as assembly language, or even source code. Although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the described features or acts described above. Rather, the described features and acts are disclosed as example forms of implementing the claims.</p><p id="p-0069" num="0068">Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations, including, personal computers, desktop computers, laptop computers, message processors, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, mobile telephones, PDAs, pagers, routers, switches, and the like. The invention may also be practiced in distributed system environments where local and remote computer systems, which are linked (either by hardwired data links, wireless data links, or by a combination of hardwired and wireless data links) through a network, both perform tasks. In a distributed system environment, program modules may be located in both local and remote memory storage devices.</p><p id="p-0070" num="0069">Alternatively, or in addition, the functionality described herein can be performed, at least in part, by one or more hardware logic components. For example, and without limitation, illustrative types of hardware logic components that can be used include Field-programmable Gate Arrays (FPGAs), Program-specific Integrated Circuits (ASICs), Program-specific Standard Products (ASSPs), System-on-a-chip systems (SOCs), Complex Programmable Logic Devices (CPLDs), etc.</p><p id="p-0071" num="0070">The present invention may be embodied in other specific forms without departing from its spirit or characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer system for optimizing paths within a digital model, comprising:<claim-text>one or more processors; and</claim-text><claim-text>one or more computer-readable media having stored thereon executable instructions that when executed by the one or more processors configure the computer system to perform at least the following:<claim-text>access a digital model of a physical warehouse location, wherein:<claim-text>the digital model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location;</claim-text></claim-text><claim-text>identify a set of orders, wherein each order within the set of orders comprises one or more items;</claim-text><claim-text>map each item in each order selected from the set of orders to a location within the digital model of the physical warehouse location;</claim-text><claim-text>identify a ranking location within the digital model, wherein the ranking location comprises a location with a highest number of mapped items; and</claim-text><claim-text>identify a shortest path to the ranking location within the digital model to fill a digital model of a picking cart above a packing threshold level.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer system as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the executable instructions include instructions that are executable to configure the computer system to:<claim-text>generate a pick request based upon the shortest path, wherein the pick request comprises one or more orders selected from the set of orders that are located along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer system as recited in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the executable instructions include instructions that are executable to configure the computer system to:<claim-text>display, on a user interface, one or more visual directions for a user to travel within the physical warehouse location to complete the pick request.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer system as recited in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the executable instructions include instructions that are executable to configure the computer system to:<claim-text>generate one or more computer instructions for communication to an automated picking device, wherein the one or more computer instructions cause the automated picking device to travel along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer system as recited in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein identifying the shortest path within the digital model comprises:<claim-text>accessing the ranking location within the digital model;</claim-text><claim-text>identifying a subset of orders within the one or more orders that are each associated with at least one item located at the ranking location;</claim-text><claim-text>identify a set of associated locations that are associated with items from the subset of orders;</claim-text><claim-text>identify one or more paths from the ranking location to one or more associated locations of the ranking location;</claim-text><claim-text>at the one or more associated locations, identifying additional items associated with orders within the subset of orders;</claim-text><claim-text>identifying one or more completed orders by continuing to identify paths from the ranking location to each of the one or more associated locations until the one or more completed orders are completely accounted for among the set of associated locations; and</claim-text><claim-text>generating the pick request when the digital model of the picking cart is determined to be filled above the packing threshold level with completed orders.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer system as recited in <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein determining that the digital model of the picking cart is filled above the packing threshold level with the one or more completed orders comprises:<claim-text>applying a cubing algorithm to the one or more completed orders; and</claim-text><claim-text>determining based upon results of the cubing algorithm that the digital model of the picking cart is filled above the packing threshold level.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer system as recited in <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein generating the pick request comprises:<claim-text>including, within the pick request, a particular order that is associated with a particular order priority that exceeds a priority threshold, wherein the particular order does not fall along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer system as recited in <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the packing threshold level comprises a weight.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer system as recited in <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the packing threshold level comprises a volume utilization.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A computer-implemented method for optimizing paths within a digital model, the computer-implemented method performed at a computer system comprising one or more processors and computer-readable media, the computer-implemented method comprising:<claim-text>accessing a digital model of a physical warehouse location, wherein:<claim-text>the digital model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location;</claim-text></claim-text><claim-text>identifying a set of orders, wherein each order within the set of orders comprises one or more items;</claim-text><claim-text>mapping each item in each order selected from the set of orders to a location within the digital model of the physical warehouse location;</claim-text><claim-text>identifying a ranking location within the digital model, wherein the ranking location comprises a location with a highest number of mapped items; and</claim-text><claim-text>identifying a shortest path to the ranking location within the digital model to fill a digital model of a picking cart above a packing threshold level.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:<claim-text>generating a pick request based upon the shortest path, wherein the pick request comprises one or more orders selected from the set of orders that are located along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>displaying, on a user interface, one or more visual directions for a user to travel within the physical warehouse location to complete the pick request.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>generating one or more computer instructions for communication to an automated picking device, wherein the one or more computer instructions cause the automated picking device to travel along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein identifying the shortest path within the digital model comprises:<claim-text>accessing the ranking location within the digital model;</claim-text><claim-text>identifying a subset of orders within the one or more orders that are each associated with at least one item located at the ranking location;</claim-text><claim-text>identify a set of associated locations that are associated with items from the subset of orders;</claim-text><claim-text>identify one or more paths from the ranking location to one or more associated locations of the ranking location;</claim-text><claim-text>at the one or more associated locations, identifying additional items associated with orders within the subset of orders;</claim-text><claim-text>identifying one or more completed orders by continuing to identify paths from the ranking location to each of the one or more associated locations until the one or more completed orders are completely accounted for among the set of associated locations; and</claim-text><claim-text>generating the pick request when the digital model of the picking cart is determined to be filled above the packing threshold level with completed orders.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein determining that the digital model of the picking cart is filled above the packing threshold level with completed ordered comprises:<claim-text>applying a cubing algorithm to the one or more completed orders; and</claim-text><claim-text>determining based upon results of the cubing algorithm that the digital model of the picking cart is filled above the packing threshold level.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein generating the pick request comprises:<claim-text>including, within the pick request, a particular order that is associated with a particular order priority that exceeds a priority threshold, wherein the particular order does not fall along the shortest path.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the packing threshold level comprises a weight.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer-implemented method as recited in <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the packing threshold level comprises a volume utilization.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A computer-readable media comprising one or more physical computer-readable storage media having stored thereon computer-executable instructions that, when executed at a processor, cause a computer system to perform a method of optimizing paths within a digital model, the method comprising:<claim-text>accessing a digital model of a physical warehouse location, wherein:<claim-text>the digital model comprises information indicating a location of multiple specific items of inventory among shelves in the physical warehouse location;</claim-text></claim-text><claim-text>identifying a set of orders, wherein each order within the set of orders comprises one or more items;</claim-text><claim-text>mapping each item in each order selected from the set of orders to a location within the digital model;</claim-text><claim-text>identifying a ranking location within the digital model, wherein the ranking location comprises a location with a highest number of mapped items; and<claim-text>identifying a shortest path to the ranking location within the digital model to fill a digital model of a picking cart above a packing threshold level.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer-readable media as recited in <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein identifying the shortest path within the digital model comprises:<claim-text>accessing the ranking location within the digital model;</claim-text><claim-text>identifying a subset of orders within one or more orders that are each associated with at least one item located at the ranking location;</claim-text><claim-text>identify a set of associated nodes that are associated with items from the subset of orders;</claim-text><claim-text>traversing each edge extending from the ranking node to one or more associated nodes of the ranking node;</claim-text><claim-text>at the one or more associated nodes, identifying additional items associated with orders within the subset of orders;</claim-text><claim-text>identifying one or more completed orders by continuing to traverse each edge extending from the ranking node to each of the one or more associated nodes until the one or more completed orders are completely accounted for among the set of associated nodes; and</claim-text><claim-text>generating a pick request when the digital model of the picking cart is determined to be filled above the packing threshold level with completed orders.</claim-text></claim-text></claim></claims></us-patent-application>