<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006820A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006820</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17852923</doc-number><date>20220629</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>08</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0825</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0866</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0894</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">System and Method of Virtual Private Keys</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63216842</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>SafeMoon US, LLC</orgname><address><city>Pleasant Grove</city><state>PA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Spraggs</last-name><first-name>Lynn</first-name><address><city>Vernon</city><country>CA</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Spraggs</last-name><first-name>Robert</first-name><address><city>Coldstream</city><country>CA</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A system for generating a virtual private key using personal credentials for establishing a trust relationship between two or more entities, wherein the credentials are stored on a remote secure repository and using information and data, comprising: personal knowledge and a suite of algorithms and methodologies integrated, without using third party information, in such a manner that the private key can be securely generated without exposing the credentials entity.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="87.21mm" wi="158.75mm" file="US20230006820A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="243.92mm" wi="161.12mm" orientation="landscape" file="US20230006820A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="179.92mm" wi="139.28mm" file="US20230006820A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="181.69mm" wi="130.56mm" file="US20230006820A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority to U.S. provisional patent application Ser. No. 63/216,842, filed on Jun. 30, 2021.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT</heading><p id="p-0003" num="0002">No federal government funds were used in researching or developing this invention.</p><heading id="h-0003" level="1">NAMES OF PARTIES TO A JOINT RESEARCH AGREEMENT</heading><p id="p-0004" num="0003">Not applicable.</p><heading id="h-0004" level="1">SEQUENCE LISTING INCLUDED AND INCORPORATED BY REFERENCE HEREIN</heading><p id="p-0005" num="0004">Not applicable.</p><heading id="h-0005" level="1">BACKGROUND</heading><heading id="h-0006" level="1">Field of the Invention</heading><p id="p-0006" num="0005">The disclosure relates to the use of virtual private and public keys for commercial activities.</p><heading id="h-0007" level="1">Background of the Invention</heading><p id="p-0007" num="0006">Cloud computing and storage provide users with the capability to store and process their data in third party data centers. Data communication between users and service provides requires that providers ensure that all critical data (credit card numbers, for example) are masked or encrypted and that only authorized users have access to data in its entirety. Moreover, digital identities and credentials must be protected, as should any data that the provider collects or produces about customer activity in the cloud.</p><p id="p-0008" num="0007">There are numerous security threats associated with cloud data services. This includes traditional threats and non-traditional threats. Traditional threats include network eavesdropping, illegal invasion, and denial of service attacks. Threats specific to cloud computing also include side channel attacks, virtualization vulnerabilities, and abuse of cloud services. To mitigate these threats, security controls often rely on monitoring the three areas: confidentiality, integrity and access controllability. This disclosure concerns access controls.</p><p id="p-0009" num="0008">Access controllability means that a data owner can perform the selective restriction of access to their data outsourced to the cloud. Legal users can be authorized by the owner to access the data, while others cannot access it without permission. Access control can also be referred to as availability. While unauthorized access should be strictly prohibited, access for administrative or even consumer uses should be allowed but monitored as well. Availability and access control ensure that the proper amount of permissions is granted to the correct persons.</p><p id="p-0010" num="0009">The use of virtual security keys to give private users virtual access to cloud-based or data stored by or on behalf of service providers is known in the commercial marketplace. These keys may be used to exchange information in a secure manner. The users often desire to be able to securely exchange the data without the possibility of a third party being able to intercept the data and recover the information.</p><p id="p-0011" num="0010">An example of such a situation is an accounting firm that needs to send financial information to a client. The institution must first establish a trust relationship with the client and then utilize this trust relationship to send information securely.</p><p id="p-0012" num="0011">Two types of keys are currently used to encrypt and decrypt data shared between users and services providers: asymmetric keys and symmetric keys. Each key is a known type of algorithm, but each type is substantially different in that asymmetric keys are embodied as a private and public key pair whereas, a symmetric key is the same for both encryption and decryption. A private key, in all cases, must be kept secret. Private keys are typically not shared between the sender and receiver of the encrypted sensitive information. Currently, a shared symmetric key is used to encrypt and decrypt the data in systems using public and private keys derived from large prime numbers, such as a Public Key Infrastructure (PKI) type key.</p><p id="p-0013" num="0012">In these PKI systems, one of the keys is used to encrypt the data and the other is used to decrypt the data. Traditionally, the public key is shared and is used to encrypt the data and the private key is kept secret and is used to decrypt the data. The problem is that the amount of data that can be encrypted is limited by the size of the modulus of the two keys. A public key with a modulus of 1024 bits can only encrypt a string which is 16 bytes in length. Thus, the PKI system is used to share a symmetric key which can then be used to encrypt any amount of data. It is obvious that the strength of the system is therefore commensurate with the length of the symmetric key that can be shared. It would be preferable to have a system that produced a larger symmetric key. If symmetric keys are used, then they must be the same for both encryption and decryption. Therefore, to effectively use symmetric keys, it is necessary to securely transport the shared key to another party. Thus, a lost PKI private key causes many problems, mostly associated with the necessary revocation of the public key. In order to alleviate this issue in web transactions, the public and private keys are used to share a symmetric key between the two parties. An example of sharing symmetric keys is Secure Socket Layer (SSL).</p><p id="p-0014" num="0013">Using shared symmetric keys removes this restriction, but in this case, it becomes necessary to establish a trust relationship between the two parties in order to share the keys. As a general rule, the symmetric keys are shared using a PKI related system.</p><p id="p-0015" num="0014">The current virtual key methodology solves two problems. First, there is a need for a system allowing parties to exchange data without having to set up a trusted relationship. Second, there is a need for a system to generate public and private keys that are both persistent and easily regenerated. This methodology will provide at least the same level of security associated with traditional cryptographic functionality, but removes many of the barriers associated with traditional security, including the need for Certificate Authorities and Revocation Lists. The methodology will provide systems with the ability to secure stored operational data in a manner that only can be accessed by the authorized user and will be impervious to traditional forms of breach attempts. In some cases the information used by the system will be derived from the encrypted data stored on the device rather than being stored on the device for use.</p><heading id="h-0008" level="1">BRIEF DESCRIPTION OF THE INVENTION</heading><p id="p-0016" num="0015">In a preferred embodiment, a system for generating a virtual private key to be used to establish a trust relationship between a user and one or more entities, the system comprising:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0016">a user device with a processor and a memory;</li>        <li id="ul0002-0002" num="0017">a credential factory comprising a private key miner;</li>        <li id="ul0002-0003" num="0018">a credential generator;<br/>wherein the credential factory generates a virtual private key at the user's request, the credential factory obtains user credentials through the credit generator, the virtual private key is optionally stored by the user and the credit factory generates a separate public key that is associated with the virtual private key.</li>    </ul>    </li></ul></p><p id="p-0017" num="0019">In another preferred embodiment, the system for generating a virtual private key as described herein, wherein the anonymous user credentials are sent by the credential generator to a secure escrow server with a secure escrow database.</p><p id="p-0018" num="0020">In another preferred embodiment, the system for generating a virtual private key as described herein, wherein the user credentials comprise personal information of the user not known publicly.</p><p id="p-0019" num="0021">In another preferred embodiment, the system for generating a virtual private key as described herein, wherein the system employs the user credentials and a suite of algorithms and methodologies to generate secure a private key without exposing the user credentials, and thus requiring no third party information to generate the key.</p><p id="p-0020" num="0022">In another preferred embodiment, the system for generating a virtual private key as described herein, wherein the virtual private key derives mnemonic words, further comprising a digital wallet on the user device for storing encrypted random information on a user device RAM, wherein the system uses the encrypted random information to derive and make available the virtual private key and the mnemonic words only when the user is actively using an algorithm that engages the system.</p><p id="p-0021" num="0023">In another preferred embodiment, the system for generating a virtual private key as described herein, wherein the private key is not stored in any database and is maintained only in a virtual state; whenever the private key is needed it can be regenerated from the knowledge of the user by first generating anonymous credentials and then passing these anonymous credentials to the private key miner; and all other components of the system that do not require secrecy can be stored as normal.</p><p id="p-0022" num="0024">In another preferred embodiment, a method of using the system for generating a virtual private key as described herein, comprising the steps of:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0025">1. Downloading the credential factory to the memory of the user device;</li>        <li id="ul0004-0002" num="0026">2. Providing an interface with the user and the credential generator allowing user to input personal credentials;</li>        <li id="ul0004-0003" num="0027">3. Requesting the credential factory to make a virtual private key;</li>        <li id="ul0004-0004" num="0028">4. Transferring credentials from the credential generator to the credential factory;</li>        <li id="ul0004-0005" num="0029">5. Generating the virtual private key with the credential factory using the anonymous credentials;</li>        <li id="ul0004-0006" num="0030">6. Generating a public key associated with the virtual private key with the credential factory;</li>        <li id="ul0004-0007" num="0031">7. Storing the public key on the user device storage; and</li>        <li id="ul0004-0008" num="0032">8. Optionally, storing the anonymized personal credentials associated with the virtual private key to a secure escrow server and secure escrow database.</li>    </ul>    </li></ul></p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0009" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0023" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic drawing evidencing an overview of one example of the system and method of virtual private keys disclosed herein.</p><p id="p-0024" num="0034"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow chart evidencing steps in the inventive method of using the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0025" num="0035"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart evidencing steps in the private key miner feature of the system of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0010" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading><p id="p-0026" num="0036">The inventive generation of a virtual private key, in one example, is used to share data between two or more entities. At the same time, the virtual private key can be used in commercial endeavors such as Crypto Currency. The inventive private key is established from the personal credentials of an individual and could also be salted with other personal information.</p><p id="p-0027" num="0037">This methodology makes provision for securely storing the credentials on a remote secure repository using the inventive methodologies contained herein. One example of the disclosed system uses information and data, comprising: personal user knowledge and a suite of algorithms and methodologies integrated in such a manner that a private key can be securely generated without exposing the credential entity, such as a username and a password chosen by the user. In one embodiment, no third-party information is required to generate the key. The user credentials are passed through non-reversible methodologies that render them anonymous. In the present system, hashing algorithms and randomizing algorithms are used in the virtual key generation and regeneration process.</p><p id="p-0028" num="0038">One example of this embodiment would be the registration of a user into a system, wherein the user must provide an acceptable username and password. These user credentials would then be used to generate a pseudo random string, which string would then be used to generate the private key. The properties of the resulting private key are that it can be regenerated and that it can be virtual. Additionally, because it is user knowledge, the username and the password do not need to be stored on any system. In the present case to be compatible with existing systems, the private key is generated in such a manner that it can be used in commerce. More specifically, the private key can be used to generate a valid sequence of 24 words selected from a list of 2048 words that is valid for crypto wallets. While there are other methodologies for generating this list, the present inventive method begins with user credentials. The user credentials cannot be obtained by reversing the process.</p><p id="p-0029" num="0039">The present invention makes use of the properties of Elliptic curves to generate appropriate private and public keys. While the use of these Elliptic curves is well known, the methodology described herein is unique and innovative. The methodology makes use of a &#x201c;mining&#x201d; process inside the CF to generate a 32 byte (8bits each) string that will produce a sequence of 24 words from a list of 2048 commonly known words. These 24 words are the basis for forming private keys in Crypto Currency, for example. For further clarification it should be noted that there are two mutually exclusive public keys that can be generated from this methodology, namely, the public key derived from the virtual private key and the public key derived from the key derived from the word sequence. One of these public keys is appropriate for Crypto currency and the other is appropriate for sharing data.</p><p id="p-0030" num="0040">In a primary embodiment, the inventive system is not limited to sharing data with one other entity. Rather, there is a provision for multiple entities to securely share the information. This embodiment relates to the formation and use of the private key as the public key can be derived from this private key. The system as designed does NOT require the use of any current public key infrastructure. The system is unique and inventive in that the credentials of the owner are not available to any other party, the private key may never be stored or exposed to the underlying system and may be virtual in that it can easily be regenerated. For convenience, the private key could be stored encrypted with a strong encryption key.</p><p id="p-0031" num="0041">One primary embodiment of the system and method is pictured in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, detailed herein below. In this embodiment, the public key and private key cannot be tampered with or forged without discontinuing access to the data. If either key is tampered with or forged, the decryption of the information will fail because there will not be a one-to-one relationship between the keys. The system will know immediately if the keys have been tampered with, as the authentication of the user will fail immediately, before any access to any encrypted data can start to occur. In this system, inherently any data encrypted with the credentials is secured until the necessary authentication credentials can be entered and verified. The methodology makes use of the inventive step that authentication can be achieved by the success or failure of encryption and decryption rather than by comparing credentials.</p><p id="p-0032" num="0042">One advantage of of this type of a system is that it is possible to provide an effective trust system without exposing the critical private key. If a user's device is lost or stolen, a new private key and associated data can be regenerated using the users' personal credentials. The credentials can be strong, but they should be in the realm of being memorable.</p><p id="p-0033" num="0043">In another primary embodiment, a system for generating a virtual private key as described, wherein the system employs the user's personal information and a suite of algorithms and methodologies integrated in such a manner that a private key is securely generated without exposing the credentials entity, such that no third-party information is required to generate the key. An example of this mechanism in action would be a Cryptocurrency wallet where the data is required to be secured and not exposed to anyone. Once the registration is completed, the information stored in the wallet is mathematically calculated to create the private key, which is used to derive mnemonic words. While most wallets will store the private key, mnemonics and the password for authentication purposes on the device with some minimal form of protection, that data can be exposed if the device is lost or stolen. This mechanism will not store any of that information, nor will it store any credentials associated with the user on the device. The private key and mnemonics for the wallet are derived only when needed from the encrypted random information stored in the wallet and held in RAM for the duration of the session. This protects the sensitive information, since it is only available in RAM during and active session and only when required by the user. When the session ends, that sensitive information is removed from RAM and cannot be derived from the device if it is lost or stolen. This mechanism allows the wallet to be secure from intrusion whenever the session is inactive.</p><heading id="h-0011" level="1">Detailed Drawing Description</heading><p id="p-0034" num="0044"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an overview of one example of the system and method of virtual private keys disclosed herein and begins with a client/user using a user device <b>2</b> comprising a personal mobile device, a tablet or a personal computer to set up a secure transaction. In this illustration, the client has already installed a Credential Factory <b>3</b> (&#x201c;CF&#x201d;) to the client's local device. Each CF comprises a &#x201c;miner&#x201d; embodied as software operating according to the process of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, described herein below. In the figures, system components are annotated with numbers and steps are annotated with letters.</p><p id="p-0035" num="0045">In step A, the user sends a request to the locally installed CF <b>3</b> to establish a virtual key using the users' specific credentials. This may happen automatically as a part of the transaction setup interface. Step A first goes to the Credential Generator <b>4</b> (&#x201c;CG&#x201d;).</p><p id="p-0036" num="0046">In step B, the CF <b>3</b> server obtains credentials from the user through the CG <b>4</b> by first soliciting user credentials from the user device <b>2</b> and then creating anonymous credentials from the user supplied credentials. The CG <b>4</b> is configured to select the appropriate credentials for this user. Credentials can consist of usernames, passwords, answers to questions and even reproducible biometrics or information retrieved from wearable devices and hardware tokens. The CF <b>3</b> ingests the anonymous credentials and generates a reproducible private key. As a note, the CG <b>4</b> is a component of the CF <b>3</b> although, in another embodiment one could have the CG <b>4</b> and the CF <b>3</b> as separate components and the CF <b>3</b> component could be local or remote or, alternatively the CG <b>4</b> and CF <b>3</b> could be in a client server relationship. The private key can be of any strength proportionate to the user credentials that are used for generation.</p><p id="p-0037" num="0047">In step C, the CF <b>3</b> makes the generated private key available virtually, in device RAM or alternatively, it could be transmitted through the internet or otherwise for use by the user. This key in the present example does not need to be displayed or stored.</p><p id="p-0038" num="0048">In step D, the CF <b>3</b> generates an associated public key and sends that public key with other data to a storage device <b>8</b>, comprising a storage container/memory of the user device <b>2</b>. This storage device <b>8</b> can be embodied as a local disk storage or an associated device like a hard drive or remotely in a cloud. The stored data does NOT need to be secure and is in fact intended for public use.</p><p id="p-0039" num="0049">In step E, the secret anonymous credentials of the user can be sent to an associated secure escrow server <b>5</b> as a backup so that the user <b>2</b> can retrieve the credentials in the event that the user can no longer generate them. It is not possible to reverse the anonymous credentials into user credentials and the anonymous credential in escrow is worthless without associated personal information. The secure escrow server <b>5</b> may then save the anonymous credentials onto an associated secure escrow database <b>6</b> in an optional Step F.</p><p id="p-0040" num="0050"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow chart evidencing steps in the inventive method of using the virtual key system <b>1</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, comprising the following steps:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0051">1. Downloading the credential factory to the memory of the user device;</li>        <li id="ul0006-0002" num="0052">2. Providing an interface with the user and the credential generator allowing user to input personal credentials;</li>        <li id="ul0006-0003" num="0053">3. Requesting the credential factory to make a virtual private key;</li>        <li id="ul0006-0004" num="0054">4. Transferring credentials from the credential generator <b>4</b> to the credential factory <b>5</b>;</li>        <li id="ul0006-0005" num="0055">5. Generating the virtual private key with the credential factory <b>3</b> using the anonymous credentials;</li>        <li id="ul0006-0006" num="0056">6. Generating a public key associated with the virtual private key with the credential factory <b>3</b>;</li>        <li id="ul0006-0007" num="0057">7. Storing the public key on a user device storage <b>8</b>; and</li>        <li id="ul0006-0008" num="0058">8. Optionally, storing the anonymized personal credentials associated with the virtual private key to a secure escrow server <b>5</b> and secure escrow database <b>6</b>.</li>    </ul>    </li></ul></p><p id="p-0041" num="0059"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flow chart showing the private key miner <b>3</b>A and related method to return a Virtual Private Key (&#x201c;VPK&#x201d;) to the user, derived from the anonymous credentials (&#x201c;AC&#x201d;) that the system received that are unique to the user.<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0060">1. Step A is to receive the AC from the registering device.        <ul id="ul0009" list-style="none">            <li id="ul0009-0001" num="0061">a. Included in the AC is a 2-byte Enterprise Code (&#x201c;EC&#x201d;).            <ul id="ul0010" list-style="none">                <li id="ul0010-0001" num="0062">i. The EC is used to distinguish the registering system.</li>            </ul>            </li>        </ul>        </li>        <li id="ul0008-0002" num="0063">2. Step B receives the AC and then passes them through a process to generate a Pseudo-Random String (&#x201c;PBs&#x201d;).        <ul id="ul0011" list-style="none">            <li id="ul0011-0001" num="0064">a. The PBs is reproducible by giving the same AC and EC to the Generator.</li>        </ul>        </li>        <li id="ul0008-0003" num="0065">3. Step C hashes the PBs and looks to match it against the EC.        <ul id="ul0012" list-style="none">            <li id="ul0012-0001" num="0066">a. Step F, if the hash matches then go to 5.</li>            <li id="ul0012-0002" num="0067">b. Step D, if the hash does not match then go to 4.</li>        </ul>        </li>        <li id="ul0008-0004" num="0068">4. Increment the Random String.        <ul id="ul0013" list-style="none">            <li id="ul0013-0001" num="0069">a. The PBs is increased by one and then returned to 3 to be checked again.</li>            <li id="ul0013-0002" num="0070">b. This procedure occurs until the valid hash is matched.</li>        </ul>        </li>        <li id="ul0008-0005" num="0071"><b>5</b>. Step F returns the VPK to the system.</li>    </ul>    </li></ul></p><heading id="h-0012" level="1">INDEX OF PARTS</heading><p id="p-0042" num="0000"><ul id="ul0014" list-style="none">    <li id="ul0014-0001" num="0000">    <ul id="ul0015" list-style="none">        <li id="ul0015-0001" num="0072"><b>1</b> virtual key system</li>        <li id="ul0015-0002" num="0073"><b>2</b> User device</li>        <li id="ul0015-0003" num="0074"><b>3</b> Credential factory (CF)</li>        <li id="ul0015-0004" num="0075"><b>3</b>A Private key miner</li>        <li id="ul0015-0005" num="0076"><b>4</b> Credential generator server (CG)</li>        <li id="ul0015-0006" num="0077"><b>5</b> Secure escrow server</li>        <li id="ul0015-0007" num="0078"><b>6</b> Secure escrow database</li>        <li id="ul0015-0008" num="0079"><b>7</b> Virtual key</li>        <li id="ul0015-0009" num="0080"><b>8</b> User device storage</li>    </ul>    </li></ul></p><p id="p-0043" num="0081">The references recited herein are incorporated herein in their entirety, particularly as they relate to teaching the level of ordinary skill in this art and for any disclosure necessary for the commoner understanding of the subject matter of the claimed invention. It will be clear to a person of ordinary skill in the art that the above embodiments may be altered or that insubstantial changes may be made without departing from the scope of the invention. Accordingly, the scope of the invention is determined by the scope of the following claims and their equitable equivalents.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system for generating a virtual private key to be used to establish a trust relationship between a user and one or more entities, the system comprising:<claim-text>a user device with a processor and a memory;</claim-text><claim-text>a credential factory comprising a private key miner;</claim-text><claim-text>a credential generator;</claim-text></claim-text><claim-text>wherein the credential factory generates a virtual private key at a user's request, the credential factory obtains user credentials through the credential generator, the virtual private key is used to generate a valid sequence of 24 words selected from a list of 2048 words and the factory generates a separate public key that is associated with the virtual private key.</claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system for generating a virtual private key of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein anonymous user credentials are sent by the credential generator to a secure escrow server with a secure escrow database.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system for generating a virtual private key of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user credentials comprise personal information of the user not known publicly.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system for generating a virtual private key of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the system employs the user credentials and a suite of algorithms and methodologies to securely generate the virtual private key without exposing the user credentials, and thus requiring no third party information to generate a key.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system for generating a virtual private key of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the virtual private key derives mnemonic words, further comprising a digital wallet on the user device for storing encrypted random information on a user device RAM, wherein the system uses the encrypted random information to derive and make available the virtual private key and the mnemonic words only when the user is actively using an algorithm running on the system to generate the virtual private key.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The system for generating a virtual private key of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>the virtual private key is not stored in any database and is maintained only in a virtual state;</claim-text><claim-text>whenever the virtual private key is needed it can be regenerated from personal knowledge of the user by first generating anonymous credentials and then passing these anonymous credentials to the private key miner; and</claim-text><claim-text>all other components of the system that do not require secrecy can be stored as normal.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. A system for generating the virtual private key of <claim-ref idref="CLM-00001">claim 1</claim-ref>, comprising the steps of:<claim-text>1. Downloading the credential factory to the memory of the user device;</claim-text><claim-text>2. Providing an interface with the user and the credential generator allowing the user to input personal credentials;</claim-text><claim-text>3. Requesting the credential factory to make the virtual private key;</claim-text><claim-text>4. Transferring the user credentials from the credential generator to the credential factory;</claim-text><claim-text>5. Generating the virtual private key with the credential factory using an anonymous credential;</claim-text><claim-text>6. Generating a public key associated with the virtual private key with the credential factory; and</claim-text><claim-text>7. Storing the public key on the memory of the user device.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the virtual private key is stored by the user.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The system of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further including the following step:<claim-text>8. Storing the anonymized personal credentials associated with the virtual private key to secure escrow server and secure escrow database.</claim-text></claim-text></claim></claims></us-patent-application>