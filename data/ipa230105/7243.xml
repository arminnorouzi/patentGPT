<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007244A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007244</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17944870</doc-number><date>20220914</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>109</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>31</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>159</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>169</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>503</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20140101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>109</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>31</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>159</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>188</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>503</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>172</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">CONSTRAINTS ON REFERENCE PICTURE LISTS ENTRIES</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/US2021/022576</doc-number><date>20210316</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17944870</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62992046</doc-number><date>20200319</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Bytedance Inc.</orgname><address><city>Los Angeles</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wang</last-name><first-name>Ye-kui</first-name><address><city>San Diego</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A video processing method includes performing a conversion between a video having one or more video layers including one or more video pictures and a bitstream of the video according to a rule. The rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an active entry in a reference picture list of a current slice of a current picture.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="75.69mm" wi="131.23mm" file="US20230007244A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="169.76mm" wi="128.69mm" orientation="landscape" file="US20230007244A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="122.34mm" wi="125.39mm" orientation="landscape" file="US20230007244A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="133.27mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="193.80mm" wi="133.18mm" orientation="landscape" file="US20230007244A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="180.51mm" wi="144.10mm" orientation="landscape" file="US20230007244A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="191.18mm" wi="129.54mm" orientation="landscape" file="US20230007244A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="167.64mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="174.58mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="173.91mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="168.99mm" wi="136.40mm" orientation="landscape" file="US20230007244A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="159.26mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="159.26mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="159.26mm" wi="129.12mm" orientation="landscape" file="US20230007244A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="145.29mm" wi="123.02mm" orientation="landscape" file="US20230007244A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="145.29mm" wi="119.30mm" orientation="landscape" file="US20230007244A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="163.75mm" wi="123.02mm" orientation="landscape" file="US20230007244A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="163.41mm" wi="120.90mm" orientation="landscape" file="US20230007244A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of International Patent Application No. PCT/US2021/022576 filed on Mar. 16, 2021, which claims the priority to and benefits of U.S. Provisional Patent Application No. 62/992,046 filed on Mar. 19, 2020. All the aforementioned patent applications are hereby incorporated by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">This patent document relates to image and video coding and decoding.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Digital video accounts for the largest bandwidth use on the internet and other digital communication networks. As the number of connected user devices capable of receiving and displaying video increases, it is expected that the bandwidth demand for digital video usage will continue to grow.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0005" num="0004">The present document discloses techniques that can be used by video encoders and decoders for processing coded representation of video using a bitstream syntax that provides improved performance. The disclosed methods may be used by apparatus that performs video processing such as video encoding or video decoding or video transcoding.</p><p id="p-0006" num="0005">In one example aspect, a video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comp\rising one or more video pictures and a coded representation of the video; wherein the coded representation is organized according to a rule that specifies that a first video picture that is an intra random access point picture of a second picture and the second picture are constrained to belong to a same video layer.</p><p id="p-0007" num="0006">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies that a trailing picture in the coded representation following a first type of picture that is an intra random access point is also permitted to be associated with a second type of picture that includes a gradual decoding refresh picture.</p><p id="p-0008" num="0007">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies a constraint for an output order of pictures preceding an intra random access point are is in a decoding order such that the output order is applicable only to pictures in a same video layer.</p><p id="p-0009" num="0008">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies a constraint that (1) a trailing picture must follow an associated intra random access point picture (IRAP) or a gradual decoder refresh (GDR) picture in an output order, or (2) a picture having a same layer id as that of the GDR picture must precede, in the output order, the GDR picture and all associated pictures of the GDR picture.</p><p id="p-0010" num="0009">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that an order constraint is applicable to a picture, an intra random access point (IRAP) picture and a non-leading picture if and only if the picture, the IRAP picture and the non-leading picture are in a same layer, wherein the rule is one of: (a) a first rule specifying a value of a field sequence and a decoding order, or (b) an order of leading and/or non-leading pictures of a layer.</p><p id="p-0011" num="0010">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies an order of a leading picture, a random access decodable leading (RADL) picture and a random access skipped leading (RASL) picture associated with a gradual decoding refresh (GDR) picture.</p><p id="p-0012" num="0011">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies that a constraint for a reference picture list for a clean random access picture is limited to a layer.</p><p id="p-0013" num="0012">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies a condition under which a current picture is allowed to refer to an entry in a reference picture list that was generated by a decoding process for generating an unavailable reference picture.</p><p id="p-0014" num="0013">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule of order between a current picture and a reference picture list corresponding to the current picture.</p><p id="p-0015" num="0014">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a first video picture that is an associated intra random access point picture of a second picture and the second picture are constrained to belong to a same video layer.</p><p id="p-0016" num="0015">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a trailing picture in the bitstream is permitted to be associated with a gradual decoding refresh picture.</p><p id="p-0017" num="0016">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a constraint for an output order of pictures preceding an intra random access point in a decoding order is applicable to pictures in a same video layer.</p><p id="p-0018" num="0017">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies a constraint that (1) a trailing picture follows an associated intra random access point picture or a gradual decoder refresh picture in an output order, or (2) a picture having a same network abstraction layer (NAL) unit header layer identifier as that of the gradual decoder refresh picture precedes, in the output order, the gradual decoder refresh picture and all associated pictures of the gradual decoder refresh picture.</p><p id="p-0019" num="0018">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies to apply a constraint on a decoding order of a picture associated with an intra random access point picture and a non-leading picture if and only if the picture, the intra random access point picture and the non-leading picture are in a same layer.</p><p id="p-0020" num="0019">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies an order of a leading picture, a random access decodable leading picture and a random access skipped leading picture associated with a gradual decoding refresh picture.</p><p id="p-0021" num="0020">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, wherein the rule specifies that a constraint for a reference picture list for a slice of a clean random access picture is limited to a layer.</p><p id="p-0022" num="0021">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an active entry in a reference picture list of a current slice of a current picture.</p><p id="p-0023" num="0022">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</p><p id="p-0024" num="0023">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising a current picture comprising a current slice and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which a reference picture list for the current slice is disallowed to have an active entry that refers to a picture that precedes, in a decoding order or an output order, an intra random access point picture associated with the current picture.</p><p id="p-0025" num="0024">In another example aspect, another video processing method is disclosed. The method includes performing a conversion between a video having one or more video layers comprising a current picture comprising a current slice and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which a reference picture list for the current slice is disallowed to have an entry that refers to a picture that precedes, in a decoding order or an output order, an intra random access point picture associated with the current picture.</p><p id="p-0026" num="0025">In yet another example aspect, a video encoder apparatus is disclosed. The video encoder comprises a processor configured to implement above-described methods.</p><p id="p-0027" num="0026">In yet another example aspect, a video decoder apparatus is disclosed. The video decoder comprises a processor configured to implement above-described methods.</p><p id="p-0028" num="0027">In yet another example aspect, a computer readable medium having code stored thereon is disclose. The code embodies one of the methods described herein in the form of processor-executable code.</p><p id="p-0029" num="0028">These, and other, features are described throughout the present document.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF DRAWINGS</heading><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram of an example video processing system, in accordance with some embodiments of the present disclosure.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a video processing apparatus, in accordance with some embodiments of the present disclosure.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart for an example method of video processing.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram that illustrates a video coding system, in accordance with some embodiments of the present disclosure.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram that illustrates an encoder, in accordance with some embodiments of the present disclosure.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram that illustrates a decoder, in accordance with some embodiments of the present disclosure.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. <b>7</b>A to <b>7</b>G</figref> show flowcharts for example methods of video processing, in accordance with some embodiments of the present disclosure.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIGS. <b>8</b>A and <b>8</b>B</figref> show flowcharts for example methods of video processing, in accordance with some embodiments of the present disclosure.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIGS. <b>9</b>A and <b>9</b>B</figref> show flowcharts for example methods of video processing, in accordance with some embodiments of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0039" num="0038">Section headings are used in the present document for ease of understanding and do not limit the applicability of techniques and embodiments disclosed in each section only to that section. Furthermore, H.266 terminology is used in some description only for ease of understanding and not for limiting scope of the disclosed techniques. As such, the techniques described herein are applicable to other video codec protocols and designs also.</p><heading id="h-0007" level="1">1. BRIEF SUMMARY</heading><p id="p-0040" num="0039">This document is related to video coding technologies. Specifically, it is about various aspects for supports of random access, sublayer switching, and scalability, including the definitions of different types of pictures and their relationships in terms decoding order, output order, and prediction relationship. The ideas may be applied individually or in various combination, to any video coding standard or non-standard video codec that supports multi-layer video coding, e.g., the being-developed Versatile Video Coding (VVC).</p><heading id="h-0008" level="1">2. ABBREVIATIONS</heading><p id="p-0041" num="0040">APS Adaptation Parameter Set</p><p id="p-0042" num="0041">AU Access Unit</p><p id="p-0043" num="0042">AUD Access Unit Delimiter</p><p id="p-0044" num="0043">AVC Advanced Video Coding</p><p id="p-0045" num="0044">CLVS Coded Layer Video Sequence</p><p id="p-0046" num="0045">CPB Coded Picture Buffer</p><p id="p-0047" num="0046">CRA Clean Random Access</p><p id="p-0048" num="0047">CTU Coding Tree Unit</p><p id="p-0049" num="0048">CVS Coded Video Sequence</p><p id="p-0050" num="0049">DCI Decoding Capability Information</p><p id="p-0051" num="0050">DPB Decoded Picture Buffer</p><p id="p-0052" num="0051">EOB End Of Bitstream</p><p id="p-0053" num="0052">EOS End Of Sequence</p><p id="p-0054" num="0053">GDR Gradual Decoding Refresh</p><p id="p-0055" num="0054">HEVC High Efficiency Video Coding</p><p id="p-0056" num="0055">HRD Hypothetical Reference Decoder</p><p id="p-0057" num="0056">IDR Instantaneous Decoding Refresh</p><p id="p-0058" num="0057">JEM Joint Exploration Model</p><p id="p-0059" num="0058">MCTS Motion-Constrained Tile Sets</p><p id="p-0060" num="0059">NAL Network Abstraction Layer</p><p id="p-0061" num="0060">OLS Output Layer Set</p><p id="p-0062" num="0061">PH Picture Header</p><p id="p-0063" num="0062">PPS Picture Parameter Set</p><p id="p-0064" num="0063">PTL Profile, Tier and Level</p><p id="p-0065" num="0064">PU Picture Unit</p><p id="p-0066" num="0065">RADL Random Access Decodable Leading (Picture)</p><p id="p-0067" num="0066">RAP Random Access Point</p><p id="p-0068" num="0067">RASL Random Access Skipped Leading (Picture)</p><p id="p-0069" num="0068">RBSP Raw Byte Sequence Payload</p><p id="p-0070" num="0069">RPL Reference Picture List</p><p id="p-0071" num="0070">SEI Supplemental Enhancement Information</p><p id="p-0072" num="0071">SPS Sequence Parameter Set</p><p id="p-0073" num="0072">STSA Step-wise Temporal Sublayer Access</p><p id="p-0074" num="0073">SVC Scalable Video Coding</p><p id="p-0075" num="0074">VCL Video Coding Layer</p><p id="p-0076" num="0075">VPS Video Parameter Set</p><p id="p-0077" num="0076">VTM VVC Test Model</p><p id="p-0078" num="0077">VUI Video Usability Information</p><p id="p-0079" num="0078">VVC Versatile Video Coding</p><heading id="h-0009" level="1">3. INITIAL DISCUSSION</heading><p id="p-0080" num="0079">Video coding standards have evolved primarily through the development of the well-known International Telecommunication Union-Telecommunication Standardization Sector (ITU-T) and International Organization for Standardization (ISO)/International Electrotechnical Commission (IEC) standards. The ITU-T produced H.261 and H.263, ISO/IEC produced Moving Picture Experts Group (MPEG)-1 and MPEG-4 Visual, and the two organizations jointly produced the H.262/MPEG-2 Video and H.264/MPEG-4 Advanced Video Coding (AVC) and H.265/High Efficiency Video Coding (HEVC) standards. Since H.262, the video coding standards are based on the hybrid video coding structure wherein temporal prediction plus transform coding are utilized. To explore the future video coding technologies beyond HEVC, the Joint Video Exploration Team (WET) was founded by Video Coding Experts Group (VCEG) and MPEG jointly in 2015. Since then, many new methods have been adopted by JVET and put into the reference software named Joint Exploration Model (JEM). The JVET meeting is concurrently held once every quarter, and the new coding standard is targeting at 50% bitrate reduction as compared to HEVC. The new video coding standard was officially named as Versatile Video Coding (VVC) in the April 2018 JVET meeting, and the first version of VVC test model (VTM) was released at that time. As there are continuous effort contributing to VVC standardization, new coding techniques are being adopted to the VVC standard in every JVET meeting. The VVC working draft and test model VTM are then updated after every meeting. The VVC project is now aiming for technical completion Final Draft International Standard (FDIS) at the July 2020 meeting.</p><p id="p-0081" num="0080">3.1. Scalable Video Coding (SVC) in General and in VVC</p><p id="p-0082" num="0081">Scalable video coding (SVC), sometimes also just referred to as scalability in video coding) refers to video coding in which a base layer (BL), sometimes referred to as a reference layer (RL), and one or more scalable enhancement layers (ELs) are used. In SVC, the base layer can carry video data with a base level of quality. The one or more enhancement layers can carry additional video data to support, for example, higher spatial, temporal, and/or signal-to-noise (SNR) levels. Enhancement layers may be defined relative to a previously encoded layer. For example, a bottom layer may serve as a BL, while a top layer may serve as an EL. Middle layers may serve as either ELs or RLs, or both. For example, a middle layer (e.g., a layer that is neither the lowest layer nor the highest layer) may be an EL for the layers below the middle layer, such as the base layer or any intervening enhancement layers, and at the same time serve as a RL for one or more enhancement layers above the middle layer. Similarly, in the Multiview or three-dimensional (3D) extension of the HEVC standard, there may be multiple views, and information of one view may be utilized to code (e.g., encode or decode) the information of another view (e.g., motion estimation, motion vector prediction and/or other redundancies).</p><p id="p-0083" num="0082">In SVC, the parameters used by the encoder or the decoder are grouped into parameter sets based on the coding level (e.g., video-level, sequence-level, picture-level, slice level, etc.) in which they may be utilized. For example, parameters that may be utilized by one or more coded video sequences of different layers in the bitstream may be included in a video parameter set (VPS), and parameters that are utilized by one or more pictures in a coded video sequence may be included in a sequence parameter set (SPS). Similarly, parameters that are utilized by one or more slices in a picture may be included in a picture parameter set (PPS), and other parameters that are specific to a single slice may be included in a slice header. Similarly, the indication of which parameter set(s) a particular layer is using at a given time may be provided at various coding levels.</p><p id="p-0084" num="0083">Thanks to the support of reference picture resampling (RPR) in VVC, support of a bitstream containing multiple layers, e.g., two layers with standard definition (SD) and high definition (HD) resolutions in VVC can be designed without the need any additional signal-processing-level coding tool, as upsampling needed for spatial scalability support can just use the RPR upsampling filter. Nevertheless, high-level syntax changes (compared to not supporting scalability) are needed for scalability support. Scalability support is specified in VVC version 1. Different from the scalability supports in any earlier video coding standards, including in extensions of AVC and HEVC, the design of VVC scalability has been made friendly to single-layer decoder designs as much as possible. The decoding capability for multi-layer bitstreams are specified in a manner as if there were only a single layer in the bitstream. For example, the decoding capability, such as Decoded Picture Buffer (DPB) size, is specified in a manner that is independent of the number of layers in the bitstream to be decoded. Generally, a decoder designed for single-layer bitstreams does not need much change to be able to decode multi-layer bitstreams. Compared to the designs of multi-layer extensions of AVC and HEVC, the Hypertext Transfer Protocol (HTTP) Live Streaming (HLS) aspects have been significantly simplified at the sacrifice of some flexibilities. For example, an Intra Random Access Point (IRAP) Access Unit (AU) is required to contain a picture for each of the layers present in the Coded Video Sequence (CVS).</p><p id="p-0085" num="0084">3.2. Random Access and its Supports in HEVC and VVC</p><p id="p-0086" num="0085">Random access refers to starting access and decoding of a bitstream from a picture that is not the first picture of the bitstream in decoding order. To support tuning in and channel switching in broadcast/multicast and multiparty video conferencing, seeking in local playback and streaming, as well as stream adaptation in streaming, the bitstream needs to include frequent random access points, which are typically intra coded pictures but may also be inter-coded pictures (e.g., in the case of gradual decoding refresh).</p><p id="p-0087" num="0086">HEVC includes signaling of intra random access points (IRAP) pictures in the Network Abstraction Layer (NAL) unit header, through NAL unit types. Three types of IRAP pictures are supported, namely instantaneous decoder refresh (IDR), clean random access (CRA), and broken link access (BLA) pictures. IDR pictures are constraining the inter-picture prediction structure to not reference any picture before the current group-of-pictures (GOP), conventionally referred to as closed-GOP random access points. CRA pictures are less restrictive by allowing certain pictures to reference pictures before the current GOP, all of which are discarded in case of a random access. CRA pictures are conventionally referred to as open-GOP random access points. BLA pictures usually originate from splicing of two bitstreams or part thereof at a CRA picture, e.g., during stream switching. To enable better systems usage of IRAP pictures, altogether six different NAL units are defined to signal the properties of the IRAP pictures, which can be used to better match the stream access point types as defined in the ISO base media file format (ISOBMFF) which are utilized for random access support in dynamic adaptive streaming over HTTP (DASH).</p><p id="p-0088" num="0087">VVC supports three types of IRAP pictures, two types of IDR pictures (one type with or the other type without associated Random Access Decodable Leading (RADL) pictures) and one type of CRA picture. These are generally the same as in HEVC. The BLA picture types in HEVC are not included in VVC, mainly due to two reasons: i) The basic functionality of BLA pictures can be realized by CRA pictures plus the end of sequence NAL unit, the presence of which indicates that the subsequent picture starts a new CVS in a single-layer bitstream. ii) There was a desire in specifying less NAL unit types than HEVC during the development of VVC, as indicated by the use of five instead of six bits for the NAL unit type field in the NAL unit header.</p><p id="p-0089" num="0088">Another difference in random access support between VVC and HEVC is the support of Gradual Decoding Refresh (GDR) in a more normative manner in VVC. In GDR, the decoding of a bitstream can start from an inter-coded picture and although at the beginning not the entire picture region can be correctly decoded but after a number of pictures the entire picture region would be correct. AVC and HEVC also support GDR, using the recovery point Supplemental Enhancement Information (SEI) message for signaling of GDR random access points and the recovery points. In VVC, a new NAL unit type is specified for indication of GDR pictures and the recovery point is signaled in the picture header syntax structure. A CVS and a bitstream are allowed to start with a GDR picture. This means that it is allowed for an entire bitstream to contain only inter-coded pictures without a single intra-coded picture. The main benefit of specifying GDR support this way is to provide a conforming behavior for GDR. GDR enables encoders to smooth the bit rate of a bitstream by distributing intra-coded slices or blocks in multiple pictures as opposed intra coding entire pictures, thus allowing significant end-to-end delay reduction, which is considered more important nowadays than before as ultralow delay applications like wireless display, online gaming, drone based applications become more popular.</p><p id="p-0090" num="0089">Another GDR related feature in VVC is the virtual boundary signaling. The boundary between the refreshed region (i.e., the correctly decoded region) and the unrefreshed region at a picture between a GDR picture and its recovery point can be signaled as a virtual boundary, and when signaled, in-loop filtering across the boundary would not be applied, thus a decoding mismatch for some samples at or near the boundary would not occur. This can be useful when the application determines to display the correctly decoded regions during the GDR process.</p><p id="p-0091" num="0090">IRAP pictures and GDR pictures can be collectively referred to as random access point (RAP) pictures.</p><heading id="h-0010" level="2">3.3. Reference Picture Management and Reference Picture Lists (RPLs)</heading><p id="p-0092" num="0091">Reference picture management is a core functionality that is necessary for any video coding scheme that uses inter prediction. It manages the storage and removal of reference pictures into and from a decoded picture buffer (DPB) and puts reference pictures in their proper order in the RPLs.</p><p id="p-0093" num="0092">The reference picture management of HEVC, including reference picture marking and removal from the decoded picture buffer (DPB) as well as reference picture list construction (RPLC), differs from that of AVC. Instead of the reference picture marking mechanism based on a sliding window plus adaptive memory management control operation (MMCO) in AVC, HEVC specifies a reference picture management and marking mechanism based on so-called reference picture set (RPS), and the RPLC is consequently based on the RPS mechanism. An RPS consists of a set of reference pictures associated with a picture, consisting of all reference pictures that are prior to the associated picture in decoding order, that may be used for inter prediction of the associated picture or any picture following the associated picture in decoding order. The reference picture set consists of five lists of reference pictures. The first three lists contain all reference pictures that may be used in inter prediction of the current picture and that may be used in inter prediction of one or more of the pictures following the current picture in decoding order. The other two lists consist of all reference pictures that are not used in inter prediction of the current picture but may be used in inter prediction of one or more of the pictures following the current picture in decoding order. RPS provides an &#x201c;intra-coded&#x201d; signaling of the DPB status, instead of an &#x201c;inter-coded&#x201d; signaling as in AVC, mainly for improved error resilience. The RPLC process in HEVC is based on the RPS, by signaling an index to an RPS subset for each reference index; this process is simpler than the RPLC process in AVC.</p><p id="p-0094" num="0093">Reference picture management in VVC is more similar to HEVC than AVC, but is somewhat simpler and more robust. As in those standards, two RPLs, list <b>0</b> and list <b>1</b>, are derived, but they are not based on the reference picture set concept used in HEVC or the automatic sliding window process used in AVC; instead they are signaled more directly. Reference pictures are listed for the RPLs as either active and inactive entries, and only the active entries may be used as reference indices in inter prediction of Coding Tree Units (CTUs) of the current picture. Inactive entries indicate other pictures to be held in the DPB for referencing by other pictures that arrive later in the bitstream.</p><heading id="h-0011" level="2">3.4. Parameter Sets</heading><p id="p-0095" num="0094">AVC, HEVC, and VVC specify parameter sets. The types of parameter sets include SPS, PPS, Adaptation Parameter Set (APS), and VPS. SPS and PPS are supported in all of AVC, HEVC, and VVC. VPS was introduced since HEVC and is included in both HEVC and VVC. APS was not included in AVC or HEVC but is included in the latest VVC draft text.</p><p id="p-0096" num="0095">SPS was designed to carry sequence-level header information, and PPS was designed to carry infrequently changing picture-level header information. With SPS and PPS, infrequently changing information need not to be repeated for each sequence or picture, hence redundant signaling of this information can be avoided. Furthermore, the use of SPS and PPS enables out-of-band transmission of the important header information, thus not only avoiding the need for redundant transmissions but also improving error resilience.</p><p id="p-0097" num="0096">VPS was introduced for carrying sequence-level header information that is common for all layers in multi-layer bitstreams.</p><p id="p-0098" num="0097">APS was introduced for carrying such picture-level or slice-level information that needs quite some bits to code, can be shared by multiple pictures, and in a sequence there can be quite many different variations.</p><heading id="h-0012" level="2">3.5. Related Definitions in in VVC</heading><p id="p-0099" num="0098">Related definitions in the latest VVC text (in JVET-Q2001-vE/v15) are as follows.<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0099">associated IRAP picture (of a particular picture): The previous IRAP picture in decoding order (when present) having the same value of nuh_layer_id as the particular picture.</li>        <li id="ul0002-0002" num="0100">clean random access (CRA) Picture Unit (PU): A PU in which the coded picture is a CRA picture.</li>        <li id="ul0002-0003" num="0101">clean random access (CRA) picture: An IRAP picture for which each VCL NAL unit has nal_unit_type equal to CRA NUT.</li>        <li id="ul0002-0004" num="0102">coded video sequence (CVS): A sequence of AUs that consists, in decoding order, of a CVSS AU, followed by zero or more AUs that are not CVSSAUs, including all subsequent AUs up to but not including any subsequent AU that is a CVSS AU.</li>        <li id="ul0002-0005" num="0103">coded video sequence start (CVSS) AU: An AU in which there is a PU for each layer in the CVS and the coded picture in each PU is a Coded Layer Video Sequence Start (CLVSS) picture.</li>        <li id="ul0002-0006" num="0104">gradual decoding refresh (GDR) AU: An AU in which the coded picture in each present PU is a GDR picture.</li>        <li id="ul0002-0007" num="0105">gradual decoding refresh (GDR) PU: A PU in which the coded picture is a GDR picture.</li>        <li id="ul0002-0008" num="0106">gradual decoding refresh (GDR) picture: A picture for which each VCL NAL unit has nal_unit_type equal to GDR NUT.</li>        <li id="ul0002-0009" num="0107">instantaneous decoding refresh (IDR) PU: A PU in which the coded picture is an IDR picture.</li>        <li id="ul0002-0010" num="0108">instantaneous decoding refresh (IDR) picture: An IRAP picture for which each VCL NAL unit has nal_unit_type equal to IDR_W_RADL or IDR_N_LP.</li>        <li id="ul0002-0011" num="0109">intra random access point (IRAP) AU: An AU in which there is a PU for each layer in the CVS and the coded picture in each PU is an IRAP picture.</li>        <li id="ul0002-0012" num="0110">intra random access point (IRAP) PU: A PU in which the coded picture is an IRAP picture.</li>        <li id="ul0002-0013" num="0111">intra random access point (IRAP) picture: A coded picture for which all VCL NAL units have the same value of nal_unit_type in the range of IDR_W_RADL to CRA_NUT, inclusive.</li>        <li id="ul0002-0014" num="0112">leading picture: A picture that is in the same layer as the associated IRAP picture and precedes the associated IRAP picture in output order.</li>        <li id="ul0002-0015" num="0113">random access decodable leading (RADL) PU: A PU in which the coded picture is a RADL picture.</li>        <li id="ul0002-0016" num="0114">random access decodable leading (RADL) picture: A picture for which each VCL NAL unit has nal_unit_type equal to RADL_NUT.</li>        <li id="ul0002-0017" num="0115">random access skipped leading (RASL) PU: A PU in which the coded picture is a RASL picture.</li>        <li id="ul0002-0018" num="0116">random access skipped leading (RASL) picture: A picture for which each VCL NAL unit has nal_unit_type equal to RASL_NUT.</li>        <li id="ul0002-0019" num="0117">step-wise temporal sublayer access (STSA) PU: A PU in which the coded picture is an STSA picture.</li>        <li id="ul0002-0020" num="0118">step-wise temporal sublayer access (STSA) picture: A picture for which each VCL NAL unit has nal_unit_type equal to STSA_NUT.        <ul id="ul0003" list-style="none">            <li id="ul0003-0001" num="0119">NOTE&#x2014;An STSA picture does not use pictures with the same TemporalId as the STSA picture for inter prediction reference. Pictures following an STSA picture in decoding order with the same TemporalId as the STSA picture do not use pictures prior to the STSA picture in decoding order with the same TemporalId as the STSA picture for inter prediction reference. An STSA picture enables up-switching, at the STSA picture, to the sublayer containing the STSA picture, from the immediately lower sublayer. STSA pictures must have TemporalId greater than 0.</li>        </ul>        </li>        <li id="ul0002-0021" num="0120">trailing picture: A non-IRAP picture that follows the associated IRAP picture in output order and is not an STSA picture.        <ul id="ul0004" list-style="none">            <li id="ul0004-0001" num="0121">NOTE&#x2014;Trailing pictures associated with an IRAP picture also follow the IRAP picture in decoding order. Pictures that follow the associated IRAP picture in output order and precede the associated IRAP picture in decoding order are not allowed.</li>        </ul>        </li>    </ul>    </li></ul></p><heading id="h-0013" level="2">3.6. NAL Unit Header Syntax and Semantics in VVC</heading><p id="p-0100" num="0122">In the latest VVC text (in JVET-Q2001-vE/v15), the NAL unit header syntax and semantics are as follows.</p><heading id="h-0014" level="2">7.3.1.2 NAL Unit Header Syntax</heading><p id="p-0101" num="0123"></p><p id="p-0102" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="147pt" align="left"/><colspec colname="1" colwidth="70pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="119pt" align="left"/><colspec colname="2" colwidth="70pt" align="left"/><tbody valign="top"><row><entry/><entry>nal_unit_header( ) {</entry><entry/></row><row><entry/><entry>&#x2003;forbidden_zero_bit</entry><entry>f(1)</entry></row><row><entry/><entry>&#x2003;nuh_reserved_zero_bit</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;nuh_layer_id</entry><entry>u(6)</entry></row><row><entry/><entry>&#x2003;nal_unit_type</entry><entry>u(5)</entry></row><row><entry/><entry>&#x2003;nuh_temporal_id_plus1</entry><entry>u(3)</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><heading id="h-0015" level="2">7.4.2.2 NAL Unit Header Semantics</heading><p id="p-0103" num="0124">forbidden_zero_bit shall be equal to 0.</p><p id="p-0104" num="0125">nuh_reserved_zero_bit shall be equal to 0. The value 1 of nuh_reserved_zero_bit may be specified in the future by ITU-T|ISO/IEC. Decoders shall ignore (i.e. remove from the bitstream and discard) NAL units with nuh_reserved_zero_bit equal to 1.</p><p id="p-0105" num="0126">nuh_layer_id specifies the identifier of the layer to which a VCL NAL unit belongs or the identifier of a layer to which a non-VCL NAL unit applies. The value of nuh_layer_id shall be in the range of 0 to 55, inclusive. Other values for nuh_layer_id are reserved for future use by ITU-T|ISO/IEC.</p><p id="p-0106" num="0127">The value of nuh_layer_id shall be the same for all VCL NAL units of a coded picture. The value of nuh_layer_id of a coded picture or a PU is the value of the nuh_layer_id of the VCL NAL units of the coded picture or the PU.</p><p id="p-0107" num="0128">The value of nuh_layer_id for Access Unit Delimiter (AUD), Picture Header (PH), End Of Sequence (EOS), and FD NAL units is constrained as follows:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0129">If nal_unit_type is equal to AUD_NUT, nuh_layer_id shall be equal to vps_layer_id[0].</li>        <li id="ul0006-0002" num="0130">Otherwise, when nal_unit_type is equal to PH_NUT, EOS_NUT, or FD_NUT, nuh_layer_id shall be equal to the nuh_layer_id of associated VCL NAL unit.</li>        <li id="ul0006-0003" num="0131">NOTE 1&#x2014;The value of nuh_layer_id of Decoding Capability Information (DCI), VPS, and End Of Bitstream (EOB) NAL units is not constrained.</li>    </ul>    </li></ul></p><p id="p-0108" num="0132">The value of nal_unit_type shall be the same for all pictures of a CVSS AU.</p><p id="p-0109" num="0133">nal_unit_type specifies the NAL unit type, i.e., the type of Raw Byte Sequence Payload (RBSP) data structure contained in the NAL unit as specified in Table 5.</p><p id="p-0110" num="0134">NAL units that have nal_unit_type in the range of UNSPEC 28 . . . UNSPEC_31, inclusive, for which semantics are not specified, shall not affect the decoding process specified in this Specification.<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0135">NOTE 2&#x2014;NAL unit types in the range of UNSPEC_28 . . . UNSPEC_31 may be used as determined by the application. No decoding process for these values of nal_unit_type is specified in this Specification. Since different applications might use these NAL unit types for different purposes, particular care must be exercised in the design of encoders that generate NAL units with these nal_unit_type values, and in the design of decoders that interpret the content of NAL units with these nal_unit_type values. This Specification does not define any management for these values. These nal_unit_type values might only be suitable for use in contexts in which &#x201c;collisions&#x201d; of usage (i.e., different definitions of the meaning of the NAL unit content for the same nal_unit_type value) are unimportant, or not possible, or are managed&#x2014;e.g., defined or managed in the controlling application or transport specification, or by controlling the environment in which bitstreams are distributed.</li>    </ul>    </li></ul></p><p id="p-0111" num="0136">For purposes other than determining the amount of data in the Decoding Units (DUs) of the bitstream (as specified in Annex C), decoders shall ignore (remove from the bitstream and discard) the contents of all NAL units that use reserved values of nal_unit_type.<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0137">NOTE 3&#x2014;This requirement allows future definition of compatible extensions to this Specification.</li>    </ul>    </li></ul></p><p id="p-0112" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="280pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 5</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>NAL unit type codes and NAL unit type classes</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="49pt" align="center"/><colspec colname="2" colwidth="70pt" align="left"/><colspec colname="3" colwidth="126pt" align="left"/><colspec colname="4" colwidth="35pt" align="left"/><tbody valign="top"><row><entry/><entry>Name of</entry><entry>Content of NAL unit and RBSP syntax</entry><entry>NAL unit</entry></row><row><entry>nal_unit_type</entry><entry>nal_unit_type</entry><entry>structure</entry><entry>type class</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry>&#x2002;0</entry><entry>TRAIL_NUT</entry><entry>Coded slice of a trailing picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>slice_layer_rbsp( )</entry></row><row><entry>&#x2002;1</entry><entry>STSA_NUT</entry><entry>Coded slice of an STSA picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>slice_layer_rbsp( )</entry></row><row><entry>&#x2002;2</entry><entry>RADL_NUT</entry><entry>Coded slice of a RADL picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>slice_layer_rbsp( )</entry></row><row><entry>&#x2002;3</entry><entry>RASL_NUT</entry><entry>Coded slice of a RASL picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>slice_layer_rbsp( )</entry></row><row><entry>4 . . . 6</entry><entry>RSV_VCL_4 . . .</entry><entry>Reserved non-IRAP VCL NAL unit types</entry><entry>VCL</entry></row><row><entry/><entry>RSV_VCL_6</entry></row><row><entry>&#x2002;7</entry><entry>IDR_W_RADL</entry><entry>Coded slice of an IDR picture</entry><entry>VCL</entry></row><row><entry>&#x2002;8</entry><entry>IDR_N_LP</entry><entry>slice_layer_rbsp( )</entry></row><row><entry>&#x2002;9</entry><entry>CRA_NUT</entry><entry>Coded slice of a CRA picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>silce_layer_rbsp( )</entry></row><row><entry>10</entry><entry>GDR_NUT</entry><entry>Coded slice of a GDR picture</entry><entry>VCL</entry></row><row><entry/><entry/><entry>slice_layer_rbsp( )</entry></row><row><entry>11</entry><entry>RSV_IRAP_11</entry><entry>Reserved IRAP VCL NAL unit types</entry><entry>VCL</entry></row><row><entry>12</entry><entry>RSV_IRAP_12</entry></row><row><entry>13</entry><entry>DCI_NUT</entry><entry>Decoding capability information</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>decoding_capability_information_rbsp( )</entry></row><row><entry>14</entry><entry>VPS_NUT</entry><entry>Video parameter set</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>video_parameter_set_rbsp( )</entry></row><row><entry>15</entry><entry>SPS_NUT</entry><entry>Sequence parameter set</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>seq_parameter_set_rbsp( )</entry></row><row><entry>16</entry><entry>PPS_NUT</entry><entry>Picture parameter set</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>pic_parameter_set_rbsp( )</entry></row><row><entry>17</entry><entry>PREFIX_APS_NUT</entry><entry>Adaptation parameter set</entry><entry>non-VCL</entry></row><row><entry>18</entry><entry>SUFFIX_APS_NUT</entry><entry>adaptation_parameter_set_rbsp( )</entry></row><row><entry>19</entry><entry>PH_NUT</entry><entry>Picture header</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>picture_header_rbsp( )</entry></row><row><entry>20</entry><entry>AUD_NUT</entry><entry>AU delimiter</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>access_unit_delimiter_rbsp( )</entry></row><row><entry>21</entry><entry>EOS_NUT</entry><entry>End of sequence</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>end_of_seq_rbsp( )</entry></row><row><entry>22</entry><entry>EOB_NUT</entry><entry>End of bitstream</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>end_of_bitstream_rbsp( )</entry></row><row><entry>23</entry><entry>PREFIX_SEI_NUT</entry><entry>Supplemental enhancement information</entry><entry>non-VCL</entry></row><row><entry>24</entry><entry>SUFFIX_SEI_NUT</entry><entry>sei_rbsp( )</entry></row><row><entry>25</entry><entry>FD_NUT</entry><entry>Filler data</entry><entry>non-VCL</entry></row><row><entry/><entry/><entry>filler_data_rbsp( )</entry></row><row><entry>26</entry><entry>RSV_NVCL_26</entry><entry>Reserved non-VCL NAL unit types</entry><entry>non-VCL</entry></row><row><entry>27</entry><entry>RSV_NVCL_27</entry></row><row><entry>28 . . . 31</entry><entry>UNSPEC_28 . . .</entry><entry>Unspecified non-VCL NAL unit types</entry><entry>non-VCL</entry></row><row><entry/><entry>UNSPEC_31</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry namest="1" nameend="4" align="left" id="FOO-00001">NOTE 4 -</entry></row><row><entry namest="1" nameend="4" align="left" id="FOO-00002">A clean random access (CRA) picture may have associated RASL or RADL pictures present in the bitstream.</entry></row><row><entry namest="1" nameend="4" align="left" id="FOO-00003">NOTE 5 -</entry></row><row><entry namest="1" nameend="4" align="left" id="FOO-00004">An instantaneous decoding refresh (IDR) picture having nal_unit_type equal to IDR_N_LP does not have associated leading pictures present in the bitstream. An IDR picture having nal_unit_type equal to IDR_W_RADL does not have associated RASL pictures present in the bitstream, but may have associated RADL pictures in the bitstream.</entry></row></tbody></tgroup></table></tables></p><p id="p-0113" num="0138">The value of nal_unit_type shall be the same for all Video Coding Layer (VCL) NAL units of a subpicture. A subpicture is referred to as having the same NAL unit type as the VCL NAL units of the subpicture.</p><p id="p-0114" num="0139">For VCL NAL units of any particular picture, the following applies:<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0140">If mixed_nalu_types_in_pic_flag is equal to 0, the value of nal_unit_type shall be the same for all VCL NAL units of a picture, and a picture or a PU is referred to as having the same NAL unit type as the coded slice NAL units of the picture or PU.</li>        <li id="ul0012-0002" num="0141">Otherwise (mixed_nalu_types_in_pic_flag is equal to 1), the picture shall have at least two subpictures and VCL NAL units of the picture shall have exactly two different nal_unit_type values as follows: the VCL NAL units of at least one subpicture of the picture shall all have a particular value of nal_unit_type equal to STSA_NUT, RADL_NUT, RASL_NUT, IDR_W_RADL, IDR_N_LP, or CRA_NUT, while the VCL NAL units of other subpictures in the picture shall all have a different particular value of nal_unit_type equal to TRAIL_NUT, RADL_NUT, or RASL_NUT.</li>    </ul>    </li></ul></p><p id="p-0115" num="0142">For a single-layer bitstream, the following constraints apply:<ul id="ul0013" list-style="none">    <li id="ul0013-0001" num="0000">    <ul id="ul0014" list-style="none">        <li id="ul0014-0001" num="0143">Each picture, other than the first picture in the bitstream in decoding order, is considered to be associated with the previous IRAP picture in decoding order.</li>        <li id="ul0014-0002" num="0144">When a picture is a leading picture of an IRAP picture, it shall be a RADL or RASL picture.</li>        <li id="ul0014-0003" num="0145">When a picture is a trailing picture of an IRAP picture, it shall not be a RADL or RASL picture.</li>        <li id="ul0014-0004" num="0146">No RASL pictures shall be present in the bitstream that are associated with an IDR picture.</li>        <li id="ul0014-0005" num="0147">No RADL pictures shall be present in the bitstream that are associated with an IDR picture having nal_unit_type equal to IDR_N_LP.        <ul id="ul0015" list-style="none">            <li id="ul0015-0001" num="0148">NOTE 6&#x2014;It is possible to perform random access at the position of an IRAP PU by discarding all PUs before the IRAP PU (and to correctly decode the IRAP picture and all the subsequent non-RASL pictures in decoding order), provided each parameter set is available (either in the bitstream or by external means not specified in this Specification) when it is referenced.</li>        </ul>        </li>        <li id="ul0014-0006" num="0149">Any picture that precedes an IRAP picture in decoding order shall precede the IRAP picture in output order and shall precede any RADL picture associated with the IRAP picture in output order.</li>        <li id="ul0014-0007" num="0150">Any RASL picture associated with a CRA picture shall precede any RADL picture associated with the CRA picture in output order.</li>        <li id="ul0014-0008" num="0151">Any RASL picture associated with a CRA picture shall follow, in output order, any IRAP picture that precedes the CRA picture in decoding order.</li>        <li id="ul0014-0009" num="0152">If field_seq_flag is equal to 0 and the current picture is a leading picture associated with an</li>    </ul>    </li></ul></p><p id="p-0116" num="0153">IRAP picture, it shall precede, in decoding order, all non-leading pictures that are associated with the same IRAP picture. Otherwise, let picA and picB be the first and the last leading pictures, in decoding order, associated with an IRAP picture, respectively, there shall be at most one non-leading picture preceding picA in decoding order, and there shall be no non-leading picture between picA and picB in decoding order.</p><p id="p-0117" num="0154">nuh_temporal_id_plus1 minus 1 specifies a temporal identifier for the NAL unit.</p><p id="p-0118" num="0155">The value of nuh_temporal_id_plus1 shall not be equal to 0.</p><p id="p-0119" num="0156">The variable TemporalId is derived as follows:</p><p id="p-0120" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>TemporalId=nuh_temporal_id_plus1&#x2212;1 &#x2003;&#x2003;(36)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0121" num="0157">When nal_unit_type is in the range of IDR_W_RADL to RSV_IRAP_12, inclusive, TemporalId shall be equal to 0.</p><p id="p-0122" num="0158">When nal_unit_type is equal to STSA_NUT and vps_independent_layer_flag[GeneralLayerIdx[nuh_layer_id]] is equal to 1, TemporalId shall not be equal to 0.</p><p id="p-0123" num="0159">The value of TemporalId shall be the same for all VCL NAL units of an AU. The value of TemporalId of a coded picture, a PU, or an AU is the value of the TemporalId of the VCL NAL units of the coded picture, PU, or AU. The value of TemporalId of a sublayer representation is the greatest value of TemporalId of all VCL NAL units in the sublayer representation.</p><p id="p-0124" num="0160">The value of TemporalId for non-VCL NAL units is constrained as follows:<ul id="ul0016" list-style="none">    <li id="ul0016-0001" num="0000">    <ul id="ul0017" list-style="none">        <li id="ul0017-0001" num="0161">If nal_unit_type is equal to DCI_NUT, VPS_NUT, or SPS_NUT, TemporalId shall be equal to 0 and the TemporalId of the AU containing the NAL unit shall be equal to 0.</li>        <li id="ul0017-0002" num="0162">Otherwise, if nal_unit_type is equal to PH_NUT, TemporalId shall be equal to the TemporalId of the PU containing the NAL unit.</li>        <li id="ul0017-0003" num="0163">Otherwise, if nal_unit_type is equal to EOS_NUT or EOB_NUT, TemporalId shall be equal to 0.</li>        <li id="ul0017-0004" num="0164">Otherwise, if nal_unit_type is equal to AUD_NUT, FD_NUT, PREFIX_SEI_NUT, or SUFFIX_SEI_NUT, TemporalId shall be equal to the TemporalId of the AU containing the NAL unit.</li>        <li id="ul0017-0005" num="0165">Otherwise, when nal_unit_type is equal to PPS_NUT, PREFIX_APS_NUT, or SUFFIX_APS_NUT, TemporalId shall be greater than or equal to the TemporalId of the PU containing the NAL unit.</li>        <li id="ul0017-0006" num="0166">NOTE 7&#x2014;When the NAL unit is a non-VCL NAL unit, the value of TemporalId is equal to the minimum value of the TemporalId values of all AUs to which the non-VCL NAL unit applies. When nal_unit_type is equal to PPS_NUT, PREFIX_APS_NUT, or SUFFIX_APS_NUT, TemporalId may be greater than or equal to the TemporalId of the containing AU, as all PPSs and APSs may be included in the beginning of the bitstream (e.g., when they are transported out-of-band, and the receiver places them at the beginning of the bitstream), wherein the first coded picture has TemporalId equal to 0.</li>    </ul>    </li></ul></p><heading id="h-0016" level="2">3.7. Picture Header Structure Syntax and Semantics in VVC</heading><p id="p-0125" num="0167">In the latest VVC text (in JVET-Q2001-vE/v15), the picture header structure syntax and semantics that are most relevant to the examples described herein are as follows.</p><heading id="h-0017" level="2">7.3.2.7 Picture Header Structure Syntax</heading><p id="p-0126" num="0168"></p><p id="p-0127" num="0000"><tables id="TABLE-US-00003" num="00003"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="161pt" align="left"/><colspec colname="1" colwidth="56pt" align="left"/><thead><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>Descriptor</entry></row><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="21pt" align="left"/><colspec colname="1" colwidth="140pt" align="left"/><colspec colname="2" colwidth="56pt" align="left"/><tbody valign="top"><row><entry/><entry>picture_header_structure( ) {</entry><entry/></row><row><entry/><entry>&#x2003;gdr_or_irap_pic_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( gdr_or_irap_pic_flag )</entry></row><row><entry/><entry>&#x2003;&#x2003;gdr_pic_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;...</entry></row><row><entry/><entry>&#x2003;ph_pic_order_cnt_lsb</entry><entry>u(v)</entry></row><row><entry/><entry>&#x2003;if( gdr_or_irap_pic_flag )</entry></row><row><entry/><entry>&#x2003;&#x2003;no_output_of_prior_pics_flag</entry><entry>u(1)</entry></row><row><entry/><entry>&#x2003;if( gdr_pic_flag )</entry></row><row><entry/><entry>&#x2003;&#x2003;recovery_poc_cnt</entry><entry>ue(v)</entry></row><row><entry/><entry>&#x2003;...</entry><entry>ue(v)</entry></row><row><entry/><entry>}</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0128" num="0169">7.4.3.7 Picture Header Structure Semantics</p><p id="p-0129" num="0170">The PH syntax structure contains information that is common for all slices of the coded picture associated with the PH syntax structure.</p><p id="p-0130" num="0171">gdr_or_irap_pic_flag equal to 1 specifies that the current picture is a GDR or IRAP picture.</p><p id="p-0131" num="0172">gdr_or_irap_pic_flag equal to 0 specifies that the current picture may or may not be a GDR or IRAP picture.</p><p id="p-0132" num="0173">gdr_pic_flag equal to 1 specifies the picture associated with the PH is a GDR picture. gdr_pic_flag equal to 0 specifies that the picture associated with the PH is not a GDR picture. When not present, the value of gdr_pic_flag is inferred to be equal to 0. When gdr_enabled_flag is equal to 0, the value of gdrpic flag shall be equal to 0.<ul id="ul0018" list-style="none">    <li id="ul0018-0001" num="0000">    <ul id="ul0019" list-style="none">        <li id="ul0019-0001" num="0174">NOTE 1&#x2014;When gdr_or_irap_pic_flag is equal to 1 and gdr_pic_flag is equal to 0, the picture associated with the PH is an IRAP picture.</li>    </ul>    </li></ul></p><p id="p-0133" num="0175">ph_pic_ordercnt_lsb specifies the picture order count modulo MaxPicOrderCntLsb for the current picture. The length of the ph_pic_order_cnt_lsb syntax element is log2_max_pic_order_cnt_lsb_minus4+4 bits. The value of the ph_pic_order_cnt_lsb shall be in the range of 0 to MaxPicOrderCntLsb&#x2212;1, inclusive.</p><p id="p-0134" num="0176">no_output_of_prior_pics_flag affects the output of previously-decoded pictures in the DPB after the decoding of a CLVSS picture that is not the first picture in the bitstream as specified in Annex C.</p><p id="p-0135" num="0177">recovery_poc_cnt specifies the recovery point of decoded pictures in output order. If the current picture is a GDR picture that is associated with the PH, and there is a picture picA that follows the current GDR picture in decoding order in the CLVS that has PicOrderCntVal equal to the PicOrderCntVal of the current GDR picture plus the value of recovery_poc_cnt, the picture picA is referred to as the recovery point picture. Otherwise, the first picture in output order that has PicOrderCntVal greater than the PicOrderCntVal of the current picture plus the value of recovery_poc_cnt is referred to as the recovery point picture. The recovery point picture shall not precede the current GDR picture in decoding order. The value of recovery_poc_cnt shall be in the range of 0 to MaxPicOrderCntLsb&#x2212;1, inclusive.</p><p id="p-0136" num="0178">When the current picture is a GDR picture, the variable RpPicOrderCntVal is derived as follows:</p><p id="p-0137" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>RpPicOrderCntVal=PicOrderCntVal+recovery_poc_cnt &#x2003;&#x2003;(81)<?in-line-formulae description="In-line Formulae" end="tail"?><ul id="ul0020" list-style="none">    <li id="ul0020-0001" num="0000">    <ul id="ul0021" list-style="none">        <li id="ul0021-0001" num="0179">NOTE 2&#x2014;When gdr_enabled_flag is equal to 1 and PicOrderCntVal of the current picture is greater than or equal to RpPicOrderCntVal of the associated GDR picture, the current and subsequent decoded pictures in output order are exact match to the corresponding pictures produced by starting the decoding process from the previous IRAP picture, when present, preceding the associated GDR picture in decoding order.</li>    </ul>    </li></ul></p><heading id="h-0018" level="2">3.8. Constraints on RPLs in VVC</heading><p id="p-0138" num="0180">In the latest VVC text (in JVET-Q2001-vE/v15), the constraints on RPLs in VVC are as follows (as part of VVC's clause 8.3.2 Decoding process for reference picture lists construction).</p><heading id="h-0019" level="2">8.3.2 Decoding Process for Reference Picture Lists Construction</heading><p id="p-0139" num="0181">For each i equal to 0 or 1, the first NumRefldxActive[i] entries in RefPicList[i] are referred to as the active entries in RefPicList[i], and the other entries in RefPicList[i] are referred to as the inactive entries in RefPicList[i].<ul id="ul0022" list-style="none">    <li id="ul0022-0001" num="0000">    <ul id="ul0023" list-style="none">        <li id="ul0023-0001" num="0182">NOTE 2&#x2014;It is possible that a particular picture is referred to by both an entry in RefPicList[0] and an entry in RefPicList[1]. It is also possible that a particular picture is referred to by more than one entry in RefPicList[0] or by more than one entry in RefPicList[1].</li>        <li id="ul0023-0002" num="0183">NOTE 3&#x2014;The active entries in RefPicList[0] and the active entries in RefPicList[1] collectively refer to all reference pictures that may be used for inter prediction of the current picture and one or more pictures that follow the current picture in decoding order. The inactive entries in RefPicList[0] and the inactive entries in RefPicList[1] collectively refer to all reference pictures that are not used for inter prediction of the current picture but may be used in inter prediction for one or more pictures that follow the current picture in decoding order.</li>        <li id="ul0023-0003" num="0184">NOTE 4&#x2014;There may be one or more entries in RefPicList[0] or RefPicList[1] that are equal to &#x201c;no reference picture&#x201d; because the corresponding pictures are not present in the DPB. Each inactive entry in RefPicList[0] or RefPicList[0] that is equal to &#x201c;no reference picture&#x201d; should be ignored. An unintentional picture loss should be inferred for each active entry in RefPicList[0] or RefPicList[1] that is equal to &#x201c;no reference picture&#x201d;.</li>    </ul>    </li></ul></p><p id="p-0140" num="0185">It is a requirement of bitstream conformance that the following constraints apply:<ul id="ul0024" list-style="none">    <li id="ul0024-0001" num="0000">    <ul id="ul0025" list-style="none">        <li id="ul0025-0001" num="0186">For each i equal to 0 or 1, num_ref_entries[i][RplsIdx[i]] shall not be less than NumRefIdxActive[i].</li>        <li id="ul0025-0002" num="0187">The picture referred to by each active entry in RefPicList[0] or RefPicList[1] shall be present in the DPB and shall have TemporalId less than or equal to that of the current picture.</li>        <li id="ul0025-0003" num="0188">The picture referred to by each entry in RefPicList[0] or RefPicList[1] shall not be the current picture and shall have non reference picture flag equal to 0.</li>        <li id="ul0025-0004" num="0189">A Short-Term Reference Picture (STRP) entry in RefPicList[0] or RefPicList[1] of a slice of a picture and a Long-Term Reference Picture (LTRP) entry in RefPicList[0] or RefPicList[1] of the same slice or a different slice of the same picture shall not refer to the same picture.</li>        <li id="ul0025-0005" num="0190">There shall be no LTRP entry in RefPicList[0] or RefPicList[1] for which the difference between the PicOrderCntVal of the current picture and the PicOrderCntVal of the picture referred to by the entry is greater than or equal to 2<sup>24</sup>.</li>        <li id="ul0025-0006" num="0191">Let setOfRefPics be the set of unique pictures referred to by all entries in RefPicList[0] that have the same nuh_layer_id as the current picture and all entries in RefPicList[1] that have the same nuh_layer_id as the current picture. The number of pictures in setOfRefPics shall be less than or equal to MaxDpbSize&#x2212;1, inclusive, where MaxDpbSize is as specified in clause A.4.2, and setOfRefPics shall be the same for all slices of a picture.</li>        <li id="ul0025-0007" num="0192">When the current slice has nal_unit_type equal to STSA_NUT, there shall be no active entry in RefPicList[0] or RefPicList[1] that has TemporalId equal to that of the current picture and nuh_layer_id equal to that of the current picture.</li>        <li id="ul0025-0008" num="0193">When the current picture is a picture that follows, in decoding order, an STSA picture that has TemporalId equal to that of the current picture and nuh_layer_id equal to that of the current picture, there shall be no picture that precedes the STSA picture in decoding order, has TemporalId equal to that of the current picture, and has nuh_layer_id equal to that of the current picture included as an active entry in RefPicList[0] or RefPicList[1].</li>        <li id="ul0025-0009" num="0194">When the current picture is a CRA picture, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes, in output order or decoding order, any preceding IRAP picture in decoding order (when present).</li>        <li id="ul0025-0010" num="0195">When the current picture is a trailing picture, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures for the IRAP picture associated with the current picture.</li>        <li id="ul0025-0011" num="0196">When the current picture is a trailing picture that follows, in both decoding order and output order, one or more leading pictures associated with the same IRAP picture, if any, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures for the IRAP picture associated with the current picture.</li>        <li id="ul0025-0012" num="0197">When the current picture is a recovery point picture or a picture that follows the recovery point picture in output order, there shall be no entry in RefPicList[0] or RefPicList[1] that contains a picture that was generated by the decoding process for generating unavailable reference pictures for the GDR picture of the recovery point picture.</li>        <li id="ul0025-0013" num="0198">When the current picture is a trailing picture, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        <li id="ul0025-0014" num="0199">When the current picture is a trailing picture that follows, in both decoding order and output order, one or more leading pictures associated with the same IRAP picture, if any, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        <li id="ul0025-0015" num="0200">When the current picture is a RADL picture, there shall be no active entry in RefPicList[0] or RefPicList[1] that is any of the following:        <ul id="ul0026" list-style="none">            <li id="ul0026-0001" num="0201">A RASL picture</li>            <li id="ul0026-0002" num="0202">A picture that was generated by the decoding process for generating unavailable reference pictures</li>            <li id="ul0026-0003" num="0203">A picture that precedes the associated IRAP picture in decoding order</li>        </ul>        </li>        <li id="ul0025-0016" num="0204">The picture referred to by each Inter-Layer Reference Picture (ILRP) entry in RefPicList[0] or RefPicList[1] of a slice of the current picture shall be in the same AU as the current picture.</li>        <li id="ul0025-0017" num="0205">The picture referred to by each ILRP entry in RefPicList[0] or RefPicList[1] of a slice of the current picture shall be present in the DPB and shall have nuh_layer_id less than that of the current picture.</li>        <li id="ul0025-0018" num="0206">Each ILRP entry in RefPicList[0] or RefPicList[1] of a slice shall be an active entry.</li>    </ul>    </li></ul></p><heading id="h-0020" level="1">4. TECHNICAL PROBLEMS ADDRESSED BY DISCLOSED TECHNICAL SOLUTIONS</heading><p id="p-0141" num="0207">The existing design in the latest VVC text (in JVET-Q2001-vE/v15) has the following problems:<ul id="ul0027" list-style="none">    <li id="ul0027-0001" num="0000">    <ul id="ul0028" list-style="none">        <li id="ul0028-0001" num="0208">1) The definition of associated IRAP picture should be updated such that the associated IRAP picture of a particular picture belongs to the same layer as the particular picture.</li>        <li id="ul0028-0002" num="0209">2) The current definition of trailing picture is as follows:        <ul id="ul0029" list-style="none">            <li id="ul0029-0001" num="0210">trailing picture: A non-IRAP picture that follows the associated IRAP picture in output order and is not an STSA picture.</li>            <li id="ul0029-0002" num="0211">Accordingly, there needs to be an IRAP picture present in the bitstream for a trailing picture to be present, and if a bitstream does not have an IRAP picture, the NAL unit type value TRAIL_NUT cannot be used. However, non-STSA pictures associated with an GDR picture need to use the NAL unit type value TRAIL_NUT.</li>        </ul>        </li>        <li id="ul0028-0003" num="0212">3) The existing constraint on the output order of pictures preceding an IRAP picture in decoding order needs to be specified to only apply to pictures within a layer.</li>        <li id="ul0028-0004" num="0213">4) Constraints on relative decoding order and output order among a GDR picture and picture preceding and succeeding in decoding order are missing.</li>        <li id="ul0028-0005" num="0214">5) The existing constraint on the decoding order of pictures associated with an IRAP picture and some non-leading pictures needs to be specified to only apply to pictures within a layer.</li>        <li id="ul0028-0006" num="0215">6) Currently, leading pictures, RADL pictures, and RASL pictures associated with a GDR picture are not supported.</li>        <li id="ul0028-0007" num="0216">7) The existing constraint on RPLs for a CRA picture needs to be specified to only apply to pictures within a layer.</li>        <li id="ul0028-0008" num="0217">8) For STSA pictures, trailing pictures associated with GDR pictures, and GDR pictures with NoOutputBeforeRecoveryFlag equal to 0, there lacks a constraint on active entries in the RPLs not to be generated by the decoding process for generating unavailable reference pictures.</li>        <li id="ul0028-0009" num="0218">9) For STSA pictures, IDR pictures, CRA pictures with NoOutputBeforeRecoveryFlag equal to 0, etc., there lacks a constraint on entries in the RPLs not to be generated by the decoding process for generating unavailable reference pictures.</li>        <li id="ul0028-0010" num="0219">10) For STSA pictures, there lacks a constraint on active entries in the RPLs not to precede precedes the associated IRAP picture in output order or decoding order.</li>        <li id="ul0028-0011" num="0220">11) For STSA pictures, there lacks a constraint on entries in the RPLs not to precede precedes the associated IRAP picture in output order or decoding order.</li>    </ul>    </li></ul></p><heading id="h-0021" level="1">5. EXAMPLES OF EMBODIMENTS AND TECHNICAL SOLUTIONS</heading><p id="p-0142" num="0221">To solve the above problems, and others, methods as summarized below are disclosed. The examples described herein should be considered as examples to explain the general concepts and should not be interpreted in a narrow way. Furthermore, these examples can be applied individually or combined in any manner.<ul id="ul0030" list-style="none">    <li id="ul0030-0001" num="0000">    <ul id="ul0031" list-style="none">        <li id="ul0031-0001" num="0222">1) To solve problem 1, the definition of associated IRAP picture is updated such that the associated IRAP picture of a particular picture belongs to the same layer as the particular picture.</li>        <li id="ul0031-0002" num="0223">2) To solve problem 2, the definition of trailing picture is updated, such that a trailing picture may also be associated with a GDR picture.        <ul id="ul0032" list-style="none">            <li id="ul0032-0001" num="0224">a. Furthermore, the definition of associated GDR picture is added, and the definition of associated IRAP picture is updated, such that each picture of a layer, except the first picture in the layer in the bitstream, is specified to be associated with the previous IRAP or GDR picture of the same layer in decoding order, whichever is closer.</li>            <li id="ul0032-0002" num="0225">b. Furthermore, a constraint is added to require that a trailing picture shall follow the associated IRAP or GDR picture in output order.</li>        </ul>        </li>        <li id="ul0031-0003" num="0226">3) To solve problem 3, the existing constraint on the output order of pictures preceding an IRAP picture in decoding order is updated such that it only imposes a restriction to pictures within a layer.        <ul id="ul0033" list-style="none">            <li id="ul0033-0001" num="0227">a. In one example, the constraint is specified as follows: Any picture, with nuh_layer_id equal to a particular value layerId, that precedes, in decoding order, an IRAP picture with nuh_layer_id equal to layerId shall precede, in output order, the IRAP picture and all its associated RADL pictures.</li>        </ul>        </li>        <li id="ul0031-0004" num="0228">4) To solve problem 4, add one or more of the following constraints:        <ul id="ul0034" list-style="none">            <li id="ul0034-0001" num="0229">a. A trailing picture shall follow the associated IRAP or GDR picture in output order.</li>            <li id="ul0034-0002" num="0230">b. Any picture, with nuh_layer_id equal to a particular value layerId, that precedes, in decoding order, a GDR picture with nuh_layer_id equal to layerId shall precede, in output order, the GDR picture and all its associated pictures.</li>        </ul>        </li>        <li id="ul0031-0005" num="0231">5) To solve problem 5, the existing constraint on the decoding order of pictures associated with an IRAP picture and some non-leading pictures is updated such that it only imposes a restriction on pictures within a layer.        <ul id="ul0035" list-style="none">            <li id="ul0035-0001" num="0232">a. In one example, the constraint is specified as follows: If field_seq_flag is equal to 0 and the current picture, with nuh_layer_id equal to a particular value layerId, is a leading picture associated with an IRAP picture, it shall precede, in decoding order, all non-leading pictures that are associated with the same IRAP picture. Otherwise, let picA and picB be the first and the last leading pictures, in decoding order, associated with an IRAP picture, respectively, there shall be at most one non-leading picture with nuh_layer_id equal to layerId preceding picA in decoding order, and there shall be no non-leading picture with nuh_layer_id equal to layerId between picA and picB in decoding order.</li>            <li id="ul0035-0002" num="0233">b. In another example, the constraint is specified as follows: If field_seq_flag is equal to 0 and the current picture is a leading picture associated with an IRAP picture, it shall precede, in decoding order, all non-leading pictures that are associated with the same IRAP picture. Otherwise, let picA and picB be the first and the last leading pictures, in decoding order, associated with an IRAP picture, respectively, there shall be at most one non-leading picture associated with the IRAP picture preceding picA in decoding order, and there shall be no non-leading picture associated with the IRAP picture between picA and picB in decoding order.</li>        </ul>        </li>        <li id="ul0031-0006" num="0234">6) To solve problem 6, leading pictures, RADL pictures, and RASL pictures associated with a GDR picture are defined and specified.        <ul id="ul0036" list-style="none">            <li id="ul0036-0001" num="0235">a. Leading pictures associated with a GDR picture are those pictures that follow the GDR picture in decoding order and precede it in output order.</li>            <li id="ul0036-0002" num="0236">b. RADL pictures associated with a GDR picture are the leading pictures associated with the GDR picture and having nal_unit_type equal to RADL NUT.</li>            <li id="ul0036-0003" num="0237">c. RASL pictures associated with a GDR picture are the leading pictures associated with the GDR picture and having nal_unit_type equal to RASL_NUT.</li>        </ul>        </li>        <li id="ul0031-0007" num="0238">7) To solve problem 7, the existing constraint on RPLs for a CRA picture is updated such that the it only imposes a restriction to pictures within a layer.        <ul id="ul0037" list-style="none">            <li id="ul0037-0001" num="0239">a. In one example, the constraint is specified as follows: When the current picture, with nuh_layer_id equal to a particular value layerId, is a CRA picture, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes, in output order or decoding order, any preceding IRAP picture with nuh_layer_id equal to layerId in decoding order (when present).</li>        </ul>        </li>        <li id="ul0031-0008" num="0240">8) To solve problem 8, the following constraint is specified:        <ul id="ul0038" list-style="none">            <li id="ul0038-0001" num="0241">When the current picture, with nuh_layer_id equal to a particular value layerId, is not a RASL picture associated with a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a GDR picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1 and nuh_layer_id equal to layerId, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures.</li>        </ul>        </li>        <li id="ul0031-0009" num="0242">9) To solve problem 9, the following constraint is specified:        <ul id="ul0039" list-style="none">            <li id="ul0039-0001" num="0243">When the current picture, with nuh_layer_id equal to a particular value layerId, is not a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a picture that precedes, in decoding order, the leading pictures associated with the same CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a leading picture associated with a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a GDR picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1 and nuh_layer_id equal to layerId, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures.</li>        </ul>        </li>        <li id="ul0031-0010" num="0244">10) To solve problem 10, the following constraint is specified:        <ul id="ul0040" list-style="none">            <li id="ul0040-0001" num="0245">When the current picture is associated with an IRAP picture and follows the IRAP picture in output order, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        </ul>        </li>        <li id="ul0031-0011" num="0246">11) To solve problem 11, the following constraint is specified:        <ul id="ul0041" list-style="none">            <li id="ul0041-0001" num="0247">When the current picture is associated with an IRAP picture, follows the IRAP picture in output order, and follows, in both decoding order and output order, the leading pictures associated with the same IRAP picture, if any, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        </ul>        </li>    </ul>    </li></ul></p><heading id="h-0022" level="1">6. EMBODIMENTS</heading><p id="p-0143" num="0248">Below are some example embodiments for some of the aspects summarized above in Section 5, which can be applied to the VVC specification. The changed texts are based on the latest VVC text in JVET-Q2001-vE/v15. Most relevant parts that have been added or modified are highlighted in bold italics, and some of the deleted parts are marked with double brackets (e.g., [[a]] denotes the deletion of the character &#x201c;a&#x201d;). There are some other changes that are editorial in nature and thus not highlighted.</p><heading id="h-0023" level="1">6.1. First Embodiment</heading><p id="p-0144" num="0249">This embodiment is for items 1, 2, 3, 4, 5, and 5a.</p><p id="p-0145" num="0250">3 Definitions<ul id="ul0042" list-style="none">    <li id="ul0042-0001" num="0000">    <ul id="ul0043" list-style="none">        <li id="ul0043-0001" num="0251">associated GDR picture (of a particular picture with a particular value of nuh_layer_id layerId): The previous GDR picture in decoding order with nuh_layer_id equal to layerId (when present) between which and the particular picture in decoding order there is no IRAP picture with nuh_layer_id equal to layerId.</li>        <li id="ul0043-0002" num="0252">associated IRAP picture (of a particular picture with a particular value of nuh_layer_id layerId): The previous IRAP picture in decoding order with nuh_layer_id equal to layerId (when present) between which and the particular picture in decoding order there is no GDR picture with nuh_layer_id equal to layerId.        <ul id="ul0044" list-style="none">            <li id="ul0044-0001" num="0253">output order: The order of pictures or subpictures within a CLVS indicated by increasing POC values, and for decoded pictures that are output output from DPB, this is the order in which the decoded pictures are output from the DPB.</li>            <li id="ul0044-0002" num="0254">trailing picture: A picture for which each VCL NAL unit has nal_unit_type equal to TRAIL_NUT.            <ul id="ul0045" list-style="none">                <li id="ul0045-0001" num="0255">NOTE&#x2014;Trailing pictures associated with an IRAP or GDR picture also follow the IRAP or GDR picture in decoding order. Pictures that follow the associated IRAP or GDR picture in output order and precede the associated IRAP or GDR picture in decoding order are not allowed.</li>            </ul>            </li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0146" num="0256">7.4.2.2 NAL Unit Header Semantics<ul id="ul0046" list-style="none">    <li id="ul0046-0001" num="0000">    <ul id="ul0047" list-style="none">        <li id="ul0047-0001" num="0257">A trailing picture shall follow the associated IRAP or GDR picture in output order.</li>        <li id="ul0047-0002" num="0258">When a picture is a leading picture of an IRAP picture, it shall be a RADL or RASL picture.</li>        <li id="ul0047-0003" num="0259">No RASL pictures shall be present in the bitstream that are associated with an IDR picture.</li>        <li id="ul0047-0004" num="0260">No RADL pictures shall be present in the bitstream that are associated with an IDR picture having nal_unit_type equal to IDR_N_LP.        <ul id="ul0048" list-style="none">            <li id="ul0048-0001" num="0261">NOTE 6&#x2014;It is possible to perform random access at the position of an IRAP PU by discarding all PUs before the IRAP PU (and to correctly decode the IRAP picture and all the subsequent non-RASL pictures in decoding order), provided each parameter set is available (either in the bitstream or by external means not specified in this Specification) when it is referenced.</li>        </ul>        </li>        <li id="ul0047-0005" num="0262">Any picture, with nuh_layer_id equal to a particular value layerId, that precedes, in decoding order, an IRAP picture with nuh_layer_id equal to layerId shall precede, in output order, the IRAP picture and all its associated RADL pictures.</li>        <li id="ul0047-0006" num="0263">Any picture, with nuh_layer_id equal to a particular value layerId, that precedes, in decoding order, a GDR picture with nuh_layer_id equal to layerId shall precede, in output order, the GDR picture and all its associated pictures.</li>        <li id="ul0047-0007" num="0264">Any RASL picture associated with a CRA picture shall precede any RADL picture associated with the CRA picture in output order.</li>        <li id="ul0047-0008" num="0265">Any RASL picture associated with a CRA picture shall follow, in output order, any IRAP picture that precedes the CRA picture in decoding order.</li>        <li id="ul0047-0009" num="0266">If field_seq_flag is equal to 0 and the current picture, with nuh_layer_id equal to a particular value layerId, is a leading picture associated with an IRAP picture, it shall precede, in decoding order, all non-leading pictures that are associated with the same IRAP picture. Otherwise, let picA and picB be the first and the last leading pictures, in decoding order, associated with an IRAP picture, respectively, there shall be at most one non-leading picture with nuh_layer_id equal to layerId preceding picA in decoding order, and there shall be no non-leading picture with nuh_layer_id equal to layerId between picA and picB in decoding order.</li>    </ul>    </li></ul></p><p id="p-0147" num="0267">7.4.3.7 Picture Header Structure Semantics</p><p id="p-0148" num="0268">recovery_poc_cnt specifies the recovery point of decoded pictures in output order. When the current picture is a GDR picture, the variable recoveryPointPocVal is derived as follows:</p><p id="p-0149" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>recoveryPointPocVal=PicOrderCntVal+recovery_poc_cnt &#x2003;&#x2003;(81)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0150" num="0269">If the current picture is a GDR picture, and there is a picture picA that follows the current GDR picture in decoding order in the CLVS that has PicOrderCntVal equal to recoveryPointPocVal, the picture picA is referred to as the recovery point picture. Otherwise, the first picture in output order that has PicOrderCntVal greater than recoveryPointPocVal in the CLVS is referred to as the recovery point picture. The recovery point picture shall not precede the current GDR picture in decoding order. The pictures that are associated with the current GDR picture and have PicOrderCntVal less than recoveryPointPocVal are referred to as the recovering pictures of the GDR picture. The value of recovery_poc_cnt shall be in the range of 0 to MaxPicOrderCntLsb&#x2212;1, inclusive.<ul id="ul0049" list-style="none">    <li id="ul0049-0001" num="0000">    <ul id="ul0050" list-style="none">        <li id="ul0050-0001" num="0270">NOTE 2&#x2014;When gdr_enabled_flag is equal to 1 and PicOrderCntVal of the current picture is greater than or equal to recoveryPointPocVal of the associated GDR picture, the current and subsequent decoded pictures in output order are exact match to the corresponding pictures produced by starting the decoding process from the previous IRAP picture, when present, preceding the associated GDR picture in decoding order.</li>    </ul>    </li></ul></p><heading id="h-0024" level="2">8.3.2 Decoding Process for Reference Picture Lists Construction</heading><p id="p-0151" num="0271">It is a requirement of bitstream conformance that the following constraints apply:<ul id="ul0051" list-style="none">    <li id="ul0051-0001" num="0000">    <ul id="ul0052" list-style="none">        <li id="ul0052-0001" num="0272">When the current picture, with nuh_layer_id equal to a particular value layerId, is a CRA picture, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes, in output order or decoding order, any preceding IRAP picture with nuh_layer_id equal to layerId in decoding order (when present).</li>        <li id="ul0052-0002" num="0273">When the current picture, with nuh_layer_id equal to a particular value layerId, is not a RASL picture associated with a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a GDR picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1 and nuh_layer_id equal to layerId, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures.</li>        <li id="ul0052-0003" num="0274">When the current picture, with nuh_layer_id equal to a particular value layerId, is not a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a picture that precedes, in decoding order, the leading pictures associated with the same CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a leading picture associated with a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a GDR picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1 and nuh_layer_id equal to layerId, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures.</li>        <li id="ul0052-0004" num="0275">When the current picture is associated with an IRAP picture and follows the IRAP picture in output order, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        <li id="ul0052-0005" num="0276">When the current picture is associated with an IRAP picture, follows the IRAP picture in output order, and follows, in both decoding order and output order, the leading pictures associated with the same IRAP picture, if any, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</li>        <li id="ul0052-0006" num="0277">When the current picture is a RADL picture, there shall be no active entry in RefPicList[0] or RefPicList[1] that is any of the following:        <ul id="ul0053" list-style="none">            <li id="ul0053-0001" num="0278">A RASL picture</li>            <li id="ul0053-0002" num="0279">A picture that precedes the associated IRAP picture in decoding order</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0152" num="0280"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing an example video processing system <b>1900</b> in which various techniques disclosed herein may be implemented. Various implementations may include some or all of the components of the system <b>1900</b>. The system <b>1900</b> may include input <b>1902</b> for receiving video content. The video content may be received in a raw or uncompressed format, e.g., 8 or 10 bit multi-component pixel values, or may be in a compressed or encoded format. The input <b>1902</b> may represent a network interface, a peripheral bus interface, or a storage interface. Examples of network interface include wired interfaces such as Ethernet, passive optical network (PON), etc. and wireless interfaces such as wireless fidelity (WI-FI) or cellular interfaces.</p><p id="p-0153" num="0281">The system <b>1900</b> may include a coding component <b>1904</b> that may implement the various coding or encoding methods described in the present document. The coding component <b>1904</b> may reduce the average bitrate of video from the input <b>1902</b> to the output of the coding component <b>1904</b> to produce a coded representation of the video. The coding techniques are therefore sometimes called video compression or video transcoding techniques. The output of the coding component <b>1904</b> may be either stored, or transmitted via a communication connected, as represented by the component <b>1906</b>. The stored or communicated bitstream (or coded) representation of the video received at the input <b>1902</b> may be used by the component <b>1908</b> for generating pixel values or displayable video that is sent to a display interface <b>1910</b>. The process of generating user-viewable video from the bitstream representation is sometimes called video decompression. Furthermore, while certain video processing operations are referred to as &#x201c;coding&#x201d; operations or tools, it will be appreciated that the coding tools or operations are used at an encoder and corresponding decoding tools or operations that reverse the results of the coding will be performed by a decoder.</p><p id="p-0154" num="0282">Examples of a peripheral bus interface or a display interface may include universal serial bus (USB) or high definition multimedia interface (HDMI) or Displayport, and so on. Examples of storage interfaces include serial advanced technology attachment (SATA), peripheral component interconnect (PCI), integrated drive electronics (IDE) interface, and the like. The techniques described in the present document may be embodied in various electronic devices such as mobile phones, laptops, smartphones or other devices that are capable of performing digital data processing and/or video display.</p><p id="p-0155" num="0283"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of a video processing apparatus <b>3600</b>. The apparatus <b>3600</b> may be used to implement one or more of the methods described herein. The apparatus <b>3600</b> may be embodied in a smartphone, tablet, computer, Internet of Things (IoT) receiver, and so on. The apparatus <b>3600</b> may include one or more processors <b>3602</b>, one or more memories <b>3604</b> and video processing hardware <b>3606</b>. The processor(s) <b>3602</b> may be configured to implement one or more methods described in the present document. The memory (memories) <b>3604</b> may be used for storing data and code used for implementing the methods and techniques described herein. The video processing hardware <b>3606</b> may be used to implement, in hardware circuitry, some techniques described in the present document.</p><p id="p-0156" num="0284"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram that illustrates an example video coding system <b>100</b> that may utilize the techniques of this disclosure.</p><p id="p-0157" num="0285">As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, video coding system <b>100</b> may include a source device <b>110</b> and a destination device <b>120</b>. Source device <b>110</b> generates encoded video data which may be referred to as a video encoding device. Destination device <b>120</b> may decode the encoded video data generated by source device <b>110</b> which may be referred to as a video decoding device.</p><p id="p-0158" num="0286">Source device <b>110</b> may include a video source <b>112</b>, a video encoder <b>114</b>, and an input/output (I/O) interface <b>116</b>.</p><p id="p-0159" num="0287">Video source <b>112</b> may include a source such as a video capture device, an interface to receive video data from a video content provider, and/or a computer graphics system for generating video data, or a combination of such sources. The video data may comprise one or more pictures. Video encoder <b>114</b> encodes the video data from video source <b>112</b> to generate a bitstream. The bitstream may include a sequence of bits that form a coded representation of the video data. The bitstream may include coded pictures and associated data. The coded picture is a coded representation of a picture. The associated data may include sequence parameter sets, picture parameter sets, and other syntax structures. I/O interface <b>116</b> may include a modulator/demodulator (modem) and/or a transmitter. The encoded video data may be transmitted directly to destination device <b>120</b> via I/O interface <b>116</b> through network <b>130</b><i>a. </i>The encoded video data may also be stored onto a storage medium/server <b>130</b><i>b </i>for access by destination device <b>120</b>.</p><p id="p-0160" num="0288">Destination device <b>120</b> may include an I/O interface <b>126</b>, a video decoder <b>124</b>, and a display device <b>122</b>.</p><p id="p-0161" num="0289">I/O interface <b>126</b> may include a receiver and/or a modem. I/O interface <b>126</b> may acquire encoded video data from the source device <b>110</b> or the storage medium/server <b>130</b><i>b. </i>Video decoder <b>124</b> may decode the encoded video data. Display device <b>122</b> may display the decoded video data to a user. Display device <b>122</b> may be integrated with the destination device <b>120</b>, or may be external to destination device <b>120</b> which be configured to interface with an external display device.</p><p id="p-0162" num="0290">Video encoder <b>114</b> and video decoder <b>124</b> may operate according to a video compression standard, such as the High Efficiency Video Coding (HEVC) standard, Versatile Video Coding (VVC) standard and other current and/or further standards.</p><p id="p-0163" num="0291"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example of video encoder <b>200</b>, which may be video encoder <b>114</b> in the system <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0164" num="0292">Video encoder <b>200</b> may be configured to perform any or all of the techniques of this disclosure. In the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, video encoder <b>200</b> includes a plurality of functional components. The techniques described in this disclosure may be shared among the various components of video encoder <b>200</b>. In some examples, a processor may be configured to perform any or all of the techniques described in this disclosure.</p><p id="p-0165" num="0293">The functional components of video encoder <b>200</b> may include a partition unit <b>201</b>, a prediction unit <b>202</b> which may include a mode select unit <b>203</b>, a motion estimation unit <b>204</b>, a motion compensation unit <b>205</b> and an intra prediction unit <b>206</b>, a residual generation unit <b>207</b>, a transform unit <b>208</b>, a quantization unit <b>209</b>, an inverse quantization unit <b>210</b>, an inverse transform unit <b>211</b>, a reconstruction unit <b>212</b>, a buffer <b>213</b>, and an entropy encoding unit <b>214</b>.</p><p id="p-0166" num="0294">In other examples, video encoder <b>200</b> may include more, fewer, or different functional components. In an example, prediction unit <b>202</b> may include an intra block copy (IBC) unit. The IBC unit may perform prediction in an IBC mode in which at least one reference picture is a picture where the current video block is located.</p><p id="p-0167" num="0295">Furthermore, some components, such as motion estimation unit <b>204</b> and motion compensation unit <b>205</b> may be highly integrated, but are represented in the example of <figref idref="DRAWINGS">FIG. <b>5</b></figref> separately for purposes of explanation.</p><p id="p-0168" num="0296">Partition unit <b>201</b> may partition a picture into one or more video blocks. Video encoder <b>200</b> and video decoder <b>300</b> may support various video block sizes.</p><p id="p-0169" num="0297">Mode select unit <b>203</b> may select one of the coding modes, intra or inter, e.g., based on error results, and provide the resulting intra- or inter-coded block to a residual generation unit <b>207</b> to generate residual block data and to a reconstruction unit <b>212</b> to reconstruct the encoded block for use as a reference picture. In some example, Mode select unit <b>203</b> may select a combination of intra and inter prediction (CIIP) mode in which the prediction is based on an inter prediction signal and an intra prediction signal. Mode select unit <b>203</b> may also select a resolution for a motion vector (e.g., a sub-pixel or integer pixel precision) for the block in the case of inter-prediction.</p><p id="p-0170" num="0298">To perform inter prediction on a current video block, motion estimation unit <b>204</b> may generate motion information for the current video block by comparing one or more reference frames from buffer <b>213</b> to the current video block. Motion compensation unit <b>205</b> may determine a predicted video block for the current video block based on the motion information and decoded samples of pictures from buffer <b>213</b> other than the picture associated with the current video block.</p><p id="p-0171" num="0299">Motion estimation unit <b>204</b> and motion compensation unit <b>205</b> may perform different operations for a current video block, for example, depending on whether the current video block is in an I slice, a P slice, or a B slice.</p><p id="p-0172" num="0300">In some examples, motion estimation unit <b>204</b> may perform uni-directional prediction for the current video block, and motion estimation unit <b>204</b> may search reference pictures of list <b>0</b> or list <b>1</b> for a reference video block for the current video block. Motion estimation unit <b>204</b> may then generate a reference index that indicates the reference picture in list <b>0</b> or list <b>1</b> that contains the reference video block and a motion vector that indicates a spatial displacement between the current video block and the reference video block. Motion estimation unit <b>204</b> may output the reference index, a prediction direction indicator, and the motion vector as the motion information of the current video block. Motion compensation unit <b>205</b> may generate the predicted video block of the current block based on the reference video block indicated by the motion information of the current video block.</p><p id="p-0173" num="0301">In other examples, motion estimation unit <b>204</b> may perform bi-directional prediction for the current video block, motion estimation unit <b>204</b> may search the reference pictures in list <b>0</b> for a reference video block for the current video block and may also search the reference pictures in list <b>1</b> for another reference video block for the current video block. Motion estimation unit <b>204</b> may then generate reference indexes that indicate the reference pictures in list <b>0</b> and list <b>1</b> containing the reference video blocks and motion vectors that indicate spatial displacements between the reference video blocks and the current video block. Motion estimation unit <b>204</b> may output the reference indexes and the motion vectors of the current video block as the motion information of the current video block. Motion compensation unit <b>205</b> may generate the predicted video block of the current video block based on the reference video blocks indicated by the motion information of the current video block.</p><p id="p-0174" num="0302">In some examples, motion estimation unit <b>204</b> may output a full set of motion information for decoding processing of a decoder.</p><p id="p-0175" num="0303">In some examples, motion estimation unit <b>204</b> may do not output a full set of motion information for the current video. Rather, motion estimation unit <b>204</b> may signal the motion information of the current video block with reference to the motion information of another video block. For example, motion estimation unit <b>204</b> may determine that the motion information of the current video block is sufficiently similar to the motion information of a neighboring video block.</p><p id="p-0176" num="0304">In one example, motion estimation unit <b>204</b> may indicate, in a syntax structure associated with the current video block, a value that indicates to the video decoder <b>300</b> that the current video block has the same motion information as another video block.</p><p id="p-0177" num="0305">In another example, motion estimation unit <b>204</b> may identify, in a syntax structure associated with the current video block, another video block and a motion vector difference (MVD). The motion vector difference indicates a difference between the motion vector of the current video block and the motion vector of the indicated video block. The video decoder <b>300</b> may use the motion vector of the indicated video block and the motion vector difference to determine the motion vector of the current video block.</p><p id="p-0178" num="0306">As discussed above, video encoder <b>200</b> may predictively signal the motion vector. Two examples of predictive signaling techniques that may be implemented by video encoder <b>200</b> include advanced motion vector prediction (AMVP) and merge mode signaling.</p><p id="p-0179" num="0307">Intra prediction unit <b>206</b> may perform intra prediction on the current video block. When intra prediction unit <b>206</b> performs intra prediction on the current video block, intra prediction unit <b>206</b> may generate prediction data for the current video block based on decoded samples of other video blocks in the same picture. The prediction data for the current video block may include a predicted video block and various syntax elements.</p><p id="p-0180" num="0308">Residual generation unit <b>207</b> may generate residual data for the current video block by subtracting (e.g., indicated by the minus sign) the predicted video block(s) of the current video block from the current video block. The residual data of the current video block may include residual video blocks that correspond to different sample components of the samples in the current video block.</p><p id="p-0181" num="0309">In other examples, there may be no residual data for the current video block for the current video block, for example in a skip mode, and residual generation unit <b>207</b> may not perform the subtracting operation.</p><p id="p-0182" num="0310">Transform unit <b>208</b> may generate one or more transform coefficient video blocks for the current video block by applying one or more transforms to a residual video block associated with the current video block.</p><p id="p-0183" num="0311">After transform unit <b>208</b> generates a transform coefficient video block associated with the current video block, quantization unit <b>209</b> may quantize the transform coefficient video block associated with the current video block based on one or more quantization parameter (QP) values associated with the current video block.</p><p id="p-0184" num="0312">Inverse quantization unit <b>210</b> and inverse transform unit <b>211</b> may apply inverse quantization and inverse transforms to the transform coefficient video block, respectively, to reconstruct a residual video block from the transform coefficient video block. Reconstruction unit <b>212</b> may add the reconstructed residual video block to corresponding samples from one or more predicted video blocks generated by the prediction unit <b>202</b> to produce a reconstructed video block associated with the current block for storage in the buffer <b>213</b>.</p><p id="p-0185" num="0313">After reconstruction unit <b>212</b> reconstructs the video block, loop filtering operation may be performed reduce video blocking artifacts in the video block.</p><p id="p-0186" num="0314">Entropy encoding unit <b>214</b> may receive data from other functional components of the video encoder <b>200</b>. When entropy encoding unit <b>214</b> receives the data, entropy encoding unit <b>214</b> may perform one or more entropy encoding operations to generate entropy encoded data and output a bitstream that includes the entropy encoded data.</p><p id="p-0187" num="0315"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example of video decoder <b>300</b> which may be video decoder <b>114</b> in the system <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0188" num="0316">The video decoder <b>300</b> may be configured to perform any or all of the techniques of this disclosure. In the example of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the video decoder <b>300</b> includes a plurality of functional components. The techniques described in this disclosure may be shared among the various components of the video decoder <b>300</b>. In some examples, a processor may be configured to perform any or all of the techniques described in this disclosure.</p><p id="p-0189" num="0317">In the example of <figref idref="DRAWINGS">FIG. <b>6</b></figref>, video decoder <b>300</b> includes an entropy decoding unit <b>301</b>, a motion compensation unit <b>302</b>, an intra prediction unit <b>303</b>, an inverse quantization unit <b>304</b>, an inverse transformation unit <b>305</b>, and a reconstruction unit <b>306</b> and a buffer <b>307</b>. Video decoder <b>300</b> may, in some examples, perform a decoding pass generally reciprocal to the encoding pass described with respect to video encoder <b>200</b> (<figref idref="DRAWINGS">FIG. <b>5</b></figref>).</p><p id="p-0190" num="0318">Entropy decoding unit <b>301</b> may retrieve an encoded bitstream. The encoded bitstream may include entropy coded video data (e.g., encoded blocks of video data). Entropy decoding unit <b>301</b> may decode the entropy coded video data, and from the entropy decoded video data, motion compensation unit <b>302</b> may determine motion information including motion vectors, motion vector precision, reference picture list indexes, and other motion information. Motion compensation unit <b>302</b> may, for example, determine such information by performing the AMVP and merge mode.</p><p id="p-0191" num="0319">Motion compensation unit <b>302</b> may produce motion compensated blocks, possibly performing interpolation based on interpolation filters. Identifiers for interpolation filters to be used with sub-pixel precision may be included in the syntax elements.</p><p id="p-0192" num="0320">Motion compensation unit <b>302</b> may use interpolation filters as used by video encoder <b>200</b> during encoding of the video block to calculate interpolated values for sub-integer pixels of a reference block. Motion compensation unit <b>302</b> may determine the interpolation filters used by video encoder <b>200</b> according to received syntax information and use the interpolation filters to produce predictive blocks.</p><p id="p-0193" num="0321">Motion compensation unit <b>302</b> may uses some of the syntax information to determine sizes of blocks used to encode frame(s) and/or slice(s) of the encoded video sequence, partition information that describes how each macroblock of a picture of the encoded video sequence is partitioned, modes indicating how each partition is encoded, one or more reference frames (and reference frame lists) for each inter-encoded block, and other information to decode the encoded video sequence.</p><p id="p-0194" num="0322">Intra prediction unit <b>303</b> may use intra prediction modes for example received in the bitstream to form a prediction block from spatially adjacent blocks. Inverse quantization unit <b>304</b> inverse quantizes, i.e., de-quantizes, the quantized video block coefficients provided in the bitstream and decoded by entropy decoding unit <b>301</b>. Inverse transform unit <b>305</b> applies an inverse transform.</p><p id="p-0195" num="0323">Reconstruction unit <b>306</b> may sum the residual blocks with the corresponding prediction blocks generated by motion compensation unit <b>302</b> or intra prediction unit <b>303</b> to form decoded blocks. If desired, a deblocking filter may also be applied to filter the decoded blocks in order to remove blockiness artifacts. The decoded video blocks are then stored in buffer <b>307</b>, which provides reference blocks for subsequent motion compensation/intra prediction and also produces decoded video for presentation on a display device.</p><p id="p-0196" num="0324">A listing of examples preferred by some embodiments is provided next.</p><p id="p-0197" num="0325">The first set of clauses show example embodiments of techniques discussed in the previous section. The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>1</b>).</p><p id="p-0198" num="0326">1. A video processing method (e.g., method <b>3000</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>), comprising: performing (<b>3002</b>) a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video; wherein the coded representation is organized according to a rule that specifies that a first video picture that is an intra random access point picture of a second picture and the second picture are constrained to belong to a same video layer.</p><p id="p-0199" num="0327">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>2</b>).</p><p id="p-0200" num="0328">2. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies that a trailing picture in the coded representation following a first type of picture that is an intra random access point is also permitted to be associated with a second type of picture that includes a gradual decoding refresh picture.</p><p id="p-0201" num="0329">3. The method of clause 2, wherein the format rule further specifies that, for each layer, each picture of the layer, except the first picture in the layer in the bitstream, is specified to be associated with a closer one of a previous intra random access point or a gradual decoder refresh picture of the same layer in decoding order.</p><p id="p-0202" num="0330">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>3</b>).</p><p id="p-0203" num="0331">4. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies a constraint for an output order of pictures preceding an intra random access point are is in a decoding order such that the output order is applicable only to pictures in a same video layer.</p><p id="p-0204" num="0332">5. The method of clause 1, wherein the constraint specifies that any picture, with a nuh_layer_id equal to a particular value layerId, that precedes, in a decoding order, an intra random access point picture with nuh_layer_id equal to layerId is required to precede, in an output order, the intra random access point picture and all associated random access decodable leading pictures.</p><p id="p-0205" num="0333">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>4</b>).</p><p id="p-0206" num="0334">6. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the coded representation conforms to a format rule that specifies a constraint that (1) a trailing picture must follow an associated intra random access point picture (IRAP) or a gradual decoder refresh (GDR) picture in an output order, or (2) a picture having a same layer id as that of the GDR picture must precede, in the output order, the GDR picture and all associated pictures of the GDR picture.</p><p id="p-0207" num="0335">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>5</b>).</p><p id="p-0208" num="0336">7. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that an order constraint is applicable to a picture, an intra random access point (IRAP) picture and a non-leading picture if and only if the picture, the IRAP picture and the non-leading picture are in a same layer, wherein the rule is one of:</p><p id="p-0209" num="0337">(a) a first rule specifying a value of a field sequence and a decoding order, or</p><p id="p-0210" num="0338">(b) an order of leading and/or non-leading pictures of a layer.</p><p id="p-0211" num="0339">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>6</b>).</p><p id="p-0212" num="0340">8. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies an order of a leading picture, a random access decodable leading (RADL) picture and a random access skipped leading (RASL) picture associated with a gradual decoding refresh (GDR) picture.</p><p id="p-0213" num="0341">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>7</b>).</p><p id="p-0214" num="0342">9. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies that a constraint for a reference picture list for a clean random access picture is limited to a layer.</p><p id="p-0215" num="0343">10. The method of clause 9, wherein the constraint specifies that, for a layer having the clean random access picture, a preceding intra random access point picture in a decoding or an output order are not referred to by an entry in the reference picture list.</p><p id="p-0216" num="0344">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>8</b>).</p><p id="p-0217" num="0345">11. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule that specifies a condition under which a current picture is allowed to refer to an entry in a reference picture list that was generated by a decoding process for generating an unavailable reference picture.</p><p id="p-0218" num="0346">12. The method of clause 11, wherein the condition is that the current picture is a random access skipped leading, RASL, picture associated with a clean random access, CRA, picture with NoOutputBeforeRecoveryFlag equal to 1, a gradual decoder refresh, GDR, picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1.</p><p id="p-0219" num="0347">The following clauses show example embodiments of techniques discussed in the previous section (e.g., item <b>9</b>, <b>10</b>, <b>11</b>).</p><p id="p-0220" num="0348">13. A video processing method, comprising: performing a conversion between a video having one or more video layers comprising one or more video pictures and a coded representation of the video, wherein the conversion conforms to a rule of order between a current picture and a reference picture list corresponding to the current picture.</p><p id="p-0221" num="0349">14. The method of clause 13, wherein the rule specifies that when a current picture, with nuh_layer_id equal to a particular value layerId, is not a clean random access (CRA) picture with NoOutputBeforeRecoveryFlag equal to 1, a picture that precedes, in decoding order, the leading pictures associated with the same CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a leading picture associated with a CRA picture with NoOutputBeforeRecoveryFlag equal to 1, a gradual decoder refresh, GDR, picture with NoOutputBeforeRecoveryFlag equal to 1, or a recovering picture of a GDR picture with NoOutputBeforeRecoveryFlag equal to 1 and nuh_layer_id equal to layerId, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that was generated by the decoding process for generating unavailable reference pictures.</p><p id="p-0222" num="0350">15. The method of clause 13, wherein the rule specifies that when the current picture is associated with an intra random access point, IRAP, picture and follows the IRAP picture in output order, there shall be no picture referred to by an active entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</p><p id="p-0223" num="0351">16. The method of clause 13, wherein the rule specifies that, when the current picture is associated with an intra random access point, IRAP, picture, follows the IRAP picture in output order, and follows, in both decoding order and output order, the leading pictures associated with the same IRAP picture, if any, there shall be no picture referred to by an entry in RefPicList[0] or RefPicList[1] that precedes the associated IRAP picture in output order or decoding order.</p><p id="p-0224" num="0352">17. The method of any of clauses 1 to 16, wherein the conversion comprises encoding the video into the coded representation.</p><p id="p-0225" num="0353">18. The method of any of clauses 1 to 16, wherein the conversion comprises decoding the coded representation to generate pixel values of the video.</p><p id="p-0226" num="0354">19. A video decoding apparatus comprising a processor configured to implement a method recited in one or more of clauses 1 to 18.</p><p id="p-0227" num="0355">20. A video encoding apparatus comprising a processor configured to implement a method recited in one or more of clauses 1 to 18.</p><p id="p-0228" num="0356">21. A computer program product having computer code stored thereon, the code, when executed by a processor, causes the processor to implement a method recited in any of clauses 1 to 18.</p><p id="p-0229" num="0357">22. A method, apparatus or system described in the present document.</p><p id="p-0230" num="0358">The second set of clauses show example embodiments of techniques discussed in the previous section (e.g., items <b>1</b>-<b>7</b>).</p><p id="p-0231" num="0359">1. A method of video processing (e.g., method <b>710</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref>), comprising: performing <b>712</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a first video picture that is an associated intra random access point picture of a second picture and the second picture are constrained to belong to a same video layer.</p><p id="p-0232" num="0360">2. The method of clause 1, wherein, between the first video picture and the second picture in decoding order, there is no gradual decoding refresh picture in the same video layer.</p><p id="p-0233" num="0361">3. The method of clause 1, wherein the first video picture and the second picture have a same identifier of a layer to which a video coding layer network abstraction layer unit belongs or a same identifier of a layer to which a non-video coding layer network abstraction layer unit applies.</p><p id="p-0234" num="0362">4. The method of any of clauses 1-3, wherein, between the first video picture and the second picture in decoding order, there is no gradual decoding refresh picture with the same identifier.</p><p id="p-0235" num="0363">5. The method of clause 1, wherein the format rule further specifies that a trailing picture follows an associated intra random access point picture or a gradual decoding refresh picture in an output order.</p><p id="p-0236" num="0364">6. A method of video processing (e.g., method <b>720</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>), comprising: performing <b>722</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a trailing picture in the bitstream is permitted to be associated with a gradual decoding refresh picture.</p><p id="p-0237" num="0365">7. The method of clause 6, wherein the trailing picture is a picture for which each video coding layer network abstraction layer unit has a trail network abstraction layer unit type.</p><p id="p-0238" num="0366">8. The method of clause 6 or 7, wherein the trailing picture is permitted to be associated with an intra random access point picture.</p><p id="p-0239" num="0367">9. The method of any of clauses 6-8, wherein the trailing picture associated with an intra random access point picture or a gradual decoding refresh picture follows the intra random access point picture or the gradual decoding refresh picture in decoding order.</p><p id="p-0240" num="0368">10. The method any of clauses 6-8, wherein pictures that follow the associated intra random access point picture in output order and precede the associated intra random access point picture in decoding order are not allowed.</p><p id="p-0241" num="0369">11. The method of clause 6, wherein the format rule further specifies that, for each layer, each picture of the layer, except the first picture in the layer in the bitstream, is specified to be associated with a closer one of a previous intra random access point or a gradual decoder refresh picture of the same layer in decoding order.</p><p id="p-0242" num="0370">12. The method of clause 6 or 11, wherein the trailing picture is required to follow the associated intra random access point or gradual decoder refresh picture in output order.</p><p id="p-0243" num="0371">13. A method of video processing (e.g., method <b>730</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>C</figref>), comprising: performing <b>732</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies that a constraint for an output order of pictures preceding an intra random access point in a decoding order is applicable to pictures in a same video layer.</p><p id="p-0244" num="0372">14. The method of clause 13, wherein the constraint specifies that any picture having a NAL (network abstraction layer) unit header layer identifier equal to a particular value and preceding, in a decoding order, an intra random access point picture with the NAL unit header layer identifier equal to the particular value is required to precede, in an output order, the intra random access point picture and all associated random access decodable leading pictures.</p><p id="p-0245" num="0373">15. The method of clause 14, wherein the NAL (network abstraction layer) unit header layer identifier is nuh_layer_id.</p><p id="p-0246" num="0374">16. The method of clause 14, wherein the NAL (network abstraction layer) unit header layer identifier specifies the identifier of a layer to which a video coding layer network abstraction layer unit belongs or the identifier of a layer to which a non-video coding layer network abstraction layer unit applies.</p><p id="p-0247" num="0375">17. A method of video processing (e.g., method <b>740</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>D</figref>), comprising: performing <b>742</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a format rule, and wherein the format rule specifies a constraint that (1) a trailing picture follows an associated intra random access point picture or a gradual decoder refresh picture in an output order, or (2) a picture having a same NAL (network abstraction layer) unit header layer identifier as that of the gradual decoder refresh picture precedes, in the output order, the gradual decoder refresh picture and all associated pictures of the gradual decoder refresh picture.</p><p id="p-0248" num="0376">18. A method of video processing (e.g., method <b>750</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>E</figref>), comprising: performing <b>752</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies to apply a constraint on a decoding order of a picture associated with an intra random access point picture and a non-leading picture if and only if the picture, the intra random access point picture and the non-leading picture are in a same layer.</p><p id="p-0249" num="0377">19. The method of clause 18, wherein the constraint specifies that in case that a value of a field sequence flag is equal to 0 and the picture with a NAL (network abstraction layer) unit header layer identifier equal to a particular value is a leading picture associated with the intra random access point picture, the picture precedes, in the decoding order, all non-leading pictures that are associated with the intra random access point picture.</p><p id="p-0250" num="0378">20. The method of clause 19, wherein the value of the field sequence flag that is equal to 0 indicates that a coded layer video sequence conveys pictures that represent frames.</p><p id="p-0251" num="0379">21. The method of clause 18, wherein the constraint specifies that in case that a value of a field sequence flag is equal to 0 and the picture is a leading picture associated with the intra random access point picture, the picture precedes, in the decoding order, all non-leading pictures that are associated with the intra random access point picture.</p><p id="p-0252" num="0380">22. A method of video processing (e.g., method <b>760</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>F</figref>), comprising: performing <b>762</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies an order of a leading picture, a random access decodable leading picture and a random access skipped leading picture associated with a gradual decoding refresh picture.</p><p id="p-0253" num="0381">23. The method of clause 22, wherein the leading picture associated with the gradual decoding refresh picture follows the gradual decoding refresh picture in decoding order and precedes the gradual decoding refresh picture in output order.</p><p id="p-0254" num="0382">24. The method of clause 22, wherein the random access decodable leading pictures associated with the gradual decoding refresh picture is the leading picture associated with the gradual decoding refresh picture and has a NAL (network abstraction layer) unit type corresponding to a coded slice of the random access decodable leading picture.</p><p id="p-0255" num="0383">25. The method of clause 22, wherein the random access decodable leading picture associated with the gradual decoding refresh picture is the leading picture associated with the gradual decoding refresh picture and has a NAL (network abstraction layer) unit type corresponding to a coded slice of the random access decodable leading picture.</p><p id="p-0256" num="0384">26. A method of video processing (e.g., method <b>770</b> as shown in <figref idref="DRAWINGS">FIG. <b>7</b>G</figref>), comprising: performing <b>772</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, wherein the rule specifies that a constraint for a reference picture list for a slice of a clean random access picture is limited to a layer.</p><p id="p-0257" num="0385">27. The method of clause 26, wherein the constraint specifies that, for a layer having the clean random access picture, a preceding intra random access point picture in a decoding or an output order is not referred to by an entry in the reference picture list.</p><p id="p-0258" num="0386">28. The method of any of clauses 1 to 27, wherein the conversion includes encoding the video into the bitstream.</p><p id="p-0259" num="0387">29. The method of any of clauses 1 to 27, wherein the conversion includes decoding the video from the bitstream.</p><p id="p-0260" num="0388">30. The method of clauses 1 to 27, wherein the conversion includes generating the bitstream from the video, and the method further comprises: storing the bitstream in a non-transitory computer-readable recording medium.</p><p id="p-0261" num="0389">31. A video processing apparatus comprising a processor configured to implement a method recited in any one or more of clauses 1 to 30.</p><p id="p-0262" num="0390">32. A method of storing a bitstream of a video, comprising, a method recited in any one of clauses 1 to 30, and further including storing the bitstream to a non-transitory computer-readable recording medium.</p><p id="p-0263" num="0391">33. A computer readable medium storing program code that, when executed, causes a processor to implement a method recited in any one or more of clauses 1 to 30.</p><p id="p-0264" num="0392">34. A computer readable medium that stores a bitstream generated according to any of the above described methods.</p><p id="p-0265" num="0393">35. A video processing apparatus for storing a bitstream representation, wherein the video processing apparatus is configured to implement a method recited in any one or more of clauses 1 to 30.</p><p id="p-0266" num="0394">The third set of clauses show example embodiments of techniques discussed in the previous section (e.g., items <b>8</b> and <b>9</b>).</p><p id="p-0267" num="0395">1. A video processing method (e.g., method <b>810</b> as shown in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref>), comprising: performing <b>810</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an active entry in a reference picture list of a current slice of a current picture.</p><p id="p-0268" num="0396">2. The method of clause 1, wherein the active entry corresponds to an entry that is available for being used as a reference index in an inter prediction of the current picture.</p><p id="p-0269" num="0397">3. The method of clause 1, wherein the condition is that the current picture with a NAL (network abstraction layer) unit header layer identifier equal to a particular value is not a random access skipped leading picture associated with a clean random access picture with a variable indicating no output before recovery equal to 1, a gradual decoder refresh picture with the variable equal to 1 or a recovering picture of a gradual decoder refresh picture with the variable equal to 1 and the NAL unit header layer identifier equal to the particular value.</p><p id="p-0270" num="0398">4. A video processing method (e.g., method <b>820</b> as shown in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>), comprising: performing <b>822</b> a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</p><p id="p-0271" num="0399">5. The method of clause 4, wherein the condition is that the current picture with a NAL (network abstraction layer) unit header layer identifier equal to a particular value is not a clean random access picture with a variable indicating no output before recovery equal to 1, a picture that precedes, in decoding order, a leading picture associated with the clean random access picture with the variable equal to 1, a gradual decoder refresh picture with the variable equal to 1, or a recovering picture of a gradual decoder refresh picture with the variable equal to 1 and the NAL unit header layer identifier equal to the particular value.</p><p id="p-0272" num="0400">6. The method of any of clauses 1 to 5, wherein the conversion includes encoding the video into the bitstream.</p><p id="p-0273" num="0401">7. The method of any of clauses 1 to 5, wherein the conversion includes decoding the video from the bitstream.</p><p id="p-0274" num="0402">8. The method of any of clauses 1 to 5, wherein the conversion includes generating the bitstream from the video, and the method further comprises: storing the bitstream in a non-transitory computer-readable recording medium.</p><p id="p-0275" num="0403">9. A video processing apparatus comprising a processor configured to implement a method recited in any one or more of clauses 1 to 8.</p><p id="p-0276" num="0404">10. A method of storing a bitstream of a video, comprising, a method recited in any one of clauses 1 to 8, and further including storing the bitstream to a non-transitory computer-readable recording medium.</p><p id="p-0277" num="0405">11. A computer readable medium storing program code that, when executed, causes a processor to implement a method recited in any one or more of clauses 1 to 8.</p><p id="p-0278" num="0406">12. A computer readable medium that stores a bitstream generated according to any of the above described methods.</p><p id="p-0279" num="0407">13. A video processing apparatus for storing a bitstream representation, wherein the video processing apparatus is configured to implement a method recited in any one or more of clauses 1 to 12.</p><p id="p-0280" num="0408">The fourth set of clauses show example embodiments of techniques discussed in the previous section (e.g., items <b>10</b> and <b>11</b>).</p><p id="p-0281" num="0409">1. A method of video processing (e.g., method <b>910</b> as shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref>), comprising: performing <b>912</b> a conversion between a video having one or more video layers comprising a current picture comprising a current slice and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which a reference picture list for the current slice is disallowed to have an active entry that refers to a picture that precedes, in a decoding order or an output order, an intra random access point picture associated with the current picture.</p><p id="p-0282" num="0410">2. The method of clause 1, wherein the active entry corresponds to an entry that is available for being used as a reference index in an inter prediction of the current picture.</p><p id="p-0283" num="0411">3. The method of clause 1 or 2, wherein the rule specifies the condition under which the reference picture list for the current picture is disallowed to have the active entry that refers to the picture that precedes, in the decoding order, the intra random access point picture associated with the current picture.</p><p id="p-0284" num="0412">4. The method of any of clauses 1 to 3, wherein the rule specifies the condition under which the reference picture list for the current picture is disallowed to have the active entry that refers to the picture that precedes, in the output order, the intra random access point picture associated with the current picture.</p><p id="p-0285" num="0413">5. The method of any of clauses 1 to 4, wherein the condition is that the current picture is associated with the intra random access point picture and follows the intra random access point picture in the decoding order and/or the output order.</p><p id="p-0286" num="0414">6. The method of any of clauses 1 to 4, wherein the condition is that the current picture follows the intra random access point picture having a same value of an identifier of the layer to which a video coding layer network abstraction layer unit belongs or an identifier of a layer to which a non-video coding layer network abstraction layer unit applies in the decoding order and/or the output order.</p><p id="p-0287" num="0415">7. A method of video processing (e.g., method <b>920</b> as shown in <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>), comprising: performing <b>922</b> a conversion between a video having one or more video layers comprising a current picture comprising a current slice and a bitstream of the video according to a rule, and wherein the rule specifies a condition under which a reference picture list for the current slice is disallowed to have an entry that refers to a picture that precedes, in a decoding order or an output order, an intra random access point picture associated with the current picture.</p><p id="p-0288" num="0416">8. The method of clause 7, wherein the rule specifies the condition under which the reference picture list for the current picture is disallowed to have the entry that refers to the picture that precedes, in the decoding order, the intra random access point picture associated with the current picture.</p><p id="p-0289" num="0417">9. The method of clause 7 or 8, wherein the rule specifies the condition under which the reference picture list for the current picture is disallowed to have the entry that refers to the picture that precedes, in the output order, the intra random access point picture associated with the current picture.</p><p id="p-0290" num="0418">10. The method of any of clauses 7 to 9, wherein the intra random access point picture is associated with zero or more leading pictures, and wherein the condition is that the current picture is associated with the intra random access point picture, follows the intra random access point picture in the decoding order and/or the output order, and follows, in both decoding order and output order, the zero or more leading pictures associated with the intra random access point picture.</p><p id="p-0291" num="0419">11. The method of any of clauses 7 to 9, wherein the intra random access point picture is associated with zero or more leading pictures, and wherein the condition is that the current picture follows the intra random access point picture having a same value of an identifier of the layer to which a video coding layer network abstraction layer unit belongs or an identifier of a layer to which a non-video coding layer network abstraction layer unit applies and the zero or more leading pictures in the decoding order and/or the output order.</p><p id="p-0292" num="0420">12. The method of any of clauses 1 to 11, wherein the conversion includes encoding the video into the bitstream.</p><p id="p-0293" num="0421">13. The method of any of clauses 1 to 11, wherein the conversion includes decoding the video from the bitstream.</p><p id="p-0294" num="0422">14. The method of any of clauses 1 to 11, wherein the conversion includes generating the bitstream from the video, and the method further comprises: storing the bitstream in a non-transitory computer-readable recording medium.</p><p id="p-0295" num="0423">15. A video processing apparatus comprising a processor configured to implement a method recited in any one or more of clauses 1 to 14.</p><p id="p-0296" num="0424">16. A method of storing a bitstream of a video, comprising, a method recited in any one of clauses 1 to 14, and further including storing the bitstream to a non-transitory computer-readable recording medium.</p><p id="p-0297" num="0425">17. A computer readable medium storing program code that, when executed, causes a processor to implement a method recited in any one or more of clauses 1 to 14.</p><p id="p-0298" num="0426">18. A computer readable medium that stores a bitstream generated according to any of the above described methods.</p><p id="p-0299" num="0427">19. A video processing apparatus for storing a bitstream representation, wherein the video processing apparatus is configured to implement a method recited in any one or more of clauses 1 to 14.</p><p id="p-0300" num="0428">In the present document, the term &#x201c;video processing&#x201d; may refer to video encoding, video decoding, video compression or video decompression. For example, video compression algorithms may be applied during conversion from pixel representation of a video to a corresponding bitstream representation or vice versa. The bitstream representation of a current video block may, for example, correspond to bits that are either co-located or spread in different places within the bitstream, as is defined by the syntax. For example, a macroblock may be encoded in terms of transformed and coded error residual values and also using bits in headers and other fields in the bitstream. Furthermore, during conversion, a decoder may parse a bitstream with the knowledge that some fields may be present, or absent, based on the determination, as is described in the above solutions. Similarly, an encoder may determine that certain syntax fields are or are not to be included and generate the coded representation accordingly by including or excluding the syntax fields from the coded representation.</p><p id="p-0301" num="0429">The disclosed and other solutions, examples, embodiments, modules and the functional operations described in this document can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this document and their structural equivalents, or in combinations of one or more of them. The disclosed and other embodiments can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus. The computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more them. The term &#x201c;data processing apparatus&#x201d; encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them. A propagated signal is an artificially generated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus.</p><p id="p-0302" num="0430">A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.</p><p id="p-0303" num="0431">The processes and logic flows described in this document can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., a field programmable gate array (FPGA) or an application specific integrated circuit (ASIC).</p><p id="p-0304" num="0432">Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random-access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and compact disc, read-only memory (CD ROM) and digital versatile disc read-only memory (DVD-ROM) disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.</p><p id="p-0305" num="0433">While this patent document contains many specifics, these should not be construed as limitations on the scope of any subject matter or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular techniques. Certain features that are described in this patent document in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.</p><p id="p-0306" num="0434">Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. Moreover, the separation of various system components in the embodiments described in this patent document should not be understood as requiring such separation in all embodiments.</p><p id="p-0307" num="0435">Only a few implementations and examples are described and other implementations, enhancements and variations can be made based on what is described and illustrated in this patent document.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A video processing method, comprising:<claim-text>performing a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule,</claim-text><claim-text>wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the entry is an active entry in the reference picture list.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the active entry corresponds to another entry that is available for being used as a reference index in an inter prediction of the current picture.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a random access skipped leading picture associated with a clean random access picture with a variable indicating no output before recovery equal to 1.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a first gradual decoder refresh picture with a first variable indicating no output before recovery equal to 1 or a recovering picture of a second gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a clean random access picture with a first variable indicating no output before recovery equal to 1, a picture that precedes, in decoding order, a leading picture associated with the clean random access picture with the first variable equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1 and the NAL unit header layer identifier equal to the particular value.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the conversion includes encoding the video into the bitstream.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the conversion includes decoding the video from the bitstream.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. An apparatus for processing video data comprising a processor and a non-transitory memory with instructions thereon, wherein the instructions upon execution by the processor, cause the processor to:<claim-text>perform a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule,</claim-text><claim-text>wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the entry is an active entry in the reference picture list.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the active entry corresponds to another entry that is available for being used as a reference index in an inter prediction of the current picture.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a random access skipped leading picture associated with a clean random access picture with a first variable indicating no output before recovery equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a clean random access picture with a first variable indicating no output before recovery equal to 1, a picture that precedes, in decoding order, a leading picture associated with the clean random access picture with the first variable equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1 and the NAL unit header layer identifier equal to the particular value.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A non-transitory computer-readable storage medium storing instructions that cause a processor to:<claim-text>perform a conversion between a video having one or more video layers comprising one or more video pictures and a bitstream of the video according to a rule,</claim-text><claim-text>wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the entry is an active entry in the reference picture list.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the active entry corresponds to another entry that is available for being used as a reference index in an inter prediction of the current picture.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a random access skipped leading picture associated with a clean random access picture with a first variable indicating no output before recovery equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The non-transitory computer-readable storage medium of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a clean random access picture with a first variable indicating no output before recovery equal to 1, a picture that precedes, in decoding order, a leading picture associated with the clean random access picture with the first variable equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1 and the NAL unit header layer identifier equal to the particular value.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A non-transitory computer-readable recording medium storing a bitstream of a video which is generated by a method performed by a video processing apparatus, wherein the method comprises:<claim-text>generating the bitstream of the video having one or more video layers comprising one or more video pictures according to a rule,</claim-text><claim-text>wherein the rule specifies a condition under which no picture that has been generated by a decoding process for generating an unavailable reference picture is referred to by an entry in a reference picture list of a current slice of a current picture.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable recording medium of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the entry is an active entry in the reference picture list; and wherein the condition is that the current picture with a network abstraction layer (NAL) unit header layer identifier equal to a particular value is not a random access skipped leading picture associated with a clean random access picture with a first variable indicating no output before recovery equal to 1, a first gradual decoder refresh picture with a second variable indicating no output before recovery equal to 1, or a recovering picture of a second gradual decoder refresh picture with a third variable indicating no output before recovery equal to 1.</claim-text></claim></claims></us-patent-application>