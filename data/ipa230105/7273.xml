<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007274A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007274</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17940986</doc-number><date>20220908</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>159</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>159</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>174</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>96</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">BLOCK VECTOR MODIFICATION FOR INTRA BLOCK COPY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17314701</doc-number><date>20210507</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11509911</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17940986</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16860975</doc-number><date>20200428</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11070816</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17314701</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62863037</doc-number><date>20190618</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Tencent America LLC</orgname><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>XU</last-name><first-name>Xiaozhong</first-name><address><city>State College</city><state>PA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>LI</last-name><first-name>Xiang</first-name><address><city>Saratoga</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LIU</last-name><first-name>Shan</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Tencent America LLC</orgname><role>02</role><address><city>Palo Alto</city><state>CA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods, apparatuses, and non-transitory computer-readable mediums are provided. A block vector of a current block that is to be coded in intra block copy (IBC) mode is determined. The block vector points to a first reference block of the current block in a current picture. An operation is performed on at least one component of the block vector based on the first reference block being outside a search range of the current block. The block vector is modified by the operation to point to a second reference block that is within the search range for the current block. The current block is encoded based on the modified block vector. The performing the operation includes performing a modulo operation on a y component of the block vector based on a size of a current coding tree unit (CTU) that includes the current block.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="122.34mm" wi="158.75mm" file="US20230007274A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="140.63mm" wi="75.35mm" file="US20230007274A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="211.75mm" wi="163.75mm" orientation="landscape" file="US20230007274A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="202.27mm" wi="165.18mm" orientation="landscape" file="US20230007274A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="219.96mm" wi="177.63mm" orientation="landscape" file="US20230007274A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="242.40mm" wi="178.39mm" orientation="landscape" file="US20230007274A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="244.26mm" wi="178.99mm" orientation="landscape" file="US20230007274A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="239.01mm" wi="178.39mm" orientation="landscape" file="US20230007274A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="166.12mm" wi="148.51mm" orientation="landscape" file="US20230007274A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="106.51mm" wi="111.59mm" orientation="landscape" file="US20230007274A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="106.51mm" wi="108.97mm" orientation="landscape" file="US20230007274A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="106.43mm" wi="108.29mm" orientation="landscape" file="US20230007274A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="106.51mm" wi="107.36mm" orientation="landscape" file="US20230007274A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="148.25mm" wi="143.34mm" orientation="landscape" file="US20230007274A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="236.47mm" wi="150.11mm" orientation="landscape" file="US20230007274A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="231.31mm" wi="178.99mm" orientation="landscape" file="US20230007274A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">The present application is a continuation of U.S. application Ser. No. 17/314,701 filed on May 7, 2021, which is a continuation of U.S. application Ser. No. 16/860,975, &#x201c;CONVERSION OF DECODED BLOCK VECTOR FOR INTRA PICTURE BLOCK COMPENSATION&#x201d;, filed on Apr. 28, 2020, now U.S. Pat. No. 11,070,816, which claims the benefit of priority to U.S. Provisional Application No. 62/863,037, &#x201c;CONVERSION OF DECODED BLOCK VECTOR FOR INTRA PICTURE BLOCK COMPENSATION&#x201d; filed on Jun. 18, 2019. The disclosures of the prior applications are hereby incorporated by reference in their entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure describes embodiments generally related to video coding.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent the work is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.</p><p id="p-0005" num="0004">Video coding and decoding can be performed using inter-picture prediction with motion compensation. Uncompressed digital video can include a series of pictures, each picture having a spatial dimension of, for example, 1920&#xd7;1080 luminance samples and associated chrominance samples. The series of pictures can have a fixed or variable picture rate (informally also known as frame rate), of, for example 60 pictures per second or 60 Hz. Uncompressed video has significant bitrate requirements. For example, 1080p60 4:2:0 video at 8 bit per sample (1920&#xd7;1080 luminance sample resolution at 60 Hz frame rate) requires close to 1.5 Gbit/s bandwidth. An hour of such video requires more than 600 GBytes of storage space.</p><p id="p-0006" num="0005">One purpose of video coding and decoding can be the reduction of redundancy in the input video signal, through compression. Compression can help reduce the aforementioned bandwidth or storage space requirements, in some cases by two orders of magnitude or more. Both lossless and lossy compression, as well as a combination thereof can be employed. Lossless compression refers to techniques where an exact copy of the original signal can be reconstructed from the compressed original signal. When using lossy compression, the reconstructed signal may not be identical to the original signal, but the distortion between original and reconstructed signals is small enough to make the reconstructed signal useful for the intended application. In the case of video, lossy compression is widely employed. The amount of distortion tolerated depends on the application; for example, users of certain consumer streaming applications may tolerate higher distortion than users of television distribution applications. The compression ratio achievable can reflect that: higher allowable/tolerable distortion can yield higher compression ratios.</p><p id="p-0007" num="0006">A video encoder and decoder can utilize techniques from several broad categories, including, for example, motion compensation, transform, quantization, and entropy coding.</p><p id="p-0008" num="0007">Video codec technologies can include techniques known as intra coding. In intra coding, sample values are represented without reference to samples or other data from previously reconstructed reference pictures. In some video codecs, the picture is spatially subdivided into blocks of samples. When all blocks of samples are coded in intra mode, that picture can be an intra picture. Intra pictures and their derivations such as independent decoder refresh pictures, can be used to reset the decoder state and can, therefore, be used as the first picture in a coded video bitstream and a video session, or as a still image. The samples of an intra block can be exposed to a transform, and the transform coefficients can be quantized before entropy coding. Intra prediction can be a technique that minimizes sample values in the pre-transform domain. In some cases, the smaller the DC value after a transform is, and the smaller the AC coefficients are, the fewer the bits that are required at a given quantization step size to represent the block after entropy coding.</p><p id="p-0009" num="0008">Traditional intra coding such as known from, for example MPEG-2 generation coding technologies, does not use intra prediction. However, some newer video compression technologies include techniques that attempt, from, for example, surrounding sample data and/or metadata obtained during the encoding/decoding of spatially neighboring, and preceding in decoding order, blocks of data. Such techniques are henceforth called &#x201c;intra prediction&#x201d; techniques. Note that in at least some cases, intra prediction is only using reference data from the current picture under reconstruction and not from reference pictures.</p><p id="p-0010" num="0009">There can be many different forms of intra prediction. When more than one of such techniques can be used in a given video coding technology, the technique in use can be coded in an intra prediction mode. In certain cases, modes can have submodes and/or parameters, and those can be coded individually or included in the mode codeword. Which codeword to use for a given mode/submode/parameter combination can have an impact in the coding efficiency gain through intra prediction, and so can the entropy coding technology used to translate the codewords into a bitstream.</p><p id="p-0011" num="0010">A certain mode of intra prediction was introduced with H.264, refined in H.265, and further refined in newer coding technologies such as joint exploration model (JEM), versatile video coding (VVC), and benchmark set (BMS). A predictor block can be formed using neighboring sample values belonging to already available samples. Sample values of neighboring samples are copied into the predictor block according to a direction. A reference to the direction in use can be coded in the bitstream or may itself be predicted.</p><p id="p-0012" num="0011">Motion compensation can be a lossy compression technique and can relate to techniques where a block of sample data from a previously reconstructed picture or part thereof (reference picture), after being spatially shifted in a direction indicated by a motion vector (MV henceforth), is used for the prediction of a newly reconstructed picture or picture part. In some cases, the reference picture can be the same as the picture currently under reconstruction. MVs can have two dimensions X and Y, or three dimensions, the third being an indication of the reference picture in use (the latter, indirectly, can be a time dimension).</p><p id="p-0013" num="0012">In some video compression techniques, an MV applicable to a certain area of sample data can be predicted from other MVs, for example from those related to another area of sample data spatially adjacent to the area under reconstruction, and preceding that MV in decoding order. Doing so can substantially reduce the amount of data required for coding the MV, thereby removing redundancy and increasing compression. MV prediction can work effectively, for example, because when coding an input video signal derived from a camera (known as natural video) there is a statistical likelihood that areas larger than the area to which a single MV is applicable move in a similar direction and, therefore, can in some cases be predicted using a similar motion vector derived from MVs of neighboring area. That results in the MV found for a given area to be similar or the same as the MV predicted from the surrounding MVs, and that in turn can be represented, after entropy coding, in a smaller number of bits than what would be used if coding the MV directly. In some cases, MV prediction can be an example of lossless compression of a signal (namely: the MVs) derived from the original signal (namely: the sample stream). In other cases, MV prediction itself can be lossy, for example because of rounding errors when calculating a predictor from several surrounding MVs.</p><p id="p-0014" num="0013">Various MV prediction mechanisms are described in H.265/HEVC (ITU-T Rec. H.265, &#x201c;High Efficiency Video Coding&#x201d;, December 2016). Out of the many MV prediction mechanisms that H.265 offers, described herein is a technique henceforth referred to as &#x201c;spatial merge.&#x201d;</p><p id="p-0015" num="0014">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a current block (<b>101</b>) comprises samples that have been found by the encoder during the motion search process to be predictable from a previous block of the same size that has been spatially shifted. Instead of coding that MV directly, the MV can be derived from metadata associated with one or more reference pictures, for example from the most recent (in decoding order) reference picture, using the MV associated with either one of five surrounding samples, denoted A0, A1, and B0, B1, B2 (<b>102</b> through <b>106</b>, respectively). In H.265, the MV prediction can use predictors from the same reference picture that the neighboring block is using.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0016" num="0015">Aspects of the disclosure provide methods and apparatuses for video coding at a decoder. In an embodiment, a method of video coding at a decoder is provided. In the method, a coded video bitstream including a current picture is received. A determination is made as to whether a current block in a current coding tree unit (CTU) included in the current picture is coded in intra block copy (IBC) mode based on a flag included in the coded video bitstream. In response to the current block being determined as coded in IBC mode, a block vector that points to a first reference block of the current block is determined; an operation is performed on the block vector so that when the first reference block is not fully reconstructed or not within a valid search range of the current block, the block vector is modified to point to a second reference block that is in a fully reconstructed region and within the valid search range of the current block; and the current block is decoded based on the modified block vector.</p><p id="p-0017" num="0016">In an embodiment, the fully reconstructed region and the current block are in the same tile, slice, or tile group;</p><p id="p-0018" num="0017">In an embodiment, the performing the operation includes performing a modulo operation on each of an x component and a y component of the block vector based on a size of the current CTU.</p><p id="p-0019" num="0018">In an embodiment, the performing the operation includes performing a modulo operation on an x component of the block vector based on a multiple of a size of the current CTU. The operation further includes performing a modulo operation on a y component of the block vector based on the size of the current CTU</p><p id="p-0020" num="0019">In an embodiment, the performing the operation modifies the block vector only when the first reference block is not fully reconstructed or not within the valid search range of the current block.</p><p id="p-0021" num="0020">In an embodiment, the performing the operation does not modify the block vector when the first reference block is fully reconstructed and within the valid search range of the current block.</p><p id="p-0022" num="0021">In an embodiment, the valid search range of the current block includes the current CTU.</p><p id="p-0023" num="0022">In an embodiment, the performing the operation modifies the block such that an offset of the first reference block relative to a CTU including the first reference block is the same of an offset of the second reference block relative to the current CTU.</p><p id="p-0024" num="0023">In an embodiment, the performing the operation includes clipping the block vector so that the clipped block vector points to the second reference block that is at a boundary of the valid search range of the current block when the first reference block is not fully reconstructed or not within the valid search range of the current block.</p><p id="p-0025" num="0024">Aspects of the disclosure provide apparatuses configured to perform any of the above methods.</p><p id="p-0026" num="0025">Aspects of the disclosure also provide non-transitory computer-readable storage mediums storing instructions which when executed by a computer cause the computer to perform any of the above methods.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0027" num="0026">Further features, the nature, and various advantages of the disclosed subject matter will be more apparent from the following detailed description and the accompanying drawings in which:</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic illustration of a current block and its surrounding spatial merge candidates in one example.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic illustration of a simplified block diagram of a communication system in accordance with an embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic illustration of a simplified block diagram of a communication system in accordance with an embodiment.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic illustration of a simplified block diagram of a decoder in accordance with an embodiment.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic illustration of a simplified block diagram of an encoder in accordance with an embodiment.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a block diagram of an encoder in accordance with another embodiment.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a block diagram of a decoder in accordance with another embodiment.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows an example of intra picture block (IBC) based compensation in accordance with an embodiment.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. <b>9</b>A-<b>9</b>D</figref> show examples of IBC-based compensation in accordance with some embodiments.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an example of spatial merge candidates in accordance with an embodiment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a flow chart outlining a decoding process in accordance with an embodiment.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a schematic illustration of a computer system in accordance with an embodiment.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0040" num="0039">I. Video Coding Encoder and Decoder</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates a simplified block diagram of a communication system (<b>200</b>) according to an embodiment of the present disclosure. The communication system (<b>200</b>) includes a plurality of terminal devices that can communicate with each other, via, for example, a network (<b>250</b>). For example, the communication system (<b>200</b>) includes a first pair of terminal devices (<b>210</b>) and (<b>220</b>) interconnected via the network (<b>250</b>). In the <figref idref="DRAWINGS">FIG. <b>2</b></figref> example, the first pair of terminal devices (<b>210</b>) and (<b>220</b>) performs unidirectional transmission of data. For example, the terminal device (<b>210</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device (<b>210</b>)) for transmission to the other terminal device (<b>220</b>) via the network (<b>250</b>). The encoded video data can be transmitted in the form of one or more coded video bitstreams. The terminal device (<b>220</b>) may receive the coded video data from the network (<b>250</b>), decode the coded video data to recover the video pictures and display video pictures according to the recovered video data. Unidirectional data transmission may be common in media serving applications and the like.</p><p id="p-0042" num="0041">In another example, the communication system (<b>200</b>) includes a second pair of terminal devices (<b>230</b>) and (<b>240</b>) that performs bidirectional transmission of coded video data that may occur, for example, during videoconferencing. For bidirectional transmission of data, in an example, each terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) may code video data (e.g., a stream of video pictures that are captured by the terminal device) for transmission to the other terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) via the network (<b>250</b>). Each terminal device of the terminal devices (<b>230</b>) and (<b>240</b>) also may receive the coded video data transmitted by the other terminal device of the terminal devices (<b>230</b>) and (<b>240</b>), and may decode the coded video data to recover the video pictures and may display video pictures at an accessible display device according to the recovered video data.</p><p id="p-0043" num="0042">In the <figref idref="DRAWINGS">FIG. <b>2</b></figref> example, the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>) may be illustrated as servers, personal computers and smart phones but the principles of the present disclosure may be not so limited. Embodiments of the present disclosure find application with laptop computers, tablet computers, media players and/or dedicated video conferencing equipment. The network (<b>250</b>) represents any number of networks that convey coded video data among the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>), including for example wireline (wired) and/or wireless communication networks. The communication network (<b>250</b>) may exchange data in circuit-switched and/or packet-switched channels. Representative networks include telecommunications networks, local area networks, wide area networks and/or the Internet. For the purposes of the present discussion, the architecture and topology of the network (<b>250</b>) may be immaterial to the operation of the present disclosure unless explained herein below.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates, as an example for an application for the disclosed subject matter, the placement of a video encoder and a video decoder in a streaming environment. The disclosed subject matter can be equally applicable to other video enabled applications, including, for example, video conferencing, digital TV, storing of compressed video on digital media including CD, DVD, memory stick and the like, and so on.</p><p id="p-0045" num="0044">A streaming system may include a capture subsystem (<b>313</b>), that can include a video source (<b>301</b>), for example a digital camera, creating for example a stream of video pictures (<b>302</b>) that are uncompressed. In an example, the stream of video pictures (<b>302</b>) includes samples that are taken by the digital camera. The stream of video pictures (<b>302</b>), depicted as a bold line to emphasize a high data volume when compared to encoded video data (<b>304</b>) (or coded video bitstreams), can be processed by an electronic device (<b>320</b>) that includes a video encoder (<b>303</b>) coupled to the video source (<b>301</b>). The video encoder (<b>303</b>) can include hardware, software, or a combination thereof to enable or implement aspects of the disclosed subject matter as described in more detail below. The encoded video data (<b>304</b>) (or encoded video bitstream (<b>304</b>)), depicted as a thin line to emphasize the lower data volume when compared to the stream of video pictures (<b>302</b>), can be stored on a streaming server (<b>305</b>) for future use. One or more streaming client subsystems, such as client subsystems (<b>306</b>) and (<b>308</b>) in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can access the streaming server (<b>305</b>) to retrieve copies (<b>307</b>) and (<b>309</b>) of the encoded video data (<b>304</b>). A client subsystem (<b>306</b>) can include a video decoder (<b>310</b>), for example, in an electronic device (<b>330</b>). The video decoder (<b>310</b>) decodes the incoming copy (<b>307</b>) of the encoded video data and creates an outgoing stream of video pictures (<b>311</b>) that can be rendered on a display (<b>312</b>) (e.g., display screen) or other rendering device (not depicted). In some streaming systems, the encoded video data (<b>304</b>), (<b>307</b>), and (<b>309</b>) (e.g., video bitstreams) can be encoded according to certain video coding/compression standards. Examples of those standards include ITU-T Recommendation H.265. In an example, a video coding standard under development is informally known as Versatile Video Coding (VVC). The disclosed subject matter may be used in the context of VVC.</p><p id="p-0046" num="0045">It is noted that the electronic devices (<b>320</b>) and (<b>330</b>) can include other components (not shown). For example, the electronic device (<b>320</b>) can include a video decoder (not shown) and the electronic device (<b>330</b>) can include a video encoder (not shown) as well.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a block diagram of a video decoder (<b>410</b>) according to an embodiment of the present disclosure. The video decoder (<b>410</b>) can be included in an electronic device (<b>430</b>). The electronic device (<b>430</b>) can include a receiver (<b>431</b>) (e.g., receiving circuitry). The video decoder (<b>410</b>) can be used in the place of the video decoder (<b>310</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0048" num="0047">The receiver (<b>431</b>) may receive one or more coded video sequences to be decoded by the video decoder (<b>410</b>); in the same or another embodiment, one coded video sequence at a time, where the decoding of each coded video sequence is independent from other coded video sequences. The coded video sequence may be received from a channel (<b>401</b>), which may be a hardware/software link to a storage device which stores the encoded video data. The receiver (<b>431</b>) may receive the encoded video data with other data, for example, coded audio data and/or ancillary data streams, that may be forwarded to their respective using entities (not depicted). The receiver (<b>431</b>) may separate the coded video sequence from the other data. To combat network jitter, a buffer memory (<b>415</b>) may be coupled in between the receiver (<b>431</b>) and an entropy decoder/parser (<b>420</b>) (&#x201c;parser (<b>420</b>)&#x201d; henceforth). In certain applications, the buffer memory (<b>415</b>) is part of the video decoder (<b>410</b>). In others, it can be outside of the video decoder (<b>410</b>) (not depicted). In still others, there can be a buffer memory (not depicted) outside of the video decoder (<b>410</b>), for example to combat network jitter, and in addition another buffer memory (<b>415</b>) inside the video decoder (<b>410</b>), for example to handle playout timing. When the receiver (<b>431</b>) is receiving data from a store/forward device of sufficient bandwidth and controllability, or from an isosynchronous network, the buffer memory (<b>415</b>) may not be needed, or can be small. For use on best effort packet networks such as the Internet, the buffer memory (<b>415</b>) may be required, can be comparatively large and can be advantageously of adaptive size, and may at least partially be implemented in an operating system or similar elements (not depicted) outside of the video decoder (<b>410</b>).</p><p id="p-0049" num="0048">The video decoder (<b>410</b>) may include the parser (<b>420</b>) to reconstruct symbols (<b>421</b>) from the coded video sequence. Categories of those symbols include information used to manage operation of the video decoder (<b>410</b>), and potentially information to control a rendering device such as a render device (<b>412</b>) (e.g., a display screen) that is not an integral part of the electronic device (<b>430</b>) but can be coupled to the electronic device (<b>430</b>), as was shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. The control information for the rendering device(s) may be in the form of Supplemental Enhancement Information (SEI messages) or Video Usability Information (VUI) parameter set fragments (not depicted). The parser (<b>420</b>) may parse/entropy-decode the coded video sequence that is received. The coding of the coded video sequence can be in accordance with a video coding technology or standard, and can follow various principles, including variable length coding, Huffman coding, arithmetic coding with or without context sensitivity, and so forth. The parser (<b>420</b>) may extract from the coded video sequence, a set of subgroup parameters for at least one of the subgroups of pixels in the video decoder, based upon at least one parameter corresponding to the group. Subgroups can include Groups of Pictures (GOPs), pictures, tiles, slices, macroblocks, Coding Units (CUs), blocks, Transform Units (TUs), Prediction Units (PUs) and so forth. The parser (<b>420</b>) may also extract from the coded video sequence information such as transform coefficients, quantizer parameter values, motion vectors, and so forth.</p><p id="p-0050" num="0049">The parser (<b>420</b>) may perform an entropy decoding/parsing operation on the video sequence received from the buffer memory (<b>415</b>), so as to create symbols (<b>421</b>).</p><p id="p-0051" num="0050">Reconstruction of the symbols (<b>421</b>) can involve multiple different units depending on the type of the coded video picture or parts thereof (such as: inter and intra picture, inter and intra block), and other factors. Which units are involved, and how, can be controlled by the subgroup control information that was parsed from the coded video sequence by the parser (<b>420</b>). The flow of such subgroup control information between the parser (<b>420</b>) and the multiple units below is not depicted for clarity.</p><p id="p-0052" num="0051">Beyond the functional blocks already mentioned, the video decoder (<b>410</b>) can be conceptually subdivided into a number of functional units as described below. In a practical implementation operating under commercial constraints, many of these units interact closely with each other and can, at least partly, be integrated into each other. However, for the purpose of describing the disclosed subject matter, the conceptual subdivision into the functional units below is appropriate.</p><p id="p-0053" num="0052">A first unit is the scaler/inverse transform unit (<b>451</b>). The scaler/inverse transform unit (<b>451</b>) receives a quantized transform coefficient as well as control information, including which transform to use, block size, quantization factor, quantization scaling matrices, etc. as symbol(s) (<b>421</b>) from the parser (<b>420</b>). The scaler/inverse transform unit (<b>451</b>) can output blocks comprising sample values, which can be input into aggregator (<b>455</b>).</p><p id="p-0054" num="0053">In some cases, the output samples of the scaler/inverse transform (<b>451</b>) can pertain to an intra coded block; that is: a block that is not using predictive information from previously reconstructed pictures, but can use predictive information from previously reconstructed parts of the current picture. Such predictive information can be provided by an intra picture prediction unit (<b>452</b>). In some cases, the intra picture prediction unit (<b>452</b>) generates a block of the same size and shape of the block under reconstruction, using surrounding already reconstructed information fetched from the current picture buffer (<b>458</b>). The current picture buffer (<b>458</b>) buffers, for example, partly reconstructed current picture and/or fully reconstructed current picture. The aggregator (<b>455</b>), in some cases, adds, on a per sample basis, the prediction information the intra prediction unit (<b>452</b>) has generated to the output sample information as provided by the scaler/inverse transform unit (<b>451</b>).</p><p id="p-0055" num="0054">In other cases, the output samples of the scaler/inverse transform unit (<b>451</b>) can pertain to an inter coded, and potentially motion compensated block. In such a case, a motion compensation prediction unit (<b>453</b>) can access reference picture memory (<b>457</b>) to fetch samples used for prediction. After motion compensating the fetched samples in accordance with the symbols (<b>421</b>) pertaining to the block, these samples can be added by the aggregator (<b>455</b>) to the output of the scaler/inverse transform unit (<b>451</b>) (in this case called the residual samples or residual signal) so as to generate output sample information. The addresses within the reference picture memory (<b>457</b>) from where the motion compensation prediction unit (<b>453</b>) fetches prediction samples can be controlled by motion vectors, available to the motion compensation prediction unit (<b>453</b>) in the form of symbols (<b>421</b>) that can have, for example X, Y, and reference picture components. Motion compensation also can include interpolation of sample values as fetched from the reference picture memory (<b>457</b>) when sub-sample exact motion vectors are in use, motion vector prediction mechanisms, and so forth.</p><p id="p-0056" num="0055">The output samples of the aggregator (<b>455</b>) can be subject to various loop filtering techniques in the loop filter unit (<b>456</b>). Video compression technologies can include in-loop filter technologies that are controlled by parameters included in the coded video sequence (also referred to as coded video bitstream) and made available to the loop filter unit (<b>456</b>) as symbols (<b>421</b>) from the parser (<b>420</b>), but can also be responsive to meta-information obtained during the decoding of previous (in decoding order) parts of the coded picture or coded video sequence, as well as responsive to previously reconstructed and loop-filtered sample values.</p><p id="p-0057" num="0056">The output of the loop filter unit (<b>456</b>) can be a sample stream that can be output to the render device (<b>412</b>) as well as stored in the reference picture memory (<b>457</b>) for use in future inter-picture prediction.</p><p id="p-0058" num="0057">Certain coded pictures, once fully reconstructed, can be used as reference pictures for future prediction. For example, once a coded picture corresponding to a current picture is fully reconstructed and the coded picture has been identified as a reference picture (by, for example, the parser (<b>420</b>)), the current picture buffer (<b>458</b>) can become a part of the reference picture memory (<b>457</b>), and a fresh current picture buffer can be reallocated before commencing the reconstruction of the following coded picture.</p><p id="p-0059" num="0058">The video decoder (<b>410</b>) may perform decoding operations according to a predetermined video compression technology in a standard, such as ITU-T Rec. H.265. The coded video sequence may conform to a syntax specified by the video compression technology or standard being used, in the sense that the coded video sequence adheres to both the syntax of the video compression technology or standard and the profiles as documented in the video compression technology or standard. Specifically, a profile can select certain tools as the only tools available for use under that profile from all the tools available in the video compression technology or standard. Also necessary for compliance can be that the complexity of the coded video sequence is within bounds as defined by the level of the video compression technology or standard. In some cases, levels restrict the maximum picture size, maximum frame rate, maximum reconstruction sample rate (measured in, for example megasamples per second), maximum reference picture size, and so on. Limits set by levels can, in some cases, be further restricted through Hypothetical Reference Decoder (HRD) specifications and metadata for HRD buffer management signaled in the coded video sequence.</p><p id="p-0060" num="0059">In an embodiment, the receiver (<b>431</b>) may receive additional (redundant) data with the encoded video. The additional data may be included as part of the coded video sequence(s). The additional data may be used by the video decoder (<b>410</b>) to properly decode the data and/or to more accurately reconstruct the original video data. Additional data can be in the form of, for example, temporal, spatial, or signal noise ratio (SNR) enhancement layers, redundant slices, redundant pictures, forward error correction codes, and so on.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a block diagram of a video encoder (<b>503</b>) according to an embodiment of the present disclosure. The video encoder (<b>503</b>) is included in an electronic device (<b>520</b>). The electronic device (<b>520</b>) includes a transmitter (<b>540</b>) (e.g., transmitting circuitry). The video encoder (<b>503</b>) can be used in the place of the video encoder (<b>303</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0062" num="0061">The video encoder (<b>503</b>) may receive video samples from a video source (<b>501</b>) (that is not part of the electronic device (<b>520</b>) in the <figref idref="DRAWINGS">FIG. <b>5</b></figref> example) that may capture video image(s) to be coded by the video encoder (<b>503</b>). In another example, the video source (<b>501</b>) is a part of the electronic device (<b>520</b>).</p><p id="p-0063" num="0062">The video source (<b>501</b>) may provide the source video sequence to be coded by the video encoder (<b>503</b>) in the form of a digital video sample stream that can be of any suitable bit depth (for example: 8 bit, 10 bit, 12 bit, . . . ), any colorspace (for example, BT.601 Y CrCB, RGB, . . . ), and any suitable sampling structure (for example Y CrCb 4:2:0, Y CrCb 4:4:4). In a media serving system, the video source (<b>501</b>) may be a storage device storing previously prepared video. In a videoconferencing system, the video source (<b>501</b>) may be a camera that captures local image information as a video sequence. Video data may be provided as a plurality of individual pictures that impart motion when viewed in sequence. The pictures themselves may be organized as a spatial array of pixels, wherein each pixel can comprise one or more samples depending on the sampling structure, color space, etc. in use. A person skilled in the art can readily understand the relationship between pixels and samples. The description below focuses on samples.</p><p id="p-0064" num="0063">According to an embodiment, the video encoder (<b>503</b>) may code and compress the pictures of the source video sequence into a coded video sequence (<b>543</b>) in real time or under any other time constraints as required by the application. Enforcing appropriate coding speed is one function of a controller (<b>550</b>). In some embodiments, the controller (<b>550</b>) controls other functional units as described below and is functionally coupled to the other functional units. The coupling is not depicted for clarity. Parameters set by the controller (<b>550</b>) can include rate control related parameters (picture skip, quantizer, lambda value of rate-distortion optimization techniques, . . . ), picture size, group of pictures (GOP) layout, maximum motion vector search range, and so forth. The controller (<b>550</b>) can be configured to have other suitable functions that pertain to the video encoder (<b>503</b>) optimized for a certain system design.</p><p id="p-0065" num="0064">In some embodiments, the video encoder (<b>503</b>) is configured to operate in a coding loop. As an oversimplified description, in an example, the coding loop can include a source coder (<b>530</b>) (e.g., responsible for creating symbols, such as a symbol stream, based on an input picture to be coded, and a reference picture(s)), and a (local) decoder (<b>533</b>) embedded in the video encoder (<b>503</b>). The decoder (<b>533</b>) reconstructs the symbols to create the sample data in a similar manner as a (remote) decoder also would create (as any compression between symbols and coded video bitstream is lossless in the video compression technologies considered in the disclosed subject matter). The reconstructed sample stream (sample data) is input to the reference picture memory (<b>534</b>). As the decoding of a symbol stream leads to bit-exact results independent of decoder location (local or remote), the content in the reference picture memory (<b>534</b>) is also bit exact between the local encoder and remote encoder. In other words, the prediction part of an encoder &#x201c;sees&#x201d; as reference picture samples exactly the same sample values as a decoder would &#x201c;see&#x201d; when using prediction during decoding. This fundamental principle of reference picture synchronicity (and resulting drift, if synchronicity cannot be maintained, for example because of channel errors) is used in some related arts as well.</p><p id="p-0066" num="0065">The operation of the &#x201c;local&#x201d; decoder (<b>533</b>) can be the same as of a &#x201c;remote&#x201d; decoder, such as the video decoder (<b>410</b>), which has already been described in detail above in conjunction with <figref idref="DRAWINGS">FIG. <b>4</b></figref>. Briefly referring also to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, however, as symbols are available and encoding/decoding of symbols to a coded video sequence by an entropy coder (<b>545</b>) and the parser (<b>420</b>) can be lossless, the entropy decoding parts of the video decoder (<b>410</b>), including the buffer memory (<b>415</b>), and parser (<b>420</b>) may not be fully implemented in the local decoder (<b>533</b>).</p><p id="p-0067" num="0066">An observation that can be made at this point is that any decoder technology except the parsing/entropy decoding that is present in a decoder also necessarily needs to be present, in substantially identical functional form, in a corresponding encoder. For this reason, the disclosed subject matter focuses on decoder operation. The description of encoder technologies can be abbreviated as they are the inverse of the comprehensively described decoder technologies. Only in certain areas a more detail description is required and provided below.</p><p id="p-0068" num="0067">During operation, in some examples, the source coder (<b>530</b>) may perform motion compensated predictive coding, which codes an input picture predictively with reference to one or more previously-coded picture from the video sequence that were designated as &#x201c;reference pictures&#x201d;. In this manner, the coding engine (<b>532</b>) codes differences between pixel blocks of an input picture and pixel blocks of reference picture(s) that may be selected as prediction reference(s) to the input picture.</p><p id="p-0069" num="0068">The local video decoder (<b>533</b>) may decode coded video data of pictures that may be designated as reference pictures, based on symbols created by the source coder (<b>530</b>). Operations of the coding engine (<b>532</b>) may advantageously be lossy processes. When the coded video data may be decoded at a video decoder (not shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>), the reconstructed video sequence typically may be a replica of the source video sequence with some errors. The local video decoder (<b>533</b>) replicates decoding processes that may be performed by the video decoder on reference pictures and may cause reconstructed reference pictures to be stored in the reference picture cache (<b>534</b>). In this manner, the video encoder (<b>503</b>) may store copies of reconstructed reference pictures locally that have common content as the reconstructed reference pictures that will be obtained by a far-end video decoder (absent transmission errors).</p><p id="p-0070" num="0069">The predictor (<b>535</b>) may perform prediction searches for the coding engine (<b>532</b>). That is, for a new picture to be coded, the predictor (<b>535</b>) may search the reference picture memory (<b>534</b>) for sample data (as candidate reference pixel blocks) or certain metadata such as reference picture motion vectors, block shapes, and so on, that may serve as an appropriate prediction reference for the new pictures. The predictor (<b>535</b>) may operate on a sample block-by-pixel block basis to find appropriate prediction references. In some cases, as determined by search results obtained by the predictor (<b>535</b>), an input picture may have prediction references drawn from multiple reference pictures stored in the reference picture memory (<b>534</b>).</p><p id="p-0071" num="0070">The controller (<b>550</b>) may manage coding operations of the source coder (<b>530</b>), including, for example, setting of parameters and subgroup parameters used for encoding the video data.</p><p id="p-0072" num="0071">Output of all aforementioned functional units may be subjected to entropy coding in the entropy coder (<b>545</b>). The entropy coder (<b>545</b>) translates the symbols as generated by the various functional units into a coded video sequence, by lossless compressing the symbols according to technologies such as Huffman coding, variable length coding, arithmetic coding, and so forth.</p><p id="p-0073" num="0072">The transmitter (<b>540</b>) may buffer the coded video sequence(s) as created by the entropy coder (<b>545</b>) to prepare for transmission via a communication channel (<b>560</b>), which may be a hardware/software link to a storage device which would store the encoded video data. The transmitter (<b>540</b>) may merge coded video data from the video coder (<b>503</b>) with other data to be transmitted, for example, coded audio data and/or ancillary data streams (sources not shown).</p><p id="p-0074" num="0073">The controller (<b>550</b>) may manage operation of the video encoder (<b>503</b>). During coding, the controller (<b>550</b>) may assign to each coded picture a certain coded picture type, which may affect the coding techniques that may be applied to the respective picture. For example, pictures often may be assigned as one of the following picture types:</p><p id="p-0075" num="0074">An Intra Picture (I picture) may be one that may be coded and decoded without using any other picture in the sequence as a source of prediction. Some video codecs allow for different types of intra pictures, including, for example Independent Decoder Refresh (&#x201c;IDR&#x201d;) Pictures. A person skilled in the art is aware of those variants of I pictures and their respective applications and features.</p><p id="p-0076" num="0075">A predictive picture (P picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most one motion vector and reference index to predict the sample values of each block.</p><p id="p-0077" num="0076">A bi-directionally predictive picture (B Picture) may be one that may be coded and decoded using intra prediction or inter prediction using at most two motion vectors and reference indices to predict the sample values of each block. Similarly, multiple-predictive pictures can use more than two reference pictures and associated metadata for the reconstruction of a single block.</p><p id="p-0078" num="0077">Source pictures commonly may be subdivided spatially into a plurality of sample blocks (for example, blocks of 4&#xd7;4, 8&#xd7;8, 4&#xd7;8, or 16&#xd7;16 samples each) and coded on a block-by-block basis. Blocks may be coded predictively with reference to other (already coded) blocks as determined by the coding assignment applied to the blocks' respective pictures. For example, blocks of I pictures may be coded non-predictively or they may be coded predictively with reference to already coded blocks of the same picture (spatial prediction or intra prediction). Pixel blocks of P pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one previously coded reference picture. Blocks of B pictures may be coded predictively, via spatial prediction or via temporal prediction with reference to one or two previously coded reference pictures.</p><p id="p-0079" num="0078">The video encoder (<b>503</b>) may perform coding operations according to a predetermined video coding technology or standard, such as ITU-T Rec. H.265. In its operation, the video encoder (<b>503</b>) may perform various compression operations, including predictive coding operations that exploit temporal and spatial redundancies in the input video sequence. The coded video data, therefore, may conform to a syntax specified by the video coding technology or standard being used.</p><p id="p-0080" num="0079">In an embodiment, the transmitter (<b>540</b>) may transmit additional data with the encoded video. The source coder (<b>530</b>) may include such data as part of the coded video sequence. Additional data may comprise temporal/spatial/SNR enhancement layers, other forms of redundant data such as redundant pictures and slices, SEI messages, VUI parameter set fragments, and so on.</p><p id="p-0081" num="0080">A video may be captured as a plurality of source pictures (video pictures) in a temporal sequence. Intra-picture prediction (often abbreviated to intra prediction) makes use of spatial correlation in a given picture, and inter-picture prediction makes uses of the (temporal or other) correlation between the pictures. In an example, a specific picture under encoding/decoding, which is referred to as a current picture, is partitioned into blocks. When a block in the current picture is similar to a reference block in a previously coded and still buffered reference picture in the video, the block in the current picture can be coded by a vector that is referred to as a motion vector. The motion vector points to the reference block in the reference picture, and can have a third dimension identifying the reference picture, in case multiple reference pictures are in use.</p><p id="p-0082" num="0081">In some embodiments, a bi-prediction technique can be used in the inter-picture prediction. According to the bi-prediction technique, two reference pictures, such as a first reference picture and a second reference picture that are both prior in decoding order to the current picture in the video (but may be in the past and future, respectively, in display order) are used. A block in the current picture can be coded by a first motion vector that points to a first reference block in the first reference picture, and a second motion vector that points to a second reference block in the second reference picture. The block can be predicted by a combination of the first reference block and the second reference block.</p><p id="p-0083" num="0082">Further, a merge mode technique can be used in the inter-picture prediction to improve coding efficiency.</p><p id="p-0084" num="0083">According to some embodiments of the disclosure, predictions, such as inter-picture predictions and intra-picture predictions are performed in the unit of blocks. For example, according to the HEVC standard, a picture in a sequence of video pictures is partitioned into coding tree units (CTU) for compression, the CTUs in a picture have the same size, such as 64&#xd7;64 pixels, 32&#xd7;32 pixels, or 16&#xd7;16 pixels. In general, a CTU includes three coding tree blocks (CTBs), which are one luma CTB and two chroma CTBs. Each CTU can be recursively quadtree split into one or multiple coding units (CUs). For example, a CTU of 64&#xd7;64 pixels can be split into one CU of 64&#xd7;64 pixels, or <b>4</b> CUs of 32&#xd7;32 pixels, or <b>16</b> CUs of 16&#xd7;16 pixels. In an example, each CU is analyzed to determine a prediction type for the CU, such as an inter prediction type or an intra prediction type. The CU is split into one or more prediction units (PUs) depending on the temporal and/or spatial predictability. Generally, each PU includes a luma prediction block (PB), and two chroma PBs. In an embodiment, a prediction operation in coding (encoding/decoding) is performed in the unit of a prediction block. Using a luma prediction block as an example of a prediction block, the prediction block includes a matrix of values (e.g., luma values) for pixels, such as 8&#xd7;8 pixels, 16&#xd7;16 pixels, 8&#xd7;16 pixels, 16&#xd7;8 pixels, and the like.</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a diagram of a video encoder (<b>603</b>) according to another embodiment of the disclosure. The video encoder (<b>603</b>) is configured to receive a processing block (e.g., a prediction block) of sample values within a current video picture in a sequence of video pictures, and encode the processing block into a coded picture that is part of a coded video sequence. In an example, the video encoder (<b>603</b>) is used in the place of the video encoder (<b>303</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0086" num="0085">In an HEVC example, the video encoder (<b>603</b>) receives a matrix of sample values for a processing block, such as a prediction block of 8&#xd7;8 samples, and the like. The video encoder (<b>603</b>) determines whether the processing block is best coded using intra mode, inter mode, or bi-prediction mode using, for example, rate-distortion optimization. When the processing block is to be coded in intra mode, the video encoder (<b>603</b>) may use an intra prediction technique to encode the processing block into the coded picture; and when the processing block is to be coded in inter mode or bi-prediction mode, the video encoder (<b>603</b>) may use an inter prediction or bi-prediction technique, respectively, to encode the processing block into the coded picture. In certain video coding technologies, merge mode can be an inter picture prediction submode where the motion vector is derived from one or more motion vector predictors without the benefit of a coded motion vector component outside the predictors. In certain other video coding technologies, a motion vector component applicable to the subject block may be present. In an example, the video encoder (<b>603</b>) includes other components, such as a mode decision module (not shown) to determine the mode of the processing blocks.</p><p id="p-0087" num="0086">In the <figref idref="DRAWINGS">FIG. <b>6</b></figref> example, the video encoder (<b>603</b>) includes the inter encoder (<b>630</b>), an intra encoder (<b>622</b>), a residue calculator (<b>623</b>), a switch (<b>626</b>), a residue encoder (<b>624</b>), a general controller (<b>621</b>), and an entropy encoder (<b>625</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>.</p><p id="p-0088" num="0087">The inter encoder (<b>630</b>) is configured to receive the samples of the current block (e.g., a processing block), compare the block to one or more reference blocks in reference pictures (e.g., blocks in previous pictures and later pictures), generate inter prediction information (e.g., description of redundant information according to inter encoding technique, motion vectors, merge mode information), and calculate inter prediction results (e.g., predicted block) based on the inter prediction information using any suitable technique. In some examples, the reference pictures are decoded reference pictures that are decoded based on the encoded video information.</p><p id="p-0089" num="0088">The intra encoder (<b>622</b>) is configured to receive the samples of the current block (e.g., a processing block), in some cases compare the block to blocks already coded in the same picture, generate quantized coefficients after transform, and in some cases also intra prediction information (e.g., an intra prediction direction information according to one or more intra encoding techniques). In an example, the intra encoder (<b>622</b>) also calculates intra prediction results (e.g., predicted block) based on the intra prediction information and reference blocks in the same picture.</p><p id="p-0090" num="0089">The general controller (<b>621</b>) is configured to determine general control data and control other components of the video encoder (<b>603</b>) based on the general control data. In an example, the general controller (<b>621</b>) determines the mode of the block, and provides a control signal to the switch (<b>626</b>) based on the mode. For example, when the mode is the intra mode, the general controller (<b>621</b>) controls the switch (<b>626</b>) to select the intra mode result for use by the residue calculator (<b>623</b>), and controls the entropy encoder (<b>625</b>) to select the intra prediction information and include the intra prediction information in the bitstream; and when the mode is the inter mode, the general controller (<b>621</b>) controls the switch (<b>626</b>) to select the inter prediction result for use by the residue calculator (<b>623</b>), and controls the entropy encoder (<b>625</b>) to select the inter prediction information and include the inter prediction information in the bitstream.</p><p id="p-0091" num="0090">The residue calculator (<b>623</b>) is configured to calculate a difference (residue data) between the received block and prediction results selected from the intra encoder (<b>622</b>) or the inter encoder (<b>630</b>). The residue encoder (<b>624</b>) is configured to operate based on the residue data to encode the residue data to generate the transform coefficients. In an example, the residue encoder (<b>624</b>) is configured to convert the residue data from a spatial domain to a frequency domain, and generate the transform coefficients. The transform coefficients are then subject to quantization processing to obtain quantized transform coefficients. In various embodiments, the video encoder (<b>603</b>) also includes a residue decoder (<b>628</b>). The residue decoder (<b>628</b>) is configured to perform inverse-transform, and generate the decoded residue data. The decoded residue data can be suitably used by the intra encoder (<b>622</b>) and the inter encoder (<b>630</b>). For example, the inter encoder (<b>630</b>) can generate decoded blocks based on the decoded residue data and inter prediction information, and the intra encoder (<b>622</b>) can generate decoded blocks based on the decoded residue data and the intra prediction information. The decoded blocks are suitably processed to generate decoded pictures and the decoded pictures can be buffered in a memory circuit (not shown) and used as reference pictures in some examples.</p><p id="p-0092" num="0091">The entropy encoder (<b>625</b>) is configured to format the bitstream to include the encoded block. The entropy encoder (<b>625</b>) is configured to include various information according to a suitable standard, such as the HEVC standard. In an example, the entropy encoder (<b>625</b>) is configured to include the general control data, the selected prediction information (e.g., intra prediction information or inter prediction information), the residue information, and other suitable information in the bitstream. Note that, according to the disclosed subject matter, when coding a block in the merge submode of either inter mode or bi-prediction mode, there is no residue information.</p><p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a diagram of a video decoder (<b>710</b>) according to another embodiment of the disclosure. The video decoder (<b>710</b>) is configured to receive coded pictures that are part of a coded video sequence, and decode the coded pictures to generate reconstructed pictures. In an example, the video decoder (<b>710</b>) is used in the place of the video decoder (<b>310</b>) in the <figref idref="DRAWINGS">FIG. <b>3</b></figref> example.</p><p id="p-0094" num="0093">In the <figref idref="DRAWINGS">FIG. <b>7</b></figref> example, the video decoder (<b>710</b>) includes an entropy decoder (<b>771</b>), an inter decoder (<b>780</b>), a residue decoder (<b>773</b>), a reconstruction module (<b>774</b>), and an intra decoder (<b>772</b>) coupled together as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0095" num="0094">The entropy decoder (<b>771</b>) can be configured to reconstruct, from the coded picture, certain symbols that represent the syntax elements of which the coded picture is made up. Such symbols can include, for example, the mode in which a block is coded (such as, for example, intra mode, inter mode, bi-predicted mode, the latter two in merge submode or another submode), prediction information (such as, for example, intra prediction information or inter prediction information) that can identify certain sample or metadata that is used for prediction by the intra decoder (<b>772</b>) or the inter decoder (<b>780</b>), respectively, residual information in the form of, for example, quantized transform coefficients, and the like. In an example, when the prediction mode is inter or bi-predicted mode, the inter prediction information is provided to the inter decoder (<b>780</b>); and when the prediction type is the intra prediction type, the intra prediction information is provided to the intra decoder (<b>772</b>). The residual information can be subject to inverse quantization and is provided to the residue decoder (<b>773</b>).</p><p id="p-0096" num="0095">The inter decoder (<b>780</b>) is configured to receive the inter prediction information, and generate inter prediction results based on the inter prediction information.</p><p id="p-0097" num="0096">The intra decoder (<b>772</b>) is configured to receive the intra prediction information, and generate prediction results based on the intra prediction information.</p><p id="p-0098" num="0097">The residue decoder (<b>773</b>) is configured to perform inverse quantization to extract de-quantized transform coefficients, and process the de-quantized transform coefficients to convert the residual from the frequency domain to the spatial domain. The residue decoder (<b>773</b>) may also require certain control information to include the Quantizer Parameter (QP), and that information may be provided by the entropy decoder (<b>771</b>) (data path not depicted as this may be low volume control information only).</p><p id="p-0099" num="0098">The reconstruction module (<b>774</b>) is configured to combine, in the spatial domain, the residual as output by the residue decoder (<b>773</b>) and the prediction results (as output by the inter or intra prediction modules as the case may be) to form a reconstructed block, that may be part of the reconstructed picture, which in turn may be part of the reconstructed video. It is noted that other suitable operations, such as a deblocking operation and the like, can be performed to improve the visual quality.</p><p id="p-0100" num="0099">It is noted that the video encoders (<b>303</b>), (<b>503</b>), and (<b>603</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using any suitable technique. In an embodiment, the video encoders (<b>303</b>), (<b>503</b>), and (<b>603</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using one or more integrated circuits. In another embodiment, the video encoders (<b>303</b>), (<b>503</b>), and (<b>503</b>), and the video decoders (<b>310</b>), (<b>410</b>), and (<b>710</b>) can be implemented using one or more processors that execute software instructions.</p><p id="p-0101" num="0100">II. Intra Block Copy</p><p id="p-0102" num="0101">A block can be coded using a reference block from a different or same picture. Block based compensation using a reference block from a different picture can be referred to as motion compensation. Block based compensation using a reference block from a previously reconstructed area within the same picture can be referred to as intra picture block compensation, current picture referencing (CPR), or intra block copy (IBC). A displacement vector that indicates the offset between the current block and the reference block can be referred to as a block vector (BV or bvL). Different from a motion vector in motion compensation, which can be any value (positive or negative, at either the x or y direction), a BV is subject to constraints to ensure that the reference block has already been reconstructed and the reconstructed samples thereof are available. In some embodiments, in view of parallel processing constraints, a reference area that is beyond certain boundaries (e.g., a tile boundary or wavefront ladder shape boundary) is excluded.</p><p id="p-0103" num="0102">The coding of a BV can be either explicit or implicit. In the explicit mode, the difference between a BV and its predictor can be signaled in a manner similar to an Advanced Motion Vector Prediction (AMVP) mode in inter coding. In the implicit mode, the BV can be recovered from only a predictor, for example in a similar way as a motion vector in merge mode. The resolution of a BV, in some implementations, is set to integer positions or, in some examples, fractional positions.</p><p id="p-0104" num="0103">The use of IBC at the block level can be signaled using a block level flag (or IBC flag). In some examples, this flag can be signaled when the current block is not coded in merge mode. In other examples, this flag can be signaled by a reference index approach, for example, by treating the current decoded picture as a reference picture. Such a reference picture can be placed in the last position of the list, such as in HEVC screen content coding (HEVC SCC). This special reference picture can also be managed together with other temporal reference pictures in the decoded picture buffer (DPB).</p><p id="p-0105" num="0104">While an embodiment of IBC is used as an example in the present disclosure, the embodiments of the present disclosure can be applied to variations of IBC. The variations for IBC include, for example, treating the IBC as a third mode, which is different from the intra or inter prediction mode. Accordingly, the block vector prediction in the merge mode and the AMVP mode may be separated from the regular inter mode. For example, a separate merge candidate list can be defined/created for the IBC mode, where all the entries in the list are block vectors. Similarly, the block vector prediction list in the IBC AMVP mode may consist of only block vectors. The block vector prediction list may follow the same logic as inter merge candidate list or AMVP predictor list in terms of candidate derivation process. For example, the 5 spatial neighboring locations in HEVC or VVC inter merge mode are accessed for IBC to derive its own merge candidate list.</p><p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic illustration of a current block (<b>810</b>) in a current picture (<b>800</b>) to be coded using IBC-based compensation in accordance with an embodiment. In <figref idref="DRAWINGS">FIG. <b>8</b></figref>, an example of using IBC-based compensation is shown where the current picture (<b>800</b>) includes 15 blocks arranged into 3 rows and 5 columns. In some examples, each block corresponds to a CTU. The current block (<b>810</b>) includes a sub-block (<b>812</b>) (e.g., a coding block in the CTU) that has a block vector (<b>822</b>) pointing to a reference sub-block (<b>832</b>) in the current picture (<b>800</b>).</p><p id="p-0107" num="0106">The reconstructed samples of the current picture can be stored in a memory or memory block (e.g., a dedicated or designated memory or portion of memory). In consideration of implementation cost, the reference area where the reconstructed samples for reference blocks remain available may not be as large as an entire frame, depending on a memory size of the dedicated memory. Therefore, for a current sub-block using IBC-based compensation, in some examples, an IBC reference sub-block may be limited to only certain neighboring areas, but not the entire picture.</p><p id="p-0108" num="0107">In one example, the memory size is limited to a size of one CTU, which means that the IBC mode can only be used when the reference block is within the same CTU as the current block. In another example, the memory size is limited to a size of two CTUs, which means that the IBC mode can only be used when the reference block is either within the current CTU, or the CTU to the left of current CTU. When the reference block is outside the constrained reference area (i.e., designated local area), even if it has been reconstructed, the reference samples may not be used for IBC-based compensation. Therefore, the decoder may need to check whether the recovered or determined block vector points to a reference block in the constrained reference area (i.e., valid search area). Aspects of the present disclosure include methods that remove some of the constraints, which allow the decoder to modify and use the block vector even when the block vector points to a reference block that is outside the constrained reference area.</p><p id="p-0109" num="0108">In an embodiment, an effective memory requirement to store reference samples to be used in IBC is one CTU size. In an example, the CTU size is 128&#xd7;128 samples. A current CTU includes a current region under reconstruction. The current region has a size of 64&#xd7;64 samples. Since a reference memory can also store reconstructed samples in the current region, the reference memory can store 3 additional regions of 64&#xd7;64 samples when a reference memory size is equal to the CTU size of 128&#xd7;128 samples. Accordingly, a search range can include certain parts of a previously reconstructed CTU while a total memory requirement for storing reference samples is unchanged (such as 1 CTU size of 128&#xd7;128 samples or 4 64&#xd7;64 reference samples in total).</p><p id="p-0110" num="0109">In an example, when a search range is restrained in IBC, a BV of a current block may be bounded by a current CTB boundary, a left neighbor CTB boundary, or the like, depending on a position of a current block and the memory size.</p><p id="p-0111" num="0110"><figref idref="DRAWINGS">FIGS. <b>9</b>A-<b>9</b>D</figref> show examples of IBC-based compensation according to some embodiments of the present disclosure. Referring to <figref idref="DRAWINGS">FIGS. <b>9</b>A-<b>9</b>D</figref>, a current picture (<b>901</b>) includes a current CTU (<b>915</b>) under reconstruction and a previously reconstructed CTU (<b>910</b>) that is a left neighbor of the current CTU (<b>915</b>). CTUs in the current picture (<b>901</b>) have a CTU size and a CTU width. The current CTU (<b>915</b>) includes 4 regions (<b>916</b>)-(<b>919</b>). Similarly, the previously reconstructed CTU (<b>910</b>) includes 4 regions (<b>911</b>)-(<b>914</b>). In an embodiment, the CTU size is equal to a reference memory size. For example, the CTU size and the reference memory size are 128&#xd7;128 samples, and each of the regions (<b>911</b>)-(<b>914</b>) and (<b>916</b>)-(<b>919</b>) has a size of 64&#xd7;64 samples.</p><p id="p-0112" num="0111">Referring to <figref idref="DRAWINGS">FIG. <b>9</b>A</figref>, the current region (<b>916</b>) is under reconstruction. The current region (<b>916</b>) includes a current block to be reconstructed. According to some embodiments, a search range for the current block excludes the collocated region (<b>911</b>) of the current region (<b>916</b>) and includes the regions (<b>912</b>)-(<b>914</b>) of the previously reconstructed CTU (<b>910</b>).</p><p id="p-0113" num="0112">Referring to <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>, the current region (<b>917</b>) is under reconstruction. The current region (<b>917</b>) includes a current block to be reconstructed. The current region (<b>917</b>) has a collocated (i.e., co-located) region (i.e., the region (<b>912</b>) in the previously reconstructed CTU (<b>910</b>)). A search range for the current block excludes the collocated region (<b>912</b>). The search range includes the regions (<b>913</b>) and (<b>914</b>) of the previously reconstructed CTU (<b>910</b>) and the region (<b>916</b>) in the current CTU (<b>915</b>). The search range further excludes the region (<b>911</b>) due to the constraint of the reference memory size (i.e., one CTU size).</p><p id="p-0114" num="0113">Referring to <figref idref="DRAWINGS">FIG. <b>9</b>C</figref>, the current region (<b>918</b>) is under reconstruction. The current region (<b>918</b>) includes a current block to be reconstructed. The current region (<b>918</b>) has a collocated region (i.e., the region (<b>913</b>)) in the previously reconstructed CTU (<b>910</b>). A search range for the current block excludes the collocated region (<b>913</b>). The search range includes the region (<b>914</b>) of the previously reconstructed CTU (<b>910</b>) and the regions (<b>916</b>) and (<b>917</b>) in the current CTU (<b>915</b>). The search range further excludes the regions (<b>911</b>) and (<b>912</b>) due to the constraint of the reference memory size.</p><p id="p-0115" num="0114">Referring to <figref idref="DRAWINGS">FIG. <b>9</b>D</figref>, the current region (<b>919</b>) is under reconstruction. The current region (<b>919</b>) includes a current block to be reconstructed. The current region (<b>919</b>) has a collocated region (i.e., the region (<b>914</b>)) in the previously reconstructed CTU (<b>910</b>). A search range for the current block excludes the collocated region (<b>914</b>). The search range includes the regions (<b>916</b>)-(<b>918</b>) in the current CTU (<b>915</b>). The search range excludes the regions (<b>911</b>)-(<b>913</b>) due to the constraint of the reference memory size, and thus, the search range excludes the entire previously reconstructed CTU (<b>910</b>).</p><p id="p-0116" num="0115">Various constraints can be applied to a BV and/or a search range. In an embodiment, a search range for a current block under reconstruction in a current CTU is constrained to be within the current CTU.</p><p id="p-0117" num="0116">In an embodiment, a current picture is a luma picture and a current CTU is a luma CTU including a plurality of luma samples and a block vector (mvL, in 1/16&#x2014;pel resolution). In some embodiments, the luma motion vector mvL obeys the following constraints A1, A2, B1, C1, and C2 for bitstream conformance.</p><p id="p-0118" num="0117">In some embodiments, a first constraint (A1) and a second constraint (A2) require that a reference block for the current block is already reconstructed. For example, when the reference block has a rectangular shape, a reference block availability checking process can be implemented to check whether a top-left sample and a bottom-right sample of the reference block are reconstructed. When both the top-left sample and the bottom-right sample of the reference block are reconstructed, the reference block is determined to be reconstructed.</p><p id="p-0119" num="0118">In the first constraint (A1), according to some embodiments, when a derivation process for reference block availability is invoked with a position (xCurr, yCurr) of a top-left sample of the current block set equal to (xCb, yCb) and a position (xCb+(mvL[0]&#x3e;&#x3e;4), yCb+(mvL[1]&#x3e;&#x3e;4)) of the top-left sample of the reference block as inputs, an output is equal to TRUE when the top-left sample of the reference block is reconstructed where the motion vector mvL is a two-dimensional vector having an x component mvL[0] and a y component mvL[1].</p><p id="p-0120" num="0119">In the second constraint (A2), according to some embodiments, when a derivation process for block availability is invoked with the position (xCurr, yCurr) of the top-left sample of the current block set equal to (xCb, yCb) and a position (xCb+(mvL[0]&#x3e;&#x3e;4)+cbWidth&#x2212;1, yCb+(mvL[1]&#x3e;&#x3e;4)+cbHeight&#x2212;1) of the bottom-right sample of the reference block as inputs, an output is equal to TRUE when the bottom-right sample of the reference block is reconstructed. The parameters cbWidth and cbHeight represent a width and a height of the reference block, respectively.</p><p id="p-0121" num="0120">A third constraint (B1), in some embodiments, includes at least one of the following conditions: 1) a value of (mvL[0]&#x3e;&#x3e;4)+cbWidth is less than or equal to 0, which indicates that the reference block is to the left of the current block and does not overlap with the current block; 2) a value of (mvL[1]&#x3e;&#x3e;4)+cbHeight is less than or equal to 0, which indicates that the reference block is above the current block and does not overlap with the current block.</p><p id="p-0122" num="0121">In a fourth constraint (Cl), in some embodiments, the following conditions are true:</p><p id="p-0123" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>yCb</i>+(mv<i>L</i>[1]&#x3e;&#x3e;4))&#x3e;&#x3e;<i>Ctb </i>Log 2SizeY=<i>yCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0124" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>yCb</i>+(mv<i>L</i>[1]&#x3e;&#x3e;4<i>+cb</i>Height&#x2212;1)&#x3e;&#x3e;<i>Ctb </i>Log 2Size<i>Y=yCb&#x3e;&#x3e;Ctb </i>Log 2Size&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0125" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>xCb</i>+(mv<i>L</i>[0]&#x3e;&#x3e;4))&#x3e;&#x3e;<i>Ctb </i>Log 2Size<i>Y</i>&#x3e;=(<i>xCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)&#x2212;1&#x2003;&#x2003;(3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0126" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>xCb</i>+(mv<i>L</i>[0]&#x3e;&#x3e;4)+<i>cb</i>Width&#x2212;1)&#x3e;&#x3e;<i>Ctb </i>Log 2SizeY&#x3c;=(<i>xCb&#x3e;&#x3e;Ctb </i>Log 2SizeY)&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0127" num="0000">where Ctb Log 2 SizeY represents the CTU width in a log 2 form. For example, when the CTU width is 128 samples, Ctb Log 2 SizeY is 7. Eqs. (1) and (2) specify that a CTU including the reference block is in a same CTU row as the current CTU (i.e., the previously reconstructed CTU (<b>1010</b>) is in a same row as the current CTU (<b>1015</b>) when the reference block is in the previously reconstructed CTU (<b>1010</b>)). Eqs. (3) and (4) specify that the CTU including the reference block is either in a left CTU column of the current CTU or a same CTU column as the current CTU. The fourth constraint as described by Eqs. (1)-(4) specify that the CTU including the reference block is either the current CTU, or a left neighboring CTU of the current CTU.</p><p id="p-0128" num="0122">A fifth constraint (C2), in some embodiments, includes that when the reference block is in the left neighbor of the current CTU, a collocated region for the reference block is not reconstructed (i.e., no samples in the collocated region have been reconstructed). Further, the collocated region for the reference block is in the current CTU.</p><p id="p-0129" num="0123">In an example, the fifth constraint can be specified as below: When (xCb+(mvL[0]&#x3e;&#x3e;4))&#x3e;&#x3e;Ctb Log 2SizeY is equal to (xCb&#x3e;&#x3e;Ctb Log 2SizeY)&#x2212;1, the derivation process for reference block availability is invoked with the position of the current block (xCurr, yCurr) set equal to (xCb, yCb) and a position (((xCb+(mvL[0]&#x3e;&#x3e;4)+CtbSizeY)&#x3e;&#x3e;(Ctb Log 2SizeY&#x2212;1))&#x3c;&#x3c;(Ctb Log 2SizeY&#x2212;1), ((yCb+(mvL[1]&#x3e;&#x3e;4))&#x3e;&#x3e;(Ctb Log 2SizeY&#x2212;1))&#x3c;&#x3c;&#x3c;(Ctb Log 2SizeY&#x2212;1)) as inputs, an output is equal to FALSE indicating that the collocated region is not reconstructed.</p><p id="p-0130" num="0124">In the above equations, xCb and yCb are the x and y coordinates of the current block, respectively. The variables cbHeight and cbWidth are the height and width of the current block, respectively. The variables mvL0[0] and mvL0[1] refer to the x and y components of block vector mvL0, respectively. The constraints for the search range and/or the block vector can include a suitable combination of the first, second, third, fourth, and fifth constraints described above. In an example, the first, second, third, fourth, and/or fifth constraints can be modified.</p><p id="p-0131" num="0125">III. Spatial Merge Candidates</p><p id="p-0132" num="0126"><figref idref="DRAWINGS">FIG. <b>10</b></figref> shows an example of spatial merge candidate positions of a current block (<b>1010</b>) in accordance with an embodiment. A maximum of four merge candidates can be selected and derived among the candidate positions shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The order of the derivation can be A0, B0, B1, A1 and B2 in one example. In an example, the position B2 is considered only when any CU of position A0, B0, B1, and A1 is not available or is intra coded. In an example, the CU of a position may not be available when the CU belongs to another slice or tile.</p><p id="p-0133" num="0127">IV. History-Based Merge Candidates Derivation</p><p id="p-0134" num="0128">In some embodiments, history-based motion vector prediction (HMVP) merge candidates are added to an extended merge list of a current CU after the spatial and temporal candidate MVP. In HMVP, motion information of a previously coded block can be stored in a table (or a history buffer) and used as a MVP candidate for the current CU. Such motion information is referred to as HMVP candidates. The table with multiple HMVP candidates can be maintained during an encoding or decoding process. The table can be reset (emptied) when a new CTU row is encountered in one example. Whenever there is a non-sub-block inter-coded CU, the associated motion information can be added to a last entry of the table as a new HMVP candidate in an embodiment.</p><p id="p-0135" num="0129">In an embodiment, a size of an HMVP table, denoted by S, is set to be 6. Accordingly, up to 6 HMVP candidates may be added to the table. When inserting a new motion candidate to the table, a constrained first-in-first-out (FIFO) rule can be utilized in an embodiment. In addition, a redundancy check can be applied when adding a new HMVP candidate to find whether there is an identical HMVP in the table. If an identical HMVP in the table is found, the identical HMVP candidate may be removed from the table and all the HMVP candidates following the removed HMVP candidate are moved forward. The new HMVP candidate can then be added at the end of the table.</p><p id="p-0136" num="0130">In an embodiment, HMVP candidates are used in an extended merge candidate list construction process. Several newly added HMVP candidates in the table can be checked in order and inserted to the extended candidate list at positions after TMVP candidate in an embodiment. A redundancy check may be applied to determine if the HMVP candidates are similar or the same as a spatial or temporal merge candidate previously added to the extended merge list.</p><p id="p-0137" num="0131">HMVP candidates could also be used in the AMVP candidate list construction process. The motion vectors of the last K HMVP candidates in the table are inserted after the TMVP candidate. Only HMVP candidates with the same reference picture as the AMVP target reference picture are used to construct the AMVP candidate list. Pruning is applied on the HMVP candidates. In some applications, K is set to 4 while the AMVP list size is kept unchanged, i.e., equal to 2.</p><p id="p-0138" num="0132">To reduce the number of redundancy check operations, the following simplifications are introduced in an embodiment:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0133">(i) The number of HMPV candidates used for generation of an extended merge list is set as (N&#x3c;=4) ? M: (8&#x2212;N), wherein N indicates a number of existing candidates in the extended merge list and M indicates a number of available HMVP candidates in a history table.        <ul id="ul0003" list-style="none">            <li id="ul0003-0001" num="0134">(ii) Once a total number of available merge candidates in the extended merge list reaches a number of the maximally allowed merge candidates minus 1, the merge candidate list construction process from HMVP is terminated.</li>        </ul>        </li>    </ul>    </li></ul></p><p id="p-0139" num="0135">According to some embodiments, when IBC operates as a separate mode from inter mode, a separate history buffer, referred to as HBVP, may be used for storing previously coded IBC block vectors. As a separate mode from inter prediction, it is desirable to have a simplified block vector derivation process for IBC mode. The candidate list for IBC BV prediction in AMVP mode may share the one used in IBC merge mode (merge candidate list), with 2 spatial candidates+5 HBVP candidates.</p><p id="p-0140" num="0136">The merge candidate list size of IBC mode may be assigned as MaxNumMergeCand. The MaxNumMergeCand may be determined by the inter mode merge candidate list size MaxNumMergeCand, which is specified, in some examples, as six_minus_max_num_merge_cand. The variable six_minus_max_num_merge_cand may specify the maximum number of merge motion vector prediction (MVP) candidates supported in a slice subtracted from <b>6</b>.</p><p id="p-0141" num="0137">In some examples, the maximum number of merge MVP candidates, MaxNumMergeCand is derived may be derived as:</p><p id="p-0142" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>MaxNumMergeCand=6&#x2212;six_minus_max_num_merge_cand<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0143" num="0138">The value of MaxNumMergeCand may be in the range of 1 to 6, inclusive. The BV prediction in non-merge mode may share the same list generated for IBC merge mode. However, in some examples, for a non-merge mode case, the candidate list size is always 2. Accordingly, there is a need to develop proper methods to handle the IBC merge candidate list size as well as IBC non-merge mode (AMVP mode) predictor list size when MaxNumMergeCand is set to be various values and the maximum number of IBC merge candidate list is set differently compared to an inter merge candidate list size.</p><p id="p-0144" num="0139">V. Conversion/Modification of Block Vector for IBC Mode</p><p id="p-0145" num="0140">As described above, the existing constraints for a valid decoded block vector includes at least two requirements in some embodiments:</p><p id="p-0146" num="0141">(i) The reference block pointed by the block vector needs to be fully reconstructed and inside the same coding region as the current block. The same coding region may refer to areas that samples can predict each other, such as the same tile, or slice, or tile group. This type of constraint may be referred to as availability check constraint.</p><p id="p-0147" num="0142">(ii) The reference block pointed by the block vector needs to be inside the allowed search range in view of the considerations of wave parallel processing (WPP) capability, and current and left CTU range for memory requirement, etc. This type of constraint may be referred to as a range constraint.</p><p id="p-0148" num="0143">Aspects of the disclosure include methods that convert/modify the decoded block vector such that some of the constraints (e.g., range constraint, availability check) may be removed. In this regard, the decoder may not need to check if the block vector meets some of the requirements in decoding a current block in IBC mode.</p><p id="p-0149" num="0144">For example, the bitstream conformance contraints may include that the motion vector (mvL) shall point to a reference block that is fully contained in the same CTU as the current block or fully contained in a block to the left with the same height of the current CTU and a width equal to 128 luma samples, i.e., all of the following conditions shall be true:</p><p id="p-0150" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>Ref<i>TL&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y=yCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y;</i>&#x2003;&#x2003;(5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0151" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>Ref<i>BR&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y=yCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y;</i>&#x2003;&#x2003;(6)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0152" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>Ref<i>TL&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>&#x3e;=(<i>xCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)+Min(1,7<i>&#x2212;Ctb </i>Log 2Size<i>Y</i>)&#x2212;(1&#x3c;((7<i>&#x2212;Ctb </i>Log 2Size<i>Y</i>)&#x3c;&#x3c;1)));&#x2003;&#x2003;(7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0153" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>Ref<i>BR&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>&#x3c;=(<i>xCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>).&#x2003;&#x2003;(8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0154" num="0145">The above bitstream conformance constraints (i.e., Eqs. (5)-(8)) may be removed when the block vector is converted/modified according to some embodiments of the present disclosure.</p><p id="p-0155" num="0146">In some embodiments of the present disclosure, a modulo operation may be performed on both the x and y components of a block vector based on a size of a current CTU such that, when a reference block's top-left location is outside the pre-defined seach range for IBC (e.g., current CTU or the left neighboring CTU), the modified block vector may move the reference block's top-left corner within a target range (e.g., the allowed/valid search range based on the reference memory size and the position of the current block in the current CTU). In an example, the modified block vector may point to another reference block's top-left corner within the target range. Alternatively, when the block vector points to a reference block that is within the target range, no change (e.g., modification) may be applied to this block vector.</p><p id="p-0156" num="0147">In an embodiment of the present disclosure, an invalid block vector (e.g., out of the valid search range) may be modified to be in the current CTU. In an embodiment of the present disclosure, an invalid block vector may be modified to be in the current CTU or the left neighboring CTU when the target range includes the current CTU and the left neighboring CTU. In an embodiment of the present disclosure, the target range can include the current CTU and a number of left CTUs depending on a size of the reference sample memory and a size of the CTUs in the current picture.</p><p id="p-0157" num="0148">In an example, the x component of the block vector and the y component of the block vector may be modified using the following fomulas:</p><p id="p-0158" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>bv<i>L</i>[0]=<i>x </i>Ref<i>TL</i>%<i>Ctb</i>Size<i>Y+x</i>CurrCtu<i>TL&#x2212;xCb</i>&#x2212;((<i>x </i>RefCtu<i>TL&#x3c;x</i>CurrCtu<i>TL</i>&#x26;&#x26;<i>x</i>CurrCtu<sub>TL</sub><i>&#x2212;x </i>RefCtu<i>TL</i>&#x3c;=numLeftCtus*<i>Ctb</i>Size<i>Y</i>)?<i>x</i>CurrCtu<i>TL&#x2212;x </i>RefCtu<i>TL:</i>0)&#x2003;&#x2003;(9)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0159" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>bv<i>L</i>[1]=<i>y</i>Ref<i>TL</i>% CtbSize<i>Y+y</i>CurrCtu<i>TL&#x2212;yCb.</i>&#x2003;&#x2003;(10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0160" num="0149">In the above two Eqs. (9) and (10), bvL[0] represents the x component of the block vector and bvL[1] represents the y component of the block vector. CtbSizeY represents a size of the CTU (e.g., in luma samples) and &#x201c;%&#x201d; is a modulo operator. The modulo operator can be performed based on a multiple of a size of the CTU when the target range includes one or more left CTUs. The multiple corresponds to the number of one or more left CTUs included in the target range. For example, the multiple can be equal to 2 when the target range includes the current CTU and a left neighboring CTU, or 8 when the target range includes the current CTU and three left CTUs. The top-left location of the current CTU (xCurrCtuTL, yCurrCtuTL) and the top-left location of the CTU that the reference block locates in (xRefCtuTL, yRefCtuTL) may be derived as follows:</p><p id="p-0161" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>x</i>CurrCtu<i>TL,y</i>CurrCtu<i>TL</i>)=((<i>xCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)&#x3c;&#x3c;<i>Ctb </i>Log 2Size<i>Y</i>,(<i>yCb&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)&#x3c;<i>Ctb </i>Log 2Size<i>Y</i>);&#x2003;&#x2003;(11)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0162" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>(<i>x</i>RefCtu<i>TL,y</i>RefCtu<i>TL</i>)=((<i>x</i>Ref<i>TL&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)&#x3c;&#x3c;<i>Ctb </i>Log 2Size<i>Y</i>,(<i>y</i>Ref<i>TL&#x3e;&#x3e;Ctb </i>Log 2Size<i>Y</i>)&#x3c;&#x3c;<i>Ctb </i>Log 2Size<i>Y.</i>&#x2003;&#x2003;(12)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0163" num="0150">In addition, the variable numLeftCtus in Eq. (9) indicates the number of left CTUs of the current CTU and may be derived as follows:</p><p id="p-0164" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>numLeftCtus=(1&#x3c;&#x3c;((7<i>&#x2212;Ctb </i>Log 2Size<i>Y</i>)&#x3c;&#x3c;1)))&#x2212;Min(1,7<i>&#x2212;Ctb </i>Log 2Size<i>Y</i>)&#x2003;&#x2003;(13)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0165" num="0151">After the modification, a shifting operation may be performed to change the resolution of the block vector into the one used for storage. The following is an example of shifting the resolution of the block vector:</p><p id="p-0166" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>mv<i>L</i>[0]=bv<i>L</i>[0]&#x3c;&#x3c;4;&#x2003;&#x2003;(14)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0167" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>mv<i>L</i>[1]=bv<i>L</i>[1]&#x3c;&#x3c;4.&#x2003;&#x2003;(15)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0168" num="0152">In some embodiments of the present disclosure, the block vector may be modified such that the offset of the reference block relative to the CTU where it was located before modification is the same as the offset of the modified reference block to the current CTU after the modification. In this regard, the modification of the block vector may not result in a modification of the offset. The offset may be equal to (xRefCtuTL&#x3c;xCurrCtuTL &#x26;&#x26; xCurrCtuTL&#x2212;xRefCtuTL&#x3c;=numLeftCtus*CtbSizeY) in Eq. (9).</p><p id="p-0169" num="0153">In an embodiment of the present disclosure, the reference block's bottom-right corner (xRefBR, yRefBR) may be modified in a similar way as its top-left corner (xRefTL, yRefTL), which is described above. Therefore, aspects of the disclosure can ensure that the entire reference block is within the current CTU, not just the top-left corner of the reference block.</p><p id="p-0170" num="0154">In an embodiment of the present disclosure, a clipping operation may be performed to regulate the decoded block vector such that after clipping, the block vector always points to a reference block within the target range. When a reference block's top-left location is outside the allowed seach range for IBC (e.g., current CTU or the left neighboring CTU), the modified block vector can adjust the reference block's top-left corner so that the reference block's top-left corner is within a target range. Alternatively, when the block vector points to a reference block within the target range, no change (e.g., clipping operation) may be applied to this block vector.</p><p id="p-0171" num="0155">In an example, if one of the x or y component of the block vector is outside the target range, by applying the clipping operation, the top-left corner of the reference block may be clipped into the target range. The bottom-right corner of the reference block may also be clipped into the target range. When both the top-left corner of the reference block and the bottom-right corner of the reference block are clipped into the target range, the entire reference block is within the target range.</p><p id="p-0172" num="0156">In an embodiment, when the reference block's top-left corner's y coordinate (indicated by the block vector) is outside the current CTU row, the block vector may be clipped to be at the top row of the current CTU (i.e., at a boundary of the current CTU). Similarly, when the reference block's top-left corner's x coordinate (indicated by the block vector) is outside the current CTU or left neighboring CTU range, the block vector may be clipped to be at the leftmost column of the current CTU. Accordingly, an out-of-bound block vector can be clipped such that the modified reference block is at either the top row or leftmost column of the current CTU.</p><p id="p-0173" num="0157">It is noted that all other constraints (e.g., the first, second, third, and fifth constraints described above) may still be used/imposed to evaluate whether the modified block vector is valid.</p><p id="p-0174" num="0158">In an embodiment of the present disclosure, the following bitstream constraints may be removed by applying modifications (either clipping or modulo operations described above) to the decoded block vector:</p><p id="p-0175" num="0159">One or both the following conditions shall be true:</p><p id="p-0176" num="0160">The value of (mvL[0]&#x3e;&#x3e;4)+cbWidth is less than or equal to 0; and</p><p id="p-0177" num="0161">The value of (mvL[1]&#x3e;&#x3e;4)+cbHeight is less than or equal to 0.</p><p id="p-0178" num="0162">The above conditions may be used to ensure that the reference block does not overlap with the current block. If the reference block overlaps with the current block (i.e., both of the conditions are false), the block vector can be modified to ensure at least one of the above two conditions becomes true. In an embodiment of the present disclosure, the above two conditions may be removed even if no operation/modification is performed on the decoded block vector.</p><p id="p-0179" num="0163">In an example, the following operations may be applied to ensure that one of the above two conditions becomes true:</p><p id="p-0180" num="0164">When (mvL[0]&#x3e;&#x3e;4)+cbWidth&#x3e;0 and (mvL[1]&#x3e;&#x3e;4)+cbHeight&#x3e;0, the following applies:</p><p id="p-0181" num="0165">mvL[0]=&#x2212;cbWidth&#x3c;&#x3c;4.</p><p id="p-0182" num="0166">In another example, the following operations may be applied to ensure that one of the above two conditions becomes true:</p><p id="p-0183" num="0167">When (mvL[0]&#x3e;&#x3e;4)+cbWidth&#x3e;0 and (mvL[1]&#x3e;&#x3e;4)+cbHeight&#x3e;0, the following applies:</p><p id="p-0184" num="0168">mvL[1]=&#x2212;cbHeight&#x3c;&#x3c;4.</p><p id="p-0185" num="0169">VI. Exemplary Decoding Processes</p><p id="p-0186" num="0170"><figref idref="DRAWINGS">FIG. <b>11</b></figref> shows a flow chart outlining a decoding process (<b>1100</b>) according to some embodiments of the disclosure. The process (<b>1100</b>) can be used in decoding a current block in IBC mode. In various embodiments, the process (<b>1100</b>) can be executed by processing circuitry, such as the processing circuitry in the terminal devices (<b>210</b>), (<b>220</b>), (<b>230</b>) and (<b>240</b>), the processing circuitry that performs functions of the video decoder (<b>310</b>), the processing circuitry that performs functions of the video decoder (<b>410</b>), and the like. In some embodiments, the process (<b>1100</b>) is implemented in software instructions, thus when the processing circuitry executes the software instructions, the processing circuitry performs the process (<b>1100</b>). The process starts at (S<b>1101</b>) and proceeds to (S<b>1110</b>).</p><p id="p-0187" num="0171">At (S<b>1110</b>), a coded video bitstream including a current picture is received.</p><p id="p-0188" num="0172">At (S<b>1120</b>), whether a current block in a current coding tree unit (CTU) included in the current picture is coded in intra block copy (IBC) mode is determined based on a flag included in the coded video bitstream. The flag may be the IBC flag that indicates the use of IBV at a block level. If it is determined that the current block is not coded in IBC mode, the process illustrated in <figref idref="DRAWINGS">FIG. <b>11</b></figref> is terminated.</p><p id="p-0189" num="0173">At (S<b>1130</b>), in response to determining that the current block is coded in IBC mode, a block vector that points to a first reference block of the current block is determined. The block vector may be determined based on an IBC AMVP mode or merge mode.</p><p id="p-0190" num="0174">At (S<b>1140</b>), an operation is performed on the block vector so that when the first reference block is not fully reconstructed or not within a valid search range of the current block, the block vector is modified to point to a second reference block that is in a fully reconstructed region and within the valid search range of the current block. For example, a modulo operation can be performed on each of an x component and a y component of the block vector based on a size of the current CTU. In an embodiment, the x component of the block vector and the y component of the block vector may be modified using the Eq. (9) and Eq. (10). In an embodiment, a modulo operation is performed on the x component of the block vector based on a multiple of the size of the current CTU. A modulo operation is performed on the y component of the block vector based on the size of the CTU. When the block vector points to a reference block that is fully reconstructed and within a valid search range of the current block, the performed operation (e.g., Eq. (9) and Eq. (10)) does not modify the block vector. In that case, the first reference block is the same as the second reference block.</p><p id="p-0191" num="0175">At (S<b>1150</b>), the current block is decoded based on the modified block vector. Specifically, the current block may be decoded based on the reference samples in the second reference block pointed by the modified block vector. The process (<b>1100</b>) proceeds to and terminates at (S<b>1199</b>).</p><p id="p-0192" num="0176">VII. Computer System</p><p id="p-0193" num="0177">The techniques described above, can be implemented as computer software using computer-readable instructions and physically stored in one or more computer-readable media. For example, <figref idref="DRAWINGS">FIG. <b>12</b></figref> shows a computer system (<b>1200</b>) suitable for implementing certain embodiments of the disclosed subject matter.</p><p id="p-0194" num="0178">The computer software can be coded using any suitable machine code or computer language, that may be subject to assembly, compilation, linking, or like mechanisms to create code comprising instructions that can be executed directly, or through interpretation, micro-code execution, and the like, by one or more computer central processing units (CPUs), Graphics Processing Units (GPUs), and the like.</p><p id="p-0195" num="0179">The instructions can be executed on various types of computers or components thereof, including, for example, personal computers, tablet computers, servers, smartphones, gaming devices, internet of things devices, and the like.</p><p id="p-0196" num="0180">The components shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref> for computer system (<b>1200</b>) are exemplary in nature and are not intended to suggest any limitation as to the scope of use or functionality of the computer software implementing embodiments of the present disclosure. Neither should the configuration of components be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary embodiment of a computer system (<b>1200</b>).</p><p id="p-0197" num="0181">Computer system (<b>1200</b>) may include certain human interface input devices. Such a human interface input device may be responsive to input by one or more human users through, for example, tactile input (such as: keystrokes, swipes, data glove movements), audio input (such as: voice, clapping), visual input (such as: gestures), olfactory input (not depicted). The human interface devices can also be used to capture certain media not necessarily directly related to conscious input by a human, such as audio (such as: speech, music, ambient sound), images (such as: scanned images, photographic images obtain from a still image camera), video (such as two-dimensional video, three-dimensional video including stereoscopic video).</p><p id="p-0198" num="0182">Input human interface devices may include one or more of (only one of each depicted): keyboard (<b>1201</b>), mouse (<b>1202</b>), trackpad (<b>1203</b>), touch screen (<b>1210</b>), data-glove (not shown), joystick (<b>1205</b>), microphone (<b>1206</b>), scanner (<b>1207</b>), camera (<b>1208</b>).</p><p id="p-0199" num="0183">Computer system (<b>1200</b>) may also include certain human interface output devices. Such human interface output devices may be stimulating the senses of one or more human users through, for example, tactile output, sound, light, and smell/taste. Such human interface output devices may include tactile output devices (for example tactile feedback by the touch-screen (<b>1210</b>), data-glove (not shown), or joystick (<b>1205</b>), but there can also be tactile feedback devices that do not serve as input devices), audio output devices (such as: speakers (<b>1209</b>), headphones (not depicted)), visual output devices (such as screens (<b>1210</b>) to include CRT screens, LCD screens, plasma screens, OLED screens, each with or without touch-screen input capability, each with or without tactile feedback capability-some of which may be capable to output two dimensional visual output or more than three dimensional output through means such as stereographic output; virtual-reality glasses (not depicted), holographic displays and smoke tanks (not depicted)), and printers (not depicted).</p><p id="p-0200" num="0184">Computer system (<b>1200</b>) can also include human accessible storage devices and their associated media such as optical media including CD/DVD ROM/RW (<b>1220</b>) with CD/DVD or the like media (<b>1221</b>), thumb-drive (<b>1222</b>), removable hard drive or solid state drive (<b>1223</b>), legacy magnetic media such as tape and floppy disc (not depicted), specialized ROM/ASIC/PLD based devices such as security dongles (not depicted), and the like.</p><p id="p-0201" num="0185">Those skilled in the art should also understand that term &#x201c;computer readable media&#x201d; as used in connection with the presently disclosed subject matter does not encompass transmission media, carrier waves, or other transitory signals.</p><p id="p-0202" num="0186">Computer system (<b>1200</b>) can also include an interface to one or more communication networks. Networks can for example be wireless, wireline, optical. Networks can further be local, wide-area, metropolitan, vehicular and industrial, real-time, delay-tolerant, and so on. Examples of networks include local area networks such as Ethernet, wireless LANs, cellular networks to include GSM, 3G, 4G, 5G, LTE and the like, TV wireline or wireless wide area digital networks to include cable TV, satellite TV, and terrestrial broadcast TV, vehicular and industrial to include CANBus, and so forth. Certain networks commonly require external network interface adapters that attached to certain general purpose data ports or peripheral buses (<b>1249</b>) (such as, for example USB ports of the computer system (<b>1200</b>)); others are commonly integrated into the core of the computer system (<b>1200</b>) by attachment to a system bus as described below (for example Ethernet interface into a PC computer system or cellular network interface into a smartphone computer system). Using any of these networks, computer system (<b>1200</b>) can communicate with other entities. Such communication can be uni-directional, receive only (for example, broadcast TV), uni-directional send-only (for example CANbus to certain CANbus devices), or bi-directional, for example to other computer systems using local or wide area digital networks. Certain protocols and protocol stacks can be used on each of those networks and network interfaces as described above.</p><p id="p-0203" num="0187">Aforementioned human interface devices, human-accessible storage devices, and network interfaces can be attached to a core (<b>1240</b>) of the computer system (<b>1200</b>).</p><p id="p-0204" num="0188">The core (<b>1240</b>) can include one or more Central Processing Units (CPU) (<b>1241</b>), Graphics Processing Units (GPU) (<b>1242</b>), specialized programmable processing units in the form of Field Programmable Gate Areas (FPGA) (<b>1243</b>), hardware accelerators for certain tasks (<b>1244</b>), and so forth. These devices, along with Read-only memory (ROM) (<b>1245</b>), Random-access memory (<b>1246</b>), internal mass storage such as internal non-user accessible hard drives, SSDs, and the like (<b>1247</b>), may be connected through a system bus (<b>1248</b>). In some computer systems, the system bus (<b>1248</b>) can be accessible in the form of one or more physical plugs to enable extensions by additional CPUs, GPU, and the like. The peripheral devices can be attached either directly to the core's system bus (<b>1248</b>), or through a peripheral bus (<b>1249</b>). Architectures for a peripheral bus include PCI, USB, and the like.</p><p id="p-0205" num="0189">CPUs (<b>1241</b>), GPUs (<b>1242</b>), FPGAs (<b>1243</b>), and accelerators (<b>1244</b>) can execute certain instructions that, in combination, can make up the aforementioned computer code. That computer code can be stored in ROM (<b>1245</b>) or RAM (<b>1246</b>). Transitional data can be also be stored in RAM (<b>1246</b>), whereas permanent data can be stored for example, in the internal mass storage (<b>1247</b>). Fast storage and retrieve to any of the memory devices can be enabled through the use of cache memory, that can be closely associated with one or more CPU (<b>1241</b>), GPU (<b>1242</b>), mass storage (<b>1247</b>), ROM (<b>1245</b>), RAM (<b>1246</b>), and the like.</p><p id="p-0206" num="0190">The computer readable media can have computer code thereon for performing various computer-implemented operations. The media and computer code can be those specially designed and constructed for the purposes of the present disclosure, or they can be of the kind well known and available to those having skill in the computer software arts.</p><p id="p-0207" num="0191">As an example and not by way of limitation, the computer system having architecture (<b>1200</b>), and specifically the core (<b>1240</b>) can provide functionality as a result of processor(s) (including CPUs, GPUs, FPGA, accelerators, and the like) executing software embodied in one or more tangible, computer-readable media. Such computer-readable media can be media associated with user-accessible mass storage as introduced above, as well as certain storage of the core (<b>1240</b>) that are of non-transitory nature, such as core-internal mass storage (<b>1247</b>) or ROM (<b>1245</b>). The software implementing various embodiments of the present disclosure can be stored in such devices and executed by core (<b>1240</b>). A computer-readable medium can include one or more memory devices or chips, according to particular needs. The software can cause the core (<b>1240</b>) and specifically the processors therein (including CPU, GPU, FPGA, and the like) to execute particular processes or particular parts of particular processes described herein, including defining data structures stored in RAM (<b>1246</b>) and modifying such data structures according to the processes defined by the software. In addition or as an alternative, the computer system can provide functionality as a result of logic hardwired or otherwise embodied in a circuit (for example: accelerator (<b>1244</b>)), which can operate in place of or together with software to execute particular processes or particular parts of particular processes described herein. Reference to software can encompass logic, and vice versa, where appropriate. Reference to a computer-readable media can encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software.</p><heading id="h-0007" level="1">APPENDIX A: ACRONYMS</heading><p id="p-0208" num="0192">JEM: joint exploration model<br/>VVC: versatile video coding<br/>BMS: benchmark set</p><heading id="h-0008" level="2">MV: Motion Vector</heading><heading id="h-0009" level="2">HEVC: High Efficiency Video Coding</heading><heading id="h-0010" level="2">SEI: Supplementary Enhancement Information</heading><heading id="h-0011" level="2">VUI: Video Usability Information</heading><heading id="h-0012" level="2">GOPs: Groups of Pictures</heading><heading id="h-0013" level="2">TUs: Transform Units,</heading><heading id="h-0014" level="2">PUs: Prediction Units</heading><heading id="h-0015" level="2">CTUs: Coding Tree Units</heading><heading id="h-0016" level="2">CTBs: Coding Tree Blocks</heading><heading id="h-0017" level="2">PBs: Prediction Blocks</heading><heading id="h-0018" level="2">HRD: Hypothetical Reference Decoder</heading><heading id="h-0019" level="2">SNR: Signal Noise Ratio</heading><heading id="h-0020" level="2">CPUs: Central Processing Units</heading><heading id="h-0021" level="2">GPUs: Graphics Processing Units</heading><heading id="h-0022" level="2">CRT: Cathode Ray Tube</heading><heading id="h-0023" level="2">LCD: Liquid-Crystal Display</heading><heading id="h-0024" level="2">OLED: Organic Light-Emitting Diode</heading><heading id="h-0025" level="2">CD: Compact Disc</heading><heading id="h-0026" level="2">DVD: Digital Video Disc</heading><heading id="h-0027" level="2">ROM: Read-Only Memory</heading><heading id="h-0028" level="2">RAM: Random Access Memory</heading><heading id="h-0029" level="2">ASIC: Application-Specific Integrated Circuit</heading><heading id="h-0030" level="2">PLD: Programmable Logic Device</heading><heading id="h-0031" level="2">LAN: Local Area Network</heading><p id="p-0209" num="0193">GSM: Global System for Mobile communications</p><heading id="h-0032" level="2">LTE: Long-Term Evolution</heading><heading id="h-0033" level="2">CANBus: Controller Area Network Bus</heading><heading id="h-0034" level="2">USB: Universal Serial Bus</heading><heading id="h-0035" level="2">PCI: Peripheral Component Interconnect</heading><heading id="h-0036" level="2">FPGA: Field Programmable Gate Areas</heading><p id="p-0210" num="0194">SSD: solid-state drive</p><heading id="h-0037" level="2">IC: Integrated Circuit</heading><heading id="h-0038" level="2">CU: Coding Unit</heading><heading id="h-0039" level="2">CG: Coefficient Group</heading><heading id="h-0040" level="2">IBC: Intra Block Copy</heading><p id="p-0211" num="0195">While this disclosure has described several exemplary embodiments, there are alterations, permutations, and various substitute equivalents, which fall within the scope of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the disclosure and are thus within the spirit and scope thereof.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of video encoding, comprising:<claim-text>determining a block vector of a current block that is to be coded in intra block copy (IBC) mode, the block vector pointing to a first reference block of the current block in a current picture;</claim-text><claim-text>performing an operation on at least one component of the block vector based on the first reference block being outside a search range of the current block, the block vector being modified by the operation to point to a second reference block that is within the search range for the current block; and</claim-text><claim-text>encoding the current block based on the modified block vector,</claim-text><claim-text>wherein the performing the operation includes performing a modulo operation on a y component of the block vector based on a size of a current coding tree unit (CTU) that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the search range is in a fully reconstructed region, and</claim-text><claim-text>the second reference block and the current block are in a same tile, slice, or tile group.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation further comprises:<claim-text>performing the modulo operation on an x component of the block vector based on the size of the current CTU that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation comprises:<claim-text>performing the modulo operation on an x component of the block vector based on a multiple of the size of the current CTU that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation modifies the block vector only when the first reference block is not fully reconstructed or not within the search range of the current block.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation does not modify the block vector when the first reference block is fully reconstructed and within the search range of the current block.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the second reference block is in the search range of the current block, and</claim-text><claim-text>the search range includes the current CTU that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation modifies the block vector such that an offset of the first reference block relative to a CTU including the first reference block is the same as an offset of the second reference block relative to the current CTU that includes the current block.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing the operation comprises:<claim-text>clipping the block vector so that the clipped block vector points to the second reference block that is at a boundary of the search range of the current block based on the first reference block not being fully reconstructed or not being within the search range of the current block.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An apparatus, comprising:<claim-text>processing circuitry configured to<claim-text>determine a block vector of a current block that is to be coded in intra block copy (IBC) mode, the block vector pointing to a first reference block of the current block in a current picture;</claim-text><claim-text>perform an operation on at least one component of the block vector based on the first reference block being outside a search range of the current block, the block vector being modified by the operation to point to a second reference block that is within the search range for the current block; and</claim-text><claim-text>encode the current block based on the modified block vector, wherein</claim-text></claim-text><claim-text>the operation performed on the at least one component includes a modulo operation performed on a y component of the block vector based on a size of a current coding tree unit (CTU) that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the search range is in a fully reconstructed region, and</claim-text><claim-text>the second reference block and the current block are in a same tile, slice, or tile group.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operation performed on the at least one component further includes the modulo operation performed on an x component of the block vector based on the size of the current CTU that includes the current block.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the operation performed on the at least one component further includes the modulo operation performed on an x component of the block vector based on a multiple of the size of the current CTU that includes the current block.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing circuitry is configured to modify the block vector only when the first reference block is not fully reconstructed or not within the search range of the current block.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing circuitry is configured to not modify the block vector when the first reference block is fully reconstructed and within the search range of the current block.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the second reference block is in the search range of the current block, and</claim-text><claim-text>the search range includes the current CTU that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing circuitry is configured to modify the block vector such that an offset of the first reference block relative to a CTU including the first reference block is the same as an offset of the second reference block relative to the current CTU that includes the current block.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the processing circuitry is configured to:<claim-text>clip the block vector so that the clipped block vector points to the second reference block that is at a boundary of the search range of the current block based on the first reference block not being fully reconstructed or not being within the search range of the current block.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A non-transitory computer-readable storage medium storing instructions which when executed by a computer for video decoding cause the computer to perform:<claim-text>determining a block vector of a current block that is to be coded in intra block copy (IBC) mode, the block vector pointing to a first reference block of the current block in a current picture;</claim-text><claim-text>performing an operation on at least one component of the block vector based on the first reference block being outside a search range of the current block, the block vector being modified by the operation to point to a second reference block that is within the search range for the current block; and</claim-text><claim-text>encoding the current block based on the modified block vector,</claim-text><claim-text>wherein the performing the operation includes performing a modulo operation on a y component of the block vector based on a size of a current coding tree unit (CTU) that includes the current block.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein<claim-text>the search range is in a fully reconstructed region, and</claim-text><claim-text>the second reference block and the current block are in a same tile, slice, or tile group.</claim-text></claim-text></claim></claims></us-patent-application>