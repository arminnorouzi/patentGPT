<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004725A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004725</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17363120</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>35</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>58</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20200101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>40</main-group><subgroup>35</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>51</main-group><subgroup>22</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">GENERATING TARGETED MESSAGE DISTRIBUTION LISTS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>International Business Machines Corporation</orgname><address><city>Armonk</city><state>NY</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>PEIPELMAN</last-name><first-name>JASON L.</first-name><address><city>Travis</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>BANDA</last-name><first-name>ERICA</first-name><address><city>Willis</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Kocheisen</last-name><first-name>Rolf</first-name><address><city>Leander</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Vermeer</last-name><first-name>Eric</first-name><address><city>Leander</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Yang</last-name><first-name>Debora</first-name><address><city>Austin</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">An approach for generating a distribution list. The approach analyzes a message associated with a user to create a message bag of words (BOW). The approach can analyze a history of messages associated with the user to create a plurality of history message BOWs. The approach can calculate similarity factors between the message BOW and the plurality of history BOWs, respectively. If a similarity factor is &#x201c;&#x3e;=&#x201d; a predetermined similarity threshold, the approach can add a history message to a similar message list. The approach can calculate interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list. If an interest factor is &#x201c;&#x3e;=&#x201d; a predetermined interest threshold, the approach can add a contact associated with the interest factor to a suggested contact list. The approach can prioritize the suggested contact list and insert the list as a distribution list.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="115.65mm" wi="158.75mm" file="US20230004725A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="191.01mm" wi="157.99mm" orientation="landscape" file="US20230004725A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.47mm" wi="151.89mm" orientation="landscape" file="US20230004725A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="130.47mm" wi="97.03mm" file="US20230004725A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="135.55mm" wi="128.10mm" file="US20230004725A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="177.63mm" wi="123.36mm" file="US20230004725A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="182.54mm" wi="173.65mm" file="US20230004725A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL FIELD</heading><p id="p-0002" num="0001">The present invention relates generally to creating distribution lists, and more specifically, creating a topic/event distribution list based on previous interest in the topic/event.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">When scheduling an event, it is difficult to prepare an invitation list for the event without inadvertently excluding people from the list that should have been invited. In general, a manual search is performed of old texts and/or emails to find discussions about similar events and topics and a distribution list is built by remembering or writing down the names associated with the identified texts and or emails.</p><p id="p-0004" num="0003">This process takes a significant amount of time and is error prone because of the manual operation. Accordingly, people of interest are still excluded from the mailing list either because they were missed in the manual search of user identities, or their identifying monikers were incorrectly entered for inclusion in the list.</p><p id="p-0005" num="0004">Attempts have been made to solve this problem by applications such as Google Circles, a Facebook private group and static/dynamic distribution lists. Each of these attempts has the same general problems, they require manual creation and participant interest must be tracked manually to maintain an accurate and useful distribution list.</p><p id="p-0006" num="0005">A need has arisen for a self-generating and self-maintaining event distribution list.</p><heading id="h-0003" level="1">BRIEF SUMMARY</heading><p id="p-0007" num="0006">According to an embodiment of the present invention, a computer-implemented method for generating a distribution list, the computer-implemented method comprising: analyzing a message associated with a user to create a message bag of words (BOW); analyzing a history of messages associated with the user to create a plurality of history BOWs; calculating similarity factors between the message BOW and the plurality of history BOWs, respectively; responsive to a similarity factor equal to or greater than a predetermined similarity threshold, adding a history message associated with the similarity factor to a similar message list; calculating interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list; responsive to an interest factor equal to or greater than a predetermined interest threshold, adding a contact associated with the interest factor to a suggested contact list; prioritizing the suggested contact list based on the interest factor; and inserting the suggested contact list as a distribution list.</p><p id="p-0008" num="0007">According to an embodiment of the present invention, a computer program product for generating a distribution list, the computer program product comprising: one or more non-transitory computer readable storage media and program instructions stored on the one or more non-transitory computer readable storage media, the program instructions comprising: program instructions to analyze a message associated with a user to create a message bag of words (BOW); program instructions to analyze a history of messages associated with the user to create a plurality of history BOWs; program instructions to calculate similarity factors between the message BOW and the plurality of history BOWs, respectively; responsive to a similarity factor equal to or greater than a predetermined similarity threshold, program instructions to add a history message associated with the similarity factor to a similar message list; program instructions to calculate interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list; responsive to an interest factor equal to or greater than a predetermined interest threshold, program instructions to add a contact associated with the interest factor to a suggested contact list; program instructions to prioritize the suggested contact list based on the interest factor; and program instructions to insert the suggested contact list as a distribution list.</p><p id="p-0009" num="0008">According to an embodiment of the present invention, a computer system for generating a distribution list, the computer system comprising: one or more computer processors; one or more non-transitory computer readable storage media; and program instructions stored on the one or more non-transitory computer readable storage media, the program instructions comprising: program instructions to analyze a message associated with a user to create a message bag of words (BOW); program instructions to analyze a history of messages associated with the user to create a plurality of history BOWs; program instructions to calculate similarity factors between the message BOW and the plurality of history BOWs, respectively; responsive to a similarity factor equal to or greater than a predetermined similarity threshold, program instructions to add a history message associated with the similarity factor to a similar message list; program instructions to calculate interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list; responsive to an interest factor equal to or greater than a predetermined interest threshold, program instructions to add a contact associated with the interest factor to a suggested contact list; program instructions to prioritize the suggested contact list based on the interest factor; and program instructions to insert the suggested contact list as a distribution list.</p><p id="p-0010" num="0009">Other aspects and embodiments of the present invention will become apparent from the following detailed description, which, when taken in conjunction with the drawings, illustrate by way of example the principles of the invention.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>1</b></figref> depicts a cloud computing environment, according to embodiments of the present invention.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>2</b></figref> depicts abstraction model layers, according to embodiments of the present invention.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a high-level architecture, according to embodiments of the present invention.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an exemplary detailed architecture, according to embodiments of the present invention.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a flowchart of a method, according to embodiments of the present invention.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram of internal and external components of a data processing system in which embodiments described herein may be implemented, according to embodiments of the present invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">The following description is made for the purpose of illustrating the general principles of the present invention and is not meant to limit the inventive concepts claimed herein. Further, particular features described herein can be used in combination with other described features in each of the various possible combinations and permutations.</p><p id="p-0018" num="0017">Unless otherwise specifically defined herein, all terms are to be given their broadest possible interpretation including meanings implied from the specification as well as meanings understood by those skilled in the art and/or as defined in dictionaries, treatises, etc.</p><p id="p-0019" num="0018">It must also be noted that, as used in the specification and the appended claims, the singular forms &#x201c;a,&#x201d; &#x201c;an&#x201d; and &#x201c;the&#x201d; include plural referents unless otherwise specified. It will be further understood that the terms &#x201c;comprises&#x201d; and/or &#x201c;comprising,&#x201d; when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.</p><p id="p-0020" num="0019">The following description discloses several embodiments of dynamically analyzing previous messages and discussion to automatically generate a suggested distribution list based on a weighted similarity score of past participant interest. It should be noted that previous messages can include, but is not limited to, received messages, e.g., an inbox in an email application, sent messages, e.g., a sent mail folder in an email application, draft messages, e.g., messages in a draft folder in an email application, etc. Similarly, previous messages can apply to text messages being sent, received and/or drafted or any other type of message system. Embodiments of the present invention can use key words, phrases, and themes found from previous communications by natural language processing (NLP) to identify similar interests. The NLP analysis can include the option of combining insights from multiple messaging sources such as, but not limited to, text message, email, Facebook, Twitter, etc. It should be noted that users of embodiments of the present invention can have significant customization capabilities associated with the NLP sources and their analysis.</p><p id="p-0021" num="0020">Natural language processing is a subfield of computer science, information engineering, and artificial intelligence concerned with the interactions between computers and human languages. Specifically, how to program computers to process and analyze large amounts of presented natural language data. The process of analyzing a message can comprise tokenizing all words of the presented natural language, using Lemmatization/Stemming to eliminate different word forms, filtering out &#x201c;stop words&#x201d; (and, the, a, etc.) and creating a &#x201c;bag of words&#x201d; by eliminating all duplicates from the presented natural language.</p><p id="p-0022" num="0021">It is to be understood that although this disclosure includes a detailed description on cloud computing, implementation of the teachings recited herein are not limited to a cloud computing environment. Rather, embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.</p><p id="p-0023" num="0022">Cloud computing is a model of service delivery for enabling convenient, on-demand network access to a shared pool of configurable computing resources (e.g., networks, network bandwidth, servers, processing, memory, storage, applications, virtual machines, and services) that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics, at least three service models, and at least four deployment models.</p><p id="p-0024" num="0023">Characteristics are as follows:</p><p id="p-0025" num="0024">On-demand self-service: a cloud consumer can unilaterally provision computing capabilities, such as server time and network storage, as needed automatically without requiring human interaction with the service's provider.</p><p id="p-0026" num="0025">Broad network access: capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms (e.g., mobile phones, laptops, and PDAs).</p><p id="p-0027" num="0026">Resource pooling: the provider's computing resources are pooled to serve multiple consumers using a multi-tenant model, with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction (e.g., country, state, or datacenter).</p><p id="p-0028" num="0027">Rapid elasticity: capabilities can be rapidly and elastically provisioned, in some cases automatically, to quickly scale out and rapidly released to quickly scale in. To the consumer, the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.</p><p id="p-0029" num="0028">Measured service: cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service (e.g., storage, processing, bandwidth, and active user accounts). Resource usage can be monitored, controlled, and reported, providing transparency for both the provider and consumer of the utilized service.</p><p id="p-0030" num="0029">Service Models are as follows:</p><p id="p-0031" num="0030">Software as a Service (SaaS): the capability provided to the consumer is to use the provider's applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser (e.g., web-based e-mail). The consumer does not manage or control the underlying cloud infrastructure including network, servers, operating systems, storage, or even individual application capabilities, with the possible exception of limited user-specific application configuration settings.</p><p id="p-0032" num="0031">Platform as a Service (PaaS): the capability provided to the consumer is to deploy onto the cloud infrastructure consumer-created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks, servers, operating systems, or storage, but has control over the deployed applications and possibly application hosting environment configurations.</p><p id="p-0033" num="0032">Infrastructure as a Service (IaaS): the capability provided to the consumer is to provision processing, storage, networks, and other fundamental computing resources where the consumer is able to deploy and run arbitrary software, which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems, storage, deployed applications, and possibly limited control of select networking components (e.g., host firewalls).</p><p id="p-0034" num="0033">Deployment Models are as follows:</p><p id="p-0035" num="0034">Private cloud: the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on-premises or off-premises.</p><p id="p-0036" num="0035">Community cloud: the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns (e.g., mission, security requirements, policy, and compliance considerations). It may be managed by the organizations or a third party and may exist on-premises or off-premises.</p><p id="p-0037" num="0036">Public cloud: the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.</p><p id="p-0038" num="0037">Hybrid cloud: the cloud infrastructure is a composition of two or more clouds (private, community, or public) that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load-balancing between clouds).</p><p id="p-0039" num="0038">A cloud computing environment is service oriented with a focus on statelessness, low coupling, modularity, and semantic interoperability. At the heart of cloud computing is an infrastructure that includes a network of interconnected nodes.</p><p id="p-0040" num="0039">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, illustrative cloud computing environment <b>50</b> is depicted. As shown, cloud computing environment <b>50</b> includes one or more cloud computing nodes <b>10</b> with which local computing devices used by cloud consumers, such as, for example, personal digital assistant (PDA) or cellular telephone <b>54</b>A, desktop computer <b>54</b>B, laptop computer <b>54</b>C, and/or automobile computer system <b>54</b>N may communicate. Nodes <b>10</b> may communicate with one another. They may be grouped (not shown) physically or virtually, in one or more networks, such as Private, Community, Public, or Hybrid clouds as described hereinabove, or a combination thereof. This allows cloud computing environment <b>50</b> to offer infrastructure, platforms and/or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices <b>54</b>A-N shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> are intended to be illustrative only and that computing nodes <b>10</b> and cloud computing environment <b>50</b> can communicate with any type of computerized device over any type of network and/or network addressable connection (e.g., using a web browser).</p><p id="p-0041" num="0040">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, a set of functional abstraction layers provided by cloud computing environment <b>50</b> (<figref idref="DRAWINGS">FIG. <b>1</b></figref>) is shown. It should be understood in advance that the components, layers, and functions shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted, the following layers and corresponding functions are provided:</p><p id="p-0042" num="0041">Hardware and software layer <b>60</b> include hardware and software components. Examples of hardware components include mainframes <b>61</b>; RISC (Reduced Instruction Set Computer) architecture-based servers <b>62</b>; servers <b>63</b>; blade servers <b>64</b>; storage devices <b>65</b>; and networks and networking components <b>66</b>. In some embodiments, software components include network application server software <b>67</b> and database software <b>68</b>.</p><p id="p-0043" num="0042">Virtualization layer <b>70</b> provides an abstraction layer from which the following examples of virtual entities may be provided: virtual servers <b>71</b>; virtual storage <b>72</b>; virtual networks <b>73</b>, including virtual private networks; virtual applications and operating systems <b>74</b>; and virtual clients <b>75</b>.</p><p id="p-0044" num="0043">In one example, management layer <b>80</b> may provide the functions described below. Resource provisioning <b>81</b> provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing <b>82</b> provide cost tracking as resources are utilized within the cloud computing environment, and billing or invoicing for consumption of these resources. In one example, these resources may include application software licenses. Security provides identity verification for cloud consumers and tasks, as well as protection for data and other resources. User portal <b>83</b> provides access to the cloud computing environment for consumers and system administrators. Service level management <b>84</b> provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement (SLA) planning and fulfillment <b>85</b> provide pre-arrangement for, and procurement of, cloud computing resources for which a future requirement is anticipated in accordance with an SLA.</p><p id="p-0045" num="0044">Workloads layer <b>90</b> provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation <b>91</b>; software development and lifecycle management <b>92</b>; virtual classroom education delivery <b>93</b>; data analytics processing <b>94</b>; transaction processing <b>95</b>; and contact list generation management <b>96</b>.</p><p id="p-0046" num="0045">It should be noted that the embodiments of the present invention may operate with a user's permission. Any data may be gathered, stored, analyzed, etc., with a user's consent. In various configurations, at least some of the embodiments of the present invention are implemented into an opt-in application, plug-in, etc., as would be understood by one having ordinary skill in the art upon reading the present disclosure.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a high-level architecture for performing various operations of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in accordance with various embodiments. The architecture <b>300</b> may be implemented in accordance with the present invention in any of the environments depicted in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b></figref>, among others, in various embodiments. Of course, more or less elements than those specifically described in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be included in architecture <b>300</b>, as would be understood by one of ordinary skill in the art upon reading the present descriptions.</p><p id="p-0048" num="0047">Each of the steps of the method <b>500</b> (described in further detail below) may be performed by any suitable component of the architecture <b>300</b>. A processor, e.g., processing circuit(s), chip(s), and/or module(s) implemented in hardware and/or software, and preferably having at least one hardware component may be utilized in any device to perform one or more steps of the method <b>500</b> in the architecture <b>300</b>. Illustrative processors include, but are not limited to, a central processing unit (CPU), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), etc., combinations thereof, or any other suitable computing device known in the art.</p><p id="p-0049" num="0048">Architecture <b>300</b> includes a block diagram, showing a contact list generation system, to which the invention principles may be applied. The architecture <b>300</b> comprises a client computer <b>302</b>, a contact list generation component <b>308</b> operational on a server computer <b>304</b> and a network <b>306</b> supporting communication between the client computer <b>302</b> and the server computer <b>304</b>.</p><p id="p-0050" num="0049">Client computer <b>302</b> can be any computing device on which software is installed for which an update is desired or required. Client computer <b>302</b> can be a standalone computing device, management server, a web server, a mobile computing device, or any other electronic device or computing system capable of receiving, sending, and processing data. In other embodiments, client computer <b>302</b> can represent a server computing system utilizing multiple computers as a server system. In another embodiment, client computer <b>302</b> can be a laptop computer, a tablet computer, a netbook computer, a personal computer, a desktop computer or any programmable electronic device capable of communicating with other computing devices (not shown) within user persona generation environment via network <b>306</b>.</p><p id="p-0051" num="0050">In another embodiment, client computer <b>302</b> represents a computing system utilizing clustered computers and components (e.g., database server computers, application server computers, etc.) that act as a single pool of seamless resources when accessed within install-time validation environment of architecture <b>300</b>. Client computer <b>302</b> can include internal and external hardware components, as depicted and described in further detail with respect to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0052" num="0051">Server computer <b>304</b> can be a standalone computing device, management server, a web server, a mobile computing device, or any other electronic device or computing system capable of receiving, sending, and processing data. In other embodiments, server computer <b>304</b> can represent a server computing system utilizing multiple computers as a server system. In another embodiment, server computer <b>304</b> can be a laptop computer, a tablet computer, a netbook computer, a personal computer, a desktop computer, or any programmable electronic device capable of communicating with other computing devices (not shown) within install-time validation environment of architecture <b>300</b> via network <b>306</b>.</p><p id="p-0053" num="0052">Network <b>306</b> can be, for example, a local area network (LAN), a wide area network (WAN) such as the Internet, or a combination of the two, and can include wired, wireless, or fiber optic connections. In general, network <b>306</b> can be any combination of connections and protocols that will support communications between client computer <b>302</b> and server computer <b>304</b>.</p><p id="p-0054" num="0053">Contact list generation component <b>308</b>, operational on server computer <b>304</b>, can receive a message typed by a user based on a user request to generate a suggested distribution list. Contact list generation component <b>308</b> can perform a key word and/or phrase analysis of the received message to generate a bag of words (BOW) associated with the message. Employing the BOW, contact list generation component <b>308</b> can search through a history, e.g., text messages, emails, contacts, etc., associated with the user for words in the history related to words in the BOW. Contact list generation component <b>308</b> can score contacts associated with the words in the history based on matching words in the BOW in view of a customizable weighted threshold. Contact list generation component <b>308</b> can generate a prioritized suggested contacts list based on the contact scores and a predetermined threshold.</p><p id="p-0055" num="0054">In another aspect of an embodiment, contact list generation component <b>308</b> can enable/disable scaling factors which tune the similarity and interest algorithms to assist in growing or shrinking the social circle. For example, scaling up would rank contacts higher if they are in a fewer number of messages, i.e., a contact that would be more likely to be forgotten to be included in the distribution list, and scaling down would rank contacts higher if they are in a greater number of messages, i.e., a contact that is in a relationship that matters the most. It should be noted that scaling factors can be enabled/disabled based on individual contacts, user selected groups of contacts or globally to all contacts.</p><p id="p-0056" num="0055">In another aspect of an embodiment, contact list generation component <b>308</b> can provide the capability to configure &#x201c;inclusion list&#x201d; or &#x201c;exclusion list&#x201d; of contacts for suggested contact generation. For example, an inclusion list is a list of contacts that should always be included in a suggested contact list, e.g., a spouse, and an exclusion list of contacts that should never be included in a suggested contacts list, e.g., a contact that expressed they are no longer interested in inclusion.</p><p id="p-0057" num="0056">In another aspect of an embodiment, contact list generation component <b>308</b> can provide the capability for tag generation and automatically creating and/or updating static distribution lists. In alternative embodiments of the present invention, contact list generation component <b>308</b> can dynamically search for key words and phrases to identify and automatically tag messages and/or participants. Further, contact list generation component <b>308</b> can provide the capability to search through historical messages while filtering to relevant messages for the purpose of identifying interested contacts to automatically apply tags and generate static distribution lists.</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is an exemplary detailed architecture for performing various operations of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, in accordance with various embodiments. The architecture <b>400</b> may be implemented in accordance with the present invention in any of the environments depicted in <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>3</b> and <b>5</b></figref>, among others, in various embodiments. Of course, more or less elements than those specifically described in <figref idref="DRAWINGS">FIG. <b>4</b></figref> may be included in architecture <b>400</b>, as would be understood by one of skill in the art upon reading the present descriptions.</p><p id="p-0059" num="0058">Each of the steps of the method <b>500</b> (described in further detail below) may be performed by any suitable component of the architecture <b>400</b>. A processor, e.g., processing circuit(s), chip(s), and/or module(s) implemented in hardware and/or software, and preferably having at least one hardware component, may be utilized in any device to perform one or more steps of the method <b>500</b> in the architecture <b>400</b>. Illustrative processors include, but are not limited to, a central processing unit (CPU), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), etc., combinations thereof, or any other suitable computing device known in the art.</p><p id="p-0060" num="0059">Architecture <b>400</b> provides a detailed view of at least some of the modules of architecture <b>300</b>. Architecture <b>400</b> can comprise a contact list generation component <b>308</b>, which can further comprise a message analyzing component <b>402</b>, a similarity threshold calculation component <b>404</b>, an interest calculation component <b>406</b>, and a prioritizing component <b>408</b>.</p><p id="p-0061" num="0060">In one aspect of an embodiment of the present invention, message analyzing component <b>402</b> can receive a message from a user. It should be noted that the message can be a text message, an email, a voicemail (subsequently converted to a text message), etc. Message analyzing component <b>402</b> can use natural language processing (NLP) to create a &#x201c;bag of words&#x201d; (BOW) associated with the message. The BOW can contain key words, phrases, themes, etc. selected by the NLP that can be used to identify similar interests between the user and contacts associated with the user.</p><p id="p-0062" num="0061">In another aspect of an embodiment of the present invention, message analyzing component <b>402</b> can perform a similar NLP analysis of a message history maintained by message analyzing component <b>402</b> for the user. The message history can contain groups of messages, grouped by a contact associated with the message, and message analyzing component <b>402</b> can create a BOW for each message in the group associated with the user. It should be noted that a BOW for a message can persist for reuse and can be updated as additional messages arrive on the message thread from the contact associated with the BOW.</p><p id="p-0063" num="0062">Similarity threshold calculation component <b>404</b> can compare the BOW for the received message with the BOWs associated with the contacts and their group of messages based on calculating similarity factors for the message BOW and the contact message BOWs. The similarity threshold calculation component <b>404</b> can calculate a similarity factor based on dividing the number of matching words in the message BOW and the contact message BOW by the total number of words in the contact message BOW. If the calculated similarity factor is greater than a similarity threshold, then similarity threshold calculation component <b>404</b> can save the contact message and its similarity factor in a similar message list. It should be noted that similarity threshold calculation component <b>404</b> can repeat this calculation for each message in the message history unless a current BOW is available for a given message.</p><p id="p-0064" num="0063">In another aspect of an embodiment of the present invention, interest calculation component <b>406</b> can calculate an interest factor in the received message of a contact. Interest calculation component <b>406</b> can calculate the contact interest based on summing the similarity factors in the similar message list for a contact divided by the total number of similarity factors in the similar message list for the contact. If the interest factor is greater than an interest threshold, then interest calculation component <b>406</b> can save the contact and the interest factor to a suggested contact list. It should be noted that multiple contacts can be associated with a particular message.</p><p id="p-0065" num="0064">In another aspect of an embodiment of the present invention, prioritizing component <b>408</b> can prioritize the suggested contact list. Prioritizing component <b>408</b> can order the suggested contact list based on the interest factor from the highest valued interest factor to the lowest valued interest factor. It should be noted that the prioritization is user configurable and can be based on other factors such as, but not limited to, the number of similarity factor entries in the similar message list for a contact, etc. It should further be noted that prioritizing component <b>408</b> can insert the suggested contact list for distribution, e.g., for an email the suggested contact list can be inserted in the &#x201c;Send To:&#x201d; field as associated email addresses for distribution.</p><p id="p-0066" num="0065">For example, Tom prepares a message &#x201c;Going to baseball practice tonight at Pearce Field. You're welcome to join!&#x201d; and requests a suggested contact list. Tom's contacts are Joe, Sally, Rick and Bob. Contact list generation component <b>308</b> can generate a BOW for the message comprising terms &#x201c;baseball, field, practice, join, . . . &#x201d; Contact list generation component <b>308</b> can also generate contact message-based BOWs (not shown) for the history messages maintained by contact list generation component <b>308</b>, for any messages without a currently prepared BOW.</p><p id="p-0067" num="0066">Contact list generation component <b>308</b> can calculate similarity factors between Tom's message BOW and the BOWs associated with the messages in the message history, e.g., history message (HM) <b>1</b> has contacts Joe and Sally with a calculated similarity factor of 0.9; HM <b>2</b> has contacts Joe, Sally and Rick with a calculated similarity factor of 0.1; HM<b>3</b> has contact Rick with a calculated similarity factor of 0.1; HM<b>4</b> has contacts Joe, Sally and Bob with a calculated similarity factor of 0.9; HM<b>5</b> has contacts Joe and Sally with a calculated similarity factor of 0.5; and HM<b>6</b> has contact Rick with a calculated similarity factor of 0.0.</p><p id="p-0068" num="0067">Contact list generation component <b>308</b> can compare the historical message similarity factors to a predetermined similarity threshold, e.g., <b>0</b>.<b>5</b>, and if a historical message similarity factor is greater than or equal to the predetermined similarity threshold, then contact list generation component <b>308</b> can add the message and the associated contact(s) to a similar message list, e.g., HM<b>1</b>, HM<b>4</b> and HM<b>5</b> are added to the similar message list.</p><p id="p-0069" num="0068">Contact list generation component <b>308</b> can calculate interest factors for the contacts based on the similarity factors, e.g., Joe is a contact in HM<b>1</b>, HM<b>4</b> and HM<b>5</b> so his interest factor is (0.9+0.9+0.5)/<b>3</b> which equals 0.76 or 76%; Sally is a contact in HM<b>1</b>, HM<b>4</b> and HM<b>5</b> so her interest factor is (0.9+0.9+0.5)/<b>3</b> which equals 0.76 or 76%; and Bob a is contact in HM<b>4</b> so his interest factor is (0.9)/<b>3</b> which equals 0.30 or 30%.</p><p id="p-0070" num="0069">Contact list generation component <b>308</b> can compare the interest factors to a predetermined interest threshold, e.g., <b>0</b>.<b>25</b>, and if an interest factor is greater than or equal to the predetermined interest threshold, then contact list generation component <b>308</b> can add the associated contact to a suggested contact list, e.g., Joe, Sally and Bob are added to the similar message list. It should be noted that Joe and Sally have identical priorities in the suggested contact list so they will occupy a shared position in the suggested contact list.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is an exemplary flowchart of a method <b>500</b> for generating a suggested contact list. At step <b>502</b>, an embodiment can analyze, via message analyzing component <b>402</b>, a message received from a user to create a message &#x201c;bag of words&#x201d; (BOW). At step <b>504</b>, the embodiment can analyze, via message analyzing component <b>402</b>, a history of messages sent to the user to create a plurality of BOWs. At step <b>506</b>, the embodiment can calculate, via similarity threshold calculation component <b>404</b>, similarity factors between the message BOW and the plurality of BOWs. At step <b>508</b>, the embodiment can calculate, via interest calculation component <b>406</b>, interest factors associated with one or more of the plurality of BOWs and the message BOW. At step <b>510</b>, the embodiment can create, via interest calculation component <b>406</b>, a contact list with contacts having an interest factor at or above a predetermined threshold. At step <b>512</b>, the embodiment can prioritize, via prioritizing component <b>408</b>, the contact list from highest to lowest interest factor. At step <b>514</b>, the embodiment can generate, via prioritizing component <b>408</b>, the suggested contact list to distribute the message.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>6</b></figref> depicts computer system <b>600</b>, an example computer system representative of client computer <b>302</b> and server computer <b>304</b>. Computer system <b>600</b> includes communications fabric <b>602</b>, which provides communications between computer processor(s) <b>604</b>, memory <b>606</b>, persistent storage <b>608</b>, communications unit <b>610</b>, and input/output (I/O) interface(s) <b>612</b>. Com-munications fabric <b>602</b> can be implemented with any architecture designed for passing data and/or control information between processors (such as microprocessors, communications and network processors, etc.), system memory, peripheral devices, and any other hardware components within a system. For example, communications fabric <b>602</b> can be implemented with one or more buses.</p><p id="p-0073" num="0072">Computer system <b>600</b> includes processors <b>604</b>, cache <b>616</b>, memory <b>606</b>, persistent storage <b>608</b>, communications unit <b>610</b>, input/output (I/O) interface(s) <b>612</b> and communications fabric <b>602</b>. Communications fabric <b>602</b> provides communications between cache <b>616</b>, memory <b>606</b>, persistent storage <b>608</b>, communications unit <b>610</b>, and input/output (I/O) interface(s) <b>612</b>. Communications fabric <b>602</b> can be implemented with any architecture designed for passing data and/or control information between processors (such as microprocessors, communications and network processors, etc.), system memory, peripheral devices, and any other hardware components within a system. For example, communications fabric <b>602</b> can be implemented with one or more buses or a crossbar switch.</p><p id="p-0074" num="0073">Memory <b>606</b> and persistent storage <b>608</b> are computer readable storage media. In this embodiment, memory <b>606</b> includes random access memory (RAM). In general, memory <b>606</b> can include any suitable volatile or non-volatile computer readable storage media. Cache <b>616</b> is a fast memory that enhances the performance of processors <b>604</b> by holding recently accessed data, and data near recently accessed data, from memory <b>606</b>.</p><p id="p-0075" num="0074">Program instructions and data used to practice embodiments of the present invention may be stored in persistent storage <b>608</b> and in memory <b>606</b> for execution by one or more of the respective processors <b>604</b> via cache <b>616</b>. In an embodiment, persistent storage <b>608</b> includes a magnetic hard disk drive. Alternatively, or in addition to a magnetic hard disk drive, persistent storage <b>608</b> can include a solid state hard drive, a semiconductor storage device, read-only memory (ROM), erasable programmable read-only memory (EPROM), flash memory, or any other computer readable storage media that is capable of storing program instructions or digital information.</p><p id="p-0076" num="0075">The media used by persistent storage <b>608</b> may also be removable. For example, a removable hard drive may be used for persistent storage <b>608</b>. Other examples include optical and magnetic disks, thumb drives, and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage <b>608</b>.</p><p id="p-0077" num="0076">Communications unit <b>610</b>, in these examples, provides for communications with other data processing systems or devices. In these examples, communications unit <b>610</b> includes one or more network interface cards. Communications unit <b>610</b> may provide communications through the use of either or both physical and wireless communications links. Program instructions and data used to practice embodiments of the present invention may be downloaded to persistent storage <b>608</b> through communications unit <b>610</b>.</p><p id="p-0078" num="0077">I/O interface(s) <b>612</b> allows for input and output of data with other devices that may be connected to each computer system. For example, I/O interface <b>612</b> may provide a connection to external devices <b>618</b> such as a keyboard, keypad, a touch screen, and/or some other suitable input device. External devices <b>618</b> can also include portable computer readable storage media such as, for example, thumb drives, portable optical or magnetic disks, and memory cards. Software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage <b>608</b> via I/O inter-face(s) <b>612</b>. I/O interface(s) <b>612</b> also connect to display <b>620</b>.</p><p id="p-0079" num="0078">Display <b>620</b> provides a mechanism to display data to a user and may be, for example, a computer monitor.</p><p id="p-0080" num="0079">The components described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However, it should be appreciated that any particular component nomenclature herein is used merely for convenience, and thus the invention should not be limited to use solely in any specific application identified and/or implied by such nomenclature.</p><p id="p-0081" num="0080">The present invention may be a system, a method, and/or a computer program product at any possible technical detail level of integration. The computer program product may include a computer readable storage medium (or media) having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.</p><p id="p-0082" num="0081">The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing. A non-exhaustive list of more specific examples of the computer readable storage medium includes the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a static random access memory (SRAM), a portable compact disc read-only memory (CD-ROM), a digital versatile disk (DVD), a memory stick, a floppy disk, a mechanically encoded device such as punch-cards or raised structures in a groove having instructions recorded thereon, and any suitable combination of the foregoing. A computer readable storage medium, as used herein, is not to be construed as being transitory signals per se, such as radio waves or other freely propagating electromagnetic waves, electromagnetic waves propagating through a waveguide or other transmission media (e.g., light pulses passing through a fiber-optic cable), or electrical signals transmitted through a wire.</p><p id="p-0083" num="0082">Computer readable program instructions described herein can be downloaded to respective computing/processing devices from a computer readable storage medium or to an external computer or external storage device via a network, for example, the Internet, a local area network, a wide area network and/or a wireless network. The network may comprise copper transmission cables, optical transmission fibers, wireless transmission, routers, firewalls, switches, gateway computers and/or edge servers. A network adapter card or network interface in each computing/processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing/processing device.</p><p id="p-0084" num="0083">Computer readable program instructions for carrying out operations of the present invention may be assembler instructions, instruction-set-architecture (ISA) instructions, machine instructions, machine dependent instructions, microcode, firmware instructions, state-setting data, configuration data for integrated circuitry, or either source code or object code written in any combination of one or more programming languages, including an object oriented programming language such as Smalltalk, C++, or the like, and procedural programming languages, such as the &#x201c;C&#x201d; programming language or similar programming languages. The computer readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). In some embodiments, electronic circuitry including, for example, programmable logic circuitry, field-programmable gate arrays (FPGA), or programmable logic arrays (PLA) may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry, in order to perform aspects of the present invention.</p><p id="p-0085" num="0084">Aspects of the present invention are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems), and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer readable program instructions.</p><p id="p-0086" num="0085">These computer readable program instructions may be provided to a processor of a computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function/act specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0087" num="0086">The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other device to cause a series of operational steps to be performed on the computer, other programmable apparatus or other device to produce a computer implemented process, such that the instructions which execute on the computer, other programmable apparatus, or other device implement the functions/acts specified in the flowchart and/or block diagram block or blocks.</p><p id="p-0088" num="0087">The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the blocks may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be accomplished as one step, executed concurrently, substantially concurrently, in a partially or wholly temporally overlapping manner, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.</p><p id="p-0089" num="0088">Moreover, a system according to various embodiments may include a processor and logic integrated with and/or executable by the processor, the logic being configured to perform one or more of the process steps recited herein. By integrated with, what is meant is that the processor has logic embedded therewith as hardware logic, such as an application specific integrated circuit (ASIC), a FPGA, etc. By executable by the processor, what is meant is that the logic is hardware logic; software logic such as firmware, part of an operating system, part of an application program; etc., or some combination of hardware and software logic that is accessible by the processor and configured to cause the processor to perform some functionality upon execution by the processor. Software logic may be stored on local and/or remote memory of any memory type, as known in the art. Any processor known in the art may be used, such as a software processor module and/or a hardware processor such as an ASIC, a FPGA, a central processing unit (CPU), an integrated circuit (IC), a graphics processing unit (GPU), etc.</p><p id="p-0090" num="0089">It will be clear that the various features of the foregoing systems and/or methodologies may be combined in any way, creating a plurality of combinations from the descriptions presented above.</p><p id="p-0091" num="0090">It will be further appreciated that embodiments of the present invention may be provided in the form of a service deployed on behalf of a customer to offer service on demand.</p><p id="p-0092" num="0091">The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments, the practical application or technical improvement over technologies found in the marketplace, or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method for generating a distribution list, the computer-implemented method comprising:<claim-text>analyzing a message associated with a user to create a message bag of words (BOW);</claim-text><claim-text>analyzing history messages associated with the user to create a plurality of history BOWs;</claim-text><claim-text>calculating similarity factors between the message BOW and the plurality of history BOWs, respectively;</claim-text><claim-text>responsive to a similarity factor equal to or greater than a predetermined similarity threshold, adding a history message associated with the similarity factor to a similar message list;</claim-text><claim-text>calculating interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list;</claim-text><claim-text>responsive to an interest factor equal to or greater than a predetermined interest threshold, adding a contact associated with the interest factor to a suggested contact list;</claim-text><claim-text>prioritizing the suggested contact list based on the interest factor;</claim-text><claim-text>responsive to prioritizing the suggested contact list, removing any contact in the suggested contacts list matching a contact in an exclusion list; and</claim-text><claim-text>inserting the suggested contact list as a distribution list.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message BOW is created based on a natural language processing of the message.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the similarity factor is calculated as a weighted average based on a number of similar words between the message BOW and a history BOW divided by the number of words in the history BOW.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the interest factor is calculated as a weighted average based on a sum of a number of history messages associated with a contact in the similar message list divided by a total number of messages in the similar message list.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>adding the contacts from an inclusion list to the suggested contact list.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>scaling the interest factor inversely proportional to a number of the history messages associated with the contact when scaling up is enabled; and</claim-text><claim-text>scaling the interest factor proportional to the number of the history messages associated with the contact when scaling down is enabled.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>generating one or more tags associated with the history messages based on the message BOW; and</claim-text><claim-text>generating a static distribution list for the message.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A computer program product for generating a distribution list, the computer program product comprising:<claim-text>one or more non-transitory computer readable storage media and program instructions stored on the one or more non-transitory computer readable storage media, the program instructions comprising:<claim-text>program instructions to analyze a message associated with a user to create a message bag of words (BOW);</claim-text><claim-text>program instructions to analyze history messages associated with the user to create a plurality of history BOWs;</claim-text><claim-text>program instructions to calculate similarity factors between the message BOW and the plurality of history BOWs, respectively;</claim-text><claim-text>responsive to a similarity factor equal to or greater than a predetermined similarity threshold, program instructions to add a history message associated with the similarity factor to a similar message list;</claim-text><claim-text>program instructions to calculate interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list;</claim-text><claim-text>responsive to an interest factor equal to or greater than a predetermined interest threshold, program instructions to add a contact associated with the interest factor to a suggested contact list;</claim-text><claim-text>program instructions to prioritize the suggested contact list based on the interest factor;</claim-text><claim-text>responsive to prioritizing the suggested contact list, program instructions to remove any contact in the suggested contacts list matching a contact in an exclusion list; and</claim-text><claim-text>program instructions to insert the suggested contact list as a distribution list.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the message BOW is created based on a natural language processing of the message.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the similarity factor is calculated as a weighted average based on a number of similar words between the message BOW and a history BOW divided by a number of words in the history BOW.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the interest factor is calculated as a weighted average based on a sum of a number of history messages associated with a contact in the similar message list divided by a total number of messages in the similar message list.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>program instructions to add the contacts from an inclusion list to the suggested contact list.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>program instructions to scale the interest factor inversely proportional to a number of history messages associated with the contact when scaling up is enabled; and</claim-text><claim-text>program instructions to scale the interest factor proportional to the number of history messages associated with the contact when scaling down is enabled.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The computer program product of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising:<claim-text>program instructions to generate one or more tags associated with the history messages based on the message BOW; and</claim-text><claim-text>program instructions to generate a static distribution list for the message.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A computer system for generating a distribution list, the computer system comprising:<claim-text>one or more computer processors;</claim-text><claim-text>one or more non-transitory computer readable storage media; and</claim-text><claim-text>program instructions stored on the one or more non-transitory computer readable storage media, the program instructions comprising:<claim-text>program instructions to analyze a message associated with a user to create a message bag of words (BOW);</claim-text><claim-text>program instructions to analyze history messages associated with the user to create a plurality of history BOWs;</claim-text><claim-text>program instructions to calculate similarity factors between the message BOW and the plurality of history BOWs, respectively;</claim-text><claim-text>responsive to a similarity factor equal to or greater than a predetermined similarity threshold, program instructions to add a history message associated with the similarity factor to a similar message list;</claim-text><claim-text>program instructions to calculate interest factors, based on the similarity factors, for contacts associated with the similarity factors in the similar message list;</claim-text><claim-text>responsive to an interest factor equal to or greater than a predetermined interest threshold, program instructions to add a contact associated with the interest factor to a suggested contact list;</claim-text><claim-text>program instructions to prioritize the suggested contact list based on the interest factor;</claim-text><claim-text>responsive to prioritizing the suggested contact list, program instructions to</claim-text><claim-text>remove any contact in the suggested contacts list matching a contact in an exclusion list; and</claim-text><claim-text>program instructions to insert the suggested contact list as a distribution list.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the message BOW is created based on a natural language processing of the message.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the similarity factor is calculated as a weighted average based on a number of similar words between the message BOW and a history BOW divided by a number of words in the history BOW.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the interest factor is calculated as a weighted average based on a sum of the number of history messages associated with a contact in the similar message list divided by a total number of messages in the similar message list.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>program instructions to add the contacts from an inclusion list to the suggested contact list.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>scaling the interest factor inversely proportional to a number of the history messages associated with the contact when scaling up is enabled;</claim-text><claim-text>scaling the interest factor proportional to the number of the history messages associated with the contact when scaling down is enabled;</claim-text><claim-text>generating one or more tags associated with the history messages based on the message BOW; and</claim-text><claim-text>generating a static distribution list for the message.</claim-text></claim-text></claim></claims></us-patent-application>