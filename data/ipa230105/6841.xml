<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006842A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006842</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17941508</doc-number><date>20220909</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202011131362.6</doc-number><date>20201021</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3268</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3265</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3297</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">BLOCKCHAIN-BASED DATA PROCESSING METHOD AND APPARATUS, COMPUTER DEVICE, COMPUTER-READABLE STORAGE MEDIUM, AND COMPUTER PROGRAM PRODUCT</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/119928</doc-number><date>20210923</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17941508</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>TENCENT TECHNOLOGY (SHENZHEN) COMPANY LIMITED</orgname><address><city>Shenzhen</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Zhang</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>GUO</last-name><first-name>Yixin</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>WEI</last-name><first-name>Dezhi</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Zhaochuang</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>QIAO</last-name><first-name>Xiaoqiang</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>LIU</last-name><first-name>Youwei</first-name><address><city>Shenzhen</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>TENCENT TECHNOLOGY (SHENZHEN) COMPANY LIMITED</orgname><role>03</role><address><city>Shenzhen</city><country>CN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A blockchain-based data processing method and apparatus, a computer device, and a computer-readable storage medium. The method includes: obtaining a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer; performing authorization verification on the authorizer according to the data authorization request to obtain a first verification result; signing the data authorization certificate according to a private key of a first blockchain in a case that the first verification result is a valid result to obtain a first certificate signature, determining the first certificate signature as a to-be-uploaded signature, and performing uploading on the data authorization certificate carrying the to-be-uploaded signature; and transmitting the data authorization certificate to a second blockchain, and providing a query permission to a query terminal in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="121.41mm" wi="148.17mm" file="US20230006842A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="131.66mm" wi="150.20mm" file="US20230006842A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="218.61mm" wi="154.18mm" file="US20230006842A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="135.38mm" wi="124.38mm" file="US20230006842A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="157.23mm" wi="159.00mm" file="US20230006842A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="145.29mm" wi="107.78mm" file="US20230006842A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="183.47mm" wi="153.42mm" file="US20230006842A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="130.39mm" wi="133.27mm" file="US20230006842A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="144.19mm" wi="156.89mm" file="US20230006842A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="216.15mm" wi="152.74mm" file="US20230006842A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="216.15mm" wi="121.07mm" file="US20230006842A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="167.39mm" wi="147.83mm" file="US20230006842A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="182.03mm" wi="151.98mm" file="US20230006842A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION(S)</heading><p id="p-0002" num="0001">This application is a continuation application of International Application No. PCT/CN2021/119928, filed on Sep. 23, 2021, which claims priority to Chinese Patent Application No. 202011131362.6, filed with the China National Intellectual Property Administration on Oct. 21, 2020, the disclosures of which are incorporated herein in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the field of Internet technologies, and in particular, to a blockchain-based data processing method and apparatus, a computer device, a computer-readable storage medium, and a computer program product.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">With the rapid development of network technologies and enterprises' attention to data security, blockchains have been greatly developed and applied. When service data of enterprises is stored in the blockchains, and data users query or obtain the data through the blockchains. To ensure the security of the service data, the enterprises need to authorize the service data to the blockchains, so that the blockchains provide a query permission to the data users according to the authorized content.</p><p id="p-0005" num="0004">Enterprises or users may include data of a plurality of types such as enterprise tax data, social insurance data, and business data. The data of different types is stored in different blockchains. In the related art, when a data user obtains service data from a blockchain A, a data authorizer (that is, the enterprise or the user) needs to perform authentication on the blockchain A. When the data user obtains service data from a blockchain B, the data authorizer needs to perform authentication on the blockchain B. The same is true for obtaining service data on remaining blockchains. When the data user needs to obtain service data from a plurality of blockchains, the data authorizer needs to perform a plurality of times of authorization. However, the data authorizer needs to perform verification for each authorization, and the repeated verification process reduces data authorization efficiency of the data authorizer.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0006" num="0005">An embodiment of the disclosure may provide a blockchain-based data processing method, performed by a verification node, the verification node corresponding to a first blockchain in a consortium blockchain, the consortium blockchain further including a second blockchain, and the method including: obtaining a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer; performing authorization verification on the authorizer according to the data authorization request, to obtain a first verification result; signing the data authorization certificate according to a private key of the first blockchain in a case that the first verification result is a valid result, to obtain a first certificate signature, determining the first certificate signature as a to-be-uploaded signature, and performing uploading on the data authorization certificate carrying the to-be-uploaded signature; and transmitting, in a case that a certificate cross-chain query request transmitted by the second blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway; and providing a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0007" num="0006">An embodiment of the disclosure may provide a blockchain-based data processing method, performed by a query node, the query node corresponding to a second blockchain in a consortium blockchain, the consortium blockchain further including a verification blockchain, and the method including: obtaining a data query request associated with an authorizer and transmitted by a query terminal; transmitting a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway, the certificate cross-chain query request being used for the verification blockchain to determine a data authorization certificate carrying a to-be-uploaded signature, the to-be-uploaded signature being obtained by signing the data authorization certificate by the verification blockchain according to a private key of the verification blockchain after the authorizer is determined as a valid authorizer; obtaining, by using the cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature transmitted by the verification blockchain; and performing signature verification on the to-be-uploaded signature according to a public key of the verification blockchain, and providing a query permission to the query terminal according to the data authorization certificate in a case that the signature verification succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0008" num="0007">An embodiment of the disclosure may provide a blockchain-based data processing apparatus, running in a verification node, the verification node corresponding to a first blockchain in a consortium blockchain, the consortium blockchain further including a second blockchain, and the apparatus including: a request obtaining module, configured to obtain a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer; a verification authorization module, configured to perform authorization verification on the authorizer according to the data authorization request, to obtain a first verification result; a first processing module, configured to sign the data authorization certificate according to a private key of the first blockchain in a case that the first verification result is a valid result, to obtain a first certificate signature, determine the first certificate signature as a to-be-uploaded signature, and perform uploading on the data authorization certificate carrying the to-be-uploaded signature; and a certificate transmitting module, configured to transmit, in a case that a certificate cross-chain query request transmitted by the second blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway; and provide a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0009" num="0008">An embodiment of the disclosure may provide a blockchain-based data processing apparatus, running in a query node, the query node corresponding to a second blockchain in a consortium blockchain, the consortium blockchain further including a verification blockchain, and the apparatus including: a first obtaining module, configured to obtain a data query request associated with an authorizer and transmitted by a query terminal; a first transmitting module, configured to transmit a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway, the certificate cross-chain query request being used for the verification blockchain to determine a data authorization certificate carrying a to-be-uploaded signature, the to-be-uploaded signature being obtained by signing the data authorization certificate by the verification blockchain according to a private key of the verification blockchain after the authorizer is determined as a valid authorizer; a second obtaining module, configured to obtain, by using the cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature transmitted by the verification blockchain; and a permission providing module, configured to perform signature verification on the to-be-uploaded signature according to a public key of the verification blockchain, and provide a query permission to the query terminal according to the data authorization certificate in a case that the signature verification succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0010" num="0009">An embodiment of the disclosure may provide a computer device, including: a processor, a memory, and a network interface, the processor being connected to the memory and the network interface, the network interface being configured to provide a data communication function, the memory being configured to store a computer program, the processor being configured to invoke the computer program to perform the method according to the foregoing embodiments.</p><p id="p-0011" num="0010">An embodiment of the disclosure may provide a non-transitory computer-readable storage medium, storing a computer program, the computer program including program instructions, the program instructions, when executed by a processor, performing the method according to some embodiments.</p><p id="p-0012" num="0011">An embodiment of the disclosure may provide a computer program product or a computer program, including computer instructions stored in a computer-readable storage medium. A processor of a computer device reads the computer instructions from the computer-readable storage medium. The processor executes the computer instructions, to cause the computer device to perform the method according to the foregoing embodiments.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic diagram of a network architecture according to some embodiments.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic flowchart of a blockchain-based data processing method according to some embodiments.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic flowchart of a blockchain-based data processing method according to some embodiments.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic structural diagram of a blockchain-based data processing apparatus according to some embodiments.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic structural diagram of a blockchain-based data processing apparatus according to some embodiments.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic structural diagram of a computer device according to some embodiments.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic structural diagram of a computer device according to some embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DESCRIPTION OF EMBODIMENTS</heading><p id="p-0026" num="0025">The technical solutions in the embodiments are clearly and completely described in the following with reference to the accompanying drawings in the embodiments of the disclosure. The described embodiments are merely some rather than all of the embodiments of the disclosure. All other embodiments obtained by a person of ordinary skill in the art based on the embodiments the disclosure without creative efforts shall fall within the protection scope of the disclosure.</p><p id="p-0027" num="0026">Unless otherwise defined, meanings of all technical and scientific terms used in this specification are the same as those usually understood by a person skilled in the art. Terms used in this specification are merely intended to describe objectives of the embodiments, but are not intended to limit the disclosure.</p><p id="p-0028" num="0027">Before the embodiments are further described in detail, a description is made on terms in the embodiments, and the terms in the embodiments are applicable to the following explanations.</p><p id="p-0029" num="0028">1. Blockchain: in a narrow sense, the blockchain is a chain data structure with a block as a basic unit. In blocks, previously obtained transaction history is verified by using digital digests, which is suitable for requirements of tamper proof and scalability in a distributed ledger scenario. In a broad sense, the blockchain further refers to a distributed ledger technology implemented by a blockchain structure, which includes distributed consensus, privacy and security protection, a peer-to-peer communication technology, an Internet protocol, a smart contract, and the like. The blockchain aims to implement a distributed data recording ledger. Only adding is allowed and deletion is not allowed in the ledger. A bottom basic structure of the ledger is a linear linked list. The linked list is formed by blocks. Hash values of predecessor blocks are recorded in subsequent blocks, and whether each block (and a transaction in the block) is valid may be quickly verified by calculating a hash value. If a node in a network proposes to add a new block, consensus confirmation needs to be reached on the block by using a consensus mechanism.</p><p id="p-0030" num="0029">2. Blockchain network is a network formed by a plurality of nodes, and each complete node (or referred to as a full node) may maintain a blockchain.</p><p id="p-0031" num="0030">3. Consortium blockchain is a cluster formed by a plurality of private blockchains and is jointly managed by a plurality of institutions. Each institution manages one or more nodes, and data of the one or more nodes is allowed to be read and written and transmitted by only different institutions in a system. Each node in the consortium blockchain usually has a corresponding entity institution, which can join and exit a network after being authorized, and the institutions form a consortium of relevant interest, to jointly maintain the healthy operation of the blockchains.</p><p id="p-0032" num="0031">4. Hash value, also referred to as an information feature value or a feature value, is generated by converting input data of any length into a password by using a hash algorithm and performing a fixed output. Original input data cannot be retrieved by decrypting a hash value, and the hash value is a one-way encryption function. In the blockchain, each block (other than an initial block) includes a hash value of a predecessor block. The predecessor block is referred to as a parent block of a current block. The hash value is the core foundation and the most important aspect of a potential of a blockchain technology and preserves the authenticity of recording and viewing data as well as the integrity of blockchain as a whole.</p><p id="p-0033" num="0032">5. Asymmetric signature, the algorithm includes two keys: a public key and a private key. The public key and the private key are one pair. If data is signed by using a private key, the signature is verified by using only a corresponding public key. Because two different keys are respectively used in the signing process and the signature verification process, the algorithm is referred to as the asymmetric signature. A basic process of implementing confidential information exchange by using the asymmetric signature may be that: a party A generates a pair of keys and publishes a public key. When the party A needs to transmit information to another role (a party B), the party A signs the confidential information by using a private key and then transmits the signed confidential information to the party B. The party B performs signature verification on the signed information by using the public key of the party A.</p><p id="p-0034" num="0033">6. Cross-chain data transmission is a technology that safely and reliably transfers transaction data D (or service information I, or a service message M) on a blockchain A to a blockchain B and produces a desired effect on the blockchain B.</p><p id="p-0035" num="0034">7. Cross-chain trust transfer is a kind of multi-chain mutual trust technology implemented for avoiding many repeated verifications when a data authorizer performs identity verification on a plurality of blockchains to authorize a query permission for transaction data.</p><p id="p-0036" num="0035">8. Lightweight node, or referred to as a light client or a simple payment verification client, is a node that has only a consensus verification function and does not store a blockchain locally.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>1</b>A</figref> is a schematic diagram of a network architecture according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>A</figref>, the network architecture may include a user terminal cluster and a blockchain node cluster in a consortium blockchain <b>100</b>. The user terminal cluster may include a user terminal <b>20</b><i>a </i>and a user terminal <b>20</b><i>b</i>, and the blockchain node cluster may include a blockchain node <b>10</b><i>a</i>, a blockchain node <b>10</b><i>b</i>, a blockchain node <b>10</b><i>c</i>, a blockchain node <b>10</b><i>d</i>, a blockchain node <b>10</b><i>e</i>, and a blockchain node <b>10</b><i>f</i>. It may be understood that the user terminal cluster may include one or more user terminals. A quantity of user terminals is not limited in this embodiment.</p><p id="p-0038" num="0037">Communication connections may exist among the blockchain node cluster. For example, the blockchain node <b>10</b><i>a </i>is in the communication connection with the blockchain node <b>10</b><i>c</i>, and the blockchain node <b>10</b><i>a </i>is in the communication connection with the blockchain node <b>10</b><i>d</i>. Communication connections may exist among the user terminal cluster, and any blockchain node in the blockchain node cluster may be in the communication connection with any user terminal in the user terminal cluster. For example, the blockchain node <b>10</b><i>a </i>is in the communication connection with the user terminal <b>20</b><i>a</i>, the blockchain node <b>10</b><i>d </i>is in the communication connection with the user terminal <b>20</b><i>a</i>, the blockchain node <b>10</b><i>c </i>is in the communication connection with the user terminal <b>20</b><i>b</i>, and the blockchain node <b>10</b><i>d </i>is in the communication connection with the user terminal <b>20</b><i>b</i>. A connection manner is not limited for the communication connection and may be direct or indirect connection through wired communication, or direct or indirect connection through wireless communication, or in another manner. This is not limited thereto.</p><p id="p-0039" num="0038">In some embodiments, one or more blockchains are unified, to form the consortium blockchain <b>100</b>. A quantity of blockchains in the consortium blockchain <b>100</b> is not limited in this embodiment. Referring to <figref idref="DRAWINGS">FIG. <b>1</b><i>a </i></figref>again, the consortium blockchain <b>100</b> may include a blockchain <b>100</b><i>a</i>, a blockchain <b>100</b><i>b</i>, and a blockchain <b>100</b><i>c</i>. The blockchain node <b>10</b><i>a </i>and the blockchain node <b>10</b><i>b </i>correspond to the blockchain <b>100</b><i>a </i>(herein &#x201c;the blockchain node <b>10</b><i>a </i>and the blockchain node <b>10</b><i>b </i>correspond to the blockchain <b>100</b>&#x201d; means that the blockchain node <b>10</b><i>a </i>and the blockchain node <b>10</b><i>b </i>and the blockchain <b>100</b><i>a </i>belong to a same blockchain network, the blockchain node <b>10</b><i>a </i>the blockchain node <b>10</b><i>b </i>complete operations such as consensus verification and query based on the blockchain <b>100</b><i>a</i>, and &#x201c;a node corresponds to a blockchain&#x201d; below is similar), the blockchain node <b>10</b><i>c </i>and the blockchain node <b>10</b><i>d </i>correspond to the blockchain <b>100</b><i>b</i>, and the blockchain node <b>10</b><i>e</i>, and the blockchain node <b>10</b><i>f </i>correspond to the blockchain <b>100</b><i>c</i>. It may be understood that the blockchain nodes (for example, the blockchain node <b>10</b><i>a</i>, the blockchain node <b>10</b><i>b</i>, the blockchain node <b>10</b><i>c</i>, the blockchain node <b>10</b><i>d</i>, the blockchain node <b>10</b><i>e</i>, and the blockchain node <b>100</b> may be respectively configured to maintain corresponding blockchains. All the blockchain <b>100</b><i>a</i>, the blockchain <b>100</b><i>b</i>, and the blockchain <b>100</b><i>c </i>may be understood as a distributed system. In the distributed system, any device such as a server or a user terminal may be added to a blockchain network to become a node in the blockchain network (for example, the blockchain <b>100</b><i>a</i>, the blockchain node <b>10</b><i>a</i>, and the blockchain node <b>10</b><i>b </i>may form a blockchain network. In this case, a new device may be added to the blockchain network after being authenticated successfully to become a node in the blockchain network).</p><p id="p-0040" num="0039">The user terminal in the user terminal cluster may transmit a request to the blockchain in the consortium blockchain <b>100</b> through the communication connection for performing service data authorization or obtaining service data. A description is made below by using an example in which the user terminal <b>20</b><i>a </i>is an authorization terminal corresponding to an authorizer and the user terminal <b>20</b><i>b </i>is a query terminal corresponding to a querier. <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. A consortium blockchain shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> includes four blockchains, which are a blockchain <b>100</b><i>a</i>, a blockchain <b>100</b><i>b</i>, a blockchain <b>100</b><i>c</i>, and a blockchain <b>100</b><i>d </i>respectively.</p><p id="p-0041" num="0040">It may be understood that each blockchain in the consortium blockchain has a private-public key pair and a chain identifier exclusive to the blockchain. Data exchange between the blockchains in the consortium blockchain may be implemented based on the chain identifiers and a cross-chain gateway. Referring to Table 1, Table 1 is a list of chain identifiers respectively corresponding to the blockchains in the consortium blockchain.</p><p id="p-0042" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="3"><colspec colname="offset" colwidth="28pt" align="left"/><colspec colname="1" colwidth="77pt" align="left"/><colspec colname="2" colwidth="112pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row><row><entry/><entry>Name of blockchain</entry><entry>Chain identifier</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></thead><tbody valign="top"><row><entry/><entry>Blockchain 100a</entry><entry>117.114.151.174</entry></row><row><entry/><entry>Blockchain 100b</entry><entry>117.116.189.145</entry></row><row><entry/><entry>Blockchain 100c</entry><entry>117.116.155.123</entry></row><row><entry/><entry>Blockchain 100d</entry><entry>119.123.789.258</entry></row><row><entry/><entry namest="offset" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0043" num="0041">The chain identifier may be an Internet Protocol (IP) address and any other information that can be used for identifying the blockchain. Only an IP address is used as an example for description in Table 1.</p><p id="p-0044" num="0042">The blockchain <b>100</b><i>a </i>may correspond to at least one blockchain node such as a verification node or a query node that is configured to perform a communication connection with the user terminal cluster, for example, a lightweight node <b>1</b> in a cross-chain gateway shown in <figref idref="DRAWINGS">FIG. <b>1</b><i>b</i></figref>. The lightweight node <b>1</b> is specially configured to perform data exchange between the blockchain <b>100</b><i>a </i>and another blockchain in the consortium blockchain. The data exchange may include that the blockchain <b>100</b><i>a </i>broadcasts an own public key and a chain identifier 117.114.151.174 to the another blockchain, or may include that the blockchain <b>100</b><i>a </i>receives and stores a public key and a chain identifier of the another blockchain, or may include that the blockchain <b>100</b><i>a </i>broadcasts data on the blockchain to the another blockchain. Content of the data exchange is not limited herein and may be set according to an actual application scenario. Similarly, the blockchain <b>100</b><i>b </i>may correspond to a lightweight node <b>2</b> (that is, the blockchain <b>100</b><i>b </i>is maintained by using the lightweight node <b>2</b>), the blockchain <b>100</b><i>c </i>may correspond to a lightweight node <b>3</b> (that is, the blockchain <b>100</b><i>c </i>is maintained by using the lightweight node <b>3</b>), and the blockchain <b>100</b><i>d </i>may correspond to a lightweight node <b>4</b> (that is, the blockchain <b>100</b><i>d </i>is maintained by using the lightweight node <b>4</b>). The functions of the lightweight nodes are consistent with the function of the lightweight node <b>1</b> corresponding to the blockchain <b>100</b><i>a</i>, therefore, details are not described herein again.</p><p id="p-0045" num="0043">An enterprise may include service data of a plurality of types such as enterprise tax data, social insurance data, and business data. Service data of different types is stored in different blockchains, and a plurality of blockchains are unified, to form a consortium blockchain. To ensure security and privacy of the service data, when the service data of the enterprise is stored in the blockchains in the consortium blockchain, the enterprise, as an authorizer, may give (indicate) a permission to use the service data to the blockchains (for example, the blockchain <b>100</b><i>a</i>, the blockchain <b>100</b><i>b</i>, the blockchain <b>100</b><i>c</i>, and the blockchain <b>100</b><i>d </i>shown in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>) in the consortium blockchain. That is, when a data user queries or obtains the data by using a blockchain, to ensure the security of the service data, the enterprise needs to authorize the service data to the blockchain, so that the blockchain provides a query permission to the data user according to authorized content.</p><p id="p-0046" num="0044">In some embodiments, a rule on which a consensus is reached in the consortium blockchain is that provided that two blockchains in the consortium blockchain have verified a data authorization certificate of the authorizer and both approve the data authorization certificate, any blockchain in the consortium blockchain may accept a data query request of the user terminal <b>20</b><i>b</i>. A specific process in which the authorizer authorizes the service data and a specific process in which the data user obtains the service data refer to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>.</p><p id="p-0047" num="0045">Operation <b>1</b> to operation <b>3</b>. The authorizer first performs authorization verification on the blockchain <b>100</b><i>a </i>by using the user terminal <b>20</b><i>a</i>, that is, performs identity authentication through face recognition shown in the figure, and the blockchain <b>100</b><i>a </i>signs the data authorization certificate by using an own private key after successfully verifying a face and performs uploading on the signed data authorization certificate. Obviously, the data authorization certificate in <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> is a data authorization contract. The data authorization contract may include an authorization data item, an institution signature, and an enterprise signature. The authorization data item may include the service data authorized to each blockchain. For example, the tax data of the enterprises is stored in the blockchain <b>100</b><i>a</i>, and the authorization data item may include the tax data authorized to the blockchain <b>100</b><i>a</i>. The institution signature may include a signature of the data user on the authorization data item by using a private key. In an actual application, the data user may be a management platform of managing the authorizer or may be an enterprise cooperating with the authorizer. This is not limited herein. The enterprise signature is a signature of the authorizer on the data authorization item by using a private key.</p><p id="p-0048" num="0046">Operation <b>4</b> to operation <b>7</b>. The authorizer performs authorization verification on the blockchain <b>100</b><i>b</i>, which is implemented by verifying a mobile phone short message reserved by the authorizer in the blockchain <b>100</b><i>b </i>shown in the figure, and after successfully verifying the short message, the blockchain <b>100</b><i>b </i>obtains, by using the cross-chain gateway, the data authorization contract (that is, the data authorization certificate) that is signed by the blockchain <b>100</b><i>a </i>from the blockchain <b>100</b><i>a</i>, and then verifies validity of the signature of the blockchain <b>100</b><i>a</i>, and the blockchain <b>100</b><i>b </i>signs the data authorization contract by using an own private key after determining that the signature of the blockchain <b>100</b><i>a </i>is a valid signature and performs uploading on the signed data authorization contract. For example, the blockchain <b>100</b><i>b </i>performs uploading on the signature of the blockchain <b>100</b><i>a</i>, the signature of the blockchain <b>100</b><i>b</i>, and the data authorization contract simultaneously. It may be understood that in some embodiments, in operation <b>1</b> and operation <b>4</b>, the verification manner is described by taking face verification and short message verification as an example. In an actual application, the verification manner is not limited.</p><p id="p-0049" num="0047">Operation <b>8</b> to operation <b>11</b>. Assuming that the social insurance data of the authorizer is stored in the blockchain <b>100</b><i>c </i>in the consortium blockchain, when wanting to obtain the social insurance data of the authorizer, the data user needs to apply the blockchain <b>100</b><i>c</i>, and after obtaining a data query request transmitted by the user terminal <b>20</b><i>b</i>, the blockchain <b>100</b><i>c </i>first obtains, by using the cross-chain gateway, the signature of the blockchain <b>100</b><i>a </i>and the data authorization contract signed by the blockchain <b>100</b><i>b </i>from the blockchain <b>100</b><i>b</i>, then performs signature verification on the signature of the blockchain <b>100</b><i>a </i>according to a public key of the blockchain <b>100</b><i>a</i>, and verifies the signature of the blockchain <b>100</b><i>b </i>according to a public key of the blockchain <b>100</b><i>b</i>, and the blockchain <b>100</b><i>c </i>may consider that the authorizer has performed authorization after the signature verification on the two signatures succeeds, performs uploading on the data authorization contract, and finally returns the social insurance data to the user terminal <b>20</b><i>b </i>corresponding to the data user according to a data authorization range of the data authorization contract. It may be understood that in some embodiments, the blockchain <b>100</b><i>c </i>obtains the signature of the blockchain <b>100</b><i>a </i>and the data authorization contract signed by the blockchain <b>100</b><i>b </i>from the blockchain <b>100</b><i>b</i>. In an actual application, the blockchain <b>100</b><i>c </i>may obtain the data authorization contract signed by the blockchain <b>100</b><i>b </i>from the blockchain <b>100</b><i>b </i>and obtain the data authorization contract signed by the blockchain <b>100</b><i>a </i>from the blockchain <b>100</b><i>a</i>. A subsequent process is consistent with the foregoing description.</p><p id="p-0050" num="0048">Based on the foregoing, this embodiment provides a solution for implementing cross-chain trust transfer between a plurality of blockchains based on a multi-consensus mechanism, so that through few times of authorization, the authorizer can cause the data user to obtain the service data from any blockchain in the consortium blockchain,</p><p id="p-0051" num="0049">In the foregoing, the consortium blockchain includes four blockchains and two blockchains authorized by the authorizer, which is merely an example of this embodiment. It may be understood that the consortium blockchain includes M blockchains, and after N blockchains in the consortium blockchain are authorized by the authorizer, the data user may obtain service data within an authorization range from any blockchain in the consortium blockchain, N being a quantity of blockchains meeting a consensus rule in the consortium blockchain, 1&#x2264;N&#x2264;M, and both N and M being positive integers.</p><p id="p-0052" num="0050">It may be understood that in the specification, claims, and accompanying drawings of the embodiments of the present invention, the terms &#x201c;a&#x201d;, &#x201c;b&#x201d;, &#x201c;A&#x201d;, &#x201c;B&#x201d;, and the like for the blockchain are intended to distinguish between different objects but do not indicate a particular order. In addition, the terms &#x201c;include&#x201d; and any variant thereof are intended to cover a non-exclusive inclusion.</p><p id="p-0053" num="0051">It may be understood that the method provided in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>1</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>1</b>B</figref> may be performed by a computer device, and the computer device includes, but not limited to, a user terminal or a server. In some embodiments, the blockchain node <b>10</b><i>a</i>, the blockchain node <b>10</b><i>b</i>, the blockchain node <b>10</b><i>c</i>, the blockchain node <b>10</b><i>d</i>, the blockchain node <b>10</b><i>e</i>, or the blockchain node <b>10</b><i>f </i>may be the computer device. The server may be a stand-alone physical server, or may be a server cluster or distributed system formed by a plurality of physical servers, or may be a cloud server that provides basic cloud computing services such as a cloud service, a cloud database, cloud computing, a cloud function, cloud storage, a network service, cloud communication, a middleware service, a domain name service, a security service, a content delivery network (CDN), and a big data and artificial intelligence platform. The user terminal may be a smartphone, a tablet computer, a notebook computer, a desktop computer, a smart speaker, a smart TV, a smartwatch, or the like, but is not limited thereto. Quantities of user terminals and servers are not limited, and the terminal and the server may be directly or indirectly connected through wired or wireless communication, which is not limited in some embodiments.</p><p id="p-0054" num="0052">In some embodiments, <figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic flowchart of a blockchain-based data processing method according to some embodiments. The blockchain-based data processing method is performed by a verification node, the verification node corresponds to a first blockchain (for example, a blockchain A, that is, the verification node and the blockchain A belongs to a same blockchain network, and the verification node completes operations such as consensus verification and query based on the blockchain A) in a consortium blockchain, and the consortium blockchain further includes a second blockchain (for example, a blockchain B). As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the data processing method includes the following operations.</p><p id="p-0055" num="0053">Operation S<b>101</b>. Obtain a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer.</p><p id="p-0056" num="0054">For example, <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, an authorizer transmits a data authorization request to a verification node <b>30</b><i>a </i>in the first blockchain (for example, the blockchain A) by using an authorization terminal <b>30</b><i>b</i>. The data authorization request carries a data authorization certificate, and the certificate may include information about the authorizer, information about a data user, and service data stored in the consortium blockchain (the service data is authorized by the authorizer). For specific data of the data authorization certificate, reference may be made to the description in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, and details are not described herein again.</p><p id="p-0057" num="0055">Operation S<b>102</b>. Perform authorization verification on the authorizer according to the data authorization request, to obtain a first verification result.</p><p id="p-0058" num="0056">For example, an authorization object verification request is transmitted to the authorization terminal according to the data authorization request, and a transmitting timestamp of transmitting the authorization object verification request is recorded. An authorization object verification reply returned by the authorization terminal is obtained, and an obtaining timestamp of obtaining the authorization object verification reply is recorded. A valid reply duration for the authorization object verification request is obtained, and an actual reply duration of the authorizer is determined according to the transmitting timestamp and the obtaining timestamp (for example, a difference between the obtaining timestamp and the transmitting timestamp is used as the actual reply duration). The first verification result (for example, a verification result A) is determined as an invalid result in a case that the actual reply duration is greater than the valid reply duration, and reply invalid information for the data authorization request is transmitted to the authorization terminal. Validity of the authorization object verification reply is checked in a case that the actual reply duration is less than or equal to the valid reply duration. The verification result A is determined as the invalid result in a case that the authorization object verification reply is an invalid reply, and authorization failure information for the data authorization request is transmitted to the authorization terminal. The verification result A is determined as the valid result in a case that the actual reply duration is less than or equal to the valid reply duration and the authorization object verification reply is a valid reply.</p><p id="p-0059" num="0057">Referring to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> again, after obtaining the authorization request transmitted by the authorization terminal <b>30</b><i>b</i>, the verification node <b>30</b><i>a </i>in the blockchain A obtains an object verification manner. It may be understood that the object verification manner may include face verification, real-time short message verification, fingerprint verification, password verification, and the like. The object verification manner is not limited herein. In addition, in some embodiments, the object verification manner such as face verification may be determined by using the verification node <b>30</b><i>a</i>, and then an authorization object verification request for the face verification is transmitted to the authorization terminal <b>30</b><i>b</i>, or the verification node <b>30</b><i>a </i>transmits triggers for the verification manners to the authorization terminal <b>30</b><i>b</i>, and the authorization terminal <b>30</b><i>b </i>determines the verification manner. A terminal (including the authorization terminal <b>30</b><i>b </i>and the verification node <b>30</b><i>a</i>) for determining the verification manner is also not limited herein.</p><p id="p-0060" num="0058"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>, the verification node <b>30</b><i>a </i>transmits an authorization object verification request to the authorization terminal <b>30</b><i>b</i>, and the verification node <b>30</b><i>a </i>records a transmitting timestamp of transmitting the authorization object verification request. Obviously, in some embodiments, a description is made by taking face verification as an example. After the authorization terminal <b>30</b><i>b </i>obtains the authorization object verification request, a display screen corresponding to the authorization terminal <b>30</b><i>b </i>may display a face verification prompt such as a face verification box <b>300</b><i>a </i>and a prompt &#x201c;Please aim your face at the face verification box and follow the instructions&#x201d;, to prompt the authorizer of correctly verifying an identity. After obtaining a face of the authorizer, the authorization terminal <b>30</b><i>b </i>transmits an authorization object verification reply to the verification node <b>30</b><i>a</i>. As shown in <figref idref="DRAWINGS">FIG. <b>3</b><i>b</i></figref>, the display screen corresponding to the authorization terminal <b>30</b><i>b </i>may display a prompt &#x201c;Verifying&#x201d;.</p><p id="p-0061" num="0059">When obtaining the authorization object verification reply, the verification node <b>30</b><i>a </i>records an obtaining timestamp of obtaining the authorization object verification reply. The verification node <b>30</b><i>a </i>records the transmitting timestamp and the obtaining timestamp, to ensure real-time performance of the authorization object verification reply and further improve security of the authorization object verification reply. Referring to <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> again, the verification node <b>30</b><i>a </i>may set a valid reply duration for the authorization object verification request. It is assumed that the verification node <b>30</b><i>a </i>transmits the authorization object verification request to the authorization terminal <b>30</b><i>b </i>at 2:00 p.m., and obtains the authorization object verification reply returned by the authorization terminal <b>30</b><i>b </i>at 2:01 p.m., it may be determined that an actual reply duration of the authorizer is one minute. If the valid reply duration set by the verification node <b>30</b><i>a </i>is 50 seconds, it may be determined that the authorization object verification reply is invalid, and further it may be determined that a verification result A of the authorization object verification request is an invalid result. In this case, the verification node <b>30</b><i>a </i>may transmit reply invalid information to the authorization terminal <b>30</b><i>b</i>, so that the authorization terminal <b>30</b><i>b </i>performs subsequent operations such as a secondary reply. If the valid reply duration set by the verification node <b>30</b><i>a </i>is 70 seconds, it may be determined that the reply duration is valid. In this case, validity of the authorization object verification reply is checked. As shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>, the verification node <b>30</b><i>a </i>may obtain a face image <b>300</b><i>b </i>of the authorizer on which uploading has been performed from the blockchain A, and then compare a face image in the authorization object verification reply with the face image <b>300</b><i>b</i>. If an object included in the face image in the authorization object verification reply is the same as an object (for example, the authorizer) in the face image <b>300</b><i>b</i>, the verification node <b>30</b><i>a </i>may determine the authorization object verification reply as a valid reply, and may further determine the verification result A of the current authorization object verification request as a valid result. If the object included in the face image in the authorization object verification reply is different from the object in the face image <b>300</b><i>b</i>, the verification node <b>30</b><i>a </i>may determine the authorization object verification reply as an invalid reply, and may further determine the verification result A of the current authorization object verification request as the invalid result. In this case, the verification node <b>30</b><i>a </i>transmits authorization failure information for the data authorization request to the authorization terminal <b>30</b><i>b. </i></p><p id="p-0062" num="0060">In this operation, the verification node <b>30</b><i>a </i>first checks the reply duration and then compares the face images to determine the verification result A. However, in an example embodiment, the verification node <b>30</b><i>a </i>may first check the object included in the face image in the authorization object verification reply and the object in the face image <b>300</b><i>b</i>. If the objects in the two face images are inconsistent, the verification node <b>30</b><i>a </i>may determine the verification result A as the invalid result. If the objects in the two face images are consistent, the verification node <b>30</b><i>a </i>checks the valid reply duration and the actual reply duration, to determine the validity of the verification result A.</p><p id="p-0063" num="0061">Operation S<b>103</b>. Sign the data authorization certificate according to a private key of the first blockchain in a case that the first verification result is a valid result, to obtain a first certificate signature, determine the first certificate signature as a to-be-uploaded signature, and perform uploading on the data authorization certificate carrying the to-be-uploaded signature.</p><p id="p-0064" num="0062">Specifically, the consortium blockchain further includes a third blockchain (for example, a blockchain C), and the blockchain C is a blockchain that has accepted the data authorization request. A third certificate signature (for example, a certificate signature C) corresponding to the data authorization certificate is obtained from the blockchain C by using the cross-chain gateway in a case that the verification result A is the valid result, the certificate signature C being obtained by signing the data authorization certificate by a node corresponding to the blockchain C according to a private key of the blockchain C in a case that a second verification result (for example, a verification result C) for the authorizer is the valid result. A first hash value corresponding to the data authorization certificate is obtained. The certificate signature C is decrypted according to a public key of the blockchain C, to obtain a second hash value. The first hash value is compared with the second hash value. A signature verification result includes a successful signature verification result and a failed signature verification result. The signature verification result is determined as the successful signature verification result in a case that the first hash value is the same as the second hash value. The signature verification result is determined as the failed signature verification result in a case that the first hash value is different from the second hash value. In a case that the signature verification result is the failed signature verification result, authorization failure information for the data authorization request is transmitted to the authorization terminal, and signature verification failure information is transmitted to the blockchain C by using the cross-chain gateway, so that the blockchain C detects the certificate signature C. The data authorization certificate is signed according to the private key of the blockchain A in a case that the signature verification result is the successful signature verification result, to obtain the certificate signature A, and the certificate signature A and the certificate signature C are determined as the to-be-uploaded signatures.</p><p id="p-0065" num="0063">Operation S<b>104</b>. Transmit, in a case that a certificate cross-chain query request transmitted by the second blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway. A query permission is provided to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0066" num="0064">For example, the cross-chain gateway includes a second lightweight node (for example, a lightweight node B) corresponding to the second blockchain (for example, the blockchain B) and a first lightweight node (for example, a lightweight node A) corresponding to the blockchain A. The lightweight node A includes a chain identifier of the blockchain B. The chain identifier of the blockchain B is obtained in a case that the certificate cross-chain query request transmitted by the lightweight node B corresponding to the blockchain B is received by using the lightweight node A. The chain identifier of the blockchain B and the data authorization certificate carrying the to-be-uploaded signature is transmitted to the lightweight node A, so that the lightweight node A transmits the data authorization certificate carrying the to-be-uploaded signature to the lightweight node B in the blockchain B according to the chain identifier of the blockchain B.</p><p id="p-0067" num="0065">For example, for a specific process of operation S<b>103</b> and operation S<b>104</b>, reference may be made to the description in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>1</b>B</figref>, or reference may be made to a description in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref> below. Details are not described herein again.</p><p id="p-0068" num="0066">For example, a public key of the blockchain A and a chain identifier of the blockchain A are broadcasted to the consortium blockchain by using the cross-chain gateway, so that remaining blockchains in the consortium blockchain perform uploading on the public key of the blockchain A and the chain identifier of the blockchain A. The remaining blockchains are blockchains other than the blockchain A in the consortium blockchain. Public keys of the remaining blockchains and chain identifiers of the remaining blockchains are obtained by using the cross-chain gateway, and uploading is performed on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</p><p id="p-0069" num="0067">In some embodiments, the consortium blockchain is generated by unifying at least one blockchain. <figref idref="DRAWINGS">FIG. <b>3</b>C</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>, a consortium blockchain include four blockchains, which are a blockchain <b>100</b><i>a</i>, a blockchain <b>100</b><i>b</i>, a blockchain <b>100</b><i>c</i>, and a blockchain <b>100</b><i>d </i>respectively. At the beginning of forming a consortium, a blockchain node specially configured to perform data exchange in the consortium blockchain is determined from each blockchain. It is assumed that in the blockchain <b>100</b><i>a</i>, a lightweight node <b>1</b> is used as a node in the blockchain <b>100</b><i>a </i>for performing data exchange with another blockchain in the consortium blockchain. In the blockchain <b>100</b><i>b</i>, a lightweight node <b>2</b> is used as a node in the blockchain <b>100</b><i>b </i>for performing data exchange with another blockchain in the consortium blockchain. In the blockchain <b>100</b><i>c</i>, a lightweight node <b>3</b> is used as a node in the blockchain <b>100</b><i>c </i>for performing data exchange with another blockchain in the consortium blockchain. In the blockchain <b>100</b><i>d</i>, a lightweight node <b>4</b> is used as a node in the blockchain <b>100</b><i>d </i>for performing data exchange with another blockchain in the consortium blockchain. Therefore, the lightweight node <b>1</b>, the lightweight node <b>2</b>, the lightweight node <b>3</b>, and the lightweight node <b>4</b> form a cross-chain gateway, and all the data exchange in the consortium blockchain passes through the cross-chain gateway, to effectively avoid tampering and forging.</p><p id="p-0070" num="0068">A blockchain A may be any blockchain in <figref idref="DRAWINGS">FIG. <b>3</b>C</figref>. In some embodiments, a description is made by using the blockchain <b>100</b><i>a </i>as the blockchain A. The blockchain <b>100</b><i>a </i>broadcasts a public key of the blockchain <b>100</b><i>a </i>and a chain identifier of the blockchain <b>100</b><i>a </i>to the consortium blockchain by using the cross-chain gateway, so that the blockchain <b>100</b><i>b</i>, the blockchain <b>100</b><i>c</i>, and the blockchain <b>100</b><i>d </i>in the consortium blockchain perform uploading on the public key of the blockchain <b>100</b><i>a </i>and the chain identifier of the blockchain <b>100</b><i>a</i>. Similarly, the blockchain <b>100</b><i>a </i>obtains public keys and chain identifiers respectively corresponding to the blockchain <b>100</b><i>b</i>, the blockchain <b>100</b><i>c</i>, and the blockchain <b>100</b><i>d </i>by using the cross-chain gateway and performs uploading on the public keys and the chain identifiers, that is, contract pre-uploading. For specific processes of data exchange between the remaining blockchains and contract pre-uploading, reference may be made to the description of the blockchain <b>100</b><i>a</i>. Details are not described herein again.</p><p id="p-0071" num="0069"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic flowchart of a blockchain-based data processing method according to some embodiments. The blockchain-based data processing method is performed by a query node, the query node corresponds to a second blockchain (for example, a blockchain B) in a consortium blockchain, and the consortium blockchain further includes a verification blockchain. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the data processing method includes the following operations.</p><p id="p-0072" num="0070">Operation S<b>201</b>. Obtain a data query request associated with an authorizer and transmitted by a query terminal.</p><p id="p-0073" num="0071">For example, the data query request includes a chain identifier of the verification blockchain. The verification blockchain is a blockchain including a valid verification result of the data authorization certificate in the consortium blockchain. A verification quantity of verification blockchains in the consortium blockchain is determined according to the chain identifier of the verification blockchain. Data query failure information is transmitted to the query terminal in a case that the verification quantity is less than a verification quantity threshold. In a case that the verification quantity is greater than or equal to the verification quantity threshold, the operation of transmitting a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway is performed.</p><p id="p-0074" num="0072">For example, a public key of the blockchain B and a chain identifier of the blockchain B are broadcasted to the consortium blockchain by using a cross-chain gateway, so that remaining blockchains in the consortium blockchain perform uploading on the public key of the blockchain B and the chain identifier of the blockchain B. The remaining blockchains are blockchains other than the blockchain B in the consortium blockchain. Public keys of the remaining blockchains and chain identifiers of the remaining blockchains are obtained by using the cross-chain gateway, and uploading is performed on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</p><p id="p-0075" num="0073"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, a querier transmits, by using a query terminal <b>50</b><i>b</i>, a data query request to a query node <b>50</b><i>a </i>corresponding to a blockchain B in a consortium blockchain <b>500</b><i>a </i>to which the querier belongs. The data query request carries information about an authorizer and carries a chain identifier of a verification blockchain. The consortium blockchain <b>500</b><i>a </i>may include a blockchain A, a blockchain B, and a blockchain C. It is assumed that the blockchain A and the blockchain C are verification blockchains in the consortium blockchain <b>500</b><i>a. </i></p><p id="p-0076" num="0074">The query node <b>50</b><i>a </i>determines a verification quantity, that is, <b>2</b>, of verification blockchains in the consortium blockchain <b>500</b><i>a </i>according to a chain identifier of the blockchain A and a chain identifier of the blockchain C. The query node <b>50</b><i>a </i>compares the verification quantity with a verification quantity threshold set by a system. If the verification quantity is less than the verification quantity threshold (it is assumed that the verification quantity threshold is 3), the query node <b>50</b><i>a </i>transmits data query failure information to the query terminal <b>50</b><i>b</i>. If the verification quantity is greater than or equal to the verification quantity threshold, the query node <b>50</b><i>b </i>performs operation S<b>202</b> to operation S<b>204</b>.</p><p id="p-0077" num="0075">Operation S<b>202</b>. Transmit a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway, the certificate cross-chain query request being used for the verification blockchain to determine a data authorization certificate carrying a to-be-uploaded signature, the to-be-uploaded signature being obtained by signing the data authorization certificate by the verification blockchain according to a private key of the verification blockchain after the authorizer is determined as a valid authorizer.</p><p id="p-0078" num="0076">For example, in this embodiment, a description is made by taking the blockchain A as an example, when the verification blockchain is another blockchain in the consortium blockchain <b>500</b><i>a</i>, reference may be made to a description below. <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a schematic diagram of a blockchain-based data processing scenario according to some embodiments. A verification node <b>50</b><i>c </i>shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> may be equivalent to the verification node <b>30</b><i>a </i>in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the verification node <b>50</b><i>c </i>corresponds to the blockchain A (that is, the verification node <b>50</b><i>a </i>is configured to maintain the blockchain A). When obtaining, by using a cross-chain gateway, a certificate cross-chain query request for the authorizer transmitted by the query node <b>50</b><i>a</i>, the verification node <b>50</b><i>a </i>transmits a data authorization certificate carrying a to-be-uploaded signature to the query node <b>50</b><i>a </i>by using the cross-chain gateway.</p><p id="p-0079" num="0077">Operation S<b>203</b>. Obtain, by using the cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature transmitted by the verification blockchain.</p><p id="p-0080" num="0078">Operation S<b>204</b>. Perform signature verification on the to-be-uploaded signature according to a public key of the verification blockchain, and provide a query permission to the query terminal according to the data authorization certificate in a case that the signature verification succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0081" num="0079">For example, the verification blockchain includes a blockchain A and a third blockchain (for example, a blockchain C), and the to-be-uploaded signature includes a certificate signature A and a third certificate signature (for example, a certificate signature C). The certificate signature A is generated based on a private key of the blockchain A and the data authorization certificate, and the certificate signature C is generated based on a private key of the blockchain C and the data authorization certificate. Signature verification is performed on the certificate signature A according to the public key of the blockchain A, to obtain a signature verification result A, and signature verification is performed on the certificate signature C according to the public key of the blockchain C, to obtain a second signature verification result (for example, a signature verification result C). It is determined that the signature verification fails in a case that at least one of the signature verification result A and the signature verification result C is a failed signature verification result, and data query failure information is transmitted to the query terminal. It is determined that the signature verification succeeds in a case that both the signature verification result A and the signature verification result C are successful signature verification results, and the data authorization certificate is signed according to a private key of the blockchain B, to obtain a second certificate signature (for example, a certificate signature B). Uploading is performed on the certificate signature B and the data authorization certificate, and the query permission is provided to the query terminal according to the data authorization certificate after the uploading succeeds.</p><p id="p-0082" num="0080">For example, a first hash value corresponding to the data authorization certificate is obtained. The to-be-uploaded signature is decrypted according to a public key of the verification blockchain, to obtain a second hash value. The first hash value is compared with the second hash value, and it is determined that the signature verification succeeds in a case that the first hash value is the same as the second hash value. It is determined that the signature verification fails in a case that the first hash value is different from the second hash value, and data query failure information is transmitted to the query terminal.</p><p id="p-0083" num="0081">As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the to-be-uploaded signature includes a certificate signature A and a certificate signature C, and the blockchain B has stored public keys of other blockchains in the consortium blockchain <b>500</b><i>a</i>. Therefore, the query node <b>50</b><i>a </i>may obtain the public keys of the verification blockchains. It may be learned with reference to <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> and <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> that the verification blockchains are the blockchain A and the blockchain C. The query node <b>50</b><i>a </i>performs signature verification on the certificate signature A according to the public key of the blockchain A, and performs signature verification on the certificate signature C according to the public key of the blockchain C, to obtain a signature verification result <b>500</b><i>b</i>. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, the signature verification result <b>500</b><i>b </i>includes a signature verification result A and a signature verification result C.</p><p id="p-0084" num="0082">It is determined that the signature verification fails if the signature verification result in the signature verification result <b>500</b><i>b </i>is a failed signature verification result (for example, it is determined that the signature verification fails when any one of the signature verification result A and the signature verification result C is the failed signature verification result). In this case, the query node <b>50</b><i>a </i>transmits data query failure information to the query terminal <b>50</b><i>b</i>. If both the signature verification results in the signature verification result <b>500</b><i>b </i>are successful signature verification results, the query node <b>50</b><i>a </i>determines that the signature verification succeeds, obtains a private key of the blockchain B, and signs the data authorization certificate by using the private key of the blockchain B, to obtain a certificate signature B. Uploading is performed on the certificate signature B and the data authorization certificate, and the query permission is provided to the query terminal <b>50</b><i>b </i>according to the data authorization certificate after the uploading succeeds.</p><p id="p-0085" num="0083">It may be understood that in the embodiments corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref> and <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the verification node and the query node may be any blockchain nodes in the blockchain A and the verification blockchain.</p><p id="p-0086" num="0084">In some embodiments, a verification node corresponds to the blockchain A in the consortium blockchain. In addition, the consortium blockchain further includes the blockchain B. The verification node may obtain a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer. It is to be understood that authorized data in the data authorization certificate is transaction data or service data, and the data is stored in the consortium blockchain. Further, the verification node may perform authorization verification on the authorizer according to the data authorization request, to obtain a verification result A. Further, the verification node may sign the data authorization certificate according to a private key of the blockchain A in a case that the verification result A is a valid result, to obtain a certificate signature A, then determine the certificate signature A as a to-be-uploaded signature, and finally perform uploading on the data authorization certificate carrying the to-be-uploaded signature. Further, when receiving, by using a cross-chain gateway, a certificate cross-chain query request transmitted by the blockchain B, the verification node may transmit the data authorization certificate carrying the to-be-uploaded signature to the blockchain B by using the cross-chain gateway, so that the blockchain B may perform signature verification on the to-be-uploaded signature, and in a case that the signature verification succeeds, the blockchain B may provide a query permission to a query terminal according to the data authorization certificate. The query permission is a permission of the query terminal to obtain service data provided by the authorizer in the blockchain B. It can be learned from the foregoing that the consortium blockchain includes at least two blockchains. The at least two blockchains includes the blockchain A and the blockchain B. An authorizer transmits a data authorization request to a verification node in the blockchain A, and the verification node may perform authorization verification on the authorizer according to the data authorization request, so that when a verification result A is a valid result, the verification node signs a data authorization certificate according to a private key of the blockchain A, to obtain a certificate signature A, to indicate that the authorizer passes the authorization verification in the blockchain A. Subsequently, when a data querier obtains, by using the blockchain B, data associated with the authorizer, although the blockchain B does not have a data authorization certificate (because the authorizer does not preform authorization verification on the blockchain B), the blockchain B may transmit a certificate cross-chain query request to the blockchain A by using a cross-chain gateway in the consortium blockchain, to obtain the data authorization certificate carrying a to-be-uploaded signature (for example, the certificate signature A). When signature verification on the to-be-uploaded signature by the blockchain B succeeds, the blockchain B may provide, according to the data authorization certificate transmitted by the blockchain A, service data authorized by the authorizer to the data querier. It may be understood that the solution provided in some embodiments may be used to improve the data authorization efficiency of the data authorizer in the consortium blockchain.</p><p id="p-0087" num="0085">The following describes an example embodiment in an application scenario.</p><p id="p-0088" num="0086">Generally, data of different entities is managed by the entities, but in some special cases, data of some entities (that is, data authorizers) needs to be authorized to other entities (that is, data users) for query. For example, to regulate management on enterprises, some institutions (for example, a tax supervision institution) need to regularly monitor relevant data of the enterprises.</p><p id="p-0089" num="0087">For example, the data authorizer is an enterprise A. The enterprise A may include data of a plurality of types such as tax data, social insurance data, and business data. The data of different types may be stored in different blockchains, for example, the tax data is stored in a blockchain A, the social insurance data is stored in a blockchain B, and the business data is stored in a blockchain C. At a stage of authorization consensus, a manager of the enterprise A may first perform authorization verification on the blockchain A, for example, may perform authorization verification through face recognition. After face verification succeeds, the blockchain A may sign a data authorization certificate (that is, a data authorization contract, which includes a data authorization item, an institution signature, an enterprise signature, and the like) according to a private key of the blockchain A, and perform uploading on the signed data authorization certificate. Subsequently, the manager of the enterprise A may perform authorization verification on the blockchain B, for example, may perform authorization verification through short message verification. After short message verification succeeds, the blockchain B may obtain, by using a cross-chain gateway, the data authorization certificate signed by the blockchain A from the blockchain A. After verifying that the signature of the blockchain A is valid, the blockchain B may sign the data authorization certificate signed by the blockchain A again by using an own private key, and perform uploading on the signed data authorization certificate.</p><p id="p-0090" num="0088">For example, the data user is an institution B (for example, a tax supervision institution). When the institution B needs to apply the blockchain C to obtain the business data of the enterprise A, the blockchain C may obtain, by using the cross-chain gateway, the data authorization certificate signed by the blockchain A and the blockchain B from the blockchain B, and then verify the corresponding signatures by using public keys of the blockchain A and the blockchain B. When the verification on the signatures succeeds, it may be considered that the enterprise A has performed authorization (that is, the manager of the enterprise A does not need to perform authorization verification on the blockchain C), and the blockchain C may directly return the business data of the enterprise A to the institution B. Therefore, based on a consensus rule predefined between consortium blockchains, after only some blockchains in a plurality of blockchains need to successfully perform authorization verification on a user, the entire consortium blockchain may consider that the authorization verification on the user succeeds, to effectively reduce a quantity of times of verification when the user authorizes data in the blockchains in the consortium blockchain to the data user. In addition, a trust mechanism in the consortium blockchain may be ensured through an asymmetric signature, and a public key for verification is transferred and stored into each blockchain by using the cross-chain gateway, to avoid tampering and forging.</p><p id="p-0091" num="0089"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic structural diagram of a blockchain-based data processing apparatus <b>1</b> according to some embodiments. The blockchain-based data processing apparatus, may run in a verification node, the verification node corresponds to a blockchain A in a consortium blockchain, and the consortium blockchain further includes a blockchain B. The blockchain-based data processing apparatus may be a computer program (including program code) run in a computer device. For example, the blockchain-based data processing apparatus is application software. The apparatus may be configured to perform the corresponding operations in the method provided in some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the blockchain-based data processing apparatus <b>1</b> may include: a request obtaining module <b>11</b>, a verification authorization module <b>12</b>, a first processing module <b>13</b>, and a certificate transmitting module <b>14</b>.</p><p id="p-0092" num="0090">The request obtaining module <b>11</b> is configured to obtain a data authorization request transmitted by an authorization terminal, the data authorization request including a data authorization certificate associated with an authorizer.</p><p id="p-0093" num="0091">The verification authorization module <b>12</b> is configured to perform authorization verification on the authorizer according to the data authorization request, to obtain a first verification result.</p><p id="p-0094" num="0092">The first processing module <b>13</b> is configured to sign the data authorization certificate according to a private key of the first blockchain in a case that the first verification result is a valid result, to obtain a first certificate signature, determine the first certificate signature as a to-be-uploaded signature, and perform uploading on the data authorization certificate carrying the to-be-uploaded signature.</p><p id="p-0095" num="0093">The certificate transmitting module <b>14</b> is configured to transmit, in a case that a certificate cross-chain query request transmitted by the second blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway, and provide a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0096" num="0094">For specific function implementations of the request obtaining module <b>11</b>, the verification authorization module <b>12</b>, the first processing module <b>13</b>, and the certificate transmitting module <b>14</b>, reference may be made to operation S<b>101</b> to operation S<b>104</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0097" num="0095">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the consortium blockchain further includes a third blockchain, and the third blockchain is a blockchain that has accepted the data authorization request.</p><p id="p-0098" num="0096">The first processing module <b>13</b> may include a first obtaining unit <b>131</b>, a signature verification unit <b>132</b>, and a first determining unit <b>133</b>.</p><p id="p-0099" num="0097">The first obtaining unit <b>131</b> may be configured to obtain a third certificate signature corresponding to the data authorization certificate from the third blockchain by using the cross-chain gateway in a case that the first verification result is the valid result, the third certificate signature being obtained by signing the data authorization certificate by a node corresponding to the third blockchain according to a private key of the third blockchain in a case that a second verification result for the authorizer is the valid result.</p><p id="p-0100" num="0098">The signature verification unit <b>132</b> may be configured to perform signature verification on the third certificate signature according to a public key of the third blockchain, to obtain a signature verification result.</p><p id="p-0101" num="0099">The first determining unit <b>133</b> may be configured to sign the data authorization certificate according to the signature verification result and the private key of the first blockchain, to obtain the first certificate signature, and determine the first certificate signature and the third certificate signature as the to-be-uploaded signatures.</p><p id="p-0102" num="0100">For specific function implementations of the first obtaining unit <b>131</b>, the signature verification unit <b>132</b>, and the first determining unit <b>133</b>, reference may be made to operation S<b>103</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0103" num="0101">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref> again, the signature verification result includes a successful signature verification result and a failed signature verification result.</p><p id="p-0104" num="0102">The first determining unit <b>133</b> may include an information transmitting subunit <b>1331</b> and a certificate signing subunit <b>1332</b>.</p><p id="p-0105" num="0103">The information transmitting subunit <b>1331</b> may be configured to transmit, in a case that the signature verification result is the failed signature verification result, authorization failure information for the data authorization request to the authorization terminal, and transmit signature verification failure information to the third blockchain by using the cross-chain gateway, the signature verification failure information being used for the third blockchain to detect the second certificate signature.</p><p id="p-0106" num="0104">The certificate signing subunit <b>1332</b> may be configured to sign the data authorization certificate according to the private key of the first blockchain in a case that the signature verification result is the successful signature verification result, to obtain the first certificate signature.</p><p id="p-0107" num="0105">For specific functional implementations of the information transmitting subunit <b>1331</b> and the certificate signing subunit <b>1332</b>, reference may be made to operation S<b>103</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0108" num="0106">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref> again, the signature verification unit <b>132</b> may include: a hash obtaining subunit <b>1321</b>, a signature decrypting subunit <b>1322</b>, a hash comparing subunit <b>1323</b>, and a first determining subunit <b>1324</b>.</p><p id="p-0109" num="0107">The hash obtaining subunit <b>1321</b> may be configured to obtain a first hash value corresponding to the data authorization certificate.</p><p id="p-0110" num="0108">The signature decrypting subunit <b>1322</b> may be configured to decrypt the third certificate signature according to the public key of the third blockchain, to obtain a second hash value.</p><p id="p-0111" num="0109">The hash comparing subunit <b>1323</b> may be configured to compare the first hash value with the second hash value.</p><p id="p-0112" num="0110">The first determining subunit <b>1324</b> may be configured to determine the signature verification result as the successful signature verification result in a case that the first hash value is the same as the second hash value.</p><p id="p-0113" num="0111">The first determining subunit <b>1324</b> may be further configured to determine the signature verification result as the failed signature verification result in a case that the first hash value is different from the second hash value.</p><p id="p-0114" num="0112">For specific function implementations of the hash obtaining subunit <b>1321</b>, the signature decryption subunit <b>1322</b>, the hash comparing subunit <b>1323</b>, and the first determining subunit <b>1324</b>, reference may be made to operation S<b>103</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0115" num="0113">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref> again, the cross-chain gateway may include a second lightweight node corresponding to the second blockchain and a first lightweight node corresponding to the first blockchain. The first lightweight node may include a chain identifier of the second blockchain.</p><p id="p-0116" num="0114">The certificate transmitting module <b>14</b> may include: a second obtaining unit <b>141</b> and a certificate transmitting unit <b>142</b>.</p><p id="p-0117" num="0115">The second obtaining unit <b>141</b> may be configured to obtain the chain identifier of the second blockchain in a case that the certificate cross-chain query request transmitted by the second lightweight node corresponding to the second blockchain is received by using the first lightweight node.</p><p id="p-0118" num="0116">The certificate transmitting unit <b>142</b> may be configured to transmit the chain identifier of the second blockchain and the data authorization certificate carrying the to-be-uploaded signature to the first lightweight node, the chain identifier of the second blockchain being used for the first lightweight node to transmit the data authorization certificate carrying the to-be-uploaded signature to the second lightweight node corresponding to the second blockchain according to the chain identifier of the second blockchain.</p><p id="p-0119" num="0117">For specific function implementations of the second obtaining unit <b>141</b> and the certificate transmitting unit <b>142</b>, reference may be made to operation S<b>104</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0120" num="0118">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the blockchain-based data processing apparatus <b>1</b> may further include: an information broadcasting module <b>15</b> and a second processing module <b>16</b>.</p><p id="p-0121" num="0119">The information broadcasting module <b>15</b> may be configured to broadcast a public key of the first blockchain and a chain identifier of the first blockchain to the consortium blockchain by using the cross-chain gateway, so that remaining blockchains in the consortium blockchain perform uploading on the public key of the first blockchain and the chain identifier of the first blockchain, the remaining blockchains being blockchains other than the first blockchain in the consortium blockchain.</p><p id="p-0122" num="0120">The second processing module <b>16</b> may be configured to obtain public keys of the remaining blockchains and chain identifiers of the remaining blockchains by using the cross-chain gateway, and perform uploading on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</p><p id="p-0123" num="0121">For specific function implementations of the information broadcasting module <b>15</b> and the second processing module <b>16</b>, reference may be made to operation S<b>104</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0124" num="0122">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref> again, the verification authorization module <b>12</b> may include: a first recording unit <b>121</b>, a second recording unit <b>122</b>, and a second determining unit <b>123</b>.</p><p id="p-0125" num="0123">The first recording unit <b>121</b> may be configured to transmit an authorization object verification request to the authorization terminal according to the data authorization request, and record a transmitting timestamp of transmitting the authorization object verification request.</p><p id="p-0126" num="0124">The second recording unit <b>122</b> may be configured to obtain an authorization object verification reply returned by the authorization terminal, and record an obtaining timestamp of obtaining the authorization object verification reply.</p><p id="p-0127" num="0125">The second determining unit <b>123</b> may be configured to determine the verification result A according to the authorization object verification reply, the transmitting timestamp, and the obtaining timestamp.</p><p id="p-0128" num="0126">For specific function implementations of the first recording unit <b>121</b>, the second recording unit <b>122</b>, and the second determining unit <b>123</b>, reference may be made to operation S<b>102</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0129" num="0127">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref> again, the second determining unit <b>123</b> may include: a second determining subunit <b>1231</b>, a third determining subunit <b>1232</b>, a reply check subunit <b>1233</b>, and a fourth determining subunit <b>1234</b>.</p><p id="p-0130" num="0128">The second determining subunit <b>1231</b> may be configured to obtain a valid reply duration for the authorization object verification request, and determine an actual reply duration of the authorizer according to the transmitting timestamp and the obtaining timestamp.</p><p id="p-0131" num="0129">The third determining subunit <b>1232</b> may be configured to determine the first verification result as an invalid result in a case that the actual reply duration is greater than the valid reply duration, and transmit reply invalid information for the data authorization request to the authorization terminal.</p><p id="p-0132" num="0130">The reply check subunit <b>1233</b> may be configured to check validity of the authorization object verification reply in a case that the actual reply duration is less than or equal to the valid reply duration.</p><p id="p-0133" num="0131">The fourth determining subunit <b>1234</b> may be configured to determine the first verification result as the invalid result in a case that the authorization object verification reply is an invalid reply, and transmit authorization failure information for the data authorization request to the authorization terminal.</p><p id="p-0134" num="0132">The fourth determining subunit <b>1234</b> may be further configured to determine the first verification result as the valid result in a case that the actual reply duration is less than or equal to the valid reply duration and the authorization object verification reply is a valid reply.</p><p id="p-0135" num="0133">For specific function implementations of the second determining subunit <b>1231</b>, the third determining subunit <b>1232</b>, the reply check subunit <b>1233</b>, and the fourth determining subunit <b>1234</b>, reference may be made to operation S<b>102</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and details are not described herein again.</p><p id="p-0136" num="0134"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic structural diagram of a blockchain-based data processing apparatus <b>2</b> according to some embodiments. The blockchain-based data processing apparatus may run in a query node, the query node corresponds to a second blockchain in a consortium blockchain, and the consortium blockchain further includes a verification blockchain. The blockchain-based data processing apparatus may be a computer program (including program code) run in a computer device. For example, the blockchain-based data processing apparatus is application software. The apparatus may be configured to perform the corresponding operations in the method provided in the foregoing embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the blockchain-based data processing apparatus <b>2</b> may include: a first obtaining module <b>21</b>, a first transmitting module <b>22</b>, a second obtaining module <b>23</b>, and a permission providing module <b>24</b>.</p><p id="p-0137" num="0135">The first obtaining module <b>21</b> may be configured to obtain a data query request associated with an authorizer and transmitted by a query terminal.</p><p id="p-0138" num="0136">The first transmitting module <b>22</b> may be configured to transmit a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway, the certificate cross-chain query request being used for triggering the verification blockchain to determine a data authorization certificate carrying a to-be-uploaded signature. The to-be-uploaded signature is obtained by signing the data authorization certificate by the verification blockchain according to a private key of the verification blockchain after the authorizer is determined as a valid authorizer.</p><p id="p-0139" num="0137">The second obtaining module <b>23</b> may be configured to obtain, by using the cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature transmitted by the verification blockchain.</p><p id="p-0140" num="0138">The permission providing module <b>24</b> may be configured to perform signature verification on the to-be-uploaded signature according to a public key of the verification blockchain, and provide a query permission to the query terminal according to the data authorization certificate in a case that the signature verification succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</p><p id="p-0141" num="0139">For specific functional implementations of the first obtaining module <b>21</b>, the first transmitting module <b>22</b>, the second obtaining module <b>23</b>, and the permission providing module <b>24</b>, reference may be made to operation S<b>201</b> to operation S<b>204</b> in the foregoing embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0142" num="0140">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref> again, the data query request includes a chain identifier of the verification blockchain. The verification blockchain is a blockchain including a valid verification result of the data authorization certificate in the consortium blockchain.</p><p id="p-0143" num="0141">The blockchain-based data processing apparatus <b>2</b> may further include: a quantity determining module <b>25</b> and a second transmitting module <b>26</b>.</p><p id="p-0144" num="0142">The quantity determining module <b>25</b> may be configured to determine a verification quantity of verification blockchains in the consortium blockchain according to the chain identifier of the verification blockchain.</p><p id="p-0145" num="0143">The second transmitting module <b>26</b> may be configured to transmit data query failure information to the query terminal in a case that the verification quantity is less than a verification quantity threshold.</p><p id="p-0146" num="0144">The second transmitting module <b>26</b> may be further configured to perform, in a case that the verification quantity is greater than or equal to the verification quantity threshold, the operation of transmitting a certificate cross-chain query request for the authorizer to the verification blockchain by using a cross-chain gateway.</p><p id="p-0147" num="0145">For specific function implementations of the quantity determining module <b>25</b> and the second transmitting module <b>26</b>, reference may be made to operation S<b>201</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0148" num="0146">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref> again, the blockchain-based data processing apparatus <b>2</b> may further include: an information broadcasting module <b>27</b> and a third obtaining module <b>28</b>.</p><p id="p-0149" num="0147">The information broadcasting module <b>27</b> may be configured to broadcast a public key of the second blockchain and a chain identifier of the second blockchain to the consortium blockchain by using the cross-chain gateway, so that remaining blockchains in the consortium blockchain perform uploading on the public key of the second blockchain and the chain identifier of the second blockchain. The remaining blockchains are blockchains other than the second blockchain in the consortium blockchain.</p><p id="p-0150" num="0148">The third obtaining module <b>28</b> may be configured to obtain public keys of the remaining blockchains and chain identifiers of the remaining blockchains by using the cross-chain gateway, and perform uploading on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</p><p id="p-0151" num="0149">For specific function implementations of the information broadcasting module <b>27</b> and the third obtaining module <b>28</b>, reference may be made to operation S<b>201</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0152" num="0150">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref> again, the verification blockchain includes a first blockchain and a second blockchain, and the to-be-uploaded signature includes a first certificate signature and a third certificate signature. The first certificate signature is generated based on a private key of the first blockchain and the data authorization certificate, and the third certificate signature is generated based on a private key of the third blockchain and the data authorization certificate.</p><p id="p-0153" num="0151">The permission providing module <b>24</b> may include: a signature verification unit <b>241</b>, a first determining unit <b>242</b>, and a permission providing unit <b>243</b>.</p><p id="p-0154" num="0152">The signature verification unit <b>241</b> may be configured to perform signature verification on the first certificate signature according to a public key of the first blockchain, to obtain a first signature verification result, and perform signature verification on the third certificate signature according to a public key of the third blockchain, to obtain a second signature verification result.</p><p id="p-0155" num="0153">The first determining unit <b>242</b> may be configured to determine that the signature verification fails in a case that at least one of the first signature verification result and the second signature verification result is a failed signature verification result, and transmit data query failure information to the query terminal.</p><p id="p-0156" num="0154">The first determining unit <b>242</b> may be further configured to determine that the signature verification succeeds in a case that both the first signature verification result and the second signature verification result are successful signature verification results, and sign the data authorization certificate according to a private key of the second blockchain, to obtain a second certificate signature.</p><p id="p-0157" num="0155">The permission providing unit <b>243</b> may be configured to perform uploading on the second certificate signature and the data authorization certificate, and provide the query permission to the query terminal according to the data authorization certificate after the uploading succeeds.</p><p id="p-0158" num="0156">For specific function implementations of the signature verification unit <b>241</b>, the first determining unit <b>242</b>, and the permission providing unit <b>243</b>, reference may be made to operation S<b>204</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0159" num="0157">Referring to <figref idref="DRAWINGS">FIG. <b>7</b></figref> again, the permission providing module <b>24</b> may include: a hash obtaining unit <b>244</b>, a signature decrypting unit <b>245</b>, and a second determining unit <b>246</b>.</p><p id="p-0160" num="0158">The hash obtaining unit <b>244</b> may be configured to obtain a first hash value corresponding to the data authorization certificate.</p><p id="p-0161" num="0159">The signature decrypting unit <b>245</b> may be configured to decrypt the to-be-uploaded signature according to the public key of the verification blockchain, to obtain a second hash value.</p><p id="p-0162" num="0160">The second determining unit <b>246</b> may be configured to compare the first hash value with the second hash value, and determine that the signature verification succeeds in a case that the first hash value is the same as the second hash value.</p><p id="p-0163" num="0161">The second determining unit <b>246</b> may be further configured to determine that the signature verification fails in a case that the first hash value is different from the second hash value, and transmit data query failure information to the query terminal.</p><p id="p-0164" num="0162">For specific function implementations of the hash obtaining unit <b>244</b>, the signature decrypting unit <b>245</b>, and the second determining subunit <b>246</b>, reference may be made to operation S<b>204</b> in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0165" num="0163"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic structural diagram of a computer device according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the computer device <b>1000</b> may include: a processor <b>1001</b>, a network interface <b>1004</b>, and a memory <b>1005</b>, as well as a user interface <b>1003</b> and at least one communication bus <b>1002</b>. The communication bus <b>1002</b> is configured to implement connection and communication between these components. The user interface <b>1003</b> may include a display, a keyboard, and optionally, the user interface <b>1003</b> may further include a standard wired interface and a standard wireless interface. The network interface <b>1004</b> may include a standard wired interface and a standard wireless interface (for example, a Wi-Fi interface). The memory <b>1005</b> may be a high-speed random access memory (RAM), or may be a non-volatile memory, for example, at least one magnetic disk storage. The memory <b>1005</b> may alternatively be at least one storage apparatus located away from the processor <b>1001</b>. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the memory <b>1005</b> used as a computer-readable storage medium may include an operating system, a network communication module, a user interface module, and a device control application.</p><p id="p-0166" num="0164">In the computer device <b>1000</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the network interface <b>1004</b> may provide a network communication function, the user interface <b>1003</b> is mainly configured to provide an input interface for a user, and the processor <b>1001</b> may be configured to invoke the device control application stored in the memory <b>1005</b>, to implement the corresponding operations of the blockchain-based data processing method in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0167" num="0165"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a schematic structural diagram of a computer device according to some embodiments. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the computer device <b>2000</b> may include: a processor <b>2001</b>, a network interface <b>2004</b>, and a memory <b>2005</b>, as well as a user interface <b>2003</b> and at least one communication bus <b>2002</b>. The communication bus <b>2002</b> is configured to implement connection and communication between these components. The user interface <b>2003</b> may include a display, a keyboard, and optionally, the user interface <b>2003</b> may further include a standard wired interface and a standard wireless interface. The network interface <b>2004</b> may include a standard wired interface and a standard wireless interface (for example, a Wi-Fi interface). The memory <b>2005</b> may be a high-speed random access memory (RAM), or may be a non-volatile memory, for example, at least one magnetic disk storage. The memory <b>2005</b> may alternatively be at least one storage apparatus located away from the processor <b>2001</b>. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the memory <b>2005</b> used as a computer-readable storage medium may include an operating system, a network communication module, a user interface module, and a device control application.</p><p id="p-0168" num="0166">In the computer device <b>2000</b> shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the network interface <b>2004</b> may provide a network communication function, the user interface <b>2003</b> is mainly configured to provide an input interface for a user, and the processor <b>2001</b> may be configured to invoke the device control application stored in the memory <b>2005</b>, to implement the corresponding operations of the blockchain-based data processing method in the embodiment corresponding to <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0169" num="0167">Some embodiments may further provide a computer-readable storage medium, storing a computer program, the computer program including program instructions, and the program instructions, when being executed by a processor, implementing the blockchain-based data processing method provided in the operations in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and <figref idref="DRAWINGS">FIG. <b>4</b></figref>. For details, reference may be made to the implementations provided in the operations in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and <figref idref="DRAWINGS">FIG. <b>4</b></figref>, and details are not described herein again.</p><p id="p-0170" num="0168">The computer-readable storage medium may be the blockchain-based data processing apparatus provided in any of the foregoing embodiments or an internal storage unit of the computer device, for example, a hard disk or an internal memory of the computer device. The computer-readable storage medium may also be an external storage device of the computer device, such as a plug-in hard disk, a smart media card (SMC), a secure digital (SD) card, or a flash card that is equipped on the computer device. In some embodiments, the computer-readable storage medium may also include an internal storage unit of the computer device and an external storage device. The computer-readable storage medium is configured to store the computer program and another program and data that are required by the computer device. The computer-readable storage medium may be further configured to temporarily store data that has been outputted or data to be outputted.</p><p id="p-0171" num="0169">In the specification, claims, and accompanying drawings of the embodiments, the terms &#x201c;first&#x201d;, &#x201c;second&#x201d;, or the like are intended to distinguish between different objects but do not indicate a particular order. In addition, the terms &#x201c;include&#x201d; and any variant thereof are intended to cover a non-exclusive inclusion. For example, a process, method, apparatus, product, or device that includes a series of steps/operations, units or code is not limited to the listed steps/operations or modules; and instead, further may include a step/operation, module or code that is not listed, or further may include another step/operation, unit or code that is intrinsic to the process, method, apparatus, product, or device.</p><p id="p-0172" num="0170">What is disclosed above is merely exemplary embodiments of the disclosure, and certainly is not intended to limit the scope of the claims of the disclosure. Therefore, equivalent variations made in accordance with the claims of the disclosure shall fall within the scope of the disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A blockchain-based data processing method, performed by a computer device, comprising:<claim-text>obtaining a data authorization request transmitted by an authorization terminal, the data authorization request comprising a data authorization certificate associated with an authorizer;</claim-text><claim-text>performing authorization verification on the authorizer according to the data authorization request, to obtain a first verification result;</claim-text><claim-text>signing the data authorization certificate according to a private key of a first blockchain in a consortium blockchain in a case that the first verification result is a valid result to obtain a first certificate signature, determining the first certificate signature as a to-be-uploaded signature, and performing uploading on the data authorization certificate carrying the to-be-uploaded signature;</claim-text><claim-text>transmitting, in a case that a certificate cross-chain query request transmitted by a second blockchain in the consortium blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway; and</claim-text><claim-text>providing a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the consortium blockchain further comprises a third blockchain, the third blockchain is a blockchain that has accepted the data authorization request, and<claim-text>the method further comprises:</claim-text><claim-text>obtaining a third certificate signature corresponding to the data authorization certificate from the third blockchain by using the cross-chain gateway in a case that the first verification result is the valid result, the third certificate signature being obtained by signing the data authorization certificate by a node corresponding to the third blockchain according to a private key of the third blockchain in a case that a second verification result for the authorizer is the valid result;</claim-text><claim-text>performing signature verification on the third certificate signature according to a public key of the third blockchain, to obtain a signature verification result; and</claim-text><claim-text>signing the data authorization certificate according to the signature verification result and the private key of the first blockchain, to obtain the first certificate signature, and determining the first certificate signature and the third certificate signature as the to-be-uploaded signatures.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the signing the data authorization certificate according to the signature verification result and the private key of the first blockchain, to obtain the first certificate signature comprises:<claim-text>signing the data authorization certificate according to the private key of the first blockchain in a case that the signature verification result is a successful signature verification result, to obtain the first certificate signature.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, further comprising:<claim-text>transmitting, in a case that the signature verification result is a failed signature verification result, authorization failure information for the data authorization request to the authorization terminal, and transmitting signature verification failure information to the third blockchain by using the cross-chain gateway, the signature verification failure information being used for the third blockchain to detect the second certificate signature.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, the performing signature verification on the third certificate signature according to a public key of the third blockchain, to obtain a signature verification result comprises:<claim-text>obtaining a first hash value corresponding to the data authorization certificate;</claim-text><claim-text>decrypting the third certificate signature according to the public key of the third blockchain, to obtain a second hash value;</claim-text><claim-text>determining the signature verification result as the successful signature verification result in a case that the first hash value is the same as the second hash value; and</claim-text><claim-text>determining the signature verification result as the failed signature verification result in a case that the first hash value is different from the second hash value.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the cross-chain gateway comprises a second lightweight node corresponding to the second blockchain and a first lightweight node corresponding to the first blockchain, and the first lightweight node comprises a chain identifier of the second blockchain; and<claim-text>the transmitting, in a case that a certificate cross-chain query request transmitted by the second blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway comprises:</claim-text><claim-text>obtaining the chain identifier of the second blockchain in a case that the certificate cross-chain query request transmitted by the second lightweight node corresponding to the second blockchain is received by using the first lightweight node; and</claim-text><claim-text>transmitting the chain identifier of the second blockchain and the data authorization certificate carrying the to-be-uploaded signature to the first lightweight node, the chain identifier of the second blockchain being used for the first lightweight node to transmit the data authorization certificate carrying the to-be-uploaded signature to the second lightweight node corresponding to the second blockchain according to the chain identifier of the second blockchain.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>broadcasting a public key of the first blockchain and a chain identifier of the first blockchain to the consortium blockchain by using the cross-chain gateway, the public key of the first blockchain and the chain identifier of the first blockchain being used for remaining blockchains in the consortium blockchain to perform uploading on the public key of the first blockchain and the chain identifier of the first blockchain, and the remaining blockchains being blockchains other than the first blockchain in the consortium blockchain; and</claim-text><claim-text>obtaining public keys of the remaining blockchains and chain identifiers of the remaining blockchains by using the cross-chain gateway, and performing uploading on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing authorization verification on the authorizer according to the data authorization request, to obtain a first verification result comprises:<claim-text>transmitting an authorization object verification request to the authorization terminal according to the data authorization request, and recording a transmitting timestamp of transmitting the authorization object verification request;</claim-text><claim-text>obtaining an authorization object verification reply returned by the authorization terminal, and recording an obtaining timestamp of obtaining the authorization object verification reply; and</claim-text><claim-text>determining the first verification result according to the authorization object verification reply, the transmitting timestamp, and the obtaining timestamp.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The blockchain-based data processing method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the determining the first verification result according to the authorization object verification reply, the transmitting timestamp, and the obtaining timestamp comprises:<claim-text>obtaining a valid reply duration for the authorization object verification request, and determining an actual reply duration of the authorizer according to the transmitting timestamp and the obtaining timestamp;</claim-text><claim-text>determining the first verification result as an invalid result in a case that the actual reply duration is greater than the valid reply duration, and transmitting reply invalid information for the data authorization request to the authorization terminal;</claim-text><claim-text>checking validity of the authorization object verification reply in a case that the actual reply duration is less than or equal to the valid reply duration;</claim-text><claim-text>determining the first verification result as the invalid result in a case that the authorization object verification reply is an invalid reply, and transmitting authorization failure information for the data authorization request to the authorization terminal; and</claim-text><claim-text>determining the first verification result as the valid result in a case that the actual reply duration is less than or equal to the valid reply duration and the authorization object verification reply is a valid reply.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A blockchain-based data processing apparatus comprising:<claim-text>at least one memory configured to store program code; and</claim-text><claim-text>at least one processor configured to read the program code and operate as instructed by the program code, the program code comprising:</claim-text><claim-text>request obtaining code configured to cause the at least one processor to obtain data authorization request transmitted by an authorization terminal, the data authorization request comprising a data authorization certificate associated with an authorizer;</claim-text><claim-text>verification authorization code configured to cause the at least one processor to perform authorization verification on the authorizer according to the data authorization request, to obtain a first verification result;</claim-text><claim-text>first processing code configured to cause the at least one processor to sign the data authorization certificate according to a private key of a first blockchain in a consortium blockchain in a case that the first verification result is a valid result to obtain a first certificate signature, determining the first certificate signature as a to-be-uploaded signature, and performing uploading on the data authorization certificate carrying the to-be-uploaded signature; and</claim-text><claim-text>certificate transmitting code configured to cause the at least one processor to transmit, in a case that a certificate cross-chain query request transmitted by a second blockchain in the consortium blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway, and provide a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the consortium blockchain further comprises a third blockchain, the third blockchain is a blockchain that has accepted the data authorization request, and<claim-text>the first processing code is further configured to cause the at least one processor to:</claim-text><claim-text>obtain a third certificate signature corresponding to the data authorization certificate from the third blockchain by using the cross-chain gateway in a case that the first verification result is the valid result, the third certificate signature being obtained by signing the data authorization certificate by a node corresponding to the third blockchain according to a private key of the third blockchain in a case that a second verification result for the authorizer is the valid result;</claim-text><claim-text>perform signature verification on the third certificate signature according to a public key of the third blockchain to obtain a signature verification result; and</claim-text><claim-text>sign the data authorization certificate according to the signature verification result and the private key of the first blockchain to obtain the first certificate signature, and determine the first certificate signature and the third certificate signature as the to-be-uploaded signatures.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the sign the data authorization certificate according to the signature verification result and the private key of the first blockchain to obtain the first certificate signature, and determine the first certificate signature and the third certificate signature as the to-be-uploaded signatures comprises:<claim-text>signing the data authorization certificate according to the private key of the first blockchain in a case that the signature verification result is a successful signature verification result to obtain the first certificate signature.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the sign the data authorization certificate according to the signature verification result and the private key of the first blockchain to obtain the first certificate signature, and determine the first certificate signature and the third certificate signature as the to-be-uploaded signatures further comprises:<claim-text>transmitting, in a case that the signature verification result is a failed signature verification result, authorization failure information for the data authorization request to the authorization terminal, and transmitting signature verification failure information to the third blockchain by using the cross-chain gateway, the signature verification failure information being used for the third blockchain to detect the second certificate signature.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the perform signature verification on the third certificate signature according to a public key of the third blockchain to obtain a signature verification result comprises:<claim-text>obtaining a first hash value corresponding to the data authorization certificate;</claim-text><claim-text>decrypting the third certificate signature according to the public key of the third blockchain, to obtain a second hash value;</claim-text><claim-text>comparing the first hash value with the second hash value; and</claim-text><claim-text>determining the signature verification result as the successful signature verification result in a case that the first hash value is the same as the second hash value, and determining the signature verification result as the failed signature verification result in a case that the first hash value is different from the second hash value.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the cross-chain gateway comprises a second lightweight node corresponding to the second blockchain and a first lightweight node corresponding to the first blockchain, and the first lightweight node comprises a chain identifier of the second blockchain; and<claim-text>the certification transmitting code is further configured to cause the at least one processor to:</claim-text><claim-text>obtain the chain identifier of the second blockchain in a case that the certificate cross-chain query request transmitted by the second lightweight node corresponding to the second blockchain is received by using the first lightweight node; and</claim-text><claim-text>transmit the chain identifier of the second blockchain and the data authorization certificate carrying the to-be-uploaded signature to the first lightweight node, the chain identifier of the second blockchain being used for the first lightweight node to transmit the data authorization certificate carrying the to-be-uploaded signature to the second lightweight node corresponding to the second blockchain according to the chain identifier of the second blockchain.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the program code further comprises:<claim-text>information broadcasting code configured to cause the at least one processor to broadcast a public key of the first blockchain and a chain identifier of the first blockchain to the consortium blockchain by using the cross-chain gateway, the public key of the first blockchain and the chain identifier of the first blockchain being used for remaining blockchains in the consortium blockchain to perform uploading on the public key of the first blockchain and the chain identifier of the first blockchain, and the remaining blockchains being blockchains other than the first blockchain in the consortium blockchain; and</claim-text><claim-text>second processing code configured to cause the at least one processor to obtain public keys of the remaining blockchains and chain identifiers of the remaining blockchains by using the cross-chain gateway, and perform uploading on the public keys of the remaining blockchains and the chain identifiers of the remaining blockchains.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the verification authorization code is further configured to cause the at least one processor to:<claim-text>transmit an authorization object verification request to the authorization terminal according to the data authorization request, and record a transmitting timestamp of transmitting the authorization object verification request;</claim-text><claim-text>obtain an authorization object verification reply returned by the authorization terminal, and record an obtaining timestamp of obtaining the authorization object verification reply; and</claim-text><claim-text>determine the first verification result according to the authorization object verification reply, the transmitting timestamp, and the obtaining timestamp.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The blockchain-based data processing apparatus according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the determine the first verification result according to the authorization object verification reply, the transmitting timestamp, and the obtaining timestamp comprises:<claim-text>obtaining a valid reply duration for the authorization object verification request, and determining an actual reply duration of the authorizer according to the transmitting timestamp and the obtaining timestamp;</claim-text><claim-text>determining the first verification result as an invalid result in a case that the actual reply duration is greater than the valid reply duration, and transmitting reply invalid information for the data authorization request to the authorization terminal;</claim-text><claim-text>checking validity of the authorization object verification reply in a case that the actual reply duration is less than or equal to the valid reply duration;</claim-text><claim-text>determining the first verification result as the invalid result in a case that the authorization object verification reply is an invalid reply, and transmitting authorization failure information for the data authorization request to the authorization terminal; and</claim-text><claim-text>determining the first verification result as the valid result in a case that the actual reply duration is less than or equal to the valid reply duration and the authorization object verification reply is a valid reply.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. A non-transitory computer-readable storage medium, storing a computer program that when executed by at least one processor causes the at least one processor to:<claim-text>obtain a data authorization request transmitted by an authorization terminal, the data authorization request comprising a data authorization certificate associated with an authorizer;</claim-text><claim-text>perform authorization verification on the authorizer according to the data authorization request to obtain a first verification result;</claim-text><claim-text>sign the data authorization certificate according to a private key of a first blockchain in a consortium blockchain in a case that the first verification result is a valid result to obtain a first certificate signature, determine the first certificate signature as a to-be-uploaded signature, and perform uploading on the data authorization certificate carrying the to-be-uploaded signature;</claim-text><claim-text>transmit, in a case that a certificate cross-chain query request transmitted by a second blockchain in the consortium blockchain is received by using a cross-chain gateway, the data authorization certificate carrying the to-be-uploaded signature to the second blockchain by using the cross-chain gateway; and</claim-text><claim-text>provide a query permission to a query terminal according to the data authorization certificate in a case that signature verification on the to-be-uploaded signature by the second blockchain succeeds, the query permission being used for the query terminal to obtain data provided by the authorizer in the second blockchain.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The non-transitory computer-readable storage medium according to <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the consortium blockchain further comprises a third blockchain, the third blockchain is a blockchain that has accepted the data authorization request, and<claim-text>the at least one processor is further configured to:</claim-text><claim-text>obtain a third certificate signature corresponding to the data authorization certificate from the third blockchain by using the cross-chain gateway in a case that the first verification result is the valid result, the third certificate signature being obtained by signing the data authorization certificate by a node corresponding to the third blockchain according to a private key of the third blockchain in a case that a second verification result for the authorizer is the valid result;</claim-text><claim-text>perform signature verification on the third certificate signature according to a public key of the third blockchain to obtain a signature verification result; and</claim-text><claim-text>sign the data authorization certificate according to the signature verification result and the private key of the first blockchain to obtain the first certificate signature, and determine the first certificate signature and the third certificate signature as the to-be-uploaded signatures.</claim-text></claim-text></claim></claims></us-patent-application>