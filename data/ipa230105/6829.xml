<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006830A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006830</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17867416</doc-number><date>20220718</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>23</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>61</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3231</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>2365</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>61</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>0643</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>3247</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>2209</main-group><subgroup>56</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DECENTRALIZED TRUST USING BLOCKCHAIN FOR TRACKING AND VALIDATION OF VOICE COMMUNICATIONS</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16399952</doc-number><date>20190430</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11394554</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17867416</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>PayPal, Inc.</orgname><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Yadav</last-name><first-name>Meethil Vijay</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Wardman</last-name><first-name>Bradley</first-name><address><city>Phoenix</city><state>AZ</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Ericson</last-name><first-name>Braden Christopher</first-name><address><city>San Jose</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods of authenticating voice data using a ledger (blockchain). Examples include a scalable and seamless system that uses blockchain technologies to distribute trust of a conversation, authenticate persons in a conversation, track their characteristics and also to keep records of conversations. In some examples, smart phones, wearables, and Internet-of-Things (IoT) devices can be used to record and track conversations between individuals. These devices can each be used to create entries for the blockchain or a single device could be used to keep track of the entirety of the conversation. Fuzzy hashing may be used to compare newly created entries with previous entries on the ledger.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="130.39mm" wi="158.75mm" file="US20230006830A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="215.48mm" wi="177.38mm" orientation="landscape" file="US20230006830A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="197.44mm" wi="166.03mm" orientation="landscape" file="US20230006830A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="216.15mm" wi="164.51mm" orientation="landscape" file="US20230006830A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="228.26mm" wi="121.58mm" file="US20230006830A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="212.01mm" wi="168.74mm" orientation="landscape" file="US20230006830A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="211.67mm" wi="168.57mm" orientation="landscape" file="US20230006830A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="206.76mm" wi="168.91mm" orientation="landscape" file="US20230006830A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="191.85mm" wi="169.16mm" orientation="landscape" file="US20230006830A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="190.08mm" wi="141.48mm" orientation="landscape" file="US20230006830A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="219.12mm" wi="146.47mm" orientation="landscape" file="US20230006830A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">The present application is a continuation application of U.S. patent application Ser. No. 16/399,952, filed on Apr. 30, 2019, and is incorporated in reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">The present disclosure generally relates to implementation and use of voice hash sets, and more particularly to tracking and validation of voice communications using blockchain.</p><p id="p-0004" num="0003">Voice commands are becoming ubiquitous. Wearable technology with limited input interfaces use voice. Cellular phones allow users to write emails and send text messages entirely with voice. Virtual &#x201c;personal assistants&#x201d; such as the AMAZON ALEXA, APPLE SIRI, and GOOGLE ASSISTANT allow users to search for information, access their calendar, and control smart technologies and internet-of-things (IOT) devices using voice-based systems.</p><p id="p-0005" num="0004">Blockchains, also referred to herein as distributed ledgers, are used to track transactions involving crypto currencies (also called virtual currencies) such as, for example, Bitcoin, Litecoin, Ethereum, Monero, and/or other crypto currencies known in the art as well as storage of data. Crypto currency systems provide decentralized digital money that is issued and maintained by distributed software running a network of computing devices, rather than by central banks or public authorities that conventionally issue and control fiat currencies. For example, Bitcoin is a type of decentralized crypto currency that provides for peer-to-peer transactions without an intermediary, with those peer-to-peer transactions verified by Bitcoin network nodes (i.e., the distributed network of computing devices) and recorded in a public distributed ledger referred to as a blockchain. Crypto currencies like Bitcoin have revolutionized money transfer and payment technology by allowing for censorship resistant, decentralized peer-to-peer transfer of value between users.</p><p id="p-0006" num="0005">Blockchains and distributed ledgers use a variety of techniques to ensure integrity and consensus of the ledger. One technique is proof of work, used in the Bitcoin network, which uses a bit of data (called a nonce) that is difficult to produce but easy for others to verify and which satisfies certain requirements. Another technique is proof of stake which allows a person to mine or validate block transactions according to how many coins the miner holds.</p><p id="p-0007" num="0006">Distributed blockchains may also be used with a number of different other technologies besides virtual currency. For instance, Bitcoin, Ethereum, and other currency focused networks provide for the execution of a basic &#x201c;contract&#x201d; that transfers value between users and some have been created to store executable code. Other uses include data storage in a distributed manner.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic view illustrating an embodiment of a networked system for authenticating voice data;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic view illustrating an embodiment of a block of voice data;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic view illustrating an embodiment of a distributed ledger;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a flow chart illustrating an embodiment of a method for adding a block to the ledger;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic view illustrating an embodiment of a networked system for authenticating voice data;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic view illustrating an exemplary user interface for a conversations application;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a schematic view illustrating an embodiment of a networked system for authenticating voice data;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a schematic view illustrating an embodiment of a networked system for authenticating voice data and voice-based payment;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a perspective view illustrating an embodiment of a user device; and</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a schematic view illustrating an embodiment of a computer system.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0018" num="0017">Embodiments of the present disclosure and their advantages are best understood by referring to the detailed description that follows. It should be appreciated that like reference numerals are used to identify like elements illustrated in one or more of the figures, wherein showings therein are for purposes of illustrating embodiments of the present disclosure and not for purposes of limiting the same.</p><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0019" num="0018">Storing a voice recording can take up significant disk space which is multiplied when storing many conversations or sentences spoken by individuals. This becomes even more complex when multiple people are in a conversation. One problem encountered is how to store information about entities in a conversation and other metadata about the conversation that can be stored and easily accessible for use in future conversations as a means to identify parties communicating with each other.</p><p id="p-0020" num="0019">The use of voice for authentication and voice payments are emerging technologies. A user may have a conversation with some person or a group of people. One method to authorize or authenticate that the conversation happened includes recording the conversation and having each person acknowledge his/her statements in the conversation. Another method includes using voice recognition software to authenticate the participants in the conversation. In both cases, the entire trust relationship is centralized with either the people in the conversation or the voice recognition software.</p><p id="p-0021" num="0020">In order to use voice conversations for initiating and processing transactions, service providers may wish to implement a system to not only authenticate and verify entities in the conversation, but to also store audio data that corresponds to the conversation as well as metadata associated with the audio data. This is because voice payments may be highly susceptible to fraud. For example, a user be impersonated by a malicious user and without proper authentication, unauthorized transactions may be performed. Such security concerns raise a serious question about the effectiveness of existing authentication and anti-fraud measures in this space. Multi-factor authentication can mitigate some of these security issues but can also potentially hamper a seamless voice-payment experience.</p><p id="p-0022" num="0021">Customer service agents may authenticate customers on a phone call by requesting personal sensitive information like date of birth, month/year of account creation, address, social security number (SSN), password or phrase, etc. An authentication server may use the techniques disclosed herein (e.g., fuzzy hashing of the voice characteristics on the phone to the latest records in a ledger) to provide additional mechanism to authenticate the customer on the phone call.</p><p id="p-0023" num="0022">Embodiments of the present disclosure include a scalable and seamless system that uses blockchain technologies to distribute trust of a conversation, authenticate participants to a conversation, track their characteristics (e.g., voice characteristics of participants) and also to keep records of conversations. In some examples, smart phones, wearables, Internet-of-Things (IoT) devices, etc. can be used to record and track conversations between individuals. These devices can each be used to create entries for the blockchain or a single device could be used to keep track of the entirety of the conversation.</p><p id="p-0024" num="0023">In order for the system to know which participant is involved in the conversation, initial signatures/fingerprints may be generated for each participant. Devices, such as phones, IoT devices, etc. can be used for this purpose. These signatures can be generated using keywords from a conversation, specific words spoken, distinct phrases, or general speech of a user. Machine learning algorithms can be applied to the voice samples (e.g., pitch, tone, speaking speed, enunciation, intonation, rate, rhythm, etc. for specific keywords or overall speech) collected from a range of available devices such as phones, IoT devices, etc. to provide a more accurate signature.</p><p id="p-0025" num="0024">Conversations may consist of statements from different people. Other conversations (e.g., monologues) may include only a single participant. In certain examples, multiple blocks are generated for each conversation. A single block may be generated for every person in the conversation. Each statement from every person may be entered in his/her specific block. Each statement may be considered as a transaction. Additionally, a key may be generated for a conversation and used to secure the voice recording to the participants or relevant parties to the conversation. Each transaction may include: a timestamp (for, e.g., offline synchronization), a unique identifier for the block (to keep track of statements in the block), a hash of the voice features of the statement (also referred to as a signature), and/or an encrypted version of statement (text conversion and/or the raw media) using the conversation key. This key may be provided to all members in the conversation. This may be done so that only the members in the conversation will have access to the actual statements in the conversation. Also, only those members may be able to regenerate the conversation later on in time. Alternatively, only the member who made the statement is able to decrypt their statements. This may be performed by giving each participant a separate key. In other examples, keys are given to participants such that a majority of participants need to agree to access a recording before it is made accessible. In other examples, a separate entity is given access to the conversation for trust and verification or because they are an interested party in the outcome of the conversation.</p><p id="p-0026" num="0025">Once the blocks are generated, they may be sent to the blockchain system. The blockchain system may consist of different nodes that can be used to validate the blocks. Bitcoin, for example, uses a single ledger in order to keep track of transactions because there is only one universal condition that needs to be verified&#x2014;that the total number of Bitcoins should be same after every transaction. In the case of conversations, the authentication of identities may be based on data that is specific to that participant/entity. Thus, multiple distributed ledgers may be maintained by the nodes, each ledger specific to each participant/entity. Additionally, the use of multiple ledgers may facilitate the ability to track how the voice of a participant evolves over time with their conversation.</p><p id="p-0027" num="0026">When a node receives a block, the node may perform a number of actions to verify the authenticity of the block (and/or statements within the block) and add the block to a blockchain (a general blockchain or one that is user specific). The node may break the block into different statements. Using a hash comparison (e.g. fuzzy hashing) of the hash of voice features and the latest record in the ledger (e.g. threshold may be a 98% match), the node may identify the ledger to which the statement belongs. If found, that statement will be considered as valid. All statements in the block may then be verified using a similar procedure. If all statements in the block are valid, the block is considered as valid by the node and the records (e.g. timestamp, id of the block, voice hash, encrypted statement) are added to respective ledgers. The encrypted version of statement can be stored on a distributed file system with pointers to the files in the actual blocks. This may reduce the data storage requirement of the ledger(s) on the nodes.</p><p id="p-0028" num="0027">When a new block is added to the ledger, the hash (signature) of the previous block may be added to it in order to create a chain, which can be useful to ensure no data loss or data tampering. Similar to other blockchain systems, as a new block is added to the ledgers, updated ledgers are sent to all or substantially all the other nodes. If any of the statements are found to be invalid such that no matching ledger is found or due to tampering of data, the entire block may be discarded. Alternatively, individual statements/transactions within a block are discarded and the rest of the statements/transactions are included in the block.</p><p id="p-0029" num="0028">By using this method, trust about a conversation may be distributed between all entities in the conversation, a voice recognition function, and voice recognition history from previous conversations of the entity. The conversation may be considered valid and added to the blockchain system, only if all the blocks are valid. In other words, the authentication of a single entity in the conversation, may not be enough for portions (or the entirety) of the conversation to be validated. As the records in the ledger have block identifiers (i.e., IDs), the conversation may be rebuilt at any point of time. Service providers may use composite key systems along with hashing in order to have access to all the encrypted conversations.</p><p id="p-0030" num="0029">Other embodiments of the present disclosure include use of the described system to authenticate individual users, as part of a voice-based payment system, and the use of offline synching of recordings.</p><p id="p-0031" num="0030">Referring now to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, an embodiment of a networked system <b>100</b> is illustrated. The networked system <b>100</b> includes a plurality of user devices <b>102</b>A-H, a service provider server <b>104</b> (e.g. a payment provider server), a third-party server <b>106</b> (e.g., of a merchant), an authentication server <b>108</b>, nodes <b>110</b>, and data stores <b>112</b> in communication over network <b>114</b>. Participants/users <b>116</b>A-C of user devices <b>102</b>A-H may use the devices to record audio/conversations, perform voice authentication, and/or make payments using voice. However, the embodiments herein are meant to be merely exemplary, and one of skill in the art in possession of the present disclosure will recognize that a wide variety of system providers may operate, alone or together, to provide the systems and methods discussed herein without departing from the scope of the present disclosure.</p><p id="p-0032" num="0031">User devices <b>102</b>A-H, a service provider server <b>104</b>, a third-party server, <b>106</b>, an authentication server <b>108</b>, nodes <b>110</b>, and data stores <b>112</b> may each include one or more processors, memories, and other appropriate components for executing instructions such as program code and/or data stored on one or more computer readable mediums to implement the various applications, data, and steps described herein. For example, such instructions may be stored in one or more computer readable mediums such as memories or data storage devices internal and/or external to various components of the system <b>100</b>, and/or accessible over the network <b>114</b>.</p><p id="p-0033" num="0032">The network <b>114</b> may be implemented as a single network or a combination of multiple networks. For example, in various embodiments, the network <b>114</b> may include the Internet and/or one or more intranets, landline networks, wireless networks (e.g. cellular, personal area networks, Wi-Fi), and/or other appropriate types of networks.</p><p id="p-0034" num="0033">User devices <b>102</b> may be implemented using any appropriate combination of hardware and/or software configured for wired and/or wireless communication over network <b>114</b>. For example, in one embodiment, the user device <b>102</b>A may include a personal computer device. The personal computer may include a desktop or laptop device. The personal computer may include software (e.g., applications or a browser interface) to perform voice authentication, voice payments, and/or conversation recording/authenticating. In other embodiments, the user devices <b>102</b> may be a smart microphone <b>102</b>B, smart phone <b>102</b>C, wearable computing device such as smart watch <b>102</b>D, smart home hub device <b>102</b>F (e.g., an AMAZON ECHO or GOOGLE HOME device), security system device <b>102</b>G, and point-of-sale device <b>102</b> H, an IoT device, and/or other types of computing devices. User devices <b>102</b> may include devices without processing technology (e.g., &#x201c;dumb&#x201d; devices) such as telephone <b>102</b>E or a standard microphone. These devices may be connected (via network <b>114</b>, directly, or via another network e.g., a telephone network) to other devices that can perform voice authentication, voice payments, and/or conversation recording/authenticating functions. User devices <b>102</b> may include any of a variety of computing devices such as desktop computing systems, laptop/notebook computing systems, tablet computing systems, mobile phones, Application Specific Integrated Circuit (ASIC) computing systems, and/or other computing device known in the art. Each of the foregoing user devices <b>102</b> may include or be connected to one or more audio recording devices.</p><p id="p-0035" num="0034">User devices <b>102</b> may include one or more applications, e.g., browser applications which may be used, for example, to provide an interface to permit the user to browse information available over the network <b>114</b>. For example, in one embodiment, the application may be a web browser configured to view information available over the Internet. In one embodiment, user devices <b>102</b> may be able to connect to service provider server <b>104</b> to perform a voice-based payment transaction. Third-party server <b>106</b> and/or service provider server <b>104</b> may include a voice based or graphical electronic commerce interface may include a storefront where a user <b>116</b> of user devices <b>102</b> may browse, search, and purchase different products or to confirm a transaction that is occurring off-network (e.g., at a store, restaurant or food truck, farmer's market, craft fair, and/or service provider). In one embodiment, service provider server <b>104</b> or authentication server <b>108</b> may provide voice authentication of the identity of a user <b>116</b>. Voice authentication may be used by a customer service phone line to authenticate user <b>116</b> in order to provide customer support, discuss or modify account or billing information, or process a payment. In another embodiment, multiple users <b>116</b>A-C may memorialize a conversation. One or more user devices <b>102</b> may record the conversation, send the conversation in blocks to node <b>110</b>. Users <b>116</b> may be authenticated (by node <b>110</b>, authentication server <b>108</b>, or user device <b>102</b>). The conversation may be encrypted with a key, and the key may be sent to each of the authenticated participants of the conversation for later access. Users <b>116</b> may use the user device <b>102</b> to play back the recorded conversation via a graphical or auditory interface using the key.</p><p id="p-0036" num="0035">In particular, the other applications on user device <b>102</b> may include a payment application for payments processed by service provider server <b>104</b>. The other applications may also include security applications for implementing user-side security features, programmatic user applications for interfacing with appropriate application programming interfaces (APIs) over the network <b>114</b>, or other types of applications. Email and/or text applications may also be included, which allow the user to send and receive emails and/or text messages through the network <b>114</b>. User devices <b>102</b> may include one or more user and/or device identifiers which may be implemented, for example, as operating system registry entries, cookies associated with the browser application, identifiers associated with hardware of the user devices <b>102</b>, or other appropriate identifiers, such as a phone number.</p><p id="p-0037" num="0036">In the illustrated embodiment, system <b>100</b> may also include nodes <b>110</b> that include one or more distributed ledgers <b>118</b>. In other embodiments, the nodes do not store ledgers <b>118</b> and instead ledgers <b>118</b> are coupled to node <b>110</b> via a network (e.g., network <b>114</b>) or another means. Node(s) <b>110</b> may operate to generate/maintain one or more distributed ledger(s) <b>118</b>. The multiple ledgers <b>118</b> may include a ledger for each authenticated user <b>116</b> of system <b>100</b>. In other embodiments, a single ledger <b>118</b> is maintained that contains information about multiple users. In some embodiments, nodes <b>110</b> may operate to generate (a.k.a. &#x201c;mine&#x201d;) crypto currency while creating the distributed ledger <b>118</b> (also referred to as a blockchain) and maintain the distributed ledger <b>118</b> while performing other functions detailed herein. In other embodiments, nodes <b>110</b> do not mine crypto-currency. Distributed ledger(s) <b>118</b> described herein may be a public, private, or consortium distributed ledger or a combination of multiple types. Nodes <b>110</b> may be queried, e.g., by user device <b>102</b>, service provider server <b>104</b>, third-party server <b>106</b>, and/or authentication server <b>108</b>, to provide information regarding a block in ledger <b>118</b>. Nodes <b>110</b> may also be configured to receive a block from a user device <b>102</b> (or other device such as service provider server <b>104</b>, third-party server <b>106</b>, and/or authentication server <b>108</b>) and determine the proper ledger <b>118</b>A or <b>118</b>B for the block, verify the statements/transactions in the block, and add the block to the appropriate ledger (associated with the appropriate user <b>116</b>).</p><p id="p-0038" num="0037">Node(s) <b>110</b> may be configured to store data in data store <b>112</b>. The data stored in data store <b>112</b> may include (encrypted) audio data. The audio data may then be pointed (e.g., linked) to in blocks in ledger <b>118</b> rather than storing them on ledger <b>118</b> directly. This may allow for a smaller sized ledger <b>118</b> than if the encrypted audio was stored on ledger <b>118</b> directly.</p><p id="p-0039" num="0038">In some embodiments, service providers may use system <b>100</b> to track conversations of meetings or use system <b>100</b> for validation of conversations and authentication of customers for any type of transaction. The service provider may use its servers, such as service provider server <b>104</b> and/or third-party server <b>106</b>, as nodes, such as node <b>110</b> of ledgers <b>118</b> for validation of the blocks (e.g., mining), and as data stores <b>112</b>. A service provider many use system <b>100</b> in order to validate/authenticate users <b>116</b>, rather than merely relying on voice recognition software. System <b>100</b> may also offer an improved distributive solution for keeping records of conversations over simply storing audio files.</p><p id="p-0040" num="0039">In other embodiments, multiple service providers may use the same blockchain network. In one example, the service providers may be trusted entities so rogue service providers are unable to add malicious content to the system. Each service provider may separately maintain nodes, such as nodes <b>110</b> and validate blocks. Audio (or encrypted audio) may be stored by the nodes <b>110</b> that added the block to the ledger. The audio (or encrypted audio) may be stored in the block chain. Alternatively, the audio (or encrypted audio) may be stored in data store <b>112</b> and a link to the data may be stored in the block chain. Service providers may then leverage a common (or another entity's) platform for validation and authentication of identities in a conversation. For example, an organization or service provider might have more data about an entity (customer, participant) than another service provider. In which case, the second service provider can leverage the data that is already vetted and stored in the ledger <b>118</b> for the entity.</p><p id="p-0041" num="0040">Further still, while illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> and discussed in some embodiments below as operating separately to perform separate functions, in some embodiments, the functionality of the described devices <b>102</b>-<b>110</b> may be combined such that computing devices in a distributed network operate to maintain distributed ledger(s) <b>118</b> while also operating to provide authentication, an ecommerce platform, or payment services as discussed below. Thus, while a specific embodiment has been illustrated, one of skill in the art in possession of the present disclosure will appreciate that system <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> may include a variety of modification while remaining within the scope of the present disclosure.</p><p id="p-0042" num="0041">Referring now to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, an embodiment of a block <b>200</b> is illustrated and described briefly for reference in the discussion below. User device <b>102</b> may generate block <b>200</b> during a recorded conversation between one or more users <b>116</b>. Block <b>200</b> may also be generated by service provider server <b>104</b>, third-party server <b>106</b>, or authentication server <b>108</b> in response to a payment transaction or authentication request involving user <b>116</b>. User device <b>102</b> may generate a separate block for each user <b>116</b> in the conversation. User device <b>102</b> may send the blocks, including block <b>200</b>, to a node <b>110</b> for inclusion in a ledger <b>118</b>.</p><p id="p-0043" num="0042">User device <b>102</b> may generate block <b>200</b>. Block <b>200</b> may be generated during a conversation, during a voice-based payment transaction, or during an authentication operation. Block <b>200</b> may be generated with statements of participant <b>116</b>A for a particular conversation, transaction, or authentication. In one example, block <b>200</b> may be generated for participant <b>116</b>A when participating in a conversation with other participants <b>116</b>B and <b>116</b>C and appended on the ledger <b>118</b> associated with participant <b>116</b>A. Another block may be generated for participant <b>116</b>A when participant <b>116</b>A enters into a voice-based purchase at a store and appended to ledger <b>118</b> associated with participant <b>116</b>A. Another block may be generated for participant <b>116</b>A when participant <b>116</b>A authenticates their voice during a phone call with their bank and appended to the ledger <b>118</b> associated with participant <b>116</b>.</p><p id="p-0044" num="0043">Ledger <b>118</b> may include various blocks generated for different purposes (e.g., conversation tracking, transactions, authentication, etc.) Alternatively, different ledgers <b>118</b> may be designated and used for separate purposes (e.g., conversation tracking based blocks would be stored in a separate ledger from voice-transactions).</p><p id="p-0045" num="0044">Block <b>200</b> may be sent to node <b>110</b> for verification and inclusion in ledger <b>118</b>. Block <b>200</b> includes one or more transactions <b>202</b>A-C. Each transaction <b>202</b> may be a data structure that includes timestamp <b>204</b>, unique identifier <b>206</b>, voice features <b>208</b>, and encrypted statement <b>210</b>. Transaction <b>202</b> may also include an unencrypted statement in addition to or in place of encrypted statement <b>210</b>. Additional information may be included in block <b>200</b> to perform other functions such as to record currency transactions or electronic coins, recording and/or tracking a variety of other information such as credit information, identity information, medical information, education information, other personal user information, shipment information, food traceability, property ownership, and/or any other data suitable for recording and/or tracking.</p><p id="p-0046" num="0045">User device <b>102</b> may detect the number of entities in a conversation but also detect statements said by each entity. User device <b>102</b> may perform these detection tasks locally or may send the raw data to another device (e.g. authentication server <b>108</b> or service provider server <b>104</b>) for analysis. Statements in transaction <b>202</b> may be broken up by sentence, a pre-determined or user defined number of words, length of time, a threshold amount of pause time, a change of speakers or a combination of the foregoing. Statements may also include an entire length of time a participant <b>116</b>A speaks until a second participant <b>116</b>B is detected as speaking. User device <b>102</b> may use language processing tools to break up statements into individual phrases or sentences. The language processing tools may include tools that use a machine learning algorithm used to break up human speech patterns into individual segments (e.g., words, phrases, sentences, paragraphs). In an example, a pre-defined maximum duration of a statement may be set for breaking up statements into transactions. A transaction may be broken up into multiple transactions if the system detects statements from a different entity or if the duration of the statement exceeds the pre-defined maximum. This technique may ensure a maximum size for a transaction and in turn ensure the maximum size of a block.</p><p id="p-0047" num="0046">Timestamp <b>204</b> may include the time the transaction <b>202</b> was recorded. The timestamp may be in one of a variety of formats and include year, month, day, hour, minute, and second information. Month information may be included as a number, or as a word, or abbreviated word. In further embodiments, sub-second information (milliseconds, microseconds, nanoseconds, etc.) may be included. In other embodiments, meridian and/or time zone information is included in timestamp <b>204</b>. Exemplary formats include: YYYY-MM-DD hh:mm:ss.sTZD (where TZD represents a timezone offset) or any subset or combination of the foregoing data. Alternatively, timestamp <b>204</b> may be recorded as POSIX timestamp, the number of seconds that have elapsed since Jan. 1, 1970.</p><p id="p-0048" num="0047">Timestamp <b>204</b> may be used to perform an offline synchronization of blocks of data. In certain embodiments, if user device <b>102</b> which generated block <b>200</b> is offline (e.g., not connected to network <b>114</b> and nodes <b>110</b>), user device <b>102</b> may not be able to send blocks to be added to ledger <b>118</b>. When device <b>102</b> reconnects to network <b>114</b>, generated blocks may then be sent to nodes <b>110</b> to add the blocks <b>200</b> to the appropriate ledger <b>118</b>. Node <b>110</b> may order transactions/statements in ledger <b>118</b> based on the value in timestamp <b>204</b>. Node <b>110</b> may use the timestamp in the current transaction to find the location in ledger <b>118</b> where transaction <b>202</b> belongs. Following finding the proper chronological place for the transaction, node <b>110</b> may verify transaction <b>202</b> (or the statement contained in transaction <b>202</b>) using hash comparisons with the transaction <b>202</b> or block <b>200</b> which is before it and after it (chronologically) for validation.</p><p id="p-0049" num="0048">Unique identifier <b>206</b> may be any number and/or character set to uniquely identify a block. Unique identifier <b>206</b> may be used to keep track of transactions (or individual statements) in a block. In one embodiment, transactions are tied, using unique identifier <b>206</b>, to a particular block <b>202</b> which is tied to a particular conversation, transaction, or authentication event. Unique identifiers <b>206</b>A-C may be sequentially numbered. In other embodiments, unique identifiers <b>206</b>A-C are randomly assigned. In further embodiments, unique identifiers <b>206</b>A-C are assigned based on the data within the transaction <b>202</b>.</p><p id="p-0050" num="0049">Voice features <b>208</b> may be extracted from audio data of each corresponding statement. For instance, voice features <b>208</b>A may be extracted from the audio data corresponding to the statement represented by transaction <b>202</b>A, voice features <b>208</b>B may be extracted from the audio data corresponding to the statement represented by transaction <b>202</b>B, and voice features <b>208</b>C may be extracted from the audio data corresponding to the statement represented by transaction <b>202</b>C. The voice features may include data related to the pitch, tone, volume, inflection on specific terms, commonly used vernacular, and/or rate of speech. Voice features <b>208</b> may also include data related to voice quality (e.g., normal, breathy, hoarse, husky, whispered), pitch range, loudness, nasal resonance (hypernasal, hyponasal, normal), oral resonance (guttural speech), flexibility, stamina, prosody, and other tonal characteristics (e.g., glottal fry, diplophonia, phonation breaks). In certain embodiments, the voice features <b>208</b> stored by the (data structures <b>202</b>A-C) may be stored in plain text (i.e. not hashed).</p><p id="p-0051" num="0050">In other embodiments, the data structures <b>202</b>A-C may store respective hashes of the voice features <b>208</b>A-C, rather than the voice features <b>208</b>A-C themselves. The hash of voice features <b>208</b> may include a fuzzy hashing of the voice features <b>208</b> or fuzzy hashing of a string made from a concatenation of voice features <b>208</b>. A fuzzy hashing algorithm (also known as a context triggered piecewise hashing (CTPH), for example, the spamsum algorithm) may be used to identify homologous sequences between unknown inputs and known files. The CTPH combines the concepts of piecewise hashing and rolling hashing as described in Kornblum, Jesse, <i>Identifying Almost Identical Files Using Context Triggered Piecewise Hashing</i>, The Digital Forensic Research Conference, Aug. 14-16 2006 incorporated by reference in its entirety.</p><p id="p-0052" num="0051">As will be described in further detail below, the hash of voice features <b>208</b> may be compared to other hashes (stored, e.g., in ledger <b>118</b>). The hashes may be compared using distance algorithms. For example, an edit distance algorithm may be used to compare the two hashes and produce a match score from 0-100, where 0 represents no homology and 100 indicates identical or almost identical hashes. In other embodiments, sets of hashes may be compared using a set comparison algorithm such as Jaccard or Kulczynski coefficients as distance metrics to determine a similarity between hashes, as described in L&#xf3;pez Kleine, Liliana et al., <i>Comparison of Distance Measures Based on Association Coefficients for the Detection of Commonalities in Multiple Phenotypes</i>, Monitor Estrat&#xe9;gico No. 6, 2014 incorporated by reference in its entirety.</p><p id="p-0053" num="0052">In another embodiment, the hash of voice features <b>208</b> may include a cryptographic hash function such as MD5, MD6, SHA-1, SHA-2, SHA-3, BLAKE2, FNV, or any other one-way hash algorithm.</p><p id="p-0054" num="0053">Encrypted statement <b>210</b> may include an encrypted segment of audio data or an encrypted text transcript of audio data. The encrypted statement <b>210</b> may be split from a larger audio segment (a conversation). In an exemplary embodiment, user device <b>102</b> may split an audio conversation into smaller units (1) after detecting another user <b>116</b> speaking, (2) at a particular time interval, (3) during a pause in the audio, or (4) during a combination of the above. The statement may be encrypted using one or more symmetric or public key (asymmetric) based encryption algorithms such as AES, DES, Triple DES, RSA, Blowfish, Twofish, or any other encryption algorithm. The statement may be encrypted using a key. The key may be a public key associated with user <b>116</b> or may be a key assigned to the conversation (or statement). For an assigned key, user device <b>102</b> may provide the key to all participants in the conversation. Additionally, the key may be provided to a third-party entity or server. Service providers may use a composite key system along with hashing in order to have access to all or substantially all conversations. Alternatively, the key may be provided only to the user <b>116</b> who made the statement. In some embodiments, the unencrypted statement may be sent, for example in block <b>200</b>, to node <b>110</b>. The statement may then be encrypted at node <b>110</b> or stored in plaintext. Encrypted statement <b>210</b> may be removed from block <b>200</b> and stored in an external data store <b>112</b>. In such instances, node <b>110</b> may include a description of the location (e.g., a link) of encrypted statement <b>210</b> in statement <b>202</b>, when adding block <b>200</b> to ledger <b>118</b>.</p><p id="p-0055" num="0054">Referring now to <figref idref="DRAWINGS">FIG. <b>3</b></figref> and <figref idref="DRAWINGS">FIG. <b>4</b></figref>, an embodiment of distributed ledger <b>118</b> is illustrated and described briefly for reference in the discussion below. Ledger <b>118</b> may include a chain of blocks <b>300</b>A, <b>300</b>B. The chain of blocks in ledger <b>118</b> may begin with a genesis block generated using a signature of voice features of a participant <b>116</b>. Ledger <b>118</b> may grow to include more blocks as they are added to ledger <b>118</b> from verified conversations, (voice-based) payment transactions, and user authentications of participant <b>116</b>. Node <b>110</b> may append blocks (e.g., block <b>200</b>) or individual transactions (e.g., transaction <b>202</b>A) on to ledger <b>118</b> received from devices, e.g., user device <b>102</b> where the block/transactions are verified by node <b>110</b>.</p><p id="p-0056" num="0055">Each block may include a copy of a hash from a previous block <b>306</b>, a rolling hash <b>304</b>, and one or more transactions <b>302</b>A<b>1</b>-<b>302</b>C<b>1</b> and <b>302</b>A<b>2</b>-<b>302</b>C<b>2</b>. Transactions <b>302</b> may include the same or similar data to transactions <b>202</b>.</p><p id="p-0057" num="0056">Node <b>110</b> may receive block <b>200</b> with transactions <b>202</b>A-C from user device <b>102</b> or another node <b>110</b> (at operation <b>402</b>). In some embodiments, node <b>110</b> may receive multiple blocks from user device <b>102</b> associated with the same occurrence (e.g., conversation, voice-transaction, authentication). Node <b>110</b> may determine whether a block <b>200</b> and/or statements <b>202</b> in block <b>200</b> can be verified on any ledger <b>118</b> of a plurality of ledgers <b>118</b>.</p><p id="p-0058" num="0057">Node <b>110</b> may break block <b>200</b> into the different statements <b>202</b>A, <b>202</b>B, and <b>202</b>C (at operation <b>404</b>). Using a hash comparison (e.g., leveraging fuzzy hashing and similarity computations), node <b>110</b> may compare a hash of voice features <b>208</b>A to rolling hash <b>304</b>A, the last rolling hash in ledger <b>118</b> (at operation <b>406</b>). A rolling hash (also known as a recursive hash or a rolling checksum) may include a hash where the input is hashed in a window that moves through the input.</p><p id="p-0059" num="0058">If voice features <b>208</b>A are similar (e.g., within a threshold deviation or above a threshold match) to the rolling hash <b>304</b>, node <b>110</b> may determine that there is a match. If a match is found, node <b>110</b> may add block <b>200</b> to ledger <b>118</b>. If a match is not found, node <b>110</b> may (1) compare voice features <b>208</b>A with rolling hashes in the last block of a different ledger, (2) create a new ledger for block <b>200</b>, or (3) discard the block (e.g., if node <b>110</b> determines that all transactions in a block do not validate to the same user). Similarity may be based on a comparison of hash values being above a threshold value (e.g. values of 85, 90, or 95). In other examples, similarity can be determined between sets of hashes using Jaccard or Kulczynski coefficients as distance metrics. Threshold values may include a 95%, 98%, or 99% similarity value or distance metric. The threshold value may be a predetermined value or may be determined based on characteristics of ledger <b>118</b>, rolling hash <b>304</b>A, and/or hash of voice features <b>208</b>A. Hashes (e.g. cryptographic or fuzzy hashes) of voice features between two different blocks may be compared against one another, and if there is enough overlap/similarity (i.e., based on the threshold value) between the two blocks, then they may be considered validated. For example, blocks <b>300</b>A and <b>300</b>B have a set of, e.g., ten, voice features (e.g., voice quality (e.g., voice quality (e.g., normal, breathy, hoarse, husky, whispered), pitch range, loudness, nasal resonance, and oral resonance). Each voice feature has a fuzzy hash. In this example, the threshold for comparison between fuzzy hashes is 95 and the Jaccard similarly score is set to 75%. The fuzzy hashes of each feature in block <b>300</b>A would be compared to the fuzzy hashes of block <b>300</b>B so that a match is acknowledged if fuzzy hashes from each block have a fuzzy comparison score of over 95. After all hashes of voice features have been compared between the two blocks, there would be a notation of the number of fuzzy matches (i.e. over 95) and a number of non-fuzzy matches. The Jaccard coefficient may measure the similarity of the intersection of the two sets over the union. In this example, if 8 of the 10 hashes matched based on the fuzzy comparisons (i.e. over 95), then the Jaccard coefficient would produce a score of 0.8 or 80%, and therefore would be considered a match as it is over the 75% similarity score. Similarity may also be based upon checking the base 10 number of hash to be less than a certain value. If a match is found, node <b>110</b> may determine the statement is considered valid. If a match is not found, node <b>110</b> may search other ledgers <b>118</b> (associated with other users <b>116</b>) and determine whether the hash of voice features <b>208</b> is similar to the last rolling hash in that ledger. Each statement <b>202</b> in block <b>200</b> is likewise checked by node <b>110</b>.</p><p id="p-0060" num="0059">If node <b>110</b> determines that each statement is not valid (at operation <b>408</b>, &#x201c;no&#x201d; branch), that the hash of voice features <b>208</b> of each transaction <b>202</b> are not similar to rolling hash <b>304</b>A of ledger <b>118</b>, node <b>110</b> may discard block <b>200</b> (at operation <b>410</b>). Node <b>110</b> may also compare the hash of voice features <b>208</b> within each transaction <b>202</b> with a last rolling hash of blocks in other ledgers <b>118</b> (e.g., associated with different participants). Node <b>110</b> may also start a new ledger associated with the participant using block <b>200</b> as the genesis block of the new ledger <b>118</b>. In an example, if a user <b>116</b> does not match any known user (e.g., where there is no match to a ledger), the user <b>116</b> may be asked to register for the system and a ledger <b>118</b> may be created. The user <b>116</b> may be asked to say one or more phrases (e.g., a set of predefined phrases) to a device <b>102</b> from which the voice characteristics can be extracted. A genesis block may be created from the phrases said by the user <b>116</b>. Block <b>200</b> may then be matched to this genesis block on this newly formed ledger.</p><p id="p-0061" num="0060">If node <b>110</b> determines that each statement is valid (at operation <b>408</b>, &#x201c;yes&#x201d; branch), that the hash of voice features <b>208</b> of each statement <b>202</b> are similar to rolling hash <b>304</b>A of ledger <b>118</b>, node <b>110</b> may store encrypted statements <b>210</b>A-C from block <b>200</b> in data store <b>112</b> (at operation <b>412</b>). Node <b>110</b> may remove the encrypted statements from block <b>200</b> or generate a new block <b>300</b>B. Node <b>110</b> may add additional information to block <b>300</b>B including rolling hash <b>304</b>A of the previous block <b>300</b>A to block <b>300</b>B as previous hash <b>306</b>B (at operation <b>414</b>). Node <b>110</b> may also add the location of (e.g., a link or pointer to) the encrypted statements in data store <b>112</b>. Node <b>110</b> may also add a new rolling hash to ledger <b>118</b> including information from the new block <b>300</b>B.</p><p id="p-0062" num="0061">Node <b>110</b> may add new block <b>300</b>B to ledger <b>118</b> (at step <b>416</b>). Updates to ledger <b>118</b>, including the addition of new block <b>300</b>B, may be sent to other nodes <b>110</b> (at operation <b>418</b>).</p><p id="p-0063" num="0062">Referring now to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a conceptual diagram of exemplary system <b>500</b> is illustrated that, in some embodiments, may be used to store a voice recording of a conversation and information related to the conversation among multiple individuals. Referring also to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, a conceptual diagram of an exemplary user interface <b>600</b> of an application on user device <b>102</b>C is illustrated.</p><p id="p-0064" num="0063">Participant <b>116</b>A, participant <b>116</b>B, and participant <b>116</b>C may want to digitally memorialize a conversation they are having. Participants <b>116</b> may use user device <b>102</b>C to record and memorialize the conversation on a ledger. Participant <b>116</b>A may run the conversation application <b>600</b> on user device <b>102</b>C and click the &#x201c;New Conversation&#x201d; button. The conversation application <b>600</b> of user device <b>102</b>C may begin recording the conversation between participant <b>116</b>A, participant <b>116</b>B, and participant <b>116</b>C. User device <b>102</b>C running the conversation application <b>600</b> may identify the number of different speakers, three in the present example, in the conversation. User device <b>102</b>C running the conversation application <b>600</b> may create a separate block <b>504</b>A, <b>504</b>B, and <b>504</b>C for each of the parties (participants <b>116</b>A, <b>116</b>B, and <b>116</b>C) to the conversation. User device <b>102</b>C running the conversation application <b>600</b> may split the recording into a series of statements. Each statement may be made by a single participant <b>116</b>A, <b>116</b>B, or <b>116</b>C. User device <b>102</b>C running the conversation application <b>600</b> may encrypt each statement using a key. The key may be generated for the conversation. In this example, the same key may be used to encrypt each of the statements and for each of the blocks. A preliminary determination may be made, by user device <b>102</b>C running the conversation application <b>600</b>, as to which user spoke the statement. Each of the statements may also be associated with a timestamp, a unique identifier, and a hash of voice features which may be added to the respective block. At the end of a conversation, a participant <b>116</b> may select a button to end the conversation. User device <b>102</b>C running the conversation application <b>600</b> may send the generated blocks <b>504</b>A-C to node <b>110</b> via network <b>114</b>. As was described with respect to <figref idref="DRAWINGS">FIGS. <b>2</b>-<b>4</b></figref>, node <b>110</b> may validate each block by finding an associated ledger for each block and validate each statement in blocks <b>504</b>A-C with the latest record in the respective ledger <b>118</b>A-C. After adding or rejecting blocks <b>504</b>A-C, node <b>110</b> may send an indication that blocks were validated and/or rejected to user device <b>102</b>C. User device <b>102</b>C may display the indication via a graphic or audio user interface. Node <b>110</b> or user device <b>102</b>C may send the encryption key to user devices <b>102</b> associated with the other users for use in conversation application <b>600</b> running on those user devices <b>102</b>. In some embodiments, participants in a conversation may send the key and conversation data to a device associated with a non-conversation participant or entity, which would enable that entity or non-conversation participant to access the stored conversation. In some embodiments, a complete (encrypted) recording of the conversation is stored in data store <b>112</b> and/or locally on user device <b>102</b>.</p><p id="p-0065" num="0064">Non-vocal participants to the conversation may not be included in the list or number of participants and may not receive a key to access the conversation. A notification may be displayed to have all participants introduce themselves to ensure that they are added as a participant in the conversation and automatically receive the decryption key.</p><p id="p-0066" num="0065">Conversation application <b>600</b> may list all conversations accessible by a user as rows on a user interface. Conversation application <b>600</b> may include timestamp information for when the recorded conversation began (or ended), authenticated members of the conversation, information regarding the cryptographic key, and information as to where the conversation is stored. In certain embodiments, information regarding the conversation is stored in one or more ledgers <b>118</b>. If a user selects a play option, conversation application <b>600</b> may retrieve blocks associated with the conversation from one or more ledgers <b>118</b> from a node <b>110</b> and recreate the conversation by downloading encrypted statements from data store <b>112</b> (using information in the retrieved blocks) and unencrypt the statements using the key. Alternatively, conversation application <b>600</b> may have a complete stored copy of the selected conversation locally or accessible via a link to data store <b>112</b>. In this example, conversation application <b>600</b> may download and decrypt the conversation using the key and play the decrypted conversation without the need to recreate it from individual statements.</p><p id="p-0067" num="0066">Referring now to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a conceptual diagram of exemplary system <b>700</b> is illustrated that, in some embodiments, may be used to authenticate a user during a phone conversation.</p><p id="p-0068" num="0067">Participant <b>116</b> may call, using user device <b>102</b>, customer service for product support or for access to financial (e.g., bank, credit card company, insurance company, investment account), medical (e.g., doctor, hospital, insurance company, pharmacy), or other personal records (e.g., school, employer). When setting up an account, participant <b>116</b> may be asked to speak a predetermined statement for future voice authentication, or audio may be captured of user <b>116</b> during the phone interaction unrelated to voice authentication.</p><p id="p-0069" num="0068">Customer service or authentication server <b>108</b> may extract voice features from the statement and using a fuzzy hashing algorithm create a quasi-unique identifier for participant <b>116</b>. This identifier may be updated during subsequent interactions with the user and an updated identifier may be created by combining the previous hash information with newly extracted voice features of the subsequent interactions using a rolling fuzzy hashing algorithm.</p><p id="p-0070" num="0069">Representative <b>702</b> may answer the call and wish to authenticate participant <b>116</b> to access their personal data, account, to share information known about the user, or to make changes to an account of participant <b>116</b>. Representative <b>702</b> may record a statement of speech of participant <b>116</b>. Representative <b>702</b> may send the recorded statement to authentication server <b>108</b> to authenticate participant <b>116</b>. Authentication server <b>108</b> may extract voice features from the statement and take a (fuzzy) hash of the voice features. Alternatively, representative <b>702</b> may extract voice features from the statement and take a (fuzzy) hash of the voice features and send the hashed voice features to authentication server <b>108</b>. Authentication server <b>108</b> may have a stored, in data store <b>704</b>, hash of voice features previously received from participant <b>116</b> (e.g., the identifier). Authentication server <b>108</b> may then compare the newly received hashed voice features with the previously stored features and determine if the fuzzy hashes are similar to confirm the identity of participant <b>116</b>. Similarity of the fuzzy hashes may be determined using, e.g., a distance metric (using e.g. Jaccard or Kulczynski coefficients) and compare the distance value with an appropriate threshold value. Authentication server <b>108</b> may send the result of the comparison to representative <b>702</b> to authenticate the participant. If the verification is positive, representative <b>702</b> may indicate that to participant <b>116</b> and communicate account details or make account changes based on interactions with participant <b>116</b>. The hash of these voice features may be combined with the previous hash to update the hash using a rolling fuzzy hashing algorithm. If the verification is negative, representative <b>702</b> may request the user perform verification again or end the communication.</p><p id="p-0071" num="0070">Referring now to <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a conceptual diagram of exemplary system <b>800</b> is illustrated that, in some embodiments, may be used to process a voice-based purchase.</p><p id="p-0072" num="0071">Participant <b>116</b> may initiate a voice transaction with a vendor <b>802</b>. In the illustrated example, vendor <b>802</b> is a food truck. The voice transaction may include a food order. In other examples, the transaction may be for any good or service where payment is needed or provided.</p><p id="p-0073" num="0072">An employee may ring up the order for participant <b>116</b> on point-of-sale (POS) <b>102</b>H. The order may be for a particular amount of money. POS <b>102</b>H may record the voice of user <b>116</b> during the ordering or check out process. POS <b>102</b>H may send a message to service provider server <b>104</b> to authenticate the user. Service provider server <b>104</b> may determine the identity of participant <b>116</b> and determine whether participant <b>116</b> is authorized to make voice-based payments to send money to vendor <b>802</b>.</p><p id="p-0074" num="0073">In one embodiment, POS <b>102</b>H may generate a block with one or more statements as shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, including a fuzzy hash of voice features, and then add to a ledger <b>118</b>A-C. Service provider server <b>104</b> may receive the block and send it to node <b>110</b> for inclusion in a ledger. Node <b>110</b> may compare the fuzzy hash of voice features with a hash value of the latest record in each ledger (<b>118</b>A-C) and try and find a match (as described above). If a match is found, node <b>110</b> may add the block to the appropriate ledger (as described in <figref idref="DRAWINGS">FIGS. <b>4</b> and <b>5</b></figref>). Alternatively, service provider server <b>104</b> compares the fuzzy hash of voice features without attempting to add a block to ledger <b>110</b>A-C to find a match.</p><p id="p-0075" num="0074">Node <b>110</b> may also alert service provider server <b>104</b> of the match. Payment service server <b>104</b> may combine the authenticated data with other data about participant <b>116</b> such as location data from a personal device, transaction data from a nearby vendor, communication data of vendor <b>802</b>, and/or biometric/photographic data about participant <b>116</b>) to determine a confidence value of determining the correct account. Service provider server <b>104</b> may use the confidence value to perform a risk analysis about whether to perform the transaction through voice alone. The risk analysis may also be based off the cost of the purchase (where a smaller transaction price is less risk). If the participant <b>116</b> was not identified or if the transaction was determined to be a high risk (e.g., above a price threshold amount, a purchase type, or other metric), service provider server <b>104</b> may alert POS <b>102</b>H that the transaction failed and request another form of payment. If participant <b>116</b> was identified in the system and the transaction was not determined to be a high risk, a receipt can be generated for participant <b>116</b>. Participant <b>116</b> can be prompted by POS <b>102</b>H to confirm the transaction either verbally or via a button click on POS <b>102</b>H. To make this transaction, participant <b>116</b> did not need to carry a credit card or a cellular phone or other device.</p><p id="p-0076" num="0075">Referring now to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an embodiment of a device <b>900</b> is illustrated. The device <b>900</b> may be any of the user devices <b>102</b> discussed above. The device <b>900</b> includes a chassis <b>902</b> having a display <b>904</b> and an input device including the display <b>904</b>, a plurality of input buttons <b>906</b>, and a microphone <b>908</b>. One of skill in the art will recognize that the device <b>900</b> is a portable or mobile phone including a touch screen input device and a plurality of input buttons and microphone that allow the functionality discussed above with reference to methods <b>400</b> and the building of block <b>200</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. However, a variety of other portable/mobile devices and/or desktop devices may be used in method <b>400</b> and the building of block <b>200</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref> without departing from the scope of the present disclosure (e.g., user devices <b>102</b> described in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0077" num="0076">Referring now to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, an embodiment of a computer system <b>1000</b> suitable for implementing, for example, the user devices, nodes, and servers, is illustrated. It should be appreciated that other devices utilized in the voice-activated authentication and payment system may be implemented as the computer system <b>1000</b> in a manner as follows.</p><p id="p-0078" num="0077">In accordance with various embodiments of the present disclosure, computer system <b>1000</b>, such as a computer and/or a network server, includes a bus <b>1002</b> or other communication mechanism for communicating information, which interconnects subsystems and components, such as a processor <b>1004</b> (e.g., processor, micro-controller, digital signal processor (DSP), etc.), a system memory component <b>1006</b> (e.g., RAM), a static storage component <b>1008</b> (e.g., ROM), a disk drive component <b>1010</b> (e.g., magnetic or optical), a network interface component <b>1012</b> (e.g., modem or Ethernet card), a display component <b>1014</b> (e.g., CRT or LCD), an input component <b>1018</b> (e.g., keyboard, keypad, or virtual keyboard, microphone), a cursor control component <b>1020</b> (e.g., mouse, pointer, or trackball), and/or a location determination component <b>1022</b> (e.g., a Global Positioning System (GPS) device as illustrated, a cell tower triangulation device, and/or a variety of other location determination devices known in the art). In one implementation, the disk drive component <b>1010</b> may comprise a database having one or more disk drive components.</p><p id="p-0079" num="0078">In accordance with embodiments of the present disclosure, the computer system <b>1000</b> performs specific operations by the processor <b>1004</b> executing one or more sequences of instructions contained in the memory component <b>1006</b>, such as described herein with respect to the user devices, server devices (including the payment provider server, merchant server, and authentication server), data stores, and nodes. Such instructions may be read into the system memory component <b>806</b> from another computer readable medium, such as the static storage component <b>1008</b> or the disk drive component <b>1010</b>. In other embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the present disclosure.</p><p id="p-0080" num="0079">Logic may be encoded in a computer readable medium, which may refer to any medium that participates in providing instructions to the processor <b>1004</b> for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. In one embodiment, the computer readable medium is non-transitory. In various implementations, non-volatile media includes optical or magnetic disks, such as the disk drive component <b>1010</b>, volatile media includes dynamic memory, such as the system memory component <b>10806</b>, and transmission media includes coaxial cables, copper wire, and fiber optics, including wires that comprise the bus <b>1002</b>. In one example, transmission media may take the form of acoustic or light waves, such as those generated during radio wave and infrared data communications.</p><p id="p-0081" num="0080">Some common forms of computer readable media includes, for example, floppy disk, flexible disk, hard disk, magnetic tape, any other magnetic medium, CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, RAM, PROM, EPROM, FLASH-EPROM, any other memory chip or cartridge, carrier wave, or any other medium from which a computer is adapted to read. In one embodiment, the computer readable media is non-transitory.</p><p id="p-0082" num="0081">In various embodiments of the present disclosure, execution of instruction sequences to practice the present disclosure may be performed by the computer system <b>1000</b>. In various other embodiments of the present disclosure, a plurality of the computer systems <b>1000</b> coupled by a communication link <b>1024</b> to the network <b>114</b> (e.g., such as a LAN, WLAN, PTSN, and/or various other wired or wireless networks, including telecommunications, mobile, and cellular phone networks) may perform instruction sequences to practice the present disclosure in coordination with one another.</p><p id="p-0083" num="0082">The computer system <b>1000</b> may transmit and receive messages, data, information and instructions, including one or more programs (i.e., application code) through the communication link <b>1024</b> and the network interface component <b>1012</b>. The network interface component <b>1012</b> may include an antenna, either separate or integrated, to enable transmission and reception via the communication link <b>1024</b>. Received program code may be executed by processor <b>1004</b> as received and/or stored in disk drive component <b>1010</b> or some other non-volatile storage component for execution.</p><p id="p-0084" num="0083">Where applicable, various embodiments provided by the present disclosure may be implemented using hardware, software, or combinations of hardware and software. Also, where applicable, the various hardware components and/or software components set forth herein may be combined into composite components comprising software, hardware, and/or both without departing from the scope of the present disclosure. Where applicable, the various hardware components and/or software components set forth herein may be separated into sub-components comprising software, hardware, or both without departing from the scope of the present disclosure. In addition, where applicable, it is contemplated that software components may be implemented as hardware components and vice-versa.</p><p id="p-0085" num="0084">Software, in accordance with the present disclosure, such as program code and/or data, may be stored on one or more computer readable mediums. It is also contemplated that software identified herein may be implemented using one or more general purpose or specific purpose computers and/or computer systems, networked and/or otherwise. Where applicable, the ordering of various steps described herein may be changed, combined into composite steps, and/or separated into sub-steps to provide features described herein.</p><p id="p-0086" num="0085">The foregoing disclosure is not intended to limit the present disclosure to the precise forms or particular fields of use disclosed. As such, it is contemplated that various alternate embodiments and/or modifications to the present disclosure, whether explicitly described or implied herein, are possible in light of the disclosure. Having thus described embodiments of the present disclosure, persons of ordinary skill in the art will recognize that changes may be made in form and detail without departing from the scope of the present disclosure. Thus, the present disclosure is limited only by the claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of authenticating voice data using a ledger, the method comprising:<claim-text>receiving, by a node device configured to maintain a ledger comprising a plurality of blocks, a block of voice data comprising a first signature, the block of voice data generated based on one or more statements made by a participant in a conversation, the first signature comprising a first hash of first voice features associated with the one or more statements made by the participant in the block of voice data;</claim-text><claim-text>comparing the first signature with a second signature associated with a latest block in the ledger, the second signature comprising a second hash of second voice features associated with the latest block in the ledger;</claim-text><claim-text>determining, based on a comparison between the first signature and the second signature, that a similarity between the first signature and the second signature is above a threshold value;</claim-text><claim-text>responsive to the determining, validating the block of voice data; and</claim-text><claim-text>adding the validated block of voice data to the ledger.</claim-text></claim-text></claim></claims></us-patent-application>