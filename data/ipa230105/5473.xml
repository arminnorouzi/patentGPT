<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005474A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005474</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17782152</doc-number><date>20210303</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>202010737012.8</doc-number><date>20200728</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>10</class><subclass>L</subclass><main-group>15</main-group><subgroup>193</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>03</class><subclass>M</subclass><main-group>7</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>10</class><subclass>L</subclass><main-group>15</main-group><subgroup>193</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>03</class><subclass>M</subclass><main-group>7</main-group><subgroup>30</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD AND DEVICE FOR COMPRESSING FINITE-STATE TRANSDUCERS DATA</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>GUANGZHOU ZIIPIN NETWORK TECHNOLOGY CO., LTD</orgname><address><city>Guangzhou, Guangdong</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>LIANG</last-name><first-name>Zhenxing</first-name><address><city>Guangzhou, Guangdong</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>GUANGZHOU ZIIPIN NETWORK TECHNOLOGY CO., LTD</orgname><role>03</role><address><city>Guangzhou, Guangdong</city><country>CN</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2021/078808</doc-number><date>20210303</date></document-id><us-371c12-date><date>20220602</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method and device for compressing FST data are provided. The method includes: acquiring to-be-compressed FST data, where the FST data includes state transition data and state data; decomposing the state transition data based on first data categories to acquire first decomposition data; decomposing the state data based on second data categories to acquire second decomposition data; sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category; alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data; performing classification statistics on the first arrangement data and the second arrangement data to acquire index data; and combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="117.18mm" wi="141.39mm" file="US20230005474A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="171.53mm" wi="147.57mm" file="US20230005474A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="168.66mm" wi="149.27mm" file="US20230005474A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="207.69mm" wi="143.43mm" file="US20230005474A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="77.55mm" wi="146.47mm" file="US20230005474A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="131.66mm" wi="143.43mm" file="US20230005474A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="111.00mm" wi="109.30mm" file="US20230005474A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The present disclosure relates to the technical field of natural language processing, and in particular to a method and device for compressing finite-state transducer (FST) data.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">In applications such as speech recognition, full-text retrieval, and input methods in the technical field of natural language processing, after acquiring input information, a search engine searches dictionary indexes according to the input information, and then outputs some matching results. Since the dictionary indexes are used as a target library for search, the search algorithm depends on the data structure of the dictionary indexes, and involves a search speed and the matching results.</p><p id="p-0004" num="0003">The finite-state transducer (FST) is a data structure of the dictionary indexes. <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref> is a schematic diagram showing a simple FST structure, which mainly includes states S<sub>1 </sub>to S<sub>4 </sub>and state transitions (arcs) a<sub>1 </sub>to a<sub>5</sub>. The states include a start state mark and some final state marks. <figref idref="DRAWINGS">FIG. <b>1</b>(B)</figref> is a schematic diagram showing a simple data structure of FST. State transition data includes signal label data (label), weight data (weight) and next state identifier data (next state). State data includes attached state transition identifier data. State data of a state marked as final further includes final weight data. The FST data includes a large amount of redundant data, and is generally stored in a client device for a long time. In a case of limited resources in the client device, the large amount of redundant data may result in a shortage of memory resources in the client device. Therefore, it is important to optimize the method for compressing the FST data.</p><p id="p-0005" num="0004">In the conventional data compression method, a final weight of the state marked as final is wrapped as a weight of the state transition, to generate compressed data in a unified format to be stored. <figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram showing a data structure of the FST data compressed by the conventional data compression method. By the above method, the data may be compressed to some extent. However, in the process of wrapping the final weight of the final state, in order to maintain the consistent format of the compressed data, a next state identifier that originally does not exist in the state is packaged inside the compressed data, resulting in a waste of data space. In addition, in a case that none of the state transitions includes a weight, a weight that originally does not exist in the state transition is still packaged inside the compressed data by the above method, resulting in a further waste of the data space.</p><p id="p-0006" num="0005">Therefore, it is desired to provide an efficient method for compressing FST data.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">In view of this, a method and device for compressing FST data are provided according to the present disclosure, to effectively reduce space occupied by the FST data, thereby solving the technical problem of a waste of data space.</p><p id="p-0008" num="0007">A method for compressing FST data is provided according to a first aspect of the present disclosure. The method for compressing FST data includes: acquiring to-be-compressed FST data, where the FST data includes state transition data and state data; decomposing the state transition data based on first data categories to acquire first decomposition data; decomposing the state data based on second data categories to acquire second decomposition data; sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category; alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data; performing classification statistics on the first arrangement data and the second arrangement data to acquire index data; and combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</p><p id="p-0009" num="0008">Optionally, the decomposing the state transition data based on first data categories to acquire first decomposition data includes: decomposing the state transition data based on data categories of signal label, weight and next state identifier, to acquire signal label decomposition data, weight decomposition data and next state identifier decomposition data.</p><p id="p-0010" num="0009">Optionally, before the decomposing the state transition data based on first data categories to acquire first decomposition data, the method for compressing FST data further includes: setting data types of the first decomposition data based on a maximum value of signal label and a total number of all states in the to-be-compressed FST data.</p><p id="p-0011" num="0010">Optionally, after the decomposing the state transition data based on first data categories to acquire first decomposition data, the method for compressing FST data further includes: removing output signal label decomposition data from the signal label decomposition data in a case that information presented by the FST data is suitable to be presented by FSA data; and removing the weight decomposition data in a case that the information presented by the FST data is suitable to be presented by Trie data.</p><p id="p-0012" num="0011">Optionally, the decomposing the state data based on second data categories to acquire second decomposition data includes: decomposing state data of each final state based on data categories of null label and final weight, to acquire null label decomposition data and final weight decomposition data, where the final state is a state marked as final.</p><p id="p-0013" num="0012">Optionally, the sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category includes: sequentially arranging the signal label decomposition data in a sequential order of state identifiers corresponding to the signal label decomposition data, to acquire signal label arrangement data; sequentially arranging the weight decomposition data in a sequential order of state identifiers corresponding to the weight decomposition data, to acquire weight arrangement data; and sequentially arranging the next state identifier decomposition data in a sequential order of state identifiers corresponding to the next state identifier decomposition data, to acquire next state identifier arrangement data.</p><p id="p-0014" num="0013">Optionally, the alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data includes: alternately arranging the signal label arrangement data and the null label decomposition data in a sequential order of state identifiers corresponding to the signal label arrangement data and the null label decomposition data, to acquire signal label mixed arrangement data; and sequentially arranging the final weight decomposition data in a sequential order of state identifiers corresponding to the final weight decomposition data, to acquire final weight arrangement data.</p><p id="p-0015" num="0014">Optionally, the performing classification statistics on the first arrangement data and the second arrangement data to acquire index data includes: performing classification statistics on the first arrangement data based on state identifiers corresponding to the first arrangement data to acquire first index data; and performing classification statistics on the second arrangement data based on state identifiers corresponding to the second arrangement data to acquire second index data.</p><p id="p-0016" num="0015">Optionally, before the performing classification statistics on the first arrangement data and the second arrangement data to acquire index data, the method for compressing FST data further includes: setting a data type of the index data based on a maximum count of state transitions belonging to a same state, wherein the maximum count is a total number of state transitions belonging to a state with most transitions among all states in the to-be-compressed FST data.</p><p id="p-0017" num="0016">Optionally, the combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data includes: combining the weight arrangement data, the next state identifier arrangement data, the signal label mixed arrangement data, the final weight arrangement data and the index data, to obtain the compressed FST data.</p><p id="p-0018" num="0017">A device for compressing FST data is provided according to a second aspect of the present disclosure. The device for compressing FST data includes an acquisition unit, a first decomposition unit, a second decomposition unit, a first arrangement unit, a second arrangement unit, a classification statistics unit, and a combination unit. The acquisition unit is configured to acquire to-be-compressed FST data. The FST data includes state transition data and state data. The first decomposition unit is configured to decompose the state transition data based on first data categories to acquire first decomposition data. The second decomposition unit is configured to decompose the state data based on second data categories to acquire second decomposition data. The first arrangement unit is configured to sequentially arrange, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category. The second arrangement unit is configured to alternately arrange the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data. The classification statistics unit is configured to perform classification statistics on the first arrangement data and the second arrangement data to acquire index data. The combination unit is configured to combine the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</p><p id="p-0019" num="0018">It can be seen from the above technical solutions that the method for compressing FST data according to the present disclosure has the following advantages.</p><p id="p-0020" num="0019">The method for compressing FST data according to the present disclosure includes: acquiring to-be-compressed FST data, where the FST data includes state transition data and state data; decomposing the state transition data based on first data categories to acquire first decomposition data; decomposing the state data based on second data categories to acquire second decomposition data; sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category; alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data; performing classification statistics on the first arrangement data and the second arrangement data to acquire index data; and combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</p><p id="p-0021" num="0020">According to the present disclosure, the state transition data of the FST data is decomposed based on the first data categories to acquire the first decomposition data, and the state data of the FST data is decomposed based on the second data categories to acquire the second decomposition data. Then, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire first arrangement data of the first data category. Then, the first arrangement data and the second decomposition data are alternately arranged according to a sequential order used in the first arrangement data to acquire second arrangement data. Then, classification statistics is performed on the first arrangement data and the second arrangement data to acquire index data. Finally, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data. In the process, the FST data is decomposed and arranged in a fine-grained manner, without filling redundant data. Compared with the conventional data compression method in which redundant data is required in order to maintain the consistent format of the compressed data, the space occupied by the FST data is effectively reduced, thereby solving the technical problem of the waste of data space.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0022" num="0021">In order to more clearly illustrate technical solutions in embodiments of the present disclosure, the drawings to be used in the description of the embodiments are briefly described below. It is apparent that the drawings in the following description are only drawings used in some embodiments of the present disclosure, and other drawings may be acquired by those skilled in the art from the drawings without any creative work.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref> is a schematic diagram showing a simple FST structure;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>1</b>(B)</figref> is a schematic diagram showing a data structure of FST data shown in <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref>;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic flowchart of a method for compressing FST data according to a first embodiment of the present disclosure;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic flowchart of a method for compressing FST data according to a second embodiment of the present disclosure;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram showing a data structure of FST data compressed by the conventional data compression method;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram showing a data structure of FST data compressed by the compression method according to embodiments of the present disclosure; and</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a schematic structural diagram of a device for compressing FST data according to an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION OF EMBODIMENTS</heading><p id="p-0030" num="0029">A method and device for compressing FST data are provided according to embodiments of the present disclosure, to effectively reduce space occupied by the FST data, thereby solving the technical problem of the waste of data space.</p><p id="p-0031" num="0030">The technical solutions in the embodiments of the present disclosure are described clearly and completely in conjunction with the drawings in the embodiments of the present disclosure hereinafter, so that those skilled in the art can better understand the technical solutions of the present disclosure. It is apparent that the described embodiments are only some rather than all embodiments of the present disclosure. All other embodiments acquired by those skilled in the art based on the embodiments of the present disclosure without any creative work fall within the protection scope of the present disclosure.</p><p id="p-0032" num="0031">First, some terms used in the description of the embodiments of the present disclosure are explained as follows.</p><p id="p-0033" num="0032">Trie is an ordered prefix tree with the same prefix.</p><p id="p-0034" num="0033">FSA is short for Finite-State Automaton that includes no output signal label.</p><p id="p-0035" num="0034">Data type constrains the values that an expression, defines the operations that can be done on the data, the meaning of the data, and the way values of that type can be stored.</p><p id="p-0036" num="0035">Reference is made to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, which is a schematic flowchart of a method for compressing FST data according to a first embodiment of the present disclosure.</p><p id="p-0037" num="0036">The method for compressing FST data according to the first embodiment includes the following steps <b>201</b> to <b>207</b>.</p><p id="p-0038" num="0037">In step <b>201</b>, to-be-compressed FST data is acquired. The FST data includes state transition data and state data.</p><p id="p-0039" num="0038">The to-be-compressed FST data is acquired first in order to compress the FST data.</p><p id="p-0040" num="0039">It should be noted that although different FST data may have different structures, each FST structure includes states, state transitions, signal labels, weights, next state identifiers, a start state mark and final state marks, as shown in <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref>. As shown in <figref idref="DRAWINGS">FIG. <b>1</b>(B)</figref>, FST data corresponding to the above FST structure includes state transition data and state data. The state transition data includes signal label data, weight data and next state identifier data. The state data includes final weight data and attached state transition identifier data. For each state transition, a state to which the state transition is attached may be determined based on the attached state transition identifier data in the state data.</p><p id="p-0041" num="0040">For example, in <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref>, a sign S<sub>1 </sub>represents a state, a sign a<sub>i </sub>represents a state transition, a circle sign in bold represents a start state, and a double-circle sign represents a final state. The sign for the final state also represents a final weight, and the sign for the state transition also represents the signal label and the weight.</p><p id="p-0042" num="0041">In step <b>202</b>, the state transition data is decomposed based on first data categories to acquire first decomposition data.</p><p id="p-0043" num="0042">The state transition data structure is different from the state data structure. In the conventional data compression method, the state transition data and the state data are unified in a format, resulting in redundant data. In this embodiment, data is decomposed instead of being unified, and then is arranged separately or arranged in a mixed manner based on categories of the decomposed data. Therefore, the state transition data in the FST data is first decomposed in a fine-grained manner based on the first data categories, to acquire fine-grained first decomposition data.</p><p id="p-0044" num="0043">For example, referring to the FST structure shown in <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref>, the FST data corresponding to the FST structure may be processed as follows in step <b>202</b>.</p><p id="p-0045" num="0044">Data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>is decomposed based on data categories of signal label, weight and next state identifier, to acquire signal label decomposition data of the state transitions a<sub>1 </sub>to a<sub>5</sub>, weight decomposition data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>and next state identifier decomposition data of the state transitions a<sub>1 </sub>to a<sub>5</sub>.</p><p id="p-0046" num="0045">In step <b>203</b>, the state data is decomposed based on second data categories to acquire second decomposition data.</p><p id="p-0047" num="0046">In this embodiment, when the state transition data is decomposed, the state data is also decomposed in the fine-grained manner based on the second data categories, to acquire fine-grained second decomposition data.</p><p id="p-0048" num="0047">For example, referring to the FST structure shown in <figref idref="DRAWINGS">FIG. <b>1</b>(A)</figref>, the FST data corresponding to the FST structure may be processed as follows in step <b>203</b>.</p><p id="p-0049" num="0048">Data of the states S<sub>2 </sub>and S<sub>4 </sub>marked as final in the state data is decomposed based on data categories of null label and final weight, to acquire null label decomposition data of the states S<sub>2 </sub>and S<sub>4 </sub>and final weight decomposition data of the states S<sub>2 </sub>and S<sub>4</sub>.</p><p id="p-0050" num="0049">In step <b>204</b>, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire first arrangement data of the first data category.</p><p id="p-0051" num="0050">For example, the first decomposition data acquired from the above step <b>202</b> may be processed as follows in step <b>204</b>. The signal label decomposition data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>is sequentially arranged in a sequential order of state identifiers corresponding to the signal label decomposition data, to acquire signal label arrangement data in an order of a signal label of the state transition a<sub>1</sub>, a signal label of the state transition a<sub>2</sub>, a signal label of the state transition a<sub>3</sub>, a signal label of the state transition a<sub>4</sub>, and a signal label of the state transition a<sub>5</sub>. The weight decomposition data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>is sequentially arranged in a sequential order of state identifiers corresponding to the weight decomposition data, to acquire weight arrangement data in an order of a weight of the state transition a<sub>1</sub>, a weight of the state transition a<sub>2</sub>, a weight of the state transition a<sub>3</sub>, a weight of the state transition a<sub>4</sub>, and a weight of the state transition a<sub>5</sub>. The next state identifier decomposition data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>is sequentially arranged in a sequential order of state identifiers corresponding to the next state identifier decomposition data, to acquire next state identifier arrangement data in an order of a next state identifier of the state transition a<sub>1</sub>, a next state identifier of the state transition a<sub>2</sub>, a next state identifier of the state transition a<sub>3</sub>, a next state identifier of the state transition a<sub>4</sub>, and a next state identifier of the state transition a<sub>5</sub>.</p><p id="p-0052" num="0051">In step <b>205</b>, the first arrangement data and the second decomposition data are alternately arranged according to a sequential order used in the first arrangement data to acquire second arrangement data.</p><p id="p-0053" num="0052">For example, the first arrangement data acquired from the above step <b>204</b> and the second decomposition data acquired from the above step <b>203</b> may be processed as follows in step <b>205</b>. The signal label arrangement data of the state transitions a<sub>1 </sub>to a<sub>5 </sub>in the first arrangement data and the null label decomposition data of the states S<sub>2 </sub>and S<sub>4 </sub>in the second decomposition data are mixed, and are alternately arranged in a sequential order of state identifiers corresponding to the signal label arrangement data and the null label decomposition data, to acquire signal label mixed arrangement data in an order of the signal label of the state transition a<sub>1</sub>, the signal label of the state transition a<sub>2</sub>, a null label of the state S<sub>2</sub>, the signal label of the state transition a<sub>3</sub>, the signal label of the state transition a<sub>4</sub>, the signal label of the state transition a<sub>5</sub>, and a null label of the state S<sub>4</sub>. The final weight decomposition data of the states S<sub>2 </sub>and S<sub>4 </sub>is sequentially arranged in a sequential order of state identifiers corresponding to the final weight decomposition data, to acquire final weight arrangement data in an order of a final weight of the state S<sub>2</sub>, and a final weight of the state S<sub>4</sub>.</p><p id="p-0054" num="0053">In step <b>206</b>, classification statistics is performed on the first arrangement data and the second arrangement data to acquire index data.</p><p id="p-0055" num="0054">For example, the first arrangement data acquired from the above step <b>204</b> and the second arrangement data acquired from the above step <b>205</b> may be processed as follows in step <b>206</b>. Classification statistics is performed on the signal label arrangement data in the first arrangement data based on state identifiers corresponding to the signal label arrangement data to acquire first index data having index values of S<sub>1</sub>:2, S<sub>2</sub>:2, S<sub>3</sub>:1, S<sub>4</sub>: 0. Classification statistics is performed on the signal label mixed arrangement data in the second arrangement data based on state identifiers corresponding to the signal label mixed arrangement data, to acquire second index data having index values of S<sub>1</sub>:2, S<sub>2</sub>:3, S<sub>3</sub>:1, S<sub>4: </sub>1.</p><p id="p-0056" num="0055">In step <b>207</b>, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data.</p><p id="p-0057" num="0056">For example, the first arrangement data acquired from the above step <b>204</b>, the second arrangement data acquired from the above step <b>205</b>, and the index data acquired from the above step <b>206</b> may be processed as follows in step <b>207</b>. The weight arrangement data and the next state identifier arrangement data in the first arrangement data, the signal label mixed arrangement data and the final weight arrangement data in the second arrangement data, and the index data are combined, to obtain the compressed FST data.</p><p id="p-0058" num="0057">The finally obtained compressed data is arranged as follows: S<sub>1</sub>:2, S<sub>2</sub>:3, S<sub>3</sub>:1, S<sub>4</sub>:1, the signal label of the state transition a<sub>1</sub>, the signal label of the state transition a<sub>2</sub>, the null label of the state S<sub>2</sub>, the signal label of the state transition a<sub>3</sub>, the signal label of the state transition a<sub>4</sub>, the signal label of the state transition a<sub>5</sub>, the null label of the state S<sub>4</sub>, the weight of the state transition a<sub>1</sub>, the weight of the state transition a<sub>2</sub>, the weight of the state transition a<sub>3</sub>, the weight of the state transition a<sub>4</sub>, the weight of the state transition a<sub>5</sub>, the next state identifier of the state transition a<sub>1</sub>, the next state identifier of the state transition a<sub>2</sub>, the next state identifier of the state transition a<sub>3</sub>, the next state identifier of the state transition a<sub>4</sub>, the next state identifier of the state transition a<sub>5</sub>, the final weight of the state S<sub>2</sub>, and the final weight of the state S<sub>4</sub>.</p><p id="p-0059" num="0058">In this embodiment, the state transition data of the FST data is decomposed based on the first data categories to acquire the first decomposition data, and the state data of the FST data is decomposed based on the second data categories to acquire the second decomposition data. Then, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire the first arrangement data of the first data category. Then, the first arrangement data and the second decomposition data are alternately arranged according to the sequential order used in the first arrangement data to acquire the second arrangement data. Then, classification statistics is performed on the first arrangement data and the second arrangement data to acquire index data. Finally, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data. In the process, the FST data is decomposed and arranged in a fine-grained manner, without filling redundant data. Compared with the conventional data compression method in which redundant data is required in order to maintain the consistent format of the compressed data, the space occupied by the FST data is effectively reduced, thereby solving the technical problem of the waste of data space.</p><p id="p-0060" num="0059">The method for compressing FST data according to the first embodiment of the present disclosure is described above, and a method for compressing FST data according to a second embodiment of the present disclosure is described below.</p><p id="p-0061" num="0060">Reference is made to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, which is a schematic flowchart of the method for compressing FST data according to the second embodiment of the present disclosure.</p><p id="p-0062" num="0061">The method for compressing FST data according to the second embodiment includes the following steps <b>301</b> to <b>311</b>.</p><p id="p-0063" num="0062">In step <b>301</b>, to-be-compressed FST data is acquired. The FST data includes state transition data and state data.</p><p id="p-0064" num="0063">It should be noted that the step <b>301</b> is the same as the step <b>201</b> in the first embodiment. For details of step <b>301</b>, one may refer to the description of step <b>201</b>, which is not repeated here.</p><p id="p-0065" num="0064">In step <b>302</b>, data types of the first decomposition data are set based on a maximum value of signal label and a total number of all states in the to-be-compressed FST data.</p><p id="p-0066" num="0065">In the conventional technical solutions, the state transition data in the FST data has a unified data type which requires a large space. A data type of the signal label is 32-bit Integer, a data type of the next state identifier is 32-bit Integer, and a data type of the weight is 32-bit Float, which may result in a waste of data space. In this embodiment, an appropriate data type is set for each category of the state transition data in the FST data. In this embodiment, a numerical range of each category of the state transition data is first evaluated. That is, the numerical range of the signal label data, the numerical range of the weight data, and the numerical range of the next state identifier data are evaluated. Then, for each category of the state transition data, an appropriate data type is determined based on the maximum value in the numerical range of the category of the state transition data, so that any values of the signal label data, the weight data, and the next state identifier data in the state transition data in their respective numerical ranges have corresponding values of their respective data types.</p><p id="p-0067" num="0066">For example, the data types are set as follows in step <b>302</b>. If the signal label has a maximum value of 127, and has a numerical range of 0 to 127, then the data type of the signal label is set to be 7-bit Integer. If the total number of all states is 4, and the numerical range of the state identifiers is from 0 to 3, then the data type of the next state identifier is set to be 2-bit Integer. If the weight has a numerical range of 0 to 255, then the data type of the weight is set to be 8-bit Integer.</p><p id="p-0068" num="0067">In step <b>303</b>, the state transition data is decomposed based on first data categories to acquire first decomposition data.</p><p id="p-0069" num="0068">It should be noted that the step <b>303</b> is the same as the step <b>202</b> in the first embodiment. For details of step <b>303</b>, one may refer to the description of step <b>202</b>, which is not repeated here.</p><p id="p-0070" num="0069">In step <b>304</b>, output signal label decomposition data is removed from the signal label decomposition data in a case that information presented by the FST data is suitable to be presented by FSA data.</p><p id="p-0071" num="0070">In the FST data, each of the signal label data includes input signal label data and output signal label data. In a case that the FSA structure is presented according to the FST data structure, a value of the input signal label data is equal to a value of the output signal label data.</p><p id="p-0072" num="0071">For example, in a case that the appropriate data structure of the FST data is simplified or changes to the data structure of FSA data, in data of each state transition, a value of the input signal label data is equal to a value of the output signal label data. In this case, the output signal label decomposition data in the signal label decomposition data may be removed as redundant data so as to reduce the space occupied by the FST data.</p><p id="p-0073" num="0072">In step <b>305</b>, the weight decomposition data is removed in a case that the information presented by the FST data is suitable to be presented by Trie data.</p><p id="p-0074" num="0073">In a case that the Trie structure is presented according to the FST data structure, for any state, a path from the start state to this state is unique. That is, a set of state transitions on the path is unique. That is, a value obtained by adding a final weight of a target state to a sum of weights of all state transitions on the path from the start state to the target state is fixed. Therefore, the weights of all the state transitions may be transferred and added to the final weight of the target state.</p><p id="p-0075" num="0074">For example, in a case that the Trie structure is presented according to the FST data structure, it is possible that none of the state transition data in the FST data includes meaningful weight data. In this case, the weight data may be removed as redundant data so as to further reduce the space occupied by the FST data.</p><p id="p-0076" num="0075">In step <b>306</b>, the state data is decomposed based on second data categories to acquire second decomposition data.</p><p id="p-0077" num="0076">It should be noted that the step <b>306</b> is the same as the step <b>203</b> in the first embodiment. For details of step <b>306</b>, one may refer to the description of step <b>203</b>, which is not repeated here.</p><p id="p-0078" num="0077">In step <b>307</b>, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire first arrangement data of the first data category.</p><p id="p-0079" num="0078">It should be noted that the step <b>307</b> is the same as the step <b>204</b> in the first embodiment. For details of step <b>307</b>, one may refer to the description of step <b>204</b>, which is not repeated here.</p><p id="p-0080" num="0079">In step <b>308</b>, the first arrangement data and the second decomposition data are alternately arranged according to a sequential order used in the first arrangement data to acquire second arrangement data.</p><p id="p-0081" num="0080">It should be noted that the step <b>308</b> is the same as the step <b>205</b> in the first embodiment. For details of step <b>308</b>, one may refer to the description of step <b>205</b>, which is not repeated here.</p><p id="p-0082" num="0081">In step <b>309</b>, a data type of the index data is set based on a maximum count of state transitions belonging to a same state.</p><p id="p-0083" num="0082">It should be noted that the maximum count is a total number of state transitions, that all belonging to a state with most transitions among all states in the to-be-compressed FST data.</p><p id="p-0084" num="0083">In the conventional technical solutions, the index data of the FST data has an absolute address offset data type which has a large numerical range and requires a large space, as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. This data type of the index data is generally 8-bit Integer, 16-bit Integer, or 32-bit Integer, resulting in a waste of data space. In this embodiment, an appropriate data type is set for the index data of the FST data based on the condition of the FST data. Since the maximum number of state transitions belonging to a single state is limited, and generally does not exceed the maximum value of signal label, a relative address offset data type which has a small numerical range and requires a small space is determined, as shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0085" num="0084">For example, the data type of the index data may be set as follows in step <b>309</b>. The number of attached state transitions of each state is as follows. The state S<sub>1 </sub>has 2 attached state transitions. The state S<sub>2 </sub>has 2 attached state transitions. The state S<sub>3 </sub>has 1 attached state transition. The state S<sub>4 </sub>has no attached state transition. Therefore, the maximum number of attached state transitions of a state among the all states is 2. Considering that there may be a null label to be counted, the maximum number of the attached state transitions is determined to be 3. Therefore, the index data has a numerical range from 0 to 3, and the data type of the index data is 2-bit Integer.</p><p id="p-0086" num="0085">In step <b>310</b>, classification statistics is performed on the first arrangement data and the second arrangement data to acquire the index data.</p><p id="p-0087" num="0086">It should be noted that the step <b>310</b> is the same as the step <b>206</b> in the first embodiment. For details of step <b>310</b>, one may refer to the description of step <b>206</b>, which is not repeated here.</p><p id="p-0088" num="0087">In step <b>311</b>, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data.</p><p id="p-0089" num="0088">It should be noted that the step <b>311</b> is the same as the step <b>207</b> in the first embodiment. For details of step <b>311</b>, one may refer to the description of step <b>207</b>, which is not repeated here.</p><p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram showing an arrangement structure of FST data compressed by the conventional data compression method. <figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram showing an arrangement structure of FST data compressed by the data compression method according to this embodiment. Comparing the compressed data acquired by the different compression methods, it can be found that, the data space occupied by the data compressed by this embodiment is less than that compressed by the conventional method by two data units of the next state identifier, and is further reduced by applying appropriate data types. In a case of complex data structure of the FST data, the space saved by the technical solutions of the present disclosure is considerable.</p><p id="p-0091" num="0090">In this embodiment, the state transition data of the FST data is decomposed based on the first data categories to acquire the first decomposition data, and the state data of the FST data is decomposed based on the second data categories to acquire the second decomposition data. Then, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire first arrangement data of the first data category. Then, the first arrangement data and the second decomposition data are alternately arranged according to the sequential order used in the first arrangement data to acquire the second arrangement data. Then, classification statistics is performed on the first arrangement data and the second arrangement data to acquire the index data. Finally, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data. In the process of decomposing the state transition data based on the first data categories to acquire the first decomposition data, the data types of the first decomposition data may be set based on the maximum value of signal label and the total number of all states, and the output signal label decomposition data and the weight decomposition data are removed depending on the appropriate data structure of the FST data. In the process of performing classification statistics on the first arrangement data and the second arrangement data to acquire index data, the data type of the index data may be set based on the maximum count of state transitions belonging to a same state. In the process, the FST data is decomposed and arranged in a fine-grained manner, without filling redundant data. Compared with the conventional data compression method in which redundant data is required in order to maintain the consistent format of the compressed data, the space occupied by the FST data is effectively reduced, thereby solving the technical problem of the waste of data space.</p><p id="p-0092" num="0091">The method for compressing FST data according to the second embodiment of the present disclosure is described above, and a device for compressing FST data is described below according to an embodiment of the present disclosure.</p><p id="p-0093" num="0092">Reference is made to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, which is a schematic structural diagram of a device for compressing FST data according to an embodiment of the present disclosure. The device for compressing FST data includes an acquisition unit <b>601</b>, a first decomposition unit <b>602</b>, a second decomposition unit <b>603</b>, a first arrangement unit <b>604</b>, a second arrangement unit <b>605</b>, a classification statistics unit <b>606</b>, and a combination unit <b>607</b>.</p><p id="p-0094" num="0093">The acquisition unit <b>601</b> is configured to acquire to-be-compressed FST data. The FST data includes state transition data and state data.</p><p id="p-0095" num="0094">The first decomposition unit <b>602</b> is configured to decompose the state transition data based on first data categories to acquire first decomposition data.</p><p id="p-0096" num="0095">The second decomposition unit <b>603</b> is configured to decompose the state data based on second data categories to acquire second decomposition data.</p><p id="p-0097" num="0096">The first arrangement unit <b>604</b> is configured to sequentially arrange, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category.</p><p id="p-0098" num="0097">The second arrangement unit <b>605</b> is configured to alternately arrange the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data.</p><p id="p-0099" num="0098">The classification statistics unit <b>606</b> is configured to perform classification statistics on the first arrangement data and the second arrangement data to acquire index data.</p><p id="p-0100" num="0099">The combination unit <b>607</b> is configured to combine the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</p><p id="p-0101" num="0100">In this embodiment, the state transition data of the FST data is decomposed based on the first data categories to acquire the first decomposition data, and the state data of the FST data is decomposed based on the second data categories to acquire the second decomposition data. Then, for each of the first data categories, the first decomposition data of the first data category is sequentially arranged to acquire the first arrangement data of the first data category. Then, the first arrangement data and the second decomposition data are alternately arranged according to the sequential order used in the first arrangement data to acquire the second arrangement data. Then, classification statistics is performed on the first arrangement data and the second arrangement data to acquire index data. Finally, the first arrangement data, the second arrangement data, and the index data are combined to obtain the compressed FST data. In the process, the FST data is decomposed and arranged in a fine-grained manner, without filling redundant data. Compared with the conventional data compression method in which redundant data is required in order to maintain the consistent format of the compressed data, the space occupied by the FST data is effectively reduced, thereby solving the technical problem of the waste of data space.</p><p id="p-0102" num="0101">Those skilled in the art should clearly understand that, detailed operating processes of the above device and units correspond to the processing in the foregoing method embodiments, and are not repeated here for convenience and conciseness of the description.</p><p id="p-0103" num="0102">In the embodiments of the present disclosure, it should be understood that the device and method disclosed herein may be implemented in other manners. For example, the device embodiments described above are illustrative only. For example, the units are divided merely in logical functions, and may be divided in other manners in actual implementation. For example, multiple units or components may be combined or integrated into another device, or some features may be ignored or not performed. In addition, the shown or discussed coupling, direct coupling or communication connection between parts may be via some interfaces, and the indirect coupling or communication connection of devices or units may be in electrical, mechanical or other forms.</p><p id="p-0104" num="0103">Units described as separate components may or may not be physically separated. Components shown as units may or may not be physical units. That is, these components may be located in same place or may be distributed on multiple network units. The object of the technical solutions of the embodiment may be achieved by selecting a part or all of the units according to actual requirements.</p><p id="p-0105" num="0104">Furthermore, functional units in embodiments of the present disclosure may be separate physical units or may be integrated into one processing unit. Alternatively, two or more units may be integrated into one unit. The integrated unit may be implemented in a form of hardware, or may be implemented in a form of software functional unit.</p><p id="p-0106" num="0105">In a case that the integrated unit is implemented as an independent product in the form of software functional unit for sale or use, the integrated unit may be stored in a computer readable storage medium. Based on such understandings, the technical solutions or part of the technical solutions disclosed in the present disclosure that makes contributions to the conventional technology or all or part of the technical solutions may be embodied in the form of a software product. The software product may be stored in a storage medium. The software product includes a number of instructions that control a computer device (which may be a personal computer, a server, or a network device and the like) to execute all or part of the steps of the methods according to the embodiments of the present disclosure. The above storage medium includes various mediums capable of storing program code, for example, a U disk, a mobile hard disk, a read only memory (ROM), a random access memory (RAM), a magnetic disk, or a compact disc.</p><p id="p-0107" num="0106">The above embodiments are only intended for describing the technical solutions of the present application, and should not be interpreted as limitation to the technical solutions. Although the technical solutions are described in detail with references to the embodiments above, those skilled in the art should understand that the technical solutions according to the above embodiments may be modified, or some technical features may be substituted with the equivalents. Such modifications or substitutions do not cause the essence of the technical solutions to deviate from the spirit and scope of the technical solutions according to the embodiments of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for compressing finite-state transducer (FST) data, comprising:<claim-text>acquiring to-be-compressed FST data, wherein the FST data comprises state transition data and state data;</claim-text><claim-text>decomposing the state transition data based on first data categories to acquire first decomposition data;</claim-text><claim-text>decomposing the state data based on second data categories to acquire second decomposition data;</claim-text><claim-text>sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category;</claim-text><claim-text>alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data;</claim-text><claim-text>performing classification statistics on the first arrangement data and the second arrangement data to acquire index data; and</claim-text><claim-text>combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method for compressing FST data according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the decomposing the state transition data based on first data categories to acquire first decomposition data comprises:<claim-text>decomposing the state transition data based on data categories of signal label, weight and next state identifier, to acquire signal label decomposition data, weight decomposition data and next state identifier decomposition data.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method for compressing FST data according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the sequentially arranging, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category comprises:<claim-text>sequentially arranging the signal label decomposition data in a sequential order of state identifiers corresponding to the signal label decomposition data, to acquire signal label arrangement data;</claim-text><claim-text>sequentially arranging the weight decomposition data in a sequential order of state identifiers corresponding to the weight decomposition data, to acquire weight arrangement data; and</claim-text><claim-text>sequentially arranging the next state identifier decomposition data in a sequential order of state identifiers corresponding to the next state identifier decomposition data, to acquire next state identifier arrangement data.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method for compressing FST data according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the decomposing the state data based on second data categories to acquire second decomposition data comprises:<claim-text>decomposing state data of each final state based on data categories of null label and final weight, to acquire null label decomposition data and final weight decomposition data, wherein the final state is a state marked as final.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method for compressing FST data according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the alternately arranging the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data comprises:<claim-text>alternately arranging the signal label arrangement data and the null label decomposition data in a sequential order of state identifiers corresponding to the signal label arrangement data and the null label decomposition data, to acquire signal label mixed arrangement data; and</claim-text><claim-text>sequentially arranging the final weight decomposition data in a sequential order of state identifiers corresponding to the final weight decomposition data, to acquire final weight arrangement data.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method for compressing FST data according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the combining the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data comprises:<claim-text>combining the weight arrangement data, the next state identifier arrangement data, the signal label mixed arrangement data, the final weight arrangement data and the index data, to obtain the compressed FST data.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method for compressing FST data according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein before the decomposing the state transition data based on first data categories to acquire first decomposition data, the method for compressing FST data further comprises:<claim-text>setting data types of the first decomposition data based on a maximum value of signal label and a total number of all states in the to-be-compressed FST data.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method for compressing FST data according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein after the decomposing the state transition data based on first data categories to acquire first decomposition data, the method for compressing FST data further comprises:<claim-text>removing output signal label decomposition data from the signal label decomposition data in a case that information presented by the FST data is suitable to be presented by finite-state automaton (FSA) data; and</claim-text><claim-text>removing the weight decomposition data in a case that the information presented by the FST data is suitable to be presented by Trie data.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method for compressing FST data according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the performing classification statistics on the first arrangement data and the second arrangement data to acquire index data comprises:<claim-text>performing classification statistics on the first arrangement data based on state identifiers corresponding to the first arrangement data to acquire first index data; and</claim-text><claim-text>performing classification statistics on the second arrangement data based on state identifiers corresponding to the second arrangement data to acquire second index data.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method for compressing FST data according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein before the performing classification statistics on the first arrangement data and the second arrangement data to acquire index data, the method for compressing FST data further comprises:<claim-text>setting a data type of the index data based on a maximum count of state transitions belonging to a same state, wherein the maximum count is a total number of state transitions belonging to a state with most transitions among all states in the to-be-compressed FST data.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A device for compressing finite-state transducer (FST) data, comprising:<claim-text>an acquisition unit configured to acquire to-be-compressed FST data, wherein the FST data comprises state transition data and state data;</claim-text><claim-text>a first decomposition unit configured to decompose the state transition data based on first data categories to acquire first decomposition data;</claim-text><claim-text>a second decomposition unit configured to decompose the state data based on second data categories to acquire second decomposition data;</claim-text><claim-text>a first arrangement unit configured to sequentially arrange, for each of the first data categories, the first decomposition data of the first data category, to acquire first arrangement data of the first data category;</claim-text><claim-text>a second arrangement unit configured to alternately arrange the first arrangement data and the second decomposition data according to a sequential order used in the first arrangement data, to acquire second arrangement data;</claim-text><claim-text>a classification statistics unit configured to perform classification statistics on the first arrangement data and the second arrangement data to acquire index data; and</claim-text><claim-text>a combination unit configured to combine the first arrangement data, the second arrangement data, and the index data, to obtain the compressed FST data.</claim-text></claim-text></claim></claims></us-patent-application>