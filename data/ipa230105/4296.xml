<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004297A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004297</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17487870</doc-number><date>20210928</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>04</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>34</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>065</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>0483</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>10</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>16</main-group><subgroup>3459</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0679</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0619</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>11</class><subclass>C</subclass><main-group>11</main-group><subgroup>5671</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">DATA PROTECTION FOR THREE-DIMENSIONAL NAND MEMORY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2021/103395</doc-number><date>20210630</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17487870</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Yangtze Memory Technologies Co., Ltd.</orgname><address><city>Wuhan</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Wan</last-name><first-name>Jie</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Tao</last-name><first-name>Wei</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Tao</last-name><first-name>Yuan</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Du</last-name><first-name>Ling</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Cheng</last-name><first-name>Boxuan</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>Cao</last-name><first-name>Jian</first-name><address><city>Wuhan</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>Yangtze Memory Technologies Co., Ltd.</orgname><role>03</role><address><city>Wuhan</city><country>CN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure provides a method of data protection for a three-dimensional NAND memory. The method includes programming a memory cell of the 3D NAND memory according to programming data; and backing up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value, where the PLC tracks a repeated number of the programming of the memory cell. A previous PLC can be set as the threshold value, where the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="134.11mm" wi="158.75mm" file="US20230004297A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="190.92mm" wi="159.94mm" orientation="landscape" file="US20230004297A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="204.13mm" wi="82.80mm" file="US20230004297A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="111.84mm" wi="123.61mm" orientation="landscape" file="US20230004297A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="191.18mm" wi="176.53mm" orientation="landscape" file="US20230004297A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="216.49mm" wi="164.68mm" orientation="landscape" file="US20230004297A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="250.78mm" wi="154.60mm" orientation="landscape" file="US20230004297A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="236.56mm" wi="187.03mm" file="US20230004297A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="237.24mm" wi="158.16mm" orientation="landscape" file="US20230004297A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="183.73mm" wi="127.68mm" orientation="landscape" file="US20230004297A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="259.93mm" wi="143.43mm" file="US20230004297A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="225.47mm" wi="167.89mm" orientation="landscape" file="US20230004297A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="260.01mm" wi="124.29mm" orientation="landscape" file="US20230004297A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS AND INCORPORATION BY REFERENCE</heading><p id="p-0002" num="0001">This application claims priority to PCT/CN2021/103395 filed on Jun. 30, 2021, which is incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure generally relates to the field of semiconductor technology, and more particularly, to a method and a storage system of data protection for a 3D NAND memory.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As memory devices are shrinking to smaller die size to reduce manufacturing cost and increase storage density, scaling of planar memory cells faces challenges due to process technology limitations and reliability issues. A three-dimensional (3D) memory architecture can address the density and performance limitation in planar memory cells.</p><p id="p-0005" num="0004">In a 3D NAND flash memory, many layers of memory cells can be stacked vertically such that storage density per unit area can be greatly increased. The vertically stacked memory cells can form memory strings, where the channels of the memory cells are connected in each memory string. Each memory cell can be addressed through a word line and a bit line. Data (i.e., logic states) of the memory cells in an entire memory page sharing the same word line can be read or programmed simultaneously. However, due to aggressive scaling, reliability can be a concern for a 3D NAND flash memory.</p><heading id="h-0004" level="1">BRIEF SUMMARY</heading><p id="p-0006" num="0005">Embodiments of methods and systems for data protection in a three-dimensional (3D) memory device are described in the present disclosure.</p><p id="p-0007" num="0006">One aspect of the present disclosure provides a method of data protection for a three-dimensional NAND memory. The method includes programming a memory cell of the 3D NAND memory according to programming data; and backing up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value, where the PLC tracks a repeated number of the programming of the memory cell. A previous PLC can be set as the threshold value, where the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</p><p id="p-0008" num="0007">In some embodiments, the method also includes, after programming the memory cell, verifying whether the memory cell is at a target logic state according to the programming data; and repeating the programming of the memory cell when the memory cell is not at the target logic state.</p><p id="p-0009" num="0008">In some embodiments, the method also includes collecting the PLC that tracks a repeated number of the programming.</p><p id="p-0010" num="0009">In some embodiments, the method also includes marking the memory cell risky in response to the PLC that is larger than the threshold value.</p><p id="p-0011" num="0010">In some embodiments, the method also includes, prior to programming the memory cell, backing up the portion of the programming data associated with the memory cell in response to a previous risky marking of the memory cell from a previous programming operation.</p><p id="p-0012" num="0011">In some embodiments, the backing up the portion of the programming data associated with the memory cell includes programming a redundant memory cell with the portion of the programming data associated with the memory cell.</p><p id="p-0013" num="0012">In some embodiments, the method also includes recovering the portion of the programming data associated with the memory cell from the redundant memory cell in response to an unrecoverable error correction code.</p><p id="p-0014" num="0013">In some embodiments, the method also includes setting a previous PLC as the threshold value, wherein the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</p><p id="p-0015" num="0014">In some embodiments, the programming the memory cell includes programming the memory cell simultaneously with other memory cells in a memory page, wherein all memory cells in the memory page share a word line.</p><p id="p-0016" num="0015">In some embodiments, the method also includes backing up portions of the programming data associated with the memory page in response to the PLC of the memory cell.</p><p id="p-0017" num="0016">In some embodiments, the backing up the portions of the programming data associated with the memory page comprises programming a redundant memory page with the portions of the programming data associated with the memory page.</p><p id="p-0018" num="0017">In some embodiments, the method also includes recovering the portions of the programming data associated with the memory page from the redundant memory page in response to an unrecoverable error correction code.</p><p id="p-0019" num="0018">Another aspect of the present disclosure provides a memory storage system. The memory storage system includes a three-dimensional (3D) NAND memory and a memory controller. The 3D NAND memory includes a plurality of memory strings, penetrating through a film stack of alternating conductive and dielectric layers disposed on a substrate, wherein each memory string comprises a plurality of memory cells. The memory controller is configured to send programming data to the 3D NAND memory to program a memory cell; and back up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value.</p><p id="p-0020" num="0019">In some embodiments, the PLC tracks a number of programming for the memory cell to reach a target logic state according to the programming data.</p><p id="p-0021" num="0020">In some embodiments, the memory controller is further configured to mark the memory cell risky in response to the PLC that is larger than the threshold value.</p><p id="p-0022" num="0021">In some embodiments, the memory controller is further configured to create a risky block table for the 3D NAND memory, wherein the risky block table comprises a first set of addresses identifying the memory cell marked risky.</p><p id="p-0023" num="0022">In some embodiments, the memory controller is further configured to create a risky to backup table for the 3D NAND memory. The risky to backup table includes the first set of addresses identifying the memory cell marked risky; and a second set of addresses identifying a redundant memory cell, wherein the redundant memory cell is programmed with the portion of the programming data associated with the memory cell marked risky.</p><p id="p-0024" num="0023">In some embodiments, the memory controller is further configured to recover the portion of programming data associated with the memory cell from the redundant memory cell when an unrecoverable error correction code is received.</p><p id="p-0025" num="0024">In some embodiments, the threshold value is a previous PLC used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</p><p id="p-0026" num="0025">In some embodiments, the memory controller is further configured to back up the portion of the programming data associated with the memory cell, in response to a previous risky marking of the memory cell from a previous programming operation, before the memory cell is programmed.</p><p id="p-0027" num="0026">Yet another aspect of the present disclosure provides a memory controller for a three-dimensional (3D) NAND memory. The memory control is configured to send programming data to the 3D NAND memory to program a memory cell; and back up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value, wherein the 3D NAND memory comprises a plurality of memory strings, penetrating through a film stack of alternating conductive and dielectric layers disposed on a substrate, wherein each memory string comprises a plurality of memory cells.</p><p id="p-0028" num="0027">Other aspects of the present disclosure can be understood by those skilled in the art in light of the description, the claims, and the drawings of the present disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0029" num="0028">The accompanying drawings, which are incorporated herein and form a part of the specification, illustrate embodiments of the present disclosure and, together with the description, further serve to explain the principles of the present disclosure and to enable a person skilled in the pertinent art to make and use the present disclosure.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b>A-<b>2</b>B</figref> illustrate a storage system with one or more memory chips, according to some embodiments of the present disclosure.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a schematic diagram of a memory die, according to some embodiments of the present disclosure.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a schematic of a three-dimensional (3D) memory die, according to some embodiments of the present disclosure.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a perspective view of a portion of a 3D memory structure, in accordance with some embodiments of the present disclosure.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a threshold voltage Vth distribution of a NAND flash memory, according to some embodiments of the present disclosure.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a method of programming a memory cell, according to some embodiments of the present disclosure.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a schematic diagram of a memory die with multiple memory planes, according to some embodiments of the present disclosure.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates fail bit counts (FBCs) in a 3D NAND memory, according to some embodiments of the present disclosure.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a method of programming a memory cell, according to some embodiments of the present disclosure.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIGS. <b>11</b>A-<b>11</b>C</figref> illustrate a configuration of data protection in a storage system, according to some embodiments of the present disclosure.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates an application of the data protection method described in <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b>A-<b>11</b>C</figref>, according to some embodiments of the present disclosure.</p><p id="p-0041" num="0040">The features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings, in which like reference characters identify corresponding elements throughout. In the drawings, like reference numbers generally indicate identical, functionally similar, and/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.</p><p id="p-0042" num="0041">Embodiments of the present disclosure will be described with reference to the accompanying drawings.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0043" num="0042">Although specific configurations and arrangements are discussed, it should be understood that this is done for illustrative purposes only. A person skilled in the pertinent art will recognize that other configurations and arrangements can be used without departing from the spirit and scope of the present disclosure. It will be apparent to a person skilled in the pertinent art that the present disclosure can also be employed in a variety of other applications.</p><p id="p-0044" num="0043">It is noted that references in the specification to &#x201c;one embodiment,&#x201d; &#x201c;an embodiment,&#x201d; &#x201c;an example embodiment,&#x201d; &#x201c;some embodiments,&#x201d; etc., indicate that the embodiment described can include a particular feature, structure, or characteristic, but every embodiment can not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases do not necessarily refer to the same embodiment. Further, when a particular feature, structure or characteristic is described in connection with an embodiment, it would be within the knowledge of a person skilled in the pertinent art to affect such feature, structure or characteristic in connection with other embodiments whether or not explicitly described.</p><p id="p-0045" num="0044">In general, terminology can be understood at least in part from usage in context. For example, the term &#x201c;one or more&#x201d; as used herein, depending at least in part upon context, can be used to describe any feature, structure, or characteristic in a singular sense or can be used to describe combinations of features, structures or characteristics in a plural sense. Similarly, terms, such as &#x201c;a,&#x201d; &#x201c;an,&#x201d; or &#x201c;the,&#x201d; again, can be understood to convey a singular usage or to convey a plural usage, depending at least in part upon context. In addition, the term &#x201c;based on&#x201d; can be understood as not necessarily intended to convey an exclusive set of factors and may, instead, allow for existence of additional factors not necessarily expressly described, again, depending at least in part on context.</p><p id="p-0046" num="0045">It should be readily understood that the meaning of &#x201c;on,&#x201d; &#x201c;above,&#x201d; and &#x201c;over&#x201d; in the present disclosure should be interpreted in the broadest manner such that &#x201c;on&#x201d; not only means &#x201c;directly on&#x201d; something, but also includes the meaning of &#x201c;on&#x201d; something with an intermediate feature or a layer there between. Moreover, &#x201c;above&#x201d; or &#x201c;over&#x201d; not only means &#x201c;above&#x201d; or &#x201c;over&#x201d; something, but can also include the meaning it is &#x201c;above&#x201d; or &#x201c;over&#x201d; something with no intermediate feature or layer there between (i.e., directly on something).</p><p id="p-0047" num="0046">Further, spatially relative terms, such as &#x201c;beneath,&#x201d; &#x201c;below,&#x201d; &#x201c;lower,&#x201d; &#x201c;above,&#x201d; &#x201c;upper,&#x201d; and the like, can be used herein for ease of description to describe one element or feature's relationship to another element(s) or feature(s) as illustrated in the figures. The spatially relative terms are intended to encompass different orientations of the device in use or process step in addition to the orientation depicted in the figures. The apparatus can be otherwise oriented (rotated 90 degrees or at other orientations) and the spatially relative descriptors used herein can likewise be interpreted accordingly.</p><p id="p-0048" num="0047">As used herein, the term &#x201c;substrate&#x201d; refers to a material onto which subsequent material layers are added. The substrate includes a &#x201c;top&#x201d; surface and a &#x201c;bottom&#x201d; surface. The top surface of the substrate is typically where a semiconductor device is formed, and therefore the semiconductor device is formed at a top side of the substrate unless stated otherwise. The bottom surface is opposite to the top surface and therefore a bottom side of the substrate is opposite to the top side of the substrate. The substrate itself can be patterned. Materials added on top of the substrate can be patterned or can remain unpatterned. Furthermore, the substrate can include a wide array of semiconductor materials, such as silicon, germanium, gallium arsenide, indium phosphide, etc. Alternatively, the substrate can be made from an electrically non-conductive material, such as a glass, a plastic, or a sapphire wafer.</p><p id="p-0049" num="0048">As used herein, the term &#x201c;layer&#x201d; refers to a material portion including a region with a thickness. A layer has a top side and a bottom side where the bottom side of the layer is relatively close to the substrate and the top side is relatively away from the substrate. A layer can extend over the entirety of an underlying or overlying structure, or can have an extent less than the extent of an underlying or overlying structure. Further, a layer can be a region of a homogeneous or inhomogeneous continuous structure that has a thickness less than the thickness of the continuous structure. For example, a layer can be located between any set of horizontal planes between, or at, a top surface and a bottom surface of the continuous structure. A layer can extend horizontally, vertically, and/or along a tapered surface. A substrate can be a layer, can include one or more layers therein, and/or can have one or more layer thereupon, there above, and/or there below. A layer can include multiple layers. For example, an interconnect layer can include one or more conductive and contact layers (in which contacts, interconnect lines, and/or vertical interconnect accesses (VIAs) are formed) and one or more dielectric layers.</p><p id="p-0050" num="0049">In the present disclosure, for ease of description, &#x201c;tier&#x201d; is used to refer to elements of substantially the same height along the vertical direction. For example, a word line and the underlying gate dielectric layer can be referred to as &#x201c;a tier,&#x201d; a word line and the underlying insulating layer can together be referred to as &#x201c;a tier,&#x201d; word lines of substantially the same height can be referred to as &#x201c;a tier of word lines&#x201d; or similar, and so on.</p><p id="p-0051" num="0050">As used herein, the term &#x201c;nominal/nominally&#x201d; refers to a desired, or target, value of a characteristic or parameter for a component or a process step, set during the design phase of a product or a process, together with a range of values above and/or below the desired value. The range of values can be due to slight variations in manufacturing processes or tolerances. As used herein, the term &#x201c;about&#x201d; indicates the value of a given quantity that can vary based on a particular technology node associated with the subject semiconductor device. Based on the particular technology node, the term &#x201c;about&#x201d; can indicate a value of a given quantity that varies within, for example, 10-30% of the value (e.g., &#xb1;10%, &#xb1;20%, or &#xb1;30% of the value).</p><p id="p-0052" num="0051">In the present disclosure, the term &#x201c;horizontal/horizontally/lateral/laterally&#x201d; means nominally parallel to a lateral surface of a substrate, and the term &#x201c;vertical&#x201d; or &#x201c;vertically&#x201d; means nominally perpendicular to the lateral surface of a substrate.</p><p id="p-0053" num="0052">As used herein, the term &#x201c;3D memory&#x201d; refers to a three-dimensional (3D) semiconductor device with vertically oriented strings of memory cell transistors (referred to herein as &#x201c;memory strings,&#x201d; such as NAND strings) on a laterally-oriented substrate so that the memory strings extend in the vertical direction with respect to the substrate.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates a block diagram of an exemplary system Si having a storage system <b>10</b>, according to some embodiments of the present disclosure. System Si can be a mobile phone, a desktop computer, a laptop computer, a tablet, a vehicle computer, a gaming console, a printer, a positioning device, a wearable electronic device, a smart sensor, a virtual reality (VR) device, an argument reality (AR) device, or any other suitable electronic devices having storage therein. The storage system <b>10</b> (also referred to as a NAND storage system) can include a memory controller <b>20</b> and one or more semiconductor memory chips <b>25</b>-<b>1</b>, <b>25</b>-<b>2</b>, <b>25</b>-<b>3</b>, . . . , <b>25</b>-<i>n</i>. Each semiconductor memory chip <b>25</b> (hereafter just &#x201c;memory chip&#x201d;) can be a NAND chip (i.e., &#x201c;flash,&#x201d; &#x201c;NAND flash&#x201d; or &#x201c;NAND&#x201d;). The storage system <b>10</b> can communicate with a host computer <b>15</b> through the memory controller <b>20</b>, where the memory controller <b>20</b> can be connected to the one or more memory chips <b>25</b>-<b>1</b>, <b>25</b>-<b>2</b>, <b>25</b>-<b>3</b>, . . . , <b>25</b>-<i>n</i>, via one or more memory channels <b>30</b>-<b>1</b>, <b>30</b>-<b>2</b>, <b>30</b>-<b>3</b>, . . . , <b>30</b>-<i>n</i>. In some embodiments, each memory chip <b>25</b> can be managed by the memory controller <b>20</b> via a memory channel <b>30</b>.</p><p id="p-0055" num="0054">In some embodiments, the host computer <b>15</b> can include a processor of an electronic device, such as a central processing unit (CPU), or a system-on-chip (SoC), such as an application processor (AP). The host computer <b>15</b> sends data to be stored at the NAND storage system or storage system <b>10</b> or retrieves data by reading the storage system <b>10</b>.</p><p id="p-0056" num="0055">The memory controller <b>20</b> can handle I/O requests received from the host computer <b>15</b>, ensure data integrity and efficient storage, and manage the memory chip <b>25</b>. To perform these tasks, the controller runs firmware <b>21</b>, which can be executed by one or more processors <b>22</b> (e.g., micro-controller units, CPU) inside the controller <b>20</b>. For example, the controller <b>20</b> runs firmware <b>21</b> to map logical addresses (i.e., address utilized by the host associated with host data) to physical addresses in the memory chip <b>25</b> (i.e., actual locations where the data is stored). The controller <b>20</b> also runs firmware <b>21</b> to manage defective memory blocks in the memory chip <b>25</b>, where the firmware <b>21</b> can remap the logical address to a different physical address, i.e., move the data to a different physical address. The controller <b>20</b> can also include one or more memories <b>23</b> (e.g., DRAM, SRAM, EPROM, etc.), which can be used to store various metadata used by the firmware <b>21</b>. In some embodiments, the memory controller <b>20</b> can also perform error recovery through an error correction code (ECC) engine <b>29</b>. ECC is used to detect and correct the raw bit errors that occur within each memory chip <b>25</b>.</p><p id="p-0057" num="0056">The memory channels <b>30</b> can provide data and control communication between the memory controller <b>20</b> and each memory chip <b>25</b> via a data bus. The memory controller <b>20</b> can select one of the memory chip <b>25</b> according to a chip enable signal.</p><p id="p-0058" num="0057">In some embodiments, each memory chip <b>25</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref> can include one or more memory dies <b>100</b>, where each memory die can be a 3D NAND memory.</p><p id="p-0059" num="0058">Memory controller <b>20</b> and one or more memory chip <b>25</b> can be integrated into various types of storage devices, for example, be included in the same package, such as a universal Flash storage (UFS) package or an eMMC package. That is, storage system <b>10</b> can be implemented and packaged into different types of end electronic products. In one example as shown in <figref idref="DRAWINGS">FIG. <b>2</b>A</figref>, memory controller <b>20</b> and a single memory chip <b>25</b> can be integrated into a memory card <b>26</b>. Memory card <b>26</b> can include a PC card (PCMCIA, personal computer memory card international association), a CF card, a smart media (SM) card, a memory stick, a multimedia card (MMC, RS-MMC, MMCmicro), an SD card (SD, miniSD, microSD, SDHC), a UFS, etc. Memory card <b>26</b> can further include a memory card connector <b>24</b> coupling memory card <b>26</b> with a host (e.g., the host computer <b>15</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). In another example as shown in <figref idref="DRAWINGS">FIG. <b>2</b>B</figref>, memory controller <b>20</b> and multiple memory chip <b>25</b> can be integrated into an solid state drive (SSD) <b>27</b>. SSD <b>27</b> can further include an SSD connector <b>28</b> coupling SSD <b>27</b> with a host (e.g., the host computer <b>15</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates a top-down view of an exemplary memory die <b>100</b>, according to some embodiments of the present disclosure. The memory die <b>100</b> can include one or more memory planes <b>101</b>, each of which can include a plurality of memory blocks <b>103</b>. Identical and concurrent operations can take place at each memory plane <b>101</b>. The memory block <b>103</b>, which can be megabytes (MB) in size, is the smallest size to carry out erase operations. Shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the exemplary memory die <b>100</b> includes four memory planes <b>101</b> and each memory plane <b>101</b> includes six memory blocks <b>103</b>. Each memory block <b>103</b> can include a plurality of memory cells, where each memory cell can be addressed through interconnections such as bit lines and word lines. The bit lines and word lines can be laid out perpendicularly (e.g., in rows and columns, respectively), forming an array of metal lines. The direction of bit lines and word lines are labeled as &#x201c;BL&#x201d; and &#x201c;WL&#x201d; in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In this disclosure, memory block <b>103</b> is also referred to as a &#x201c;memory array&#x201d; or &#x201c;array.&#x201d; The memory array is the core area in a memory device, performing storage functions.</p><p id="p-0061" num="0060">The memory die <b>100</b> can also include a periphery region <b>105</b>, an area surrounding memory planes <b>101</b>. The periphery region <b>105</b> contains many digital, analog, and/or mixed-signal circuits to support functions of the memory array, for example, page buffers, row and column decoders and sense amplifiers. Peripheral circuits use active and/or passive semiconductor devices, such as transistors, diodes, capacitors, resistors, etc., as would be apparent to a person of ordinary skill in the art.</p><p id="p-0062" num="0061">It is noted that, the arrangement of the memory planes <b>101</b> in the memory die <b>100</b> and the arrangement of the memory blocks <b>103</b> in each memory plane <b>101</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> are only used as an example, which does not limit the scope of the present disclosure.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates a schematic diagram of the memory die <b>100</b>, according to some embodiments of the present disclosure. The memory die <b>100</b> includes one or more memory blocks <b>103</b> (e.g., <b>103</b>-<b>1</b>, <b>103</b>-<b>2</b>, <b>103</b>-<b>3</b>). Each memory block <b>103</b> includes a plurality of memory strings <b>212</b>. Each memory string <b>212</b> includes a plurality of memory cells <b>340</b>. The memory cells <b>340</b> sharing the same word line forms a memory page <b>432</b>. The memory string <b>212</b> can also include at least one field effect transistor (e.g., MOSFET) at each end, which is controlled by a lower select gate (LSG) <b>332</b> and a top select gate (TSG) <b>334</b>, respectively. The drain terminal of the top select transistor <b>334</b>-T can be connected to the bit line <b>341</b>, and the source terminal of the lower select transistor <b>332</b>-T can be connected to an array common source (ACS) <b>430</b>. The ACS <b>430</b> can be shared by the memory strings <b>212</b> in an entire memory block, and is also referred to as the common source line.</p><p id="p-0064" num="0063">The memory die <b>100</b> can also include a periphery circuit that includes many digital, analog, and/or mixed-signal circuits to support functions of the memory block <b>103</b>, for example, a page buffer/sense amplifier <b>50</b>, a row decoder/word line driver <b>40</b>, a column decoder/bit line driver <b>52</b>, a control circuit <b>70</b>, a voltage generator <b>65</b> and an input/output buffer <b>55</b>. These circuits can include active and/or passive semiconductor devices, such as transistors, diodes, capacitors, resistors, etc., as would be apparent to a person of ordinary skill in the art.</p><p id="p-0065" num="0064">The memory blocks <b>103</b> can be coupled with the row decoder/word line driver <b>40</b> via word lines (&#x201c;WLs&#x201d;) <b>333</b>, lower select gates (&#x201c;LSGs&#x201d;) <b>332</b> and top select gates (&#x201c;TSG&#x201d;) <b>334</b>. The memory blocks <b>103</b> can be coupled with the page buffer/sense amplifier <b>50</b> via bit lines (&#x201c;BLs&#x201d;) <b>341</b>. The row decoder/word line driver <b>40</b> can select one of the memory blocks <b>103</b> on the memory die <b>100</b> in response to a X-path control signal provided by the control circuit <b>70</b>. The row decoder/word line driver <b>40</b> can transfer voltages provided from the voltage generator <b>65</b> to the word lines according to the X-path control signal. During the read and program operation, the row decoder/word line driver <b>40</b> can transfer a read voltage Vread and a program voltage V<sub>pgm </sub>to a selected word line and a pass voltage V<sub>pass </sub>to an unselected word line according to the X-path control signal received from the control circuit <b>70</b>.</p><p id="p-0066" num="0065">The column decoder/bit line driver <b>52</b> can transfer an inhibit voltage Vi bit to an unselected bit line and connect a selected bit line to ground according to a Y-path control signal received from the control circuit <b>70</b>. In the other words, the column decoder/bit line driver <b>52</b> can be configured to select or unselect one or more memory strings <b>212</b> according to the Y-path control signal from the control circuit <b>70</b>. The page buffer/sense amplifier <b>50</b> can be configured to read and program (write) data from and to the memory block <b>103</b> according to the control signal Y-path control from the control circuit <b>70</b>. For example, the page buffer/sense amplifier <b>50</b> can store one page of data to be programmed into one memory page <b>432</b>. In another example, page buffer/sense amplifier <b>50</b> can perform verify operations to ensure that the data has been properly programmed into each memory cell <b>340</b>.</p><p id="p-0067" num="0066">In yet another example, during a read operation, the page buffer/sense amplifier <b>50</b> can sense current flowing through the bit line <b>341</b> that reflects the logic state (i.e., data) of the memory cell <b>340</b> and amplify small signal to a measurable magnification.</p><p id="p-0068" num="0067">The input/output buffer <b>55</b> can transfer the I/O data from/to the page buffer/sense amplifier <b>50</b> as well as addresses ADDR or commands CMD to the control circuit <b>70</b>. In some embodiments, the input/output buffer <b>55</b> can function as an interface between the memory controller <b>20</b> (in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and the memory die <b>100</b> on the memory chip <b>25</b>.</p><p id="p-0069" num="0068">The control circuit <b>70</b> can control the page buffer/sense amplifier <b>50</b> and the row decoder/word line driver <b>40</b> in response to the commands CMD transferred by the input/output buffer <b>55</b>. During the program operation, the control circuit <b>70</b> can control the row decoder/word line driver <b>40</b> and the page buffer/sense amplifier <b>50</b> to program a selected memory cell. During the read operation, the control circuit <b>70</b> can control the row decoder/word line driver <b>40</b> and the page buffer/sense amplifier <b>50</b> to read a selected memory cell. The X-path control signal and the Y-path control signal include a row address X-ADDR and a column address Y-ADDR that can be used to locate the selected memory cell in the memory block <b>103</b>. The row address X-ADDR can include a page index PD, a block index BD and a plane index PL to identify the memory page <b>432</b>, memory block <b>103</b>, and memory plane <b>101</b> (in <figref idref="DRAWINGS">FIG. <b>3</b></figref>), respectively. The column address Y-ADDR can identify a byte or a word in the data of the memory page <b>432</b>.</p><p id="p-0070" num="0069">The voltage generator <b>65</b> can generate voltages to be supplied to word lines and bit lines under the control of the control circuit <b>70</b>. The voltages generated by the voltage generator <b>65</b> include the read voltage Vread, the program voltage V<sub>pgm </sub>, the pass voltage V<sub>pass</sub>, the inhibit voltage V<sub>inhibit</sub>, etc.</p><p id="p-0071" num="0070">It is noted that the arrangement of the electronic components in the storage system <b>10</b> and the memory die <b>100</b> in <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>A-<b>2</b>B, and <b>3</b>-<b>4</b></figref> are shown as examples. The storage system <b>10</b> and the memory die <b>100</b> can have other layout and can include additional components. Components (e.g., control circuit <b>70</b>, I/O buffer <b>55</b>) on the memory die <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> can also be moved off the memory die <b>100</b>, as a stand-alone electric component in the storage system <b>10</b>. Components (e.g., control circuit <b>70</b>, I/O buffer <b>55</b>) on the memory die <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> can also be moved to other components in the storage system <b>10</b>, for example, a portion of the control circuit <b>70</b> can be combined with the memory controller <b>20</b> and vice versa.</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a perspective view of a 3D memory structure <b>500</b>, according to some embodiments of the present disclosure. In some embodiments, the memory die <b>100</b> can be a 3D NAND memory, and the 3D memory structure <b>500</b> can be a portion of the memory die <b>100</b>, for example, in a region <b>108</b> in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The 3D memory structure <b>500</b> can include a staircase region <b>210</b> and a channel structure region <b>211</b>. The channel structure region <b>211</b> can include a plurality of memory strings <b>212</b>, each including a plurality of stacked memory cells <b>340</b>. The staircase region <b>210</b> can include a staircase structure.</p><p id="p-0073" num="0072">The 3D memory structure <b>500</b> includes a substrate <b>330</b>, an insulating film <b>331</b> over the substrate <b>330</b>, a tier of lower select gates (LSGs) <b>332</b> over the insulating film <b>331</b>, and a plurality of tiers of control gates <b>333</b>, also referred to as &#x201c;word lines (WLs),&#x201d; stacking on top of the LSGs <b>332</b> to form a film stack <b>335</b> of alternating conductive and dielectric layers. The dielectric layers adjacent to the tiers of control gates are not shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> for clarity.</p><p id="p-0074" num="0073">The control gates of each tier are separated by slit structures <b>216</b>-<b>1</b> and <b>216</b>-<b>2</b> through the film stack <b>335</b>. The 3D memory structure <b>500</b> can also include a tier of top select gates (TSGs) <b>334</b> over the stack of control gates <b>333</b>. The stack of TSG <b>334</b>, control gates <b>333</b> and LSG <b>332</b> is also referred to as &#x201c;gate electrodes.&#x201d; The 3D memory structure <b>500</b> further includes doped source line regions <b>344</b> in portions of substrate <b>330</b> between adjacent LSGs <b>332</b>. Each memory strings <b>212</b> of the 3D memory structure <b>500</b> includes a channel hole <b>336</b> extending through the insulating film <b>331</b> and the film stack <b>335</b> of alternating conductive and dielectric layers. The memory string <b>212</b> can also include a memory film <b>337</b> on a sidewall of the channel hole <b>336</b>, a channel layer <b>338</b> over the memory film <b>337</b>, and a core filling film <b>339</b> surrounded by the channel layer <b>338</b>. The memory cell <b>340</b> (e.g., <b>340</b>-<b>1</b>, <b>340</b>-<b>2</b>, <b>340</b>-<b>3</b>) can be formed at the intersection of the control gate <b>333</b> (e.g., <b>333</b>-<b>1</b>, <b>333</b>-<b>2</b>, <b>333</b>-<b>3</b>) and the memory string <b>212</b>. A portion of the channel layer <b>338</b> responds to the respective control gate is also referred to as the channel <b>338</b> of the memory cell. The 3D memory structure <b>500</b> further includes a plurality of bit lines (BLs) <b>341</b> connected with the memory strings <b>212</b> over the TSGs <b>334</b>. The 3D memory structure <b>500</b> can also include a plurality of metal interconnect lines <b>343</b> connected with the gate electrodes through a plurality of contact structures <b>214</b>. The edge of the film stack <b>335</b> is configured in a shape of staircase to allow an electrical connection to each tier of the gate electrodes.</p><p id="p-0075" num="0074">In <figref idref="DRAWINGS">FIG. <b>5</b></figref>, for illustrative purposes, three tiers of control gates <b>333</b>-<b>1</b>, <b>333</b>-<b>2</b>, and <b>333</b>-<b>3</b> are shown together with one tier of TSG <b>334</b> and one tier of LSG <b>332</b>. In this example, each memory string <b>212</b> can include three memory cells <b>340</b>-<b>1</b>, <b>340</b>-<b>2</b> and <b>340</b>-<b>3</b>, corresponding to the control gates <b>333</b>-<b>1</b>, <b>333</b>-<b>2</b> and <b>333</b>-<b>3</b>, respectively. In some embodiments, the number of control gates and the number of memory cells can be more than three to increase storage capacity. The 3D memory structure <b>500</b> can also include other structures, for example, TSG cut, common source contact (i.e., array common source) and dummy memory string. These structures are not shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> for simplicity. It is noted that the 3D memory structure <b>500</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> is only used as an example, which does not limit the scope of the present disclosure, and any other suitable 3D memory structure can also be adapted.</p><p id="p-0076" num="0075">Referring back to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, in some embodiments, the memory block <b>103</b> can be formed based on floating gate technology. In some embodiments, the memory block <b>103</b> can be formed based on charge trapping technology. The NAND flash memory based on charge trapping can provide high storage density and high intrinsic reliability. Storage data in the form of logic states (&#x201c;states,&#x201d; e.g., threshold voltages Vth of the memory cell <b>340</b>) depends on the number of charge carriers trapped in the memory film <b>337</b> of the memory cell <b>340</b>.</p><p id="p-0077" num="0076">In a NAND flash memory, a read operation and a write operation (also referred to as program operation) can be performed for the memory page <b>432</b>, and an erase operation can be performed for the memory block <b>103</b>.</p><p id="p-0078" num="0077">In a NAND memory, the memory cell <b>340</b> can be in an erased state ER or a programmed state P <b>1</b>. Initially, the memory cells <b>340</b> in the memory block <b>103</b> can be reset to the erased state ER as logic &#x201c;1&#x201d; by implementing a negative voltage difference between the control gates <b>333</b> and the channel <b>338</b> such that trapped charge carriers in the memory film of the memory cells <b>340</b> can be removed. For example, the negative voltage difference can be induced by setting the control gates <b>333</b> of the memory cells <b>340</b> to ground, and applying a high positive voltage (an erase voltage V<sub>erase</sub>) to the ACS <b>430</b>. At the erased state ER (&#x201c;state ER&#x201d;), the threshold voltage Vth of the memory cells <b>340</b> can be reset to the lowest value.</p><p id="p-0079" num="0078">During programming (i.e., writing), a positive voltage difference between the control gates <b>333</b> and the channel <b>338</b> can be established by, for example, applying a program voltage V<sub>pgm </sub>(e.g., a positive voltage pulse between 10 V and 20 V) on the control gate <b>333</b>, and grounding the corresponding bit line <b>341</b>. As a result, charge carriers (e.g., electrons) can be injected into the memory film of the memory cell <b>340</b>, thereby increasing the threshold voltage Vth of the memory cell <b>340</b>. Accordingly, the memory cell <b>340</b> can be programmed to the programmed state P<b>1</b> (&#x201c;state P<b>1</b>&#x201d; or logic &#x201c;0&#x201d;).</p><p id="p-0080" num="0079">The state of the memory cell (e.g., state ER or state P<b>1</b>) can be determined by measuring or sensing the threshold voltage Vth of the memory cell. During a read operation, a read voltage Vread can be applied on the control gate <b>333</b> of the memory cell and current flowing through the memory cell can be measured at the bit line <b>341</b>. A pass voltage V<sub>pass </sub>can be applied on unselected word lines to switch on unselected memory cells.</p><p id="p-0081" num="0080">A NAND flash memory can be configured to operate in a single-level cell (SLC) mode. To increase storage capacity, a NAND flash memory can also be configured to operate in a multi-level cell (MLC) mode, a triple-level cell (TLC) mode, a quad-level cell (QLC) mode, or a combination of any of these modes. In the SLC mode, a memory cell stores 1 bit and has two logic states (&#x201c;states&#x201d;), logic {<b>1</b> and <b>0</b>}, i.e., states ER and P<b>1</b>. In the MLC mode, a memory cell stores 2 bits, and has four logic states, logic {<b>11</b>, <b>10</b>, <b>01</b>, and <b>00</b>}, i.e., states ER, P<b>1</b>, P<b>2</b>, and P<b>3</b>. In the TLC mode, a memory cell stores 3 bits, and has eight logic states, logic {<b>111</b>, <b>110</b>, <b>101</b>, <b>100</b>, <b>011</b>, <b>010</b>, <b>001</b>, <b>000</b>}, i.e., states ER, and states P<b>1</b>&#x2014;P<b>7</b>. In the QLC mode, a memory cell stores 4 bits and has 16 logic states. The memory controller <b>20</b> of the storage system <b>10</b> (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can convert data received from the host computer <b>15</b> into corresponding logic states of the memory cells on the memory dies <b>100</b> and vice versa.</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a threshold voltage Vth distribution of a NAND flash memory programmed in the triple-level cell (TLC) mode, according to some embodiments of the present disclosure. Due to various variations, each state of the memory cells includes a range of threshold voltages V<sub>th</sub>, where the threshold voltage V<sub>th </sub>distribution of each state can be represented by a probability density. In some embodiments, the eight TLC states can be programmed by using an incremental step pulse programming (ISPP) scheme where the programming voltage V<sub>pgm </sub>can be incrementally increased by adding a step pulse V<sub>step</sub>. Accordingly, the eight TLC states can be programmed from the state P<b>1</b> with a lower threshold voltage to the state P<b>7</b> with a highest threshold voltage.</p><p id="p-0083" num="0082">After programming, the eight TLC states ER and P<b>1</b>-P<b>7</b> can be verified by using one or more read reference voltages V<sub>R1</sub>-V<sub>R7 </sub>during a verification process. By applying one or more of the read reference voltages V<sub>R1</sub>-V<sub>R7 </sub>to the control gate of a target memory cell, the range of the memory cell's threshold voltage Vth can be determined. For example, to verify if a memory cell is at state ER, the read reference voltage V<sub>R1 </sub>can be used. If the target memory cell is at state ER, the threshold voltage Vth of the target memory cell is lower than the read reference voltage V<sub>R1</sub>. The target memory cell can be switch on and form a conductive path in the channel. If the target memory cell is at any one of the states P<b>1</b>-P<b>7</b>, the threshold voltage Vth of the target memory cell is higher than the read reference voltage V<sub>R1</sub>. The target memory cell is thereby switched off. By measuring or sensing the current through the target memory cell at the corresponding bit line, via the page buffer/sense amplifier <b>50</b>, the threshold voltage V<sub>th </sub>or the state of the target memory cell can be verified.</p><p id="p-0084" num="0083">As described above, to determine the two states ER and P<b>1</b> stored in the SLC mode, only the read reference voltage V<sub>R1 </sub>is needed. To determine the four states ER and P<b>1</b>-P<b>3</b> in the MLC mode, the read reference voltages V<sub>R1</sub>, V<sub>R2 </sub>and V<sub>R3 </sub>can be used. To determine the eight states ER and P<b>1</b>-P<b>7</b> for the TLC mode, the read reference voltages V<sub>R1</sub>-V<sub>R7 </sub>can be used. For example, in the TLC mode, the threshold voltage of state ER is below V<sub>R1</sub>, and the threshold voltage of state P<b>7</b> is above V<sub>R7</sub>, where the threshold voltages of state P<b>1</b> is between V<sub>R1 </sub>and V<sub>R2</sub>. States P<b>2</b>-P<b>6</b> can be determined similarly.</p><p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates a process flow <b>700</b> for programming a memory cell to a target logic state (e.g., the state P<b>1</b>), according to some embodiments of the present disclosure. It should be understood that the process flow <b>700</b> is not exhaustive and that other operation steps can be performed as well before, after, or between any of the illustrated operation steps. In some embodiments, some operation steps of the process flow <b>700</b> can be omitted or other operation steps can be included, which are not described here for simplicity. In some embodiments, operation steps of the process flow <b>700</b> can be performed in a different order and/or vary.</p><p id="p-0086" num="0085">At operation step S<b>705</b>, a program loop count (PLC) can be reset, for example, PLC=0. The operation step S<b>705</b> can be started when the memory controller <b>20</b> (in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) sends a command to the memory die <b>100</b> for programming the memory cell on the memory die <b>100</b>.</p><p id="p-0087" num="0086">At operation step S<b>710</b>, a memory cell is programmed by applying a programming voltage V<sub>pgm </sub>to a word line of the memory cell. And the PLC can be increased by 1 at operation step S<b>715</b>, i.e., PLC=PLC+1. The programming voltage V<sub>pgm </sub>can be selected according to the target logic state of the memory cell, where the target logic state depends on programming data sent by the memory controller <b>20</b>.</p><p id="p-0088" num="0087">At operation step S<b>720</b>, a threshold voltage V<sub>th </sub>of the memory cell can be compared with a first read reference voltage by applying the first read reference voltage on the word line of the memory cell and measuring the current flowing through the memory cell at the corresponding bit line. For example, if the memory cell is to be programmed to a target logic state of P<b>1</b>, the first read reference voltage V<sub>R1 </sub>can be used (see <figref idref="DRAWINGS">FIG. <b>6</b></figref>) because for the state P<b>1</b>, the threshold voltage of the memory cell needs to be between the read reference voltages V<sub>R1 </sub>and V<sub>R2</sub>.</p><p id="p-0089" num="0088">At operation step S<b>725</b>, the threshold voltage V<sub>th </sub>of the memory cell is determined whether it is higher or lower than the first read reference voltage V<sub>R1</sub>. As discussed previously, if the threshold voltage V<sub>th </sub>of the memory cell is lower than the first read reference voltage V<sub>R1</sub>, the memory cell can be switch on, forming a conductive path in the channel. The current measured at the corresponding bit line by the page buffer/sense amplifier <b>50</b> (in <figref idref="DRAWINGS">FIG. <b>4</b></figref>) is relatively higher. If the threshold voltage V<sub>th </sub>of the memory cell is higher than the first read reference voltage V<sub>R1</sub>, the memory cell is switched off and the current measured at the corresponding bit line by the page buffer/sense amplifier <b>50</b> is relatively lower.</p><p id="p-0090" num="0089">If the threshold voltage V<sub>th </sub>of the memory cell is determined to be lower than the first read reference voltage V<sub>R1</sub>, the process flow <b>700</b> goes to operation step S<b>730</b>, where the PLC is checked if it is less than a maximum value PLC<sub>max</sub>.</p><p id="p-0091" num="0090">In some embodiments, the maximum value PLC max can be a predetermined value, e.g., PLC<sub>max</sub>=25. In some embodiments, the maximum value PLC<sub>max </sub>can be determined from PLCs of a set of memory cells selected across different memory dies during a pre-screening programming test.</p><p id="p-0092" num="0091">If the PLC is less than PLC<sub>max</sub>, at operation step S<b>735</b>, the programming voltage V<sub>pgm </sub>can be increased by an amount &#x394;V, such that the programming voltage V<sub>pgm</sub>=V<sub>pgm</sub>+&#x394;V. And the memory cell can be re-programmed again with the increased programming voltage V<sub>pgm </sub>at operation step S<b>710</b>.</p><p id="p-0093" num="0092">The operation steps S<b>710</b>-S<b>735</b> can be repeated until the desired target threshold voltage V<sub>th </sub>is reached for the memory cell. However, if at operation step S<b>730</b>, the PLC max has been reached but the memory cell is still not programmed to the target logic state, the memory cell can be identified having programming failure at step S<b>740</b>.</p><p id="p-0094" num="0093">If at operation step S<b>725</b>, the threshold voltage V<sub>th </sub>of the memory cell is determined to be higher than the first read reference voltage V<sub>R1</sub>, it can be compared with a second read reference voltage at operation step S<b>745</b>. If the memory cell is to be programmed to the target logic state of P<b>1</b>, the second read reference voltage V<sub>R2 </sub>can be used (see <figref idref="DRAWINGS">FIG. <b>6</b></figref>). If the threshold voltage V<sub>th </sub>of the memory cell is determined to be lower than the second read reference voltage V<sub>R2 </sub>at operation step S<b>750</b>, the memory cell can be identified as programming pass (i.e., programmed to a target logic state) at operation step S<b>755</b>. In the SLC mode with only state ER and P<b>1</b>, the second reference voltage can be omitted.</p><p id="p-0095" num="0094">However, if the threshold voltage V<sub>th </sub>of the memory cell is determined to be higher than the second read reference voltage V<sub>R2 </sub>at operation step S<b>750</b>, the memory cell can be identified having programming failure at step S<b>740</b> because during programming the threshold voltage of a memory cell can be increased by applying the programming voltage V<sub>pgm </sub>on its control gate (i.e. corresponding word line), but cannot be decreased. In a 3D NAND memory, a memory cell can be re-programmed to a logic state with a lower threshold voltage after the memory cell is erased and reset to the state ER. The erase operation reset all memory cells in the memory block to the state ER because the memory cells in the same memory block share the same array common source <b>430</b>.</p><p id="p-0096" num="0095">Referring back to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, while a memory block (e.g., the memory block <b>103</b>) is the smallest erasable unit in a 3D NAND memory, a memory page (e.g., the memory page <b>432</b>) is the smallest addressable unit for read and program operations. During the read and program operations, data (i.e., logic states) in a memory page of a selected memory block can be read or programmed according to the page index PD and the block index BD included in the address ADDR received by the control circuit <b>70</b>. The memory cells which have reached a target logic state (i.e., a target threshold voltage) can be inhibited from further programming by applying the inhibit voltage V<sub>inhibit </sub>on the corresponding bit lines <b>341</b>.</p><p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates a schematic diagram of a memory die with multiple memory planes, according to some embodiments of the present disclosure. As an example, the memory die can be the memory die <b>100</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> having four memory planes <b>101</b>-<b>1</b>, <b>101</b>-<b>2</b>, <b>101</b>-<b>3</b> and <b>101</b>-<b>4</b>, for example. In some embodiments, different memory planes (e.g., memory planes <b>101</b>-<b>1</b>, <b>101</b>-<b>2</b>, <b>101</b>-<b>3</b> and <b>101</b>-<b>4</b>) can execute the read operation or the program operation in parallel. Because the memory planes in the same memory die share a single set of data and control buses, a read or program operation can be performed in different memory planes in the same memory die sequentially. For example, memory blocks in each memory plane can be identified with the block index BD that is unique within the memory plane, but can be shared across multiple memory planes. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the memory blocks <b>103</b>-<b>1</b>, <b>103</b>-<b>2</b>, <b>103</b>-<b>3</b> and <b>103</b>-<b>4</b> in respective memory planes <b>101</b>-<b>1</b>, <b>101</b>-<b>2</b>, <b>101</b>-<b>3</b> and <b>101</b>-<b>4</b> share the same block index BD-<b>1</b>. Within the memory block, each memory page can be identified with the page index PD that is unique within the memory block. In the example in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the memory pages <b>432</b> in the memory block <b>103</b>-<b>1</b> can be identified with page indexes PD-<b>1</b>, PD-<b>2</b>, PD-n. In some embodiments, the firmware <b>21</b> in the memory controller <b>20</b> (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can group the memory blocks (e.g., <b>103</b>-<b>1</b>, <b>103</b>-<b>2</b>, <b>103</b>-<b>3</b> and <b>103</b>-<b>4</b>) with the same block index (e.g., BD-<b>1</b>) across multiple memory planes (e.g., 101-1, 101-2, 101-3, 101-4) together into a super block <b>650</b>, within which the memory pages with the same page index (e.g., PD-n) can be grouped as a super page <b>652</b>. To improve throughput and efficiency, data of the entire super page <b>652</b> can be read or programmed simultaneously (i.e., in parallel) in a 3D NAND memory.</p><p id="p-0098" num="0097">In a 3D NAND memory with aggressively increased density, reliability can be impacted by many errors, for example, program/erase (P/E) cycling errors, cell-to-cell program interference errors, program errors, read disturb errors, retention errors and process variation errors. In general, the memory controller <b>20</b> (see <figref idref="DRAWINGS">FIG. <b>1</b></figref>) can implement ECC algorithms or redundant array of independent disk (RAID) techniques to detect and correct data having raw bit errors.</p><p id="p-0099" num="0098">For example, in a UFS system, error caused by read fail can be recovered by the following methods: ready retry, soft decode, 2WL-RAID, lock buffer and SLC backup. In one example, the threshold voltage of a memory cell can drift due to, for example, rising temperature. If the drift is predictable, a read-retry table can be generated and stored in the storage system. When temperature sensor detects the rising temperature, a revised read voltage can be applied to the word line of the memory cell, where the revised read voltage has a predetermined offset from a nominal read voltage. In another example, soft decode can be used to adjust the read reference voltage in a certain range (e.g., &#xb1;1V) so as to find a minimum fail bit count (FBC). In some embodiments, the 2WL-RAID method can implement an algorithm to correct read fails using data from memory cells addressed by two word lines. The <b>2</b>WL-RAID method can be applied when read fails do not occur to the memory cells with the same string index (also referred to as the column address Y-ADDR) across multiple memory planes. The other two data recovery techniques (i.e., lock buffer and SLC backup) consumes substantial resources. In some embodiments, after the memory controller sends the programming data to the memory die, the programming data temporally stored in a memory buffer in the memory controller can be retained for specific super pages or word lines such that when read error or program error occurs, the programming data can be recovered from the memory buffer in the memory controller. Similarly, SLC backup can also be implemented for specific super pages or word lines such that redundant memory cells in the SLC mode can be used to store backup data.</p><p id="p-0100" num="0099">However, error can also occur at weak memory cells that are not identified as defective during a single program operation and its subsequent verification process (e.g., following the method <b>700</b>). As discussed previously with respect to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, a memory cell can be considered successfully programmed if a target logic state is detected during the verification process (e.g., operation steps S<b>715</b>-S<b>755</b>). And a memory block or memory page can be considered having a passing program status if all the memory cells are verified to be programmed to the target logic states. However, it is possible that a memory cell can have the passing program status after re-programmed (i.e., attempted) many times with the PLC larger than expected, but as long as the PLC is less than the PLC<sub>max </sub>(see <figref idref="DRAWINGS">FIG. <b>7</b></figref>). Similarly, a memory block or memory page can have the passing program status after some of the memory cells are re-programmed (i.e., attempted) many times with the PLC less than the PLC<sub>max </sub>but much larger than expected. In this scenario, the memory block, memory page, or the memory cell can be vulnerable, where defects in those memory cells can deteriorate after many cycles of programming and erasing, and can cause the 3D NAND memory breakdown, i.e., lose the data, at an unexpected time.</p><p id="p-0101" num="0100">Although at the system level, various techniques (e.g., error correction code (ECC)) can be implemented to correct raw bit errors, many errors are uncorrectable using conventional techniques. Therefore, a need exists for a method and a system to provide data protection before an uncorrectable error correction code (UECC) appears such that chances of data loss can be minimized.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates fail bit count (FBC) in a 3D NAND memory, according to some embodiments of the present disclosure. The FBC of a defective memory plane and a neighboring memory plane increase after many cycles of programming and erasing, i.e., when a program/erase (P/E) cycle count increases. The increased FBC can result from P/E cycling errors when either an erase operation fails to reset a memory cell to the ER state; or a program operation fails to set the memory cell to the desired target state. P/E cycling errors occur because electrons become trapped in the memory film after stress from repeated P/E cycles. Errors due to such electron trapping accumulate over the lifetime of the 3D NAND memory until the 3D NAND memory worn out. Thus, when the memory block is erased and programmed for many cycles, an increased number of raw bit errors need to be corrected. As discussed previously, the memory controller <b>20</b> can correct many raw bit errors by implementing ECC algorithms or RAID techniques. However, some raw bit errors cannot be recovered by ECC or RAID, and the memory controller <b>20</b> will indicate an unrecoverable ECC (UECC) for such failures.</p><p id="p-0103" num="0102">Additionally, after many cycles of programming and erasing, the PLC of the defective memory plane steadily increases. Before the PLC reaches the PLC max, the FBC of the defective memory plane remains low, but neighboring plane disturb could have occurred such that the FBC of the neighboring memory plane rises even when PLC is much lower than PLC<sub>max</sub>. Therefore, data protection should have taken place in a weak memory plane or a weak memory cell when PLC starts to rise to avoid data loss. As such, a storage system can predetermine a threshold value PLC<sub>th </sub>according to the FBC of a neighboring memory plane before the FBC of the neighboring memory plane rises with the P/E cycles. The threshold value PLC<sub>th </sub>can be much less than the PLC<sub>max</sub>. In some embodiments, the PLC<sub>th </sub>can be pre-set at manufacturing factory during product screening test, for example, using the function of FBC of the neighboring memory plane in terms of P/E cycle count as shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. In some embodiments, the PLC<sub>th </sub>can be set to the PLC after a first programming operation. For example, after a memory cell is successfully programmed for a first time, the PLC used by the memory cell can be selected as the PLC<sub>th </sub>for the memory cell, where the memory cell can be considered risky or weak after many cycles of programming and erasing such that the PLC needed for successful programming increases (i.e., larger than the PLC<sub>th</sub>). In another example, after all the memory cells in a memory page are successfully programmed for a first time, a largest PLC used for programming the memory page can be selected as the PLC<sub>th </sub>for the memory cells in the memory page. It is noted that PLC<sub>th </sub>can be determined by other method and technique, and is not limited to the example shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>. The PLC<sub>th </sub>can be determined by any suitable method where a weak memory cell can be identified before actual data loss takes place.</p><p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates a process flow <b>1000</b> for programming a memory cell using a data protection technique, according to some embodiments of the present disclosure. It should be understood that the process flow <b>1000</b> is not exhaustive and that other operation steps can be performed as well before, after, or between any of the illustrated operation steps. In some embodiments, some operation steps of the process flow <b>1000</b> can be omitted or other operation steps can be included, which are not described here for simplicity. In some embodiments, operation steps of the process flow <b>1000</b> can be performed in a different order and/or vary.</p><p id="p-0105" num="0104">At operation step S<b>1005</b>, the control circuit <b>70</b> (in <figref idref="DRAWINGS">FIG. <b>4</b></figref>) of the memory die <b>100</b> receives a command from the memory controller <b>20</b> (in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) of the storage system <b>10</b> for programming a memory cell on the memory die <b>100</b>. In addition to the command, the memory controller <b>20</b> also sends programming data to the memory die <b>100</b>. Data to be programmed are received at the control circuit <b>70</b> from the memory controller <b>20</b>. As discussed previously, memory cells in a memory page can be programmed simultaneously. The memory cell to be programmed can be located through the row address X-ADDR (including include the page index PD, the block index BD and the plane index PL) and the column Y-ADDR (see <figref idref="DRAWINGS">FIG. <b>4</b></figref>). The memory cell can be programmed to a target logic state (e.g., state P<b>1</b> in <figref idref="DRAWINGS">FIG. <b>6</b></figref>) according to the programming data.</p><p id="p-0106" num="0105">Before performing the program operation, the process flow <b>1000</b> includes an operation step S<b>1010</b>, where it is checked whether the memory cell (or the memory page or the memory block) is marked as &#x201c;risky.&#x201d; The memory cell can be marked as risky previously from a previous programming operation.</p><p id="p-0107" num="0106">If the memory cell (or the memory page or the memory block) is not marked risky, then at operation step S<b>1012</b>, the memory cell can be programmed. The programming details have been discussed with respect to operation step S<b>710</b> in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. In some embodiments, all memory cells in a memory page can be programmed simultaneously. In this example, the memory page can be at least a portion of the super page <b>652</b> in <figref idref="DRAWINGS">FIG. <b>8</b></figref> and the memory block can be at least a portion of the super block <b>650</b>. In some embodiments, the memory cell can be programmed to any logic states of the SLC mode, MLC mode, TLC mode or QLC mode of a 3D NAND memory (e.g., memory die <b>100</b> in <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref>). In some embodiments, the program loop count (PLC) can be used to track the number of attempts in programming the memory cell to the target logic state according to the data received at the control circuit <b>70</b>, following the process flow <b>700</b> illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref>.</p><p id="p-0108" num="0107">At operation step S<b>1015</b>, it is checked whether the memory cell passes the programming, for example, completing the process flow <b>700</b> and reaching the operation step S<b>755</b>.</p><p id="p-0109" num="0108">If the memory cell is not programmed successfully, the operation step S<b>1015</b> can be repeated, similar to the process steps S<b>710</b>-S<b>755</b> described with respect to <figref idref="DRAWINGS">FIG. <b>7</b></figref>. In the other words, after programming the memory cell, it is verified whether the memory cell is at a target logic state according to the programming data; and the programming of the memory cell will be repeated when the memory cell is not at the target logic state.</p><p id="p-0110" num="0109">At operation step S<b>1020</b>, the PLC of the memory cell used to pass programming is collected, according to the process flow <b>700</b>. As discussed previously, the PLC tracks a repeated number of the programming.</p><p id="p-0111" num="0110">At operation step S<b>1025</b>, the PLC is compared with the threshold value PLC<sub>th</sub>, predetermined according to <figref idref="DRAWINGS">FIG. <b>9</b></figref>. As discussed previously, a previous PLC can be selected as the threshold value PLC<sub>th</sub>, wherein the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state. If the PLC is not larger than the threshold value PLC<sub>th</sub>, the process flow <b>1000</b> moves to operation step S<b>1040</b> to continue a next operation. If the PLC is larger than the threshold value PLC<sub>th</sub>, the memory cell can be considered weak or risky. Accordingly, the weak memory cell and/or the memory page containing the weak memory cell can be marked as weak or risky at operation step S<b>1030</b>. Similarly, the memory block containing one or more memory pages marked risky can also be marked risky.</p><p id="p-0112" num="0111">Because the memory cell has been considered passing the programming at operation step S<b>1015</b>, i.e., the memory cell has been programmed to the target logic state according to the command and data received by the memory die, the data stored in the memory cell (i.e., logic state) can be backed up (i.e., copied) in a redundant memory cell at operation step S<b>1035</b>. In the other words, a portion of the programming data associated with the memory cell can be backed up in response to a program loop count (PLC) that is larger than the threshold value PLC<sub>th</sub>. In some embodiments, backing up the portion of the programming data associated with the memory cell includes programming a redundant memory cell with the portion of the programming data associated with the memory cell. Similarly, the data stored in the memory page or the memory block containing the memory cell can also be backed up in a redundant memory page or a redundant memory block. IN the other words, portions of the programming data associated with the memory page can be backed up in response to the PLC of the memory cell that is larger than the threshold value PLC<sub>th</sub>. The backing up the portions of the programming data associated with the memory page includes programming a redundant memory page with the portions of the programming data associated with the memory page. As such, a risky memory cell, a risky memory page or a risky memory block has a backup in the storage system, before they actually break down.</p><p id="p-0113" num="0112">If at operation step S<b>1010</b>, the memory cell or the memory page/memory block containing the memory cell has been marked risky in a previous event, the process flow <b>1000</b> is directed to the operation step S<b>1035</b>, where data to be programmed in the memory cell can be backed up first prior to programming the memory cell. In the other words, prior to programming the memory cell, the portion of the programming data associated with the memory cell can be backed up in response to a previous risky marking of the memory cell from a previous programming operation. In some embodiments, backing up the portion of the programming data associated with the memory cell includes programming a redundant memory cell with the portion of the programming data associated with the memory cell. In some embodiments, portions of the programming data associated with the memory page can be backed up in response to the previous risky marking of the memory cell.</p><p id="p-0114" num="0113">After making a copy of the data to be programmed or having been programmed in the risky memory cell/page/block, the process flow <b>1000</b> goes to operation step S<b>1040</b> where a next operation can be continued.</p><p id="p-0115" num="0114">In some embodiments, checking whether PLC&#x3e; PLC<sub>th</sub>, marking the memory cell risky at the process step S<b>1030</b>, and backing up programmed data in the memory cell at process step S<b>1035</b> can be performed during programming the memory cell at process step S<b>1012</b>, prior to confirming the memory cell passes the programming (process steps S<b>1015</b>).</p><p id="p-0116" num="0115">An advantage of running the process flow <b>1000</b> can be seen in operation steps S<b>1045</b> and S<b>1050</b>. When an uncorrectable ECC (UECC) is detected by the storage system at operation step S<b>1045</b>, for example, due to wearing out of the risky memory cell/page/block after many P/E cycles, data can be recovered at operation step S<b>1050</b> from the redundant memory cell/page/block implemented at operation step S<b>1035</b>. In some embodiments, recovering data from the redundant memory cell/page/block includes performing a read operation from the redundant memory cell/page/block.</p><p id="p-0117" num="0116">As such, weak or risky memory cells, memory pages or memory blocks that have been programmed successfully can be identified, and data stored in the risky memory cells, memory pages and memory blocks can be backed up in advance before UECC happens. Therefore, chances of data loss in the 3D NAND memory can be greatly reduced.</p><p id="p-0118" num="0117"><figref idref="DRAWINGS">FIGS. <b>11</b>A-<b>11</b>C</figref> illustrate a configuration <b>1100</b> of data protection in a storage system, according to some embodiments of the present disclosure. The data protection can be executed by a memory controller (e.g., the memory controller <b>20</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>) and a 3D NAND memory (e.g., the memory die <b>100</b> in <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>6</b></figref>) in the storage system (e.g. the storage system <b>10</b> in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). The following modules in the memory controller <b>20</b> can be implemented either in hardware or firmware: a correction of programming (COP<b>1</b>) module <b>1160</b>, a bad block remapping (BBRMP) module <b>1162</b>, a processor (CPU) <b>1164</b> and a quality-of-service (QoS) module <b>1166</b>. Similarly, the 3D NAND memory <b>100</b> can implement the following modules in hardware or firmware: a risky block table (RBT) <b>1168</b>, a risky to backup (R2B) module <b>1170</b>, a PLC screen module <b>1172</b>, and a backup module <b>1174</b>.</p><p id="p-0119" num="0118">In some embodiments, the CPU <b>1164</b> and the PLC screen module <b>1172</b> can perform the process flow <b>1000</b> in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, where the PLC can be compared with the threshold value PLC<sub>th</sub>. If the PLC of a memory cell in the memory page or memory block is larger than the threshold value PLC<sub>th</sub>, the memory cell or the memory page/the memory block containing the memory cell can be considered risky as discussed previously. The address of the risky memory cell or the memory page/memory block containing the risky memory cell (e.g., the page index PD and the block index BD) can be send to the CPU <b>1164</b> in the memory controller <b>20</b>.</p><p id="p-0120" num="0119">At step <b>2</b>, the COP<b>1</b> module <b>1160</b> and the RBT module <b>1168</b> can create a risky block table (RBT) (shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>). The RBT <b>1168</b> includes a first set of addresses, where the first set of addresses identify the risky memory blocks and/or memory pages (or a super page addressed by a word line) according to the PLC screen module <b>1172</b>.</p><p id="p-0121" num="0120">At step <b>3</b>, the QoS module <b>1166</b> sends a queuing instruction to the backup module <b>1174</b> to schedule the backup of the data in the risky memory cell/page/block to a redundant memory cell/page/block on the 3D NAND memory <b>100</b>. QoS of a storage system refers to the consistency and predictability of latency and IOPS (IOs Per Second) performance while performing read and program operations. Here, the QoS module <b>1166</b> can prioritize the read/program operations and the backup activities such that the overall performance of the storage system is optimized. For example, over a given period of time (e.g., 0.5 ms), the storage system's latency stay within a specified range (e.g., 99.9%) without having unexpected outliers causing a sudden drop in application performance.</p><p id="p-0122" num="0121">At step <b>4</b>, the BBRMP module <b>1162</b> and the R2B module <b>1170</b> can create the risky to backup (R2B) table (shown in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref>). The R2B table includes two sets of addresses, the first set of addresses and a second set of addresses. The first set of addresses is the same as the first set of addresses in the RBT <b>1168</b>, representing the addresses of the risky memory block or the risky memory page, which can be identified by using the block index BD and the page index PD. The second set of addresses represent the addresses of the redundant memory block or redundant memory page and can be identified by using the block index BD-b and the page index PD-b. As an example in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref>, a risky memory page can be identified using page index (or word line number) <b>9</b> and the block index <b>70</b>. The corresponding backup data in the redundant memory page and the redundant memory block can be located at the page index <b>0</b>, <b>1</b>, and <b>2</b> with block index <b>400</b>.</p><p id="p-0123" num="0122">Therefore, using the configuration <b>1100</b> of data protection, data loss can be prevented by identifying risky memory pages and/or memory blocks during normal programming and reading operations.</p><p id="p-0124" num="0123"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates an application of the data protection methods described with respect to <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b>A-<b>11</b>C</figref>, according to some embodiments of the present disclosure. In this example, each box represent a memory cell, where memory cells associated with the same word line (e.g., WLn) forms the super page <b>652</b> across different memory planes (e.g., plane0, plane1, plane2 and plane3). In this example, the memory cells in each memory plane can also be identified with column addresses, for example Str0, Strl, Str2, Str3, . . . etc. As discussed previously, memory cells of the same memory page (e.g., super page 652) can be read or programmed simultaneously. In some embodiments, read fails can be recovered by the <b>2</b>WL-RAID method. For example, the <b>2</b>WL-RAID method can fix read fail in one of the eight memory cells of a RAID group <b>1270</b>, where the eight memory cells of the RAID group <b>1270</b> have the same column address (e.g., StrO) in plane0, plane1, plane2 and plane3 and associated with two word lines (e.g., WLn or WLm). If read fail occurs at more than one memory cells in the RAID group <b>1270</b>, the <b>2</b>WL-RAID method cannot recover the data.</p><p id="p-0125" num="0124">However, during programming of a super page, neighboring plane disturb can occur when a memory cell experiences program status fail (PSF) that causes read fails in memory cells across different memory planes with the same column address because of shared circuitry and signals (e.g., for X-path control). For example, when the memory cell on WLn with column address Str<b>3</b> in plane&#xae; has PSF, the memory cell on WLn with column address Str<b>3</b> in plane <b>1</b> can have read fail, which is unrecoverable by the <b>2</b>WL-RAID method. The memory cell with column address Str<b>3</b> in plane <b>1</b> on WLn will be marked with an UECC.</p><p id="p-0126" num="0125">By using the method of data protection shown in <figref idref="DRAWINGS">FIGS. <b>10</b> and <b>11</b>A</figref>-C, the data of a super page can be backed up (i.e., copied) in a redundant super page when the PLC of a memory cell is larger than the threshold valve PLC<sub>th </sub>during programming, indicating that the memory cell can be risky or weak but has not experienced PSF. As such, when the memory cell suffers PSF and memory cells in neighboring memory planes suffer UECC, the previously backed-up data can be used to recover the data in these failed memory cells (e.g., by reading the data from redundant memory cells). Data loss can thereby be avoided.</p><p id="p-0127" num="0126">In summary, the present disclosure provides a method of data protection for a three-dimensional NAND memory. The method includes programming a memory cell of the 3D NAND memory according to programming data; and backing up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value, where the PLC tracks a repeated number of the programming of the memory cell. A previous PLC can be set as the threshold value, where the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</p><p id="p-0128" num="0127">The present disclosure also provides a memory storage system. The memory storage system includes a three-dimensional (3D) NAND memory and a memory controller. The 3D NAND memory includes a plurality of memory strings, penetrating through a film stack of alternating conductive and dielectric layers disposed on a substrate, wherein each memory string comprises a plurality of memory cells. The memory controller is configured to send programming data to the 3D NAND memory to program a memory cell; and back up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value.</p><p id="p-0129" num="0128">The present disclosure further provides a memory controller for a three-dimensional (3D) NAND memory. The memory control is configured to send programming data to the 3D NAND memory to program a memory cell; and back up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value, wherein the 3D NAND memory comprises a plurality of memory strings, penetrating through a film stack of alternating conductive and dielectric layers disposed on a substrate, wherein each memory string comprises a plurality of memory cells.</p><p id="p-0130" num="0129">The foregoing description of the specific embodiments will so fully reveal the general nature of the present disclosure that others can, by applying knowledge within the skill of the art, readily modify and/or adapt, for various applications, such specific embodiments, without undue experimentation, and without departing from the general concept of the present disclosure. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the disclosure and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the disclosure and guidance.</p><p id="p-0131" num="0130">Embodiments of the present disclosure have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.</p><p id="p-0132" num="0131">The Summary and Abstract sections can set forth one or more but not all exemplary embodiments of the present disclosure as contemplated by the inventor(s), and thus, are not intended to limit the present disclosure and the appended claims in any way.</p><p id="p-0133" num="0132">The breadth and scope of the present disclosure should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method of data protection for a three-dimensional (3D) NAND memory, comprising:<claim-text>programming a memory cell of the 3D NAND memory according to programming data; and</claim-text><claim-text>backing up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>after programming the memory cell, verifying whether the memory cell is at a target logic state according to the programming data; and</claim-text><claim-text>repeating the programming of the memory cell when the memory cell is not at the target logic state.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising:<claim-text>collecting the PLC that tracks a repeated number of the programming.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>marking the memory cell risky in response to the PLC that is larger than the threshold value.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>prior to programming the memory cell, backing up the portion of the programming data associated with the memory cell in response to a previous risky marking of the memory cell from a previous programming operation.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the backing up the portion of the programming data associated with the memory cell comprises programming a redundant memory cell with the portion of the programming data associated with the memory cell.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>recovering the portion of the programming data associated with the memory cell from the redundant memory cell in response to an unrecoverable error correction code.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:<claim-text>setting a previous PLC as the threshold value, wherein the previous PLC was used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the programming the memory cell comprises:<claim-text>programming the memory cell simultaneously with other memory cells in a memory page, wherein all memory cells in the memory page share a word line.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising:<claim-text>backing up portions of the programming data associated with the memory page in response to the PLC of the memory cell.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the backing up the portions of the programming data associated with the memory page comprises programming a redundant memory page with the portions of the programming data associated with the memory page.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:<claim-text>recovering the portions of the programming data associated with the memory page from the redundant memory page in response to an unrecoverable error correction code.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. A memory storage system, comprising:<claim-text>a three-dimensional (3D) NAND memory, comprising:<claim-text>a plurality of memory strings, penetrating through a film stack of alternating conductive and dielectric layers disposed on a substrate, wherein each memory string comprises a plurality of memory cells; and</claim-text></claim-text><claim-text>a memory controller, configured to:<claim-text>send programming data to the 3D NAND memory to program a memory cell; and</claim-text><claim-text>back up a portion of the programming data associated with the memory cell in response to a program loop count (PLC) that is larger than a threshold value.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The memory storage system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the PLC tracks a number of programming for the memory cell to reach a target logic state according to the programming data.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The memory storage system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the memory controller is further configured to mark the memory cell risky in response to the PLC that is larger than the threshold value.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The memory storage system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the memory controller is further configured to create a risky block table for the 3D NAND memory, wherein the risky block table comprises a first set of addresses identifying the memory cell marked risky.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The memory storage system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the memory controller is further configured to create a risky to backup table for the 3D NAND memory, wherein the risky to backup table comprises:<claim-text>the first set of addresses identifying the memory cell marked risky; and</claim-text><claim-text>a second set of addresses identifying a redundant memory cell, wherein the redundant memory cell is programmed with the portion of the programming data associated with the memory cell marked risky.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The memory storage system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the memory controller is further configured to recover the portion of programming data associated with the memory cell from the redundant memory cell when an unrecoverable error correction code is received.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The memory storage system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the threshold value is a previous PLC used by a previous programming operation and was collected after the memory cell was programmed successfully to a previous target logic state.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The memory storage system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the memory controller is further configured to back up the portion of the programming data associated with the memory cell, in response to a previous risky marking of the memory cell from a previous programming operation, before the memory cell is programmed.</claim-text></claim></claims></us-patent-application>