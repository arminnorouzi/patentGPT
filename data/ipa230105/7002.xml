<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007003A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007003</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942650</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>10</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>064</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS AND METHODS FOR ORGANIZING DEVICES IN A POLICY HIERARCHY</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16820517</doc-number><date>20200316</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11470086</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942650</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>15067074</doc-number><date>20160310</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>10630686</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>16820517</doc-number></document-id></child-doc></relation></continuation><us-provisional-application><document-id><country>US</country><doc-number>62132372</doc-number><date>20150312</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300521</doc-number><date>20160226</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300699</doc-number><date>20160226</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300687</doc-number><date>20160226</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300670</doc-number><date>20160226</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300717</doc-number><date>20160226</date></document-id></us-provisional-application><us-provisional-application><document-id><country>US</country><doc-number>62300352</doc-number><date>20160226</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Fornetix LLC</orgname><address><city>Frederick</city><state>MD</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>White</last-name><first-name>Charles</first-name><address><city>Charles Town</city><state>WV</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Edwards</last-name><first-name>Stephen</first-name><address><city>Shepherdstown</city><state>WV</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In various embodiments, there is provide a method for organizing devices in a policy hierarchy. The method includes creating a first node. The method further includes assigning a first policy to the first node. The method further includes creating a second node, the second node referencing the first node as a parent node such that the second node inherits the first policy of the first node.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="83.06mm" wi="158.75mm" file="US20230007003A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="180.00mm" wi="125.05mm" orientation="landscape" file="US20230007003A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="220.81mm" wi="174.84mm" orientation="landscape" file="US20230007003A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="230.72mm" wi="176.19mm" orientation="landscape" file="US20230007003A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="225.21mm" wi="160.95mm" orientation="landscape" file="US20230007003A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="213.36mm" wi="78.06mm" orientation="landscape" file="US20230007003A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="183.30mm" wi="64.85mm" file="US20230007003A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="237.07mm" wi="161.54mm" file="US20230007003A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="248.07mm" wi="67.31mm" orientation="landscape" file="US20230007003A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="171.96mm" wi="129.12mm" file="US20230007003A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="92.03mm" wi="157.82mm" file="US20230007003A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="199.64mm" wi="122.26mm" orientation="landscape" file="US20230007003A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="88.90mm" wi="64.85mm" file="US20230007003A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE OF RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 16/820,517, filed on Mar. 16, 2020, which is a continuation of U.S. patent application Ser. No. 15/067,074, filed on Mar. 10, 2016, now issued as U.S. Pat. No. 10,630,686, which claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/132,372, titled KO Hierarchy For Key Orchestration System And Process, and filed on Mar. 12, 2015, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,352, titled Policy-Enabled Encryption Keys Having Complex Logical Operations, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,521, titled Policy-Enabled Encryption Keys Having Ephemeral Policies, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,670, titled Structure Of Policies For Evaluating Key Attributes Of Encryption Keys, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,687, titled Linking Encryption Key Management With Granular Policy, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,699 titled System And Method For Associating Encryption Key Management Policy With Device Activity, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure claims priority to, and the benefit of, U.S. provisional patent application Ser. No. 62/300,717, titled System And Method For Hierarchy Manipulation In An Encryption Key Management System, and filed on Feb. 26, 2016, which is incorporated herein by reference in its entirety. The present disclosure relates to U.S. utility patent application titled System And Method For Encryption Key Management Federation And Distribution (Ser. No. 14/506,346) (attorney ref.: 107283-0203), which is incorporated herein by reference in its entirety.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">In security systems, an encryption key refers to a parameter or data that dictates how plain data may be translated into encrypted data during an encryption process and encrypted data into plain data during a decryption process. Typically, the encryption key is made available both of a source device (e.g., a transmitting device) and a target device (e.g., a receiving device) in a communication transaction. Given that encryption keys are so widely used, effective management of the encryption keys (as well as other security objects) to defend and respond to threats against the security systems is of paramount importance.</p><p id="p-0004" num="0003">Traditionally, encryption key management is initiated and executed at the device level (e.g., by the source device and/or the target device that are involved in the communication transaction). Communication management, on the other hand, is traditionally centrally managed at a higher level (e.g., by a server for the source device and target device). The end result may be that the encryption management is procedurally unsynchronized with communications management. Thus, loose controls of encryption keys, as demonstrated in current public key infrastructure (PKI) instances, may result. In addition, loose controls of symmetric keys generated and distributed in an enterprise may also occur. Accordingly, an end result may be a breakdown in communication management or communication security. Similar problems confront other types of encryption objects.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0005" num="0004">Embodiments described herein relate to organization of devices of an enterprise, and in particular, organization of the devices in a hierarchical, policy-based structure.</p><p id="p-0006" num="0005">In various embodiments, there is provided a method for organizing devices in a policy hierarchy, the method including: creating a first node, assigning a first policy to the first node, and creating a second node, the second node referencing the first node as a parent node such that the second node inherits the first policy of the first node.</p><p id="p-0007" num="0006">In some embodiments, the method further includes assigning a second policy to the second node such that the second node is assigned the first policy and the second policy.</p><p id="p-0008" num="0007">In some embodiments, the method further including creating a third node, the third node referencing the second node as a parent node such that the third node inherits the first policy and the second policy of the second node.</p><p id="p-0009" num="0008">In some embodiments, the method further includes registering a first device to the first node such that the first device is bound by the first policy of the first node, and registering a second device to the second node such that the second device is bound by the first and second policies of the second node.</p><p id="p-0010" num="0009">In some embodiments, the registering the first device includes referencing an identifier of the first node.</p><p id="p-0011" num="0010">In some embodiments, the method further includes performing an applied key management operation including one of key management, key distribution, or key federation on the second device registered to the second node such that the applied key management operation is evaluated based on the first and second policies of the second node.</p><p id="p-0012" num="0011">In some embodiments, the method further includes receiving an encryption key having a key attribute from the first device, determining acceptability of the encryption key based on the key attribute and the first and second policies of the second device associated with the second device, and in response to determining that the encryption key is acceptable, distributing the encryption key to the second device.</p><p id="p-0013" num="0012">In some embodiments, the method further includes creating a third policy, and assigning the third policy to the second node such that the second node is assigned the first policy, the second policy, and the third policy.</p><p id="p-0014" num="0013">In some embodiments, the method further includes updating the second device to be bound by the first, second, and third policies of the second node.</p><p id="p-0015" num="0014">In some embodiments, the assigning includes referencing an identifier of the first node.</p><p id="p-0016" num="0015">In various embodiments, there is provided a system for organizing devices in a policy hierarchy, the system including a memory and a processor configured to create a first node, assign a first policy to the first node, and create a second node, the second node referencing the first node as a parent node such that the second node inherits the first policy of the first node.</p><p id="p-0017" num="0016">In some embodiments, the processor is further configured to assign a second policy to the second node such that the second node is assigned the first policy and the second policy.</p><p id="p-0018" num="0017">In some embodiments, the processor is further configured to create a third node, the third node referencing the second node as a parent node such that the third node inherits the first policy and the second policy of the second node.</p><p id="p-0019" num="0018">In some embodiments, the processor is further configured to register a first device to the first node such that the first device is bound by the first policy of the first node, and register a second device to the second node such that the second device is bound by the first and second policies of the second node.</p><p id="p-0020" num="0019">In some embodiments, the registering the first device includes referencing an identifier of the first node.</p><p id="p-0021" num="0020">In some embodiments, the processor is further configured to perform an applied key management operation including one of key management, key distribution, or key federation on the second device registered to the second node such that the applied key management operation is evaluated based on the first and second policies of the second node.</p><p id="p-0022" num="0021">In some embodiments, the processor is further configured to: receive an encryption key having a key attribute from the first device, determine acceptability of the encryption key based on the key attribute and the first and second policies of the second device associated with the second device, and in response to determining that the encryption key is acceptable, distribute the encryption key to the second device.</p><p id="p-0023" num="0022">In some embodiments, the processor is further configured to create a third policy, and assign the third policy to the second node such that the second node is assigned the first policy, the second policy, and the third policy.</p><p id="p-0024" num="0023">In some embodiments, the processor is further configured to update the second device to be bound by the first, second, and third policies of the second node.</p><p id="p-0025" num="0024">In some embodiments, the assigning includes referencing an identifier of the first node.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic block diagram illustrating an example of a general applied key management system according to various embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic block diagram illustrating an example of an applied key management system according to various embodiments.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic block diagram illustrating an example of an encryption key federation system as implemented in various embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic block diagram illustrating an example of a communication device consuming applied key management services according to some embodiments.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a process flow diagram illustrating an example of a request authentication process for issuing requests and receiving encryption keys according to some embodiments.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a process flow diagram illustrating an example of a communication device registration process implemented in various applied key management systems according to various embodiments.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a process flow diagram illustrating an example of a key management and distribution process according to various embodiments.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a process flow diagram illustrating an example of a key federation process according to various embodiments.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a process flow diagram illustrating an example of an encryption key management and distribution process according to various embodiments.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> is a diagram illustrating an example of a policy hierarchy according to some embodiments.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> is a diagram illustrating an example of a policy hierarchy in an applied key management environment according to various embodiments.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a process flow diagram illustrating an example of organizing a policy hierarchy process according to various embodiments.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0038" num="0037">In the following description of various embodiments, reference is made to the accompanying drawings which form a part hereof and in which are shown by way of illustration specific embodiments in which the embodiments may be practiced. It is to be understood that other embodiments may be utilized, and structural changes may be made without departing from the scope of the various embodiments disclosed in the present disclosure.</p><p id="p-0039" num="0038">Embodiments described herein generally relate to security object applied key management. The security object applied key management may include management, distribution, and federation of the security object. Security objects may include encryption keys and other sensitive objects (such as, but not limited to, user identity information, certificates, biometric data, random number generator data, determinate random number generator data, non-determinate random number generator data, user authentication information, policy components, other components associated with organization security component, and/or the like). In the present disclosure, encryption key-based applied key management is described in various embodiments as examples of the security object applied key management systems and methods. It should be appreciated that the applied key management systems and methods are likewise applicable to other security objects, including those described above.</p><p id="p-0040" num="0039">As used herein, &#x201c;applied key management&#x201d; may refer to a combination of key management, key federation, and key distribution activities in one or more enterprises. For example, embodiments described may be associated with the applied key management of encryption key information correlated with utilizing encryption in the one or more enterprises. &#x201c;Enterprise key management&#x201d; may include managing and/or overseeing the multiple uses of asymmetric and symmetric keys required for encrypting data, signing emails, authenticating web services, and/or other potential uses. This may also include encryption management for communications systems to include radio, cellular, satellite and internet protocol based communications. &#x201c;Enterprise key federation&#x201d; may include coordinating and negotiating the federation of key information to a plurality of disparate applied key management platforms (each associated with disparate federating organizations) based on established trust between the federating organizations (e.g., the enterprises). &#x201c;Key distribution&#x201d; may refer to a centralized distribution (e.g., pushing or forwarding) of key material to support encryption operations within a local enterprise and/or a foreign enterprise. In particular, key distribution may be concerned with assigning or otherwise transmitting the appropriate encryption keys to an appropriately associated device (e.g., the communication device, which may either be a source device or a target device).</p><p id="p-0041" num="0040">Embodiments of applied key management (e.g., an applied key management device such as a management request handler coupled to a request handler and various supporting databases) may provide control of encryption key management, federation, and distribution through a centralized user interface. Such applied key management devices may provide centralized systems and/or methods of managing encryption keys associated with communications, infrastructure, and applications. Such applied key management devices may also manage device enrollment, monitor device health related to encryption capabilities, and monitor status for applied key management activities. Such capabilities may allow robust transaction reporting to support audit activities associated with communications, application, and infrastructure management.</p><p id="p-0042" num="0041">Applied key management may be leveraged for additional systems other than the communication systems. Other implementations of applied key management may include application encryption management, virtualization encryption management, storage encryption management, and/or user identity encryption management. In short, if applications, communications, or infrastructures require use of encryption (or other types of security mechanisms using security objects) and keys (or security objects), applied key management may be applied to provide advantages as described. Communication systems may include, but are not limited to, radio communications, cellular communications, transmission control protocol/internet protocol (TCP/IP) based communications, satellite communications equipment, and the like. Application systems may include, but are not limited to voice-over-internet protocol VOIP applications, virtualization, identification and authentication, messaging, local storage. Infrastructure systems may include, but are not limited to storage solutions, physical security infrastructure, and medical equipment.</p><p id="p-0043" num="0042">In particular embodiments, an applied key management device may enable encryption key lifecycle activities across multiple types of communication devices in a centralized manner. The applied key management device may leverage industry standards for key management for interoperability with existing systems and may use, for example, protocols for applied key management as a part of applied key management. A distinction between applied key management and key management alone may be demonstrated in encryption key management and key distribution for communication systems. Given the requirement to make new encryption connections before breaking existing connections, typical communication systems cannot utilize rekey commands as it would break communications before management steps are taken to establish new lines of communications. However, rekey commands may work for infrastructure&#x2014;to include storage, applications and virtualization solutions&#x2014;where services can be reestablished without loss of centralized control of the managed capability.</p><p id="p-0044" num="0043">The system architecture of applied key management can be configured to allow for use of a standard-based approach for supported systems such as key management interoperability protocol (KMIP), for example, but also the capability to develop support interfaces for non-standardized systems such as physical security infrastructure, virtualization applications, satellite communications systems, and medical equipment. This may be accomplished by architecturally separating message handling from support interfaces. Using a purely KMIP example, a storage device may receive a &#x201c;rekey&#x201d; command, a communication equipment may receive &#x201c;put-and-notify&#x201d; commands, and cellular devices may request queued &#x201c;notify&#x201d; commands informing the cellular devices to send &#x201c;get messages&#x201d; to the applied key management device to be relayed to key management and generation system components. Example systems implementing such features are discussed below.</p><p id="p-0045" num="0044">Embodiments described herein may include an applied key management device to implement centralized, top-down enterprise encryption key management encryption keys (e.g., such as, but not limited to symmetric key encryption, asymmetric key encryption, and the like) as well as other security objects used in security systems. Such centralized, top-down control of encryption may be for a given enterprise. Embodiments may include implementing coordinated KMIP on enterprise key management, communications systems, applications, and infrastructure for encryption key lifecycle functions implementing at least one of: device registration, user registration, system and user initialization, key material installation, key establishment, key registration, operational use, key storage, key distribution, key update, key recovery, key de-registration, key destruction, key revocation, and the like.</p><p id="p-0046" num="0045">As referred to herein, a &#x201c;key attribute&#x201d; (attribute, encryption attribute, and/or the like) associated with an encryption key may refer to a characteristic associated with the encryption key, cryptographic or security characteristics of the encryption key, the cryptographic algorithms of the encryption key, a device generating/transmitting/receiving the encryption key, a user of the device, and/or the like. Each encryption key may be associated with at least one key attribute. The encryption key may be transmitted and/or received with its associated key attributes represented in data values.</p><p id="p-0047" num="0046">As referred to herein, a &#x201c;policy&#x201d; may be a rule managing an encryption key based on key attribute(s) associated with that encryption key. In particular embodiments, a policy may dictate whether the particular encryption key is an acceptable encryption key. Such acceptability may be based on the security and cryptographic considerations as to whether the encryption key (e.g., as shown from the key attributes associated with the encryption key) may be secure enough. In other words, the encryption key generated for a particular communication transaction may be presented for inspection by the policy to be evaluated as to whether the encryption key is to be allowed or denied for that communication transaction.</p><p id="p-0048" num="0047">Some embodiments include an interface for applied key management for mobile communication devices (e.g., a wireless device, and/or the like), or provide an interface for applied key management for radio/satellite communications systems to include telemetry and payload in satellite communications. Particular implementations of the embodiments may include interfaces for banking applications such as, but not limited to, automated teller machines (ATMs), bank account interfaces, and the like. The interfaces for banking applications may be implemented on any mobile or non-mobile devices. Embodiments may provide an interface for applied key management for applications that include virtualization or providing an interface for applied key management for network infrastructure to include routers, switches, virtual private network (VPN&#xac;) appliances, firewalls, intrusion detection systems (IDSs), intrusion prevention system (IPSs), tokenizers, and/or the like.</p><p id="p-0049" num="0048">For example, a centralized encryption management may be provided for symmetric encryption keys or asymmetric encryption keys, in both private and/or public contexts. In some embodiments, existing network infrastructure information may be consumed to distribute encryption keys based on active/inactive status of network infrastructure or distributing and managing encryption keys for network infrastructure based on equipment that can readily accept encryption keys (e.g., existing hardware/software may be installed on the equipment for accepting encryption keys).</p><p id="p-0050" num="0049">Embodiments may queue encryption key transaction information for communication devices not available at the point of a given encryption management operation (e.g., in a push-key event). In addition, embodiments described herein may centrally display encryption key lifecycle information (for supported infrastructure) and successful encryption key management transactions. In addition to or as an alternative, failure message and/or a cause of unsuccessful encryption key management transactions may be displayed.</p><p id="p-0051" num="0050">In some embodiments, a service interface for a communication device to acquire new asymmetric keys on a timed basis may be provided. In addition, a service interface for a communication device to acquire new symmetric keys on a timed basis may be provided. In some embodiments, a service interface for a communication device to acquire new asymmetric keys on user initiated basis may be provided. In various embodiments, a service interface for a communication device to acquire new symmetric keys on a user initiated basis may be provided. Also, federated distribution of encryption keys based on established trust based key exchange between two or more key management and applied key management devices may be provided as described.</p><p id="p-0052" num="0051">In some embodiments, distributing federated symmetric key to local enterprise infrastructure based on configurations for federated symmetric key distribution may be provided. In various embodiments, distributing federated asymmetric key to local enterprise infrastructure based on configurations for federated asymmetric key distribution may be provided. In addition, implementing federated trust model by using multiple devices and split key distribution may be provided to establish trust between two untrusted entities that need to communicate securely.</p><p id="p-0053" num="0052">The applied key management device (e.g., the management request handler and associated components) may include sub-modules including a business logic module, authentication and authorization module, policy enforcement module, system consistency/validation module, and/or the like for performing functions described herein.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of an example of a general applied key management system <b>100</b> as implemented in various embodiments. In various embodiments, an applied key management device <b>110</b> may be coupled to at least one source device <b>150</b><i>a </i>and at least one target device <b>150</b><i>b. </i>The applied key management device <b>110</b> may include at least one desktop computer, mainframe computer, laptop computer, pad device, smart phone device or the like, configured with hardware and software to perform operations described herein. For example, the applied key management device <b>110</b> may include computation systems having suitable processing capabilities, memory, user interface (e.g., display and input) capabilities, and communication capabilities configured with suitable software to perform operations described herein. Thus, particular embodiments may be implemented, using processor devices that are often already present in many business and organization environments, by configuring such devices with suitable software processes described herein. Accordingly, such embodiments may be implemented with minimal additional hardware costs. However, other embodiments of the applied key management device <b>110</b> may relate to systems and processes that are implemented with dedicated device hardware/devices specifically configured for performing operations described herein.</p><p id="p-0055" num="0054">Generally, the source device <b>150</b><i>a </i>may be a communication device transmitting data (or initiating communication) for which encryption (and therefore an encryption key) may be required or preferred. The target device <b>150</b><i>b </i>may be a communication device for receiving data that may have been encrypted (e.g., with an encryption key). According to various embodiments, the source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b </i>may be an ATM. The source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b </i>may also be any server or device for storing bank account information and executing banking functions. In particular embodiments, each of the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>may include a mobile smart phone (such as, but not limited to an iPhone&#x2122;, an Android&#x2122; phone, or the like) or other wireless mobile communication devices with suitable processing and encryption capabilities. Typical modern mobile communication devices include telephone communication electronics as well as some processor electronics, one or more display devices and a keypad and/or other user input device. In further embodiments, each of the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>may include any suitable type of mobile phone and/or other type of portable electronic communication device, such as, but not limited to, an electronic smart pad device (such as, but not limited to an iPad&#x2122;), a portable computer, or the like. It should be noted that an encryption key may originate from either the source device <b>150</b><i>a </i>or the target device <b>150</b><i>b, </i>and/or both. In other words, either of the source device <b>150</b><i>a </i>or the target device <b>150</b><i>b </i>may be a key source <b>170</b>. The source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>may be associated with a same enterprise or separate enterprises. In other embodiments, one or both of the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>may be a wired device suitable for communication with a wired or wireless device.</p><p id="p-0056" num="0055">In some embodiments, the applied key management device <b>110</b> may be a part of the enterprise associated with the source device <b>150</b><i>a </i>and target device <b>150</b><i>b. </i>An enterprise may be an organization or security unit having dominance over at least one source device <b>150</b><i>a </i>and/or target device <b>150</b><i>b. </i>With respect to communication between the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>associated with disparate enterprises, the source device <b>150</b><i>a </i>may be associated with a first enterprise and the target device <b>150</b><i>b </i>may be associated with a second disparate enterprise. An enterprise may be a company, subgroup within a company, autonomous and independent entity, a communication group, security provider, various entities, organizations, and/or the like. Each applied key management device <b>110</b> may perform applied key management activities for a plurality of devices such as the source device <b>150</b><i>a </i>and the target devices <b>150</b><i>b, </i>establishing a hierarchical model for applied key management.</p><p id="p-0057" num="0056">In other embodiments, the applied key management device <b>110</b> may be a third party server coupled to the enterprise associated with the source device <b>150</b><i>a </i>and/or target device <b>150</b><i>b. </i>Thus, various embodiments may affect centralization of applied key management with existing communication systems and protocols of the enterprise. In other words, the applied key management device <b>110</b> may be implemented to cooperate with the existing encryption technology for communications, applications, and infrastructure. Applied key management (e.g., by a third party or otherwise) may interact with both the sources and targets of key information (e.g., the encryption key and the associated key attributes <b>160</b>). Accordingly, a top-down control of applied key management may be achieved, while maintaining a request model in which the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b </i>may request key information.</p><p id="p-0058" num="0057">In some embodiments, a key source <b>170</b> may be coupled to the applied key management device <b>110</b>. The key source <b>170</b> may be any source by which an encryption key (or any other types of security objects) may be generated. In some embodiments, the key source <b>170</b> may be a part of the applied key management device <b>110</b> (e.g., a module or database within the applied key management device <b>110</b> or coupled to the applied key management device <b>110</b>). In other embodiments, the key source <b>170</b> may be a source external to the applied key management device <b>110</b>. The key source <b>170</b> may include the source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b, </i>one or more of which may be capable of generating encryption keys for the communication therebetween. Alternatively or additionally, the key source <b>170</b> may be a key-generating device (other than the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b</i>) internal or external to the same enterprise as the source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b. </i>In these cases, the key source <b>170</b> may be an existing specialized key generating device implemented separately from the applied key management device <b>110</b> (e.g., the key generation and management device <b>230</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>). Other examples of the key source <b>170</b> may include a management user interface <b>220</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> (e.g., encryption keys may be generated manually through the management user interface <b>220</b>), a key federation interface <b>260</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> (e.g., encryption keys generated from a disparate enterprise), various databases storing generated encryption keys, and/or the like.</p><p id="p-0059" num="0058">In various embodiments, a request <b>175</b> may be sent to the applied key management device <b>110</b>. The request <b>175</b> may be a request to generate an encryption key. For example, the applied key management device <b>110</b> may itself generate (or retrieve from a database coupled to the applied key management device <b>110</b>) encryption keys in response to the request <b>175</b>. In other examples, the applied key management device <b>110</b> may request an encryption key from other devices (e.g., the key source <b>170</b>) within the same or a disparate enterprise.</p><p id="p-0060" num="0059">The request <b>175</b> may originate from the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the applied key management device itself <b>110</b>, a third-party device within the same enterprise (e.g., the management user interface <b>220</b>, the key management interface <b>240</b>, and the like), a third-party device in a disparate enterprise (e.g., from the key federation interface <b>260</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>), and/or the like. Embodiments of the applied key management device <b>110</b> may therefore serve as an intermediary device between the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the requesting device (which issues the request <b>175</b>), the key source <b>170</b>, and/or the like. Accordingly, key management, distribution, and federation may effectively be managed for various devices in a same or disparate enterprise.</p><p id="p-0061" num="0060">Various components within the general applied key management system <b>100</b> (e.g., the applied key management device <b>110</b>, the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the applied key management device itself <b>110</b>, the device that issues the request <b>175</b>, the key source <b>170</b>, and/or the like) may be connected via any suitable wired or wireless network. The network may be secured or unsecured. For example, the network may be a wide area communication network, such as, but not limited to, the internet, or one or more intranets, local area networks (LANs), ethernet networks, metropolitan area networks (MANs), a wide area network (WAN), combinations thereof, or the like. In particular embodiments, the network may represent one or more secure networks configured with suitable security features, such as, but not limited to firewalls, encryption, or other software or hardware configurations that inhibits access to network communications by unauthorized personnel or entities.</p><p id="p-0062" num="0061">In some embodiments, key attributes <b>160</b> may refer generally to characteristics associated with the encryption key itself, characteristics of a device associated with the encryption key, and/or the like. In other words, the key attributes <b>160</b> may refer to when, where, how, for what, with what device the encryption key has been or is about to be generated. Examples of the key attributes <b>160</b> may include, but not limited to, encryption key size, a classification of the encryption key, a time at which the encryption key has been or about to be generated (e.g., by the key source <b>170</b>), a location in which the encryption key has been or about to be generated (e.g., by the key source <b>170</b>), a role associated with the key source <b>170</b>, a role associated with the source device <b>150</b><i>a, </i>a role associated with the target device <b>150</b><i>b, </i>a role associated with a key generating/storage device, a role associated with a user of the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the key generating/storage device, the source <b>170</b>, a combination thereof, and/or the like.</p><p id="p-0063" num="0062">In some embodiments, the key attributes <b>160</b> may include the key size. Typically, the larger the key size (i.e., the longer the encryption key), the more security it may provide for the communication. The key attributes <b>160</b> may also include the classification of the encryption key. In various embodiments, the classification of the encryption key may refer to its utilization e.g., what the encryption key may be used for. Examples of the utilization may include (e.g., for communication systems) whether an encryption key is a global hopping key, whether the encryption key is a secret key, whether the encryption key is symmetrical or asymmetrical, a combination thereof, and/or the like.</p><p id="p-0064" num="0063">In some embodiments, the key attributes <b>160</b> may include a time and/or location at which the encryption key has been or about to be generated. As described, the time and/or location at which the encryption key may be generated may be defined from the perspective of the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>and/or any other key sources <b>170</b>. For example, when an encryption key is generated (and/or sent, received), a corresponding time of the device (e.g., the key sources <b>170</b>) generating (and/or sending, receiving) the encryption key may be determined. The encryption key may be transmitted/stored with a time stamp representing the time. Similarly, when an encryption key is generated (and/or sent, received), a corresponding geo-location of the device (e.g., the key sources <b>170</b>) generating (and/or sending, receiving) the encryption key may be determined. The encryption key may be transmitted/stored with the geo-location.</p><p id="p-0065" num="0064">In various embodiments, the key attributes <b>160</b> may include role(s) associated the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the key source <b>170</b>, the other key generating/storage device, as well as their associated user. Particularly, a role may refer to a group/classification (e.g., based on predefined assignment, time, geo-location of the device, whether the device is generating encryption keys, whether the device is transmitting the encryption key, whether the device is receiving the encryption keys, and/or the like) in which the device/user is assigned to, a level of security clearance, the type of the device/user, a combination thereof, and/or the like. In particular examples, each device/user may be associated with at least a security group (e.g., assigned to a server). Within each security group, subgroups may exist to further subdivide the devices/users. The groups/subgroups may be predetermined by any suitable personnel. In other or further embodiments, the groups/subgroups may be defined when the encryption key is generated (e.g., based on current characteristics of the device such as geo-location, time of the day, and/or the like).</p><p id="p-0066" num="0065">It should be appreciated by one of ordinary skill in the art that one or more key attributes <b>160</b> may be associated with a given encryption key. In fact, as implemented in various embodiments, an encryption key may be associated with a plurality of key attributes <b>160</b>. The encryption key may be transmitted along with the associated key attributes <b>160</b> to a device (e.g., the applied key management device <b>110</b>). The encryption key and the key attributes <b>160</b> associated with the encryption key may be inspected according to at least one policy related to the key attributes <b>160</b>. Such process may be referred to as &#x201c;shooting&#x201d; the key attributes <b>160</b> against the relevant policies or &#x201c;presenting&#x201d; the key attributes <b>160</b> for &#x201c;inspection&#x201d; by the policy.</p><p id="p-0067" num="0066">The encryption keys may generally be managed by a set of policies <b>115</b>. As implemented in various embodiments, a policy may refer to at least one defined rules governing the criteria for the key attributes <b>160</b>. In some embodiments, a policy engine (e.g., as embedded in the applied key management device <b>110</b> and/or other devices as described herein) may receive the encryption key and the key attributes <b>160</b> associated with the encryption key as input. The policy engine may output a response as to whether the encryption key may be allowable based on the key attributes <b>160</b>. In particular embodiments, the policy engine may output a binary response (e.g., accepted or denied).</p><p id="p-0068" num="0067">The encryption key and the associated key attributes <b>160</b> may be presented for inspection one or more times per communication transaction. In some embodiments, the encryption key and the associated key attributes <b>160</b> may only be required to be presented for inspection by policy <b>115</b> once per communication transaction (e.g., at the initiation stage before the communication transaction has taken place but after the encryption key has been generated). In other or further embodiments, the encryption key and the associated key attributes <b>160</b> may be required to be presented for inspection by the policies <b>115</b> periodically and/or every time the encryption key has been altered for a given communication transaction. In some case several encryption keys may be presented for inspection by the policies <b>115</b> for a given communication transaction.</p><p id="p-0069" num="0068">The policy engine may identify the key attributes <b>160</b> received. The policy engine may retrieve relevant policy <b>115</b> from a local or remote storage database. In other embodiments, the policy engine may inspect particular key attributes <b>160</b> (or sometimes all key attributes <b>160</b>) associated with the encryption key as the policy engine determines acceptability based on the predefined set of policies <b>115</b>. For example, the policy engine may determine, based on the relevant policy <b>115</b>, whether the encryption key should be accepted for the communication transaction for which the encryption key may be generated.</p><p id="p-0070" num="0069">In one non-limiting example, the policies <b>115</b> may dictate that a size of the encryption key must be within a predetermined range (e.g., the size of the encryption key must exceed and/or be below 128 bits, 192 bits, 256 bits, and/or the like). In some cases, the policy <b>115</b> may dictate that the size of the encryption keys must be a particular key size (e.g., 256-bit, and/or the like).</p><p id="p-0071" num="0070">The policies <b>115</b> may require that the geo-location attribute of the key attributes <b>160</b> to be associated with (or not associated with) a predetermined location and/or within (or not within) a predetermined area. For example, when the geo-location attribute of the encryption key (e.g., as defined by the geo-location of the generating, transmitting, and/or receiving device of the encryption key) is associated with a &#x201c;danger&#x201d; zone, the policy engine may deny the encryption key. This is because there may be a high likelihood that the encryption key may be compromised in the danger zone. On the other hand, when the geo-location attribute of the encryption key is associated with a &#x201c;safe&#x201d; zone, then the encryption key may be allowed for the communication transaction. This is because there may be at most a low likelihood of included security keys. In further embodiments, a &#x201c;neutral&#x201d; zone may be a safe zone, or, in the alternative, a zone associated with an intermediate likelihood of included security keys.</p><p id="p-0072" num="0071">In another non-limiting example, the policies <b>115</b> may require the time attribute of the key attributes <b>160</b> to be within (or not within) a predetermined time period. The policy <b>115</b> may deny the encryption key on the basis that the time attribute (e.g., a time stamp) associated with the creation, transmission, and/or reception of the encryption key may be outside of a predetermined time period (for example, at 3:00 am, where acceptable creation, transmission, and/or reception time of the encryption key may be between 9:00 am-5:00 pm).</p><p id="p-0073" num="0072">In various embodiments, the policies <b>115</b> may allow the encryption key, when the role attribute of the key attributes <b>160</b> is associated with the encryption key generating/transmitting/receiving device (and the device's associated user) is within a predetermined accepted group. In some examples, the source device <b>150</b><i>a </i>(the target device <b>150</b><i>b </i>or other source devices <b>170</b>) associated with a first security group within an enterprise may generate an encryption key and present the encryption key for inspection by the policy <b>115</b>. The policy engine may determine whether the first security group may be a part of the accepted group. When the policy engine determined that the source device <b>150</b><i>a </i>(the target device <b>150</b><i>b </i>or other source devices <b>170</b>) is a part of the accepted group (e.g., the first security group falls within the accepted group), the encryption key may be allowed for the communication transaction for which the encryption has been created for.</p><p id="p-0074" num="0073">It should be appreciated by one of ordinary skill in the art that a plurality of policies <b>115</b> may act in concert for a comprehensive encryption key management scheme. This means that, the plurality of policies <b>115</b>, each of which may regulate at least one disparate key attribute <b>160</b>, may be aggregated into a set of policies <b>115</b> for regulating encryption keys presented to the policy engine.</p><p id="p-0075" num="0074">In other examples, other key sources <b>170</b> (e.g., other than the source device <b>150</b><i>a </i>and the target device <b>150</b><i>b</i>) may generate an encryption key to be distributed (or pushed) to the source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b </i>for a communication transaction between those devices. The policy engine (e.g., the applied key management device <b>110</b>) may inspect the key attributes <b>160</b> to determine whether the encryption key is allowable. In response to the encryption key being determined to be allowable, the applied key management device <b>110</b> may determine to distribute the encryption key to the source device <b>150</b><i>a </i>and/or the target device <b>150</b><i>b </i>for the communication transaction.</p><p id="p-0076" num="0075">In various embodiments, when the policy engine denies the encryption key, the policy engine may transmit a rejection indicator (e.g., a &#x201c;denied&#x201d; message) to the key source <b>170</b>. The key generating device may redesign a second encryption key to be presented (along with the key attributes <b>160</b> associated with the second encryption key) to the policy engine for a second round of inspection. In other embodiments, when the policy engine denies the encryption key, the policy engine may transmit a &#x201c;denied&#x201d; message to the key source <b>170</b> along with a cause of failure (e.g., a hint) as to which the key attribute <b>160</b> caused the denial and/or what it should be.</p><p id="p-0077" num="0076">For example, an encryption key with key attributes <b>160</b> including a time attribute of 4:49 am, geo-location attribute of &#x201c;safe zone,&#x201d; and role attribute of &#x201c;security group A&#x201d; may be presented to a set of policies <b>115</b>. The policy engine may allow the encryption key when the encryption key is generated between 5:00 a.m.-9:00 p.m., in either a &#x201c;safe zone&#x201d; or a &#x201c;neutral zone,&#x201d; and for security groups A-C. Such encryption key may be denied, given that it is not generated between 5:00 a.m.-9:00 p.m. The policy engine may transmit the &#x201c;denied&#x201d; message along with a time attribute hint (e.g., to generate the encryption key after 5:00 a.m., in 11 minutes).</p><p id="p-0078" num="0077">Accordingly, the applied key management device <b>110</b> may be configured to manage encryption keys and distribute the encryption keys. In other words, the applied key management device <b>110</b> may serve as an intermediary between the source devices <b>150</b><i>a, </i>the target devices <b>150</b><i>b, </i>other key sources <b>170</b>, and/or the like as these devices themselves may lack the capability to distribute and manage encryptions in the manner set forth with respect to the applied key management device <b>110</b>. The applied key management device <b>110</b> may include a plurality of modules (or may be coupled to remote modules) for each feature as described herein. In addition, the general applied key management system <b>100</b> may be coupled with at least one other similar general applied key management system <b>100</b> to make up the encryption key federation scheme as described herein.</p><p id="p-0079" num="0078"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is schematic diagram illustrating an example of an applied key management system <b>200</b> according to various embodiments. In some embodiments, the applied key management system <b>200</b> may illustrate a particularized implementation of the general applied key management system <b>100</b>. From an architectural perspective, embodiments as illustrated for the applied key management system <b>200</b> may be centered around message handling and interoperability with key generation technology, other applied key management devices, supported communications systems, applications, and infrastructure.</p><p id="p-0080" num="0079">The applied key management device <b>110</b> may include at least a management request handler <b>205</b>, a request handler <b>210</b>, a support structure <b>215</b> , a key federation interface <b>260</b>, as well as the associated databases (e.g., a local key database <b>270</b>, transactions database <b>275</b>, policy database <b>280</b>, local user repository <b>285</b>, configuration database <b>290</b>, device inventory database <b>295</b>).</p><p id="p-0081" num="0080">In various embodiments, the management request handler <b>205</b> may include (or is) the policy engine that may be implemented for policy-based encryption key management, distribution, and federation. As the management request handler <b>205</b> can be an intermediary layer between the various components described, rapid integration of the policy-based encryption key management, distribution, and federation may be added to an existing system without having to make changes to the system level message handling. The management request handler <b>205</b> may provide a top-down management for various communication devices (e.g., a cellular device <b>250</b><i>a, </i>a network device <b>250</b><i>b, </i>. . . , a device N <b>250</b><i>n, </i>and/or the like) associated with a given enterprise. In various embodiments, each of the cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , and the device N <b>250</b><i>n </i>may be the source device <b>150</b><i>a </i>or the target device <b>150</b><i>b </i>depending on the particular communication transaction for which the encryption key is generated.</p><p id="p-0082" num="0081">The management request handler <b>205</b> and the request handler <b>210</b> may be of an agent-interface relationship. That is, the request handler <b>210</b> may serve as the interface between the management request handler <b>205</b> and the various communication devices associated with the enterprise (e.g., the cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>and/or the like). The communication between the management request handler <b>205</b> and the request handler <b>210</b> may be facilitated by the support structure <b>215</b>. The support structure <b>215</b> may provide suitable communication protocol, management application, infrastructure, communication application program interface (API), configurations, translations, and/or the like for interfacing between the management request handler <b>205</b> and the request handler <b>210</b>.</p><p id="p-0083" num="0082">The request handler <b>210</b> may receive key generating requests <b>175</b> and/or encryption keys from the various communication devices and relate them to the management request handler <b>205</b> with the assistance from the support structure <b>215</b>. The request handler <b>210</b> may also relate the response of the management request handler <b>205</b> (including the hint in some embodiments) and/or encryption keys to the various communication devices with the assistance from the support structure <b>215</b>.</p><p id="p-0084" num="0083">In various embodiments, the management request handler <b>205</b> may receive the request <b>175</b> for generating an encryption key. Various components may be capable of transmitting the request <b>175</b> to the management request handler <b>205</b>. The some embodiments, the management request handler <b>205</b> may receive the request <b>175</b> from the various communication devices associated with the enterprise (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>and/or the like). The request <b>175</b> may be related by the request handler <b>210</b>, which may serve as the interface between the devices and the management request handler as described. The key federation interface <b>260</b>, the management user interface <b>220</b>, and the key management interface <b>240</b> may also transmit the request <b>175</b> to the management request handler.</p><p id="p-0085" num="0084">In non-request-driven embodiments, the management request handler <b>205</b> may receive encryption keys from at least one key source <b>170</b>. The key source <b>170</b> may be the key generation and management device <b>230</b>, which may be any suitable existing encryption key generating apparatus implemented within the enterprise. In other words, the key generation and management device <b>230</b> may represent any existing schemes internal or external to the communication systems of the enterprise. For example, the key generation and management device <b>230</b> may be any suitable native protocol associated with safe net equipment.</p><p id="p-0086" num="0085">Embodiments of the key management interface <b>240</b> may represent an internal integration of key generation and key management capabilities as well as an external interface with existing solutions. This is because the key management interface <b>240</b> may be poised between the key generation and management device <b>230</b> (which may generate encryption keys) and the management request handler <b>205</b> (which inspects key attributes <b>160</b> of the encryption keys based on policies <b>115</b>). For example, the key management interface <b>240</b> may be a translation interface that maintains a standard encryption management messaging language with the applied key management device <b>110</b>. This can allow enterprise interoperability between existing solutions (e.g., the key generation and management device <b>230</b>) and the applied key management platform (e.g., the management request handler <b>205</b>). Accordingly, the policy-based applied key management systems and methods may be implemented with various types of security object (e.g., encryption key) generation protocols.</p><p id="p-0087" num="0086">Additionally or alternatively, in request-driven embodiments, the management user interface <b>220</b> may transmit the request <b>175</b> to the management request handler <b>210</b>. The management user interface <b>220</b> may utilize the same API as other components described herein to assure interoperability. The management user interface <b>220</b> may include suitable user input and display devices to receive and display data to a designated managing user. In particular embodiments, the management user interface <b>220</b> may include a mobile device such as a smartphone or a tablet. The management user interface <b>220</b> may also include a wired device.</p><p id="p-0088" num="0087">In some embodiments, the key federation interface <b>260</b> may transmit the request <b>175</b> to the management request handler <b>205</b>. The key federation interface <b>260</b> may be in communication with a second key federation interface (such as, but not limited to, the key federation interface <b>260</b>) associated with a disparate enterprise (which may utilize the same or similar applied key management systems and methods described). When one of the various communication devices (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>and/or the like) wishes communicate with another device from the disparate enterprise (or vice versa), the request <b>175</b> may be transmitted (from the key federation interface <b>260</b> of the second enterprise) to the key federation interface <b>260</b> of the current enterprise. In some embodiments, the request <b>175</b> may be directly transmitted to the management request handler <b>205</b> when the key federation interface <b>260</b> has designated the relationship between the enterprises to be trusted.</p><p id="p-0089" num="0088">In some embodiments, instead of or in addition to the request <b>175</b>, encryption keys as well as the &#x201c;allowed&#x201d; and &#x201c;denied&#x201d; messages may be transmitted and received between the key federation interface <b>260</b> (of the current and the second enterprise). The encryption key and its associated attributes <b>160</b> may be stored in the local key database <b>270</b>, which may be accessible by the management request handler <b>205</b> (for policy inspection) and/or the request handler <b>210</b> (for distribution).</p><p id="p-0090" num="0089">The request <b>175</b> may be transmitted with further instructions related to generating the encryption key. The further instructions include, but are not limited to, a source of encryption keys, the encryption keys themselves, key attributes <b>160</b> associated with the encryption keys, and/or the like.</p><p id="p-0091" num="0090">In various embodiments, in response to receiving the request <b>175</b>, the management request handler <b>205</b> may generate or facilitate the generation of the encryption key. For example, where the request <b>175</b> may be silent as to where the encryption key is to be generated (e.g., the key source <b>170</b>), the management request handler <b>205</b> itself may generate the encryption key. The management request handler <b>205</b> may generate the encryption key based on the set of policies <b>115</b> stored in the policy database <b>280</b>. In other words, the management request handler <b>205</b> may generate the encryption keys with key attributes <b>160</b> that would not have violated any policies <b>115</b> set forth in the policy database <b>280</b>.</p><p id="p-0092" num="0091">Where the request <b>175</b> may be silent as to where the encryption key is to be generated (e.g., the key source <b>170</b>), or specifies that a particular key source <b>170</b> to generate the encryption key, the management request handler <b>205</b> may retrieve or otherwise request the encryption key from a suitable key source <b>170</b>. The management request handler <b>205</b> may request encryption keys from the management user interface <b>220</b>, the key federation interface <b>260</b>, the communication devices (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>source device <b>150</b><i>a, </i>and target device <b>150</b><i>b</i>), key management interface <b>240</b>, and/or the like.</p><p id="p-0093" num="0092">The management request handler <b>205</b> may retrieve encryption keys from a designated database storing encryption keys (e.g., the local key database <b>270</b>). The local key database <b>270</b> may be coupled to other key sources <b>170</b> (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>source device <b>150</b><i>a, </i>target device <b>150</b><i>b, </i>the key generation and management device <b>230</b> the key federation interface <b>260</b>, and/or the like) and store cached encryption keys on behalf of the other key sources <b>170</b>. The management request handler <b>205</b> may retrieve encryption keys from the local key database <b>270</b> instead of requesting encryption keys from the key sources <b>170</b>. This is so that transaction time for retrieving/generating the encryption key may be improved, and that network problems would not hinder the ability of the management request handler <b>205</b> to obtain encryption keys, given that the local key database may be local to (e.g., residing on a same network node) the management request handler <b>205</b>. As the management request handler <b>205</b> is retrieving encryption keys from the local key database <b>270</b>, a verification request may be sent to the key source <b>170</b> to ensure whether the encryption key to be retrieved has been altered by the key source <b>170</b>. A confirmation or an updated encryption key may be sent to the local key database <b>270</b> in response, so that the management request handler <b>205</b> may accordingly receive the encryption key.</p><p id="p-0094" num="0093">In some embodiments, the management request handler <b>205</b>, upon receiving encryption keys (whether requested or not) in any manner as described, may cache the encryption key along with the key source identifier and the associated key attributes <b>160</b> at the local key database <b>270</b>. The encryption key, the key source identifier, and the key attributes <b>160</b> may be stored in case that the communication is lost or when the encryption key source of the encryption key is not authoritative. Whereas in some embodiments, the encryption key may not be transmitted with the key attributes <b>160</b>. In such embodiments, the management request handler <b>205</b> may determine the key attributes <b>160</b> from various sources such as, but not limited to, the local user repository <b>285</b>, the device inventory database <b>295</b>, and/or the like.</p><p id="p-0095" num="0094">The management request handler <b>205</b> may then inspect the key attributes <b>160</b> associated with the encryption key received based on the set of policies <b>115</b> stored in the policy database <b>280</b>. The management request handler <b>205</b> may retrieve all policies <b>115</b> or only the relevant policies (e.g., based on some or all key attributes <b>160</b>) from the policy database <b>280</b>. In some embodiments, the encryption keys generated by the management request handler <b>205</b> or at the direction of the management request handler <b>205</b> may be spared from inspection by policies <b>115</b> when they are created based on the policies <b>115</b>. In other embodiments, all encryption keys generated by the management request handler <b>205</b> or at the direction of the management request handler <b>205</b> may be inspected by the policies <b>115</b>. Encryption keys allowable based on the policies <b>115</b> may be allowed while unacceptable encryption keys may be denied, in the manner described. The management request handler <b>205</b> may be configured to update or add policies stored in the policy database <b>280</b> (e.g., as directed by the management user interface <b>220</b>).</p><p id="p-0096" num="0095">The local user repository <b>285</b> may be a database storing information related to local users of the communication devices (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>and/or the like) within the enterprise. In various embodiments, the local user repository <b>285</b> may store characteristics/information of the users that would constitute key attributes <b>160</b>. The characteristics include, but not limited to, privileges, security groups, assigned roles, a combination thereof, and/or the like. The security groups may be stored in a hierarchical tree. The management request handler <b>205</b> may access the local user repository <b>285</b> for such characteristics and utilize them as key attributes <b>160</b> associated with encryption keys requested, transmitted, or received by that device corresponding to such characteristics. The management request handler <b>205</b> may add or alter information stored in the local user repository <b>285</b>. A copy of the information stored in the local user repository <b>285</b> may be sent to the local key database <b>270</b> as key attributes <b>160</b> to be stored in the local key database <b>270</b>.</p><p id="p-0097" num="0096">In some embodiments, the transaction database <b>275</b> may store various communication transactions or potential communication transactions. In some embodiments, the transaction database <b>275</b> may store encryption key transmission instances (i.e., instances where encryption keys are to be distributed) to one or more devices. For example, when a particular encryption key cannot/should not be forwarded (e.g., pushed to a communication device) for any reason, the forwarding transaction (e.g., a job) may be queued or otherwise stored within the transactions database <b>275</b> for forwarding the encryption key at a later some. The transaction database <b>275</b> may also store a status of each particular encryption key transmission instance, which may later be read by the request handler <b>210</b>. For example, the request handler <b>210</b> may at a later time attempt to transmit all or some encryption keys to corresponding communication devices for all &#x201c;unsent&#x201d; encryption key transmission instances. The transactions database <b>275</b> may be coupled to the local key database <b>270</b> to gain access of the keys to be forwarded to each communication device that the encryption key may be generated for.</p><p id="p-0098" num="0097">In further embodiments, the transaction database <b>275</b> may be coupled to the request handler <b>210</b> and may store the communication transactions (for which the encryption key may be requested, transmitted, or received) and/or the associated key attributes <b>160</b>. For example, the request handler <b>210</b> may transmit such information to the transactions database <b>275</b>. The transaction database <b>275</b> may be coupled to the local key database <b>270</b>. The communication transactions (as the associated details) may be associated with the encryption keys stored in the local key database <b>270</b>. The management request handler <b>205</b> may need to access only the local key database <b>270</b> for the encryption keys and the associated key attributes <b>260</b>.</p><p id="p-0099" num="0098">The configuration database <b>290</b> may store supporting instructions for the key applied key management system <b>200</b>. In some embodiments, the configuration database <b>290</b> may store internal network, configuration of clients, configuration of applications, IP address allocations, various component configurations, device privileges, device communication pathways, credentials, and/or the like. The configuration database <b>290</b> may be coupled to the management request handler <b>205</b>, which may require the instructions stored within the configuration database <b>290</b> for operations. The management request handler <b>205</b> may also add or alter the information stored in the configuration database <b>290</b>.</p><p id="p-0100" num="0099">In some embodiments, the device inventory database <b>295</b> may store information related to the communication devices associated with the given enterprise. For example, information stored may include, but not limited to, security group, security level, geo-location, identification number, internal classification, device specifications, time stamp in which an encryption has been created, a combination thereof, and/or the like. The request handler <b>210</b> may be coupled to the device inventory database <b>295</b> to store such data therein. The management request handler <b>205</b> may be coupled to the device inventory database <b>295</b> for accessing such device information. The device inventory database <b>295</b> for associating particular cached keys with the corresponding device information as key attributes <b>160</b>. A copy of the information stored in the device inventory database <b>295</b> may be sent to the local key database <b>270</b> as key attributes <b>160</b>.</p><p id="p-0101" num="0100">The key federation interface <b>260</b> may allow one applied key management device <b>110</b> to federate encryption key information with one or more other applied key management devices <b>110</b> (through their associated respective key federation interfaces <b>260</b>) based on an established trust relationship. Each enterprise may include by an applied key management device <b>110</b>. As such, the key federation interface <b>260</b> may maintain a trust relationship with the communication systems of at least one other enterprise. It is, in other words, a gateway to extend trust.</p><p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of an encryption key federation system <b>300</b> as implemented in various embodiments. The key federation system <b>300</b> may implement the applied key management device <b>110</b> as set forth with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>2</b></figref>. The key federation system <b>300</b> may be based on extra-enterprise communication relationship and key federation enabled by the applied key management device <b>110</b> (e.g., the management request handler <b>205</b> and the associated components).</p><p id="p-0103" num="0102">Encryption keys (e.g., asymmetric encryption keys, symmetric encryption keys, and/or the like) generated by components within one enterprise (e.g., enterprise A <b>390</b><i>a</i>) may be distributed to a disparate applied key management device (e.g., the applied key management device <b>110</b>, the management request handler <b>205</b>, and its associated components, and/or the like) of another enterprise (e.g., enterprise B <b>390</b><i>b</i>) pursuant to inspection by the policies <b>115</b> of either (or both) enterprises. This can enable secured communications or data exchange with outside entities (e.g., enterprises) based on the federated trust model. This can also allow encryption management to parallel communications management in supporting external communications to enable symmetric key encryption for communications. Accordingly, performance of the communications platform may be improved, given that utilization of asymmetric encryption may be expensive from a processing perspective as compared to symmetric encryption.</p><p id="p-0104" num="0103">In the key federation system <b>300</b>, each enterprise (e.g., the enterprise A <b>390</b><i>a </i>or the enterprise B <b>390</b><i>b</i>) may be associated with a respective one of an applied key management device A <b>310</b><i>a </i>and an applied key management device B <b>310</b><i>b</i>). Each of the applied key management device A <b>310</b><i>a </i>and the applied key management device B <b>310</b><i>b </i>may be the applied key management device <b>110</b>. The applied key management device A <b>310</b><i>a </i>and the applied key management device B <b>310</b><i>b </i>may be in communication with one another through any suitable network. In particular, the key federation interfaces (e.g., the key federation interface <b>260</b>) of each of the applied key management device A <b>310</b><i>a </i>and the applied key management device B <b>310</b><i>b </i>may be in communication with one another.</p><p id="p-0105" num="0104">In various embodiments, the key management server A <b>330</b><i>a </i>and the key management server B <b>330</b><i>b </i>may be a device such as, but not limited to, the key generation and management device <b>230</b> and the key management interface <b>240</b>. Each of the key management server A <b>330</b><i>a </i>and the key management server B <b>330</b><i>b </i>may be coupled to their respective key federation interfaces <b>206</b> within their respective enterprises in the manner described.</p><p id="p-0106" num="0105">A device A <b>350</b><i>a </i>and a device B <b>350</b><i>b </i>may attempt to obtain an encryption key for the communication therebetween. Each of the device A <b>350</b><i>a </i>and the device B <b>350</b><i>b </i>may be the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>a combination thereof, and/or the like.</p><p id="p-0107" num="0106">An encryption key may be generated within one enterprise (e.g., enterprise A <b>390</b><i>a</i>) from any suitable key source <b>170</b> in the manner described. The encryption key may be generated by the enterprise A <b>390</b><i>a </i>(e.g., by a key source <b>170</b> in the enterprise A <b>390</b><i>a</i>) with or without a request <b>170</b> from either enterprise B <b>390</b><i>b </i>or within enterprise A. The encryption key may likewise be generated by the enterprise B <b>390</b><i>b </i>in a similar manner. The encryption key and its associated key attributes <b>160</b> may be presented to the policy engine of enterprise A <b>390</b><i>a </i>(e.g., the applied key management device A <b>310</b><i>a, </i>which may include the management request handler <b>205</b> and its associated components) for inspection in the manner described. In response to the policy engine of enterprise A <b>390</b><i>a </i>determining the encryption key is accepted based on the encryption key attributes <b>160</b>, the applied key management device <b>310</b><i>a </i>(e.g., the key federation interface <b>260</b>) of enterprise A <b>390</b><i>a </i>may relate the encryption key as well as its associated key attributes <b>160</b> to the applied key management device B <b>310</b><i>b </i>(e.g., the key federation interface <b>260</b>) of enterprise B <b>390</b><i>b. </i></p><p id="p-0108" num="0107">Upon receiving the encryption key and its associated key attributes <b>160</b>, the encryption key and its associated key attributes <b>160</b> may be presented to the policy engine of enterprise B<b>390</b><i>b </i>(e.g., the applied key management device B <b>310</b><i>b, </i>which may also include the management request handler <b>205</b> and its associated components) for inspection in the manner described. The encryption key may be forwarded to both the device A <b>350</b><i>a </i>and the device B <b>350</b><i>b </i>when the applied key management device B <b>310</b><i>b </i>determines that the encryption key is consistent with its policies <b>115</b> defined for enterprise B <b>390</b><i>b. </i>In other words, the encryption key (as defined by its key attributes <b>160</b>) may be allowed only if it is consistent with both sets of policies <b>115</b> of enterprise A <b>390</b><i>a </i>as well as enterprise B <b>390</b><i>b. </i>At least some of the set of policies <b>115</b> of enterprise A <b>390</b><i>a </i>may be different from at least some of the set of policies <b>115</b> of enterprise B <b>390</b><i>b. </i>Whereas the encryption key is found not allowable by either the applied key management device A <b>310</b><i>a </i>or the applied key management device b <b>310</b><i>b, </i>the encryption key may be returned back to the key source <b>170</b> with the &#x201c;denied&#x201d; message and/or the hint in the manner described.</p><p id="p-0109" num="0108">In other embodiments, acceptance by policies <b>115</b> associated with only one enterprise (e.g., either enterprise A <b>390</b><i>a </i>or enterprise B <b>390</b><i>b</i>) may be sufficient for encryption key to be allowed. In such cases, the trust extends to some or sometimes all of the policies <b>115</b>. In addition, each enterprise may include a set of policies <b>115</b> for the federated instances (e.g., each enterprise may have agreed with the other regarding a set of policies <b>115</b> used when communications between the communication devices of the enterprises are to occur. Accordingly, each enterprise may store (e.g., in each respective policy database <b>280</b>) a same set of federated (mutual and reciprocal) policies for the federated schemes. The federated policies may be the same for both the enterprise A <b>390</b><i>a </i>and the enterprise B <b>390</b><i>b. </i>Thus, allowance by one applied key management device associated with one enterprise may be sufficient for the encryption key to be forwarded for usage for communication between both enterprises.</p><p id="p-0110" num="0109">In various embodiments, enterprise federation policies may be stored within each policy database <b>280</b>. The enterprise federation policies may specify the manner in which the encryption keys may be federated. For example, the enterprise federation policies may specify the federated policies, which applied key management device may inspect the key attributes <b>160</b>, which enterprise may issue a request <b>175</b> for an encryption key, which enterprise may generate an encryption key, a combination thereof, and/or the like. The enterprise federation policies allow flexibility in policy defining. For example, the enterprise federation policies may specify that enterprises may each include its own policies <b>115</b> in addition to the federated policies, where at least a part the policies <b>115</b> of each enterprise may be disparate.</p><p id="p-0111" num="0110">In some embodiments, a communication platform A <b>320</b><i>a </i>and a communication platform B <b>320</b><i>b </i>of each respective enterprise may be in communication with one another via any suitable network. Such communication between the communication platforms may be encrypted communications, where the encryption key corresponding to such communication may also be presented for inspection by policies <b>115</b> similar to described with respect to the devices (e.g., the device A <b>350</b><i>a, </i>the device B <b>350</b><i>b, </i>and/or the like). Each communication platform may be in communication to a respective device, such that configurations related to the applied key management systems may be exchanged.</p><p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates an example of a communication device <b>400</b> consuming applied key management services as part of the enterprise according to some embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>4</b></figref>, the communication device <b>400</b> may be a device such as, but not limited to, the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>the cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>the device A <b>350</b><i>a, </i>the device B <b>350</b><i>b, </i>a combination thereof, and/or the like. In some embodiments, the communication device <b>400</b> leverages applied key management to receive encryption keys (or key updates) associated with applications such as, but not limited to, an Email application <b>410</b><i>a, </i>voice-over-internet protocol (VOIP) application <b>410</b><i>b, </i>storage encryption <b>410</b><i>c, </i>and/or other encryption applications <b>410</b><i>d </i>on the communication device <b>400</b>.</p><p id="p-0113" num="0112">The communication device <b>400</b> may be registered with an applied key management platform to receive applied key management services. The communication device <b>400</b> may provide an application interface <b>420</b> based configured to receive with encryption key distribution and encryption key management messages (e.g., the &#x201c;allowed&#x201d; message, the &#x201c;denied&#x201d; message, the hint, and/or the like) from the applied key management device <b>110</b>. The application interface <b>420</b> may be coupled to each of the Email application <b>410</b><i>a, </i>voice-over-internet protocol (VOIP) application <b>410</b><i>b, </i>storage encryption <b>410</b><i>c, </i>and/or other encryption applications <b>410</b><i>d </i>to forward the accepted encryption key to them.</p><p id="p-0114" num="0113">This communication device <b>400</b> may also utilize KMIP by a KMIP proxy <b>430</b> to receive KMIP type commands from the applied key management device <b>110</b>. The KMIP proxy <b>430</b> may be connected to the key store <b>440</b> for managing the encryption keys stored therein. The KMIP proxy <b>430</b> may also be connected to a device-end cryptographic unit <b>450</b>. The device-end cryptographic unit <b>450</b> may be configured to generate encryption keys. In response to the &#x201c;denied&#x201d; message, the device-end cryptographic unit <b>450</b> may generated a different encryption key to present to the policy engine for inspection. Whereas the hint is given, the device-end cryptographic unit <b>450</b> may generate a different encryption key based on the hint. The device-end cryptographic unit <b>450</b> may cache its encryption keys in the key store <b>440</b>. The device-end cryptographic unit <b>450</b> may be coupled to the application interface <b>420</b>. The application interface <b>420</b> may transmit the encryption keys generated along with the key attributes <b>160</b> to the policy engine and forward the response of the policy engine to the device-end cryptographic unit <b>450</b> e.g., when the response is negative.</p><p id="p-0115" num="0114">Accordingly, operation-level policy inspection may be achieved. Given that the communication device <b>400</b> may be capable to interact with the policy engine regarding the encryption keys, the ability to service the request for an encryption key (or inspect the encryption key) by a third-party device (e.g., the policy engine residing in the applied key management device <b>110</b>) acting as administrating may be achieved. The request <b>175</b> for an encryption key or the encryption key may be serviced each communication transaction.</p><p id="p-0116" num="0115"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of a request authentication process <b>500</b> for issuing requests <b>175</b> for encryption keys in various applied key management systems according to some embodiments. The request authentication process <b>500</b> may be internal to the applied key management device <b>110</b>, when the applied key management device <b>110</b> (e.g., the management request handler <b>205</b>, the applied key management device A <b>310</b><i>a, </i>the applied key management device B <b>310</b><i>b, </i>and/or the like) itself generates the encryption keys. In other embodiments, the request authentication process <b>500</b> may be external to the applied key management device <b>110</b> to support integration with existing key management and key generation infrastructure (e.g., the key generation and management device <b>230</b>, the key management server A <b>330</b><i>a, </i>the key management server B <b>330</b><i>b, </i>and/or the like).</p><p id="p-0117" num="0116">First, at block B<b>510</b>, the applied key management device <b>110</b> may provide authentication information to a key source <b>170</b>. As described, such key source <b>170</b> may be the applied key management device <b>110</b> itself, the key generation and management device <b>230</b>, the management user interface <b>220</b>, the key federation interface <b>260</b>, the communication devices (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>source device <b>150</b><i>a, </i>target device <b>150</b><i>b, </i>device A <b>350</b><i>a, </i>device B <b>350</b><i>b, </i>communication device <b>400</b>, a combination thereof, and/or the like), and/or other external key sources. The authentication information may be any suitable authentication method, such as username/passcode request, security handshake algorithms, biometric request, a combination thereof, and/or the like.</p><p id="p-0118" num="0117">Next, at block B<b>520</b>, the applied key management device <b>110</b> may receive authentication response from the key source <b>170</b>. The applied key management device <b>110</b> may authenticate the response and establish trusted relationship between the key source <b>170</b> and the applied key management device <b>110</b>. Next at block B<b>530</b>, the applied key management device <b>110</b>, the management user interface <b>220</b>, the key generation and management device <b>230</b>, the communication devices, and other API calls may issue a key management/generation request (e.g., the request <b>175</b>) to the key source <b>170</b>. In some embodiments, the applied key management device <b>110</b> may forward the request <b>175</b> from a trusted third party (e.g., the communication devices, the management user interface <b>220</b>, the key federation interface <b>260</b>, and/or other third-party devices) to the key source <b>170</b>. In some embodiments, the request <b>175</b> may be directly sent to the key source <b>170</b>. The applied key management device <b>110</b> may be configured to determine whether to generate encryption keys itself or forward the request to another key source <b>170</b> when the request <b>175</b> does not identify the key source <b>170</b>. Next, at block B<b>540</b>, the applied key management device <b>110</b> may receive response (e.g., the encryption keys as requested) from the key source <b>170</b>.</p><p id="p-0119" num="0118">Subsequently, the encryption keys obtained by the applied key management device <b>110</b> may be evaluated based on the key attributes <b>160</b> and the policies <b>115</b> in the manner described. When allowed, the encryption keys may be distributed to the communication devices associated with the corresponding communication transaction. When denied, the applied key management device <b>110</b> may transmit the &#x201c;denied&#x201d; message (and in some instances, the hint) and standby for new encryption keys.</p><p id="p-0120" num="0119">In some embodiments, multiple requests may be sent to a plurality of key sources <b>170</b>, each request may correspond to a single communication transaction. In response, the multiple responses (e.g., encryption keys) may be received from the key sources <b>170</b>. In other embodiments, multiple requests may be sent to a plurality of key sources <b>170</b>, where two or more requests may correspond to a same communication transaction. As the applied key management device <b>110</b> may receive two or more encryption keys from the key sources <b>170</b>. The applied key management device <b>110</b> may determine one of the two or more encryption keys for the communication transaction based on the policies <b>115</b> (e.g., the most secure out of the two or more encryption keys).</p><p id="p-0121" num="0120">Accordingly, large scale distribution by the applied key management device <b>110</b> may be possible in systems including at least one source for the encryption keys and multiple recipient communication devices.</p><p id="p-0122" num="0121"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a process flow diagram illustrating an example of a communication device registration process <b>600</b> implemented in various applied key management systems according to various embodiments. Blocks B<b>610</b>, B<b>620</b>, B<b>630</b> may be executed simultaneously or sequentially in that order. First, at block B<b>610</b> the communication device may be discovered (e.g., by the request handler <b>210</b>). The request handler <b>210</b> may detect that the communication device is present within the enterprise (e.g., the networks associated with the enterprise) automatically.</p><p id="p-0123" num="0122">At block B<b>620</b>, the communication device may be registered (e.g., by the request handler <b>210</b>). In some embodiments, configuration information related to the applied key management systems may be transmitted to the communication device. Device information of the communication device may be transmitted to the local user repository <b>285</b>, device inventory database <b>295</b>, and/or the like. At block B<b>630</b>, the communication device may be enrolled (e.g., by the request handler <b>210</b>). For example, the communication device may transmit a server authentication request the request handler <b>210</b> and receiving a positive authorization response.</p><p id="p-0124" num="0123">Next, at block B<b>640</b>, the communication device may be accepted (e.g., by the request handler <b>210</b>). For example, the request handler <b>210</b> and/or the management request handler <b>205</b> may check existing policies <b>115</b> based on the device information to determine whether the communication device has been classified in the appropriate group, whether the applied key management device <b>110</b> may be capable of managing the communication device, a combination thereof, and/or the like.</p><p id="p-0125" num="0124">Next, at block B<b>650</b>, the request handler <b>210</b> may provide device authentication information to the communication device. The authentication information may include configurations (e.g., credentials, passcodes, and/or the like) to access the applied key management device <b>110</b>. Next, at block B<b>660</b>, the request handler <b>210</b> and/or the management request handler <b>205</b> may define applied key management rules for the communication device. Following block B<b>660</b> at block B<b>670</b> a corresponding identifier, the commination device has been added to an applied key management registration. Subsequently, the communication device may request for encryption keys, generate encryption keys, receive approved encryption keys, and/or the like in the manner described. Such process ensures that the communication device utilizing services provided by the applied key management device <b>110</b> may meet the operable standards of the applied key management device <b>110</b>.</p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates an example of a key management and distribution process <b>700</b> according to various embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>7</b></figref>, the key management and distribution process <b>700</b> may be implemented with communication devices registered, discovered, and/or enrolled with the applied key management device <b>110</b>.</p><p id="p-0127" num="0126">First, at block B<b>710</b>, the management request handler <b>205</b> may define key management command. A key management command may be a particularized command for a key management event (e.g., &#x201c;job&#x201d;). The key management event may be an event triggering a set of algorithms to create encryption keys based on the policies <b>115</b> and distribute (e.g., push) the encryption keys to at least one of the communication devices (e.g., the cellular device <b>250</b><i>a, </i>network device <b>250</b><i>b, </i>. . . , device N <b>250</b><i>n, </i>source device <b>150</b><i>a, </i>target device <b>150</b><i>b, </i>device A <b>350</b><i>a, </i>device B <b>350</b><i>b, </i>communication device <b>400</b>, a combination thereof, and/or the like).</p><p id="p-0128" num="0127">In some embodiments, the key management event may be based on time. For example, the management request handler <b>205</b> may be configured to rekey for at least some (sometimes all) of the communication devices associated with the enterprise (or another enterprise) periodically (e.g., every day, every week, every month, and/or the like). In various embodiments, the key management event may occur automatically through an API call. The API call may be issued from any components internal and/or external to the applied key management device <b>110</b> within a same or disparate enterprise.</p><p id="p-0129" num="0128">The key management event may also be user-defined. For example, the management user interface <b>220</b> may receive user input from the designated user to generate encryption keys immediately for at least one communication device. In such examples, such user-defined key management events may be initiated in response to a sudden event, including cyber-attacks, security breaches, change to the polices <b>115</b>, and/or the like. The management user interface <b>220</b> may also alter the policies <b>115</b> stored within the policy database <b>280</b> in response to these key management events. The new encryption keys created must follow the altered set of policies <b>115</b>.</p><p id="p-0130" num="0129">The key management command may include providing encryption key to some or all communication devices within the same or a disparate enterprise, re-transmitting a same or different encryption key to some or all communication devices within the same or disparate enterprise, a combination thereof, and/or the like. In various embodiments, the management request handler <b>205</b> may define for a plurality of key management commands, each of which may correspond to a communication transaction and/or communication device associated with the enterprise. In further embodiments, the management request handler <b>205</b> may define key management commands for communication devices associated with a disparate enterprise when allowed by the federation model. The management commands (e.g., encryption keys) may be transmitted via the key federation interfaces <b>260</b> associated with each enterprise.</p><p id="p-0131" num="0130">Next, at block B<b>720</b>, the management request handler <b>205</b> may build a key management command queue. A job created in response to the key management event may include a plurality of key management commands, each of which may correspond to a communication device and/or a communication transaction. Accordingly, where the key management commands are generating new encryption keys and distributing to two or more communication devices, the key management commands may be queued (e.g., stored within the transactions database <b>275</b>) for execution, given the volume of the key management commands. As such, a composite command may correspond to key management commands for multiple key sources to issue encryption keys to multiple encryption key receiving communication devices. The composite command may be associated with a plurality of key management commands, and may be stored as a whole in the transaction database <b>275</b> awaiting distribution. Thus, even if a server (e.g., the management request handler <b>205</b>) is shut off before all the key management commands are executed/distributed, the process may resume as soon as the sever is switched on.</p><p id="p-0132" num="0131">Key management command associated with inactive communication devices (e.g., communication devices that may be turned off and/or off the network) may be stored in the transactions database <b>275</b> for future distribution (e.g., when the inactive communication devices are switched on) by the management request handler <b>205</b> at block B<b>730</b>. On the other hand, for active devices (e.g., communication devices that may be turned on and/or on the network), the key management command may be executed by the management request handler <b>205</b> at block B<b>740</b>.</p><p id="p-0133" num="0132">For example, the management request handler <b>205</b> may request encryption keys from key sources <b>170</b> based on the key management commands at block B<b>750</b>. For example, the key management commands may specify one or more key sources <b>170</b> to issue encryption keys to the communication devices. Accordingly, some communication devices may receive encryption keys from a first key source while other communication devise may receive encryption keys from a second different key source. Next, at block B<b>760</b>, the management request handler <b>205</b> may distribute encryption keys to the communication devices. In some embodiments, the management request handler <b>205</b> may perform encryption key inspection based on the key attributes <b>160</b> and the set of policies <b>115</b> in the manner described. Once approved, the management request handler <b>205</b> may forward the encryption keys to the corresponding communication devices through the request handler <b>210</b>.</p><p id="p-0134" num="0133">Next, at block B<b>770</b>, the management request handler <b>205</b> may receive response to the distribution from the communication devices. For example, the management request handler <b>205</b> may determine, based on the responses of the communication devices, whether such distribution was successful at block B<b>780</b>. Whereas the management request handler <b>205</b> determines that the distribution was successful with respect to a given communication device (e.g., that communication device has received the encryption key distributed to it), positive feedback may be provided to the management request handler <b>205</b> at block B<b>795</b>.</p><p id="p-0135" num="0134">On the other hand, whereas the management request handler <b>205</b> determines that the distribution was unsuccessful (e.g., that communication device has not received the encryption key distributed to it) for a given communication device, a negative response of that communication device may be provided to the management request handler <b>205</b> at block B<b>790</b>. The management request handler <b>205</b> may then determine whether to attempt to execute the key management command again at a later time for that communication device based on preexisting algorithms or user input at block B<b>798</b>.</p><p id="p-0136" num="0135">When management request handler <b>205</b> determines that execution of the key management commands (e.g., the distribution of the encryption) is not to be attempted again (B<b>798</b>:NO), the process ends. On the other hand, whereas the management request handler <b>205</b> determines that key management commands not successfully distributed are to be attempted again (B<b>798</b>:YES), the key management commands may be stored at block B<b>730</b> (e.g., in the transactions database <b>275</b>) for future distribution.</p><p id="p-0137" num="0136">In some embodiments, when distribution of the key management commands may be unsuccessful, the management request handler <b>205</b> may determine to retry distribution of the unsuccessful key management commands (B<b>780</b>:RETRY). For example, the management request handler <b>205</b> may again execute key management commands for active devices at block B<b>740</b>.</p><p id="p-0138" num="0137"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a process flow diagram illustrating an example of an encryption key federation process <b>800</b> according to various embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>8</b></figref>, applied key management devices <b>110</b> (e.g., both in a same local enterprise and in a foreign enterprise) may mutually authenticate and distribute encryption keys based on the policies <b>115</b> implemented for applied key management devices <b>110</b> or each enterprise for federating encryption keys from one enterprise to another enterprise. In addition, the encryption key federation process <b>800</b> may also include the receiving of encryption keys from a foreign applied key management device as a result of the federation policy of the foreign applied key management device.</p><p id="p-0139" num="0138">First, at block B<b>810</b>, the local applied key management device (e.g., the applied key management device A <b>310</b><i>a</i>) may provide authentication information to a foreign applied key management device (e.g., the applied key management device B <b>310</b><i>b</i>). The authentication information may be any suitable authentication prompt and/or request for federation. Next, at block B<b>820</b>, the local applied key management device may receive authentication response from the foreign applied key management device agreeing to initiation the federation model. The blocks B<b>810</b> and B<b>820</b> may represent typical security credential handshakes, where federation trust has been established between the two enterprises.</p><p id="p-0140" num="0139">Next, at block B<b>830</b>, the local applied key management device may provide trust policy information to the foreign applied key management device. At block B<b>840</b>, the local applied key management device may receive trust policy information from the foreign applied key management device. The trust policy information may include any configurations, settings, extent of trust, mutually agreed policies, a combination thereof, and/or the like.</p><p id="p-0141" num="0140">Next, at block B<b>850</b>, the local applied key management device and the foreign applied key management device may manage and distribute key information (e.g., the encryption key, the associated key attributes <b>160</b>, a combination thereof, and/or the like) in the manner described.</p><p id="p-0142" num="0141">In particular embodiments, the foreign applied key management device transmit the request <b>175</b> to the local applied key management device for generating the encryption key for a communication transaction between a communication device associated with the foreign applied key management device and a communication device associated with the local applied key management device. The encryption key may be generated by the local applied key management device and inspected by local policy engine. The encryption key may be transmitted to the foreign applied key management device for inspection by the foreign policy engine in some embodiments, but not others.</p><p id="p-0143" num="0142">In some embodiments, instead of the request <b>175</b>, the foreign applied key management device may transmit a generated encryption key (which may or may not have been inspected by policy engine of the foreign applied key management device depending on trust policy information specified). The local applied key management device may or may not inspect the encryption key and its associated key attributes <b>160</b> by policies <b>115</b> based on the trust policy information specified between the enterprises.</p><p id="p-0144" num="0143"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a process flow diagram illustrating an example of an encryption key management and distribution process <b>900</b> according to various embodiments. In various embodiments, the encryption key management and distribution process <b>900</b> may incorporate elements of applied key management, including key management, key distribution, and key federation.</p><p id="p-0145" num="0144">First, at block B<b>910</b>, a set of policies <b>115</b> may be defined, where each policy <b>115</b> may relate to one or more key attributes <b>160</b>. The policies <b>115</b> may be defined by designed personnel and stored in the policy database <b>280</b> for future retrieval and update. Next, at block B<b>920</b>, the management request handler <b>205</b> may receive encryption key and at least one key attribute associated with the encryption key from the key source <b>170</b> in the manner described.</p><p id="p-0146" num="0145">Next, at block B<b>930</b>, the management request handler <b>205</b> may determine acceptability of the encryption key received based, at least in part, on the at least one key attribute and the set of policies <b>115</b> that relate to one of the at least one key attribute. For example, the management request handler <b>205</b> may check a value corresponding to a key attribute <b>160</b> to determine whether the value is within an acceptable range as defined by the policies <b>115</b> in the manner described.</p><p id="p-0147" num="0146">Next, at block B<b>940</b>, the management request handler <b>205</b> may determine whether the encryption key is acceptable. Whereas the encryption key is acceptable (B<b>940</b>:YES), the management request handler <b>205</b> may distribute the encryption key to the communication devices requiring the key for the communication transaction therebetween, at block B<b>950</b>. On the other hand, whereas the encryption key is unacceptable (B<b>940</b>:NO), the management request handler <b>205</b> may transmit the &#x201c;denied&#x201d; message to the key source <b>170</b> at block B<b>960</b>. Optionally, the management request handler <b>205</b> may transmit the hint to the key source to facilitate key generation at block B<b>970</b>. The management request handler <b>205</b> may then standby until receiving a second encryption key (and associated key attributes <b>160</b>) at block B<b>920</b>.</p><p id="p-0148" num="0147">The applied key management system (e.g., the applied key management device <b>110</b>, the management request handler <b>205</b>, applied key management device A <b>310</b><i>a, </i>applied key management device B <b>310</b><i>b, </i>and/or the like) described herein may be implemented on any suitable computing devices having a processor and a memory device. The processor may include any suitable data processing device, such as a general-purpose processor (e.g., a microprocessor), but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. The processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, at least one microprocessor in conjunction with a DSP core, or any other such configuration. The memory may be operatively coupled to the processor and may include any suitable device for storing software and data for controlling and use by the processor to perform operations and functions described herein, including, but not limited to, random access memory RAM, read only memory ROM, floppy disks, hard disks, dongles or other RSB connected memory devices, or the like.</p><p id="p-0149" num="0148">The applied key management device <b>110</b>, the management request handler <b>205</b>, applied key management device A <b>310</b><i>a, </i>and/or applied key management device B <b>310</b><i>b </i>may be implemented on suitable operating systems (OS) such as, but not limited to, the Linux OS, Windows, the Mac OS, and the like. Additionally, the applied key management device <b>110</b>, the management request handler <b>205</b>, applied key management device A <b>310</b><i>a, </i>and/or applied key management device B <b>310</b><i>b </i>may be implemented on small form factors such as embedded systems.</p><p id="p-0150" num="0149">In some embodiments, the policies <b>115</b> may be organized in a hierarchical structure for a structured organization of the policies <b>115</b>. A structured organization may be a well-known, documented, and understood organization structure. For example, the policies <b>115</b> may be organized in a Directed Acyclic Graph in some embodiments. The Directed Acyclic Graph may be a hierarchical graph having nodes (vertices) and directed edges. The directed edges may indicate an order or hierarchy in which the nodes are organized. In other embodiments, the policies <b>115</b> may be organized in other suitable hierarchical structures such as, but not limited to, a tree. Each node of the Directed Acyclic Graph or tree may be associated with a particular hierarchical entity of the structured organization. Each node may represent a conceptual level, subdivision, department, collection of clients, and/or the like of a structured organization of a company or other organization. For example, a policy hierarchy may correspond to an overall structure of a company, and a first node may represent a department (e.g., an accounting department) of the company and a second node may represent another department (e.g., an engineering department) of the same company. In other embodiments, a node may be associated with particular devices to be associated with the node. For example, a first node may be associated with source devices <b>150</b><i>a </i>and a second node may be associated with target or destination devices <b>150</b><i>b. </i></p><p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. <b>10</b>A</figref> is a diagram illustrating an example of a policy hierarchy <b>1000</b> according to some embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>10</b></figref>, the policy hierarchy <b>1000</b> may be a Directed Acyclic Graph having a root node <b>1010</b>, Node A <b>1020</b>, Node B <b>1030</b>, and Node C <b>1040</b>. A node (e.g., the root node <b>1010</b>, Node A <b>1020</b>, Node B <b>1030</b>, or Node C <b>1040</b>) may be associated with one or more devices such as, but not limited to, the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>and/or the like. In some embodiments, a node may be associated with one or more devices such as, but not limited to, the key source <b>170</b>, key generation and management device <b>230</b>, and/or the like.</p><p id="p-0152" num="0151">In addition or alternatively, each node may be associated with at least one policy <b>115</b> such as, but not limited to, the complex policies EQUAL, ONE-OF, MEMBER OF, NULL, NOT-NULL, GREATER-THAN, GREATER-THAN-OR-EQUAL-TO, LESS-THAN, LESS-THAN-OR-EQUAL-TO, and/or the like described herein. Accordingly, each device associated with a given node may also be associated with the policies <b>115</b> corresponding to that node.</p><p id="p-0153" num="0152">In some embodiments, child nodes may inherit the policies <b>115</b> of parent node(s) based on parentage set forth in the policy hierarchy <b>1000</b>. For example, the root node <b>1010</b> may be a parent node to Node A <b>1020</b> and Node C <b>1040</b>. Node A <b>1020</b> and Node C <b>1040</b> may be child nodes to the root node <b>1010</b>. Node A <b>1020</b> may be a parent node to Node B <b>1030</b>. Node B <b>1030</b> may be a child node to Node A <b>1020</b>. In some embodiments, policies <b>115</b> associated with the root node <b>1010</b> may also be associated with devices corresponding with Node A <b>1020</b> and Node C <b>1040</b> through inheritance. In some embodiments, policies <b>115</b> associated with Node A <b>1020</b> may be associated with devices corresponding to Node B <b>1030</b>. In some embodiments, policies <b>115</b> associated with the root node <b>1010</b> may be associated with devices corresponding to Node B <b>1030</b>, through inheritance. In some embodiments, a child node in the policy hierarchy <b>1000</b> has only one direct parent node.</p><p id="p-0154" num="0153">In some embodiments, the policy hierarchy <b>1000</b> may further include Node D <b>1050</b> and Node E <b>1060</b>, which may be child nodes of Node C <b>1040</b>. Because they are child nodes of Node C <b>1040</b>, Node D <b>1050</b> and Node E <b>1060</b> may also inherit the policies of Node C <b>1040</b>, which in turn inherited the policies of the Root Node <b>1010</b>. Accordingly, the policy hierarchy <b>1000</b> may be segmented into levels, with Level <b>0</b> including the Root Node <b>1010</b>, Level <b>1</b> including Node A <b>1020</b> and Node C <b>1040</b> (child nodes of Root Node <b>1010</b>), Level <b>2</b> including Node B <b>1030</b> (child node of Node A <b>1020</b>), Node D <b>1050</b> and Node E <b>1060</b> (child nodes of Node C <b>1040</b>). In various embodiments, any suitable number of levels including parent and child nodes may be implemented as desired by an administrator (e.g., 50 levels of nodes with numerous nodes positioned at each level).</p><p id="p-0155" num="0154">In some embodiments, the policy defined at the Level <b>0</b> Root Node <b>1010</b> is inherited by all other nodes in the policy hierarchy <b>1000</b> (e.g., node at level <b>1</b>, level <b>2</b>, and so on). As such, the Root Node <b>1010</b> allows for defining global devices and global policy that can be consumed for a single enterprise or in a multi-tenancy model where applied key management functions are consumed.</p><p id="p-0156" num="0155">In some embodiments, while policy inheritance in the policy hierarchy <b>1000</b> provides a top to bottom scheme (e.g., policies are inherited by child nodes from parent nodes), visibility of devices in the policy hierarchy <b>1000</b> exhibit a bottom to top design. In other words, child nodes may have visibility of all devices associated with their parent nodes. In some embodiments, visibility refers to a device's accessibility to another device, such as via communication with the other device. For example, a device associated with Node B <b>1030</b> may be a target device <b>150</b><i>b </i>and a device associated with Node A <b>1020</b> may be a source device <b>150</b><i>a, </i>and the source device <b>150</b><i>a </i>may be said to be visible to the target device <b>150</b><i>b. </i>In some embodiments, in practice, devices associated with the Root Node <b>1010</b> may be visible to all other devices in the policy hierarchy <b>1000</b>. As another example, the devices associated with Node A <b>1020</b> may be visible to the devices associated with Node B <b>1030</b>. In some embodiments, devices associated with separate nodes at the same level in the policy hierarchy <b>1000</b> do not have visibility with each other. For example, devices associated with Node A <b>1020</b> may not have visibility with devices associated with Node C <b>1040</b>. Similarly, in some embodiments, Node A <b>1020</b> and Node C <b>1040</b> do not inherit policies from one another, as the policies of Node A <b>1020</b> and Node C <b>1040</b> are separately inherited from the Root Node <b>1010</b>. In some embodiments, the devices associated with a parent node are visible to each of the parent node's child node devices. However, in some embodiments, the devices associated with the child nodes are not visible to devices of the parent node.</p><p id="p-0157" num="0156">In some embodiments, the organization of the policy hierarchy <b>1000</b> and the nodes that make up the policy hierarchy <b>1000</b> are created by and stored in the encryption applied key management system <b>200</b>. In some embodiments, a user at the management user interface <b>220</b> can create, assign, and modify the nodes in the policy hierarchy <b>1000</b>. Furthermore, the user can assign, create, and modify policies to be associated with one or more of the nodes. In some embodiments, the user can assign or register devices <b>250</b> to a node in the policy hierarchy <b>1000</b>. Accordingly, a device <b>250</b> that is assigned to a node may be bound by the policies associated with the assigned node. In some embodiments, a plurality of device may be assigned to a node. In some embodiments, no devices are assigned to a node.</p><p id="p-0158" num="0157">In some embodiments, the framework of the nodes and the associated policies and devices of each of the nodes are stored within a database of the encryption applied key management system <b>200</b>, such as, but not limited to, one or more of databases <b>270</b>, <b>275</b>, <b>280</b>, <b>285</b>, <b>290</b>, and <b>295</b>. In other embodiments, the encryption applied key management system <b>200</b> includes a policy hierarchy database for storing the policy hierarchy data, such as, but not limited to, position of nodes within the hierarchy (e.g., levels), what node individual devices are assigned to, what policies are associated with respective nodes, and/or the like. In some embodiments, the policy hierarchy database accesses other databases in the encryption applied key management system <b>200</b> for relevant data. For example, the policy hierarchy database may access the policy database <b>280</b> and device inventory database in assigning and associating the policies and the devices with the nodes.</p><p id="p-0159" num="0158">In some embodiments, each of the nodes in the policy hierarchy <b>1000</b> is assigned a unique identifier, such as, but not limited to, a universally unique identifier (UUID). The data corresponding to the nodes and the unique identifier may be stored in a policy hierarchy database in the encryption applied key management system <b>200</b>. Similarly, devices to be associated with nodes and policies to be associated with nodes may each also be assigned a unique identifier. Accordingly, for associating nodes with policies and devices, the policies and devices may reference the unique identifier of the assigned node. In other embodiments, the nodes reference the unique identifiers of the policies and/or the devices for association. In various embodiments, the data including the identifiers and referencing information of the nodes, policies, or devices are stored in a database in the encryption applied key management system <b>200</b> (e.g., in a policy hierarchy database) for access. In some embodiments, the unique identifiers and the referencing data of the nodes, policies, or devices are stored as any suitable data structure, such as, but not limited to, a data table.</p><p id="p-0160" num="0159">In some embodiments, a user may create and define policies associated with various nodes (e.g., a user at the management user interface <b>220</b>). In creating a node and policies associated therewith, a user may designate various attributes associated with the new node, such as, but not limited to, a level at which the new node will be inserted, a parent node of the new node (e.g., by referencing an identifier associated with the parent node), devices to be registered with the node, policies to be associated with the new node, and/or the like. The newly created node may be stored in a database (e.g., policy database <b>280</b>). Moreover, the user may register devices to be incorporated into the policy hierarchy <b>1000</b> by associating the devices with a particular node (e.g., by referencing an ID of a particular node). For example, a device (e.g., a source device <b>150</b><i>a </i>or a target device <b>150</b><i>b</i>) may be registered by referencing a node that the device is to be associated with, such that the device can follow the policies associated with the associated node. In some embodiments, registered devices are associated with a node of the policy hierarchy <b>1000</b> as part of a registration process of the devices. On the other hand, in some embodiments, a node may be established without associating any devices or policy with the node. In other embodiments, a created node may have one or more destination or target devices <b>150</b><i>b </i>or one or more source devices <b>150</b><i>a </i>associated with the node.</p><p id="p-0161" num="0160">In some embodiments, a child node may be associated with a parent node, and the child node may inherit the policies of the parent node. In such embodiments, the policies of the parent node may be modified (e.g., a policy may be added to the parent node or deleted from the parent node). In some embodiments, the newly updated policies of the parent node will percolate down to the child node, and the policies of the child node will be updated accordingly. For example, Node A <b>1020</b> may be associated with a first policy and a second policy, which are inherited by Node B <b>1030</b>. An administrator may disassociate the second policy from Node A <b>1020</b>, and thus the disassociation of the second policy from Node B <b>1030</b> may also occur through inheritance. Accordingly, active inheritance may be exhibited by the nodes in the policy hierarchy <b>1000</b>, in which nodes may continuously update their policies based on changes to policies with respect to parent nodes.</p><p id="p-0162" num="0161">In some embodiments, associated devices may also update the policies associated with them based on updated policies at nodes to which the devices are assigned. For example, if the second policy is disassociated from Node B <b>1030</b>, the second policy may also be disassociated from all of the devices assigned to Node B <b>1030</b>, and therefore applied key management functions performed with respect to one or more of the devices associated with Node B <b>1030</b> may no longer be evaluated against the second policy.</p><p id="p-0163" num="0162"><figref idref="DRAWINGS">FIG. <b>10</b>B</figref> is a diagram illustrating an example of the policy hierarchy <b>1000</b> in an applied key management environment according to various embodiments. Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>10</b>B</figref>, the Root Node <b>1010</b> may be associated with one or more policies, Node A may be associated with the policies inherited from the Root node <b>1010</b> and other additional policies, and Node B <b>1030</b> may be associated with the policies inherited from Node A <b>1020</b>. Moreover, one or more source devices (e.g., source device <b>150</b><i>a</i>) may be associated with Node A <b>1020</b>, and one or more destination devices (e.g., target device <b>150</b><i>b</i>) may be associated with Node B <b>1030</b>. By way of example, the source devices associated with Node A <b>1020</b> may be a hardware security module, a key management device, or other encryption key sources, and the destination devices associated with Node B <b>1030</b> may be computers, communication device, or other user application infrastructure.</p><p id="p-0164" num="0163">In some embodiments, the hierarchical structure <b>1000</b> illustrated in <figref idref="DRAWINGS">FIG. <b>10</b>B</figref> provides organization for facilitating the various applied key management services, including key management, key distribution, and key federation. An applied key management job may be performed with respect to a destination device associated with Node B <b>1030</b> or a plurality of destination devices associated with node B <b>1030</b>. As such, an applied key management job may be targeted against a node of the policy hierarchy <b>1000</b> (e.g., Node B <b>1030</b>). Accordingly, as an example, an applied key management job targeting Node B <b>1030</b> can use key sources from Node A <b>1020</b>, in conjunction with the policies inherited and/or added to the Node B <b>1030</b>. In some embodiments, an applied key management job (e.g., key distribution, key federation, or key management) targeting Node B <b>1030</b> may target an individual device associated with Node B <b>1030</b> or a group of devices associated with Node B <b>1030</b>.</p><p id="p-0165" num="0164">As an example, a device at Node B <b>1030</b> may request an encryption key for a communication, and a device at Node A <b>1020</b> may supply the encryption key. However, in order for the key to be used, the encryption applied key management system <b>200</b> may first evaluate the key for acceptability (i.e., perform an applied key management job) against the policies associated with Node B <b>1030</b>. Accordingly, if each of the one or more key attributes associated with the encryption key generated by the device associated with Node A <b>1020</b> passes the policies of Node B <b>1030</b>, then the encryption applied key management system <b>200</b> may authorize the generated key for use with respect to the requesting device associated with Node B <b>1030</b>.</p><p id="p-0166" num="0165">In some embodiments, the defined policy hierarchy <b>1000</b> allows for other nodal applied key management functions, such as, but not limited to, a policy-based inspection of registered devices as the devices are registered to a specific node within the policy hierarchy <b>1000</b>. Accordingly, this type of nodal-based policy inspection may result in fewer policy violations associated with non-compliant devices that consume applied key management services.</p><p id="p-0167" num="0166">In some embodiments, clients may refer to devices that consume applied key management services provided by the applied key management device <b>110</b>. For example, the clients may refer to one or more devices such as, but not limited to, the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>and/or the like. Users may refer to consumers of key management interface <b>240</b> and/or the management user interface <b>220</b>. For example, the users may refer to the key generation and management device <b>230</b>.</p><p id="p-0168" num="0167">In some embodiments, the policies <b>115</b> may be defined and/or evaluated on a basis of a policy hierarchy (e.g., the policy hierarchy <b>1000</b>). For example, each node (e.g., the nodes <b>1010</b>-<b>1040</b>) may have a set of policies <b>115</b> associated with any device designated for that node</p><p id="p-0169" num="0168">In some embodiments, the policies <b>115</b> may be defined and/or evaluated on a basis of clients. For example, each client may be associated with a particular set of policies <b>115</b> for that client. Illustrating with a non-limiting example, an encryption key for the cellular device <b>250</b><i>a </i>may be defined and/or evaluated based on at least a first set of policies associated for the cellular device <b>250</b><i>a </i>while an encryption key for the network device <b>250</b><i>b </i>may be defined and/or evaluated based on a second set of policies associated with the network device <b>250</b><i>b. </i></p><p id="p-0170" num="0169">In some embodiments, the policies <b>115</b> may be defined and/or evaluated on a basis of users. For example, each user may be associated with a particular set of policies <b>115</b> for clients administrated by the user. Illustrating with a non-limiting example, an encryption key for a device administrated by the key generation and management device <b>230</b> may be defined and/or evaluated based on a first set of policies associated with the key generation and management device <b>230</b> while another device administrated by another user (such as, but not limited to, the key generation and management device <b>230</b>) may be defined and/or evaluated based on a second set of policies associated with the another user.</p><p id="p-0171" num="0170">In some embodiments, the policies <b>115</b> may be defined and/or evaluated based on a combination of one or more of the policy hierarchy, clients, or users. Illustrating with a non-limiting example, with respect to a particular communication transaction or action of a particular device (e.g., the source device <b>150</b><i>a, </i>the target device <b>150</b><i>b, </i>cellular device <b>250</b><i>a, </i>the network device <b>250</b><i>b, </i>. . . , the device N <b>250</b><i>n, </i>and/or the like), an encryption key may be evaluated based on policies consistent with a sum of policies corresponding to a node associated with the device, the policies specific to that device (client), and the policies associated with the user administrating encryption keys for the device.</p><p id="p-0172" num="0171">In some embodiments, the policies <b>115</b> may include an EQUAL (or EQ) policy. The EQUAL policy may be concerned with whether a key attribute of an encryption key is equivalent or identical to a policy value. Illustrating with a non-limiting example, the EQUAL policy may evaluate whether a size (e.g., length) of an encryption key is identical or equivalent to the policy value. Illustrating with another non-limiting example, the EQUAL policy may evaluate whether a name (or a portion thereof) of an encryption key is identical or equivalent to the policy value.</p><p id="p-0173" num="0172">In some embodiments, the policies <b>115</b> may include a ONE-OF policy. The ONE-OF policy may be concerned with whether a key attribute of an encryption key is a member of a set. Illustrating with a non-limiting example, the ONE-OF policy may evaluate whether a size of an encryption key is one of a set of different sizes. Illustrating with another non-limiting example, the ONE-OF policy may evaluate whether a name (or a portion thereof) of an encryption key is one of a set of different names.</p><p id="p-0174" num="0173">In some embodiments, the policies <b>115</b> may include a MEMBER-OF policy. The MEMBER-OF policy may be concerned with a parentage (with respect to the nodes) or association (with respect to groups) of a key attribute <b>160</b> of an encryption key. The key attribute <b>160</b> associated with the MEMBER-OF policy may be a client or user from which the encryption key is requested or generated. Illustrating with a non-limiting example, the MEMBER-OF policy may evaluate whether a given client or user is associated with a node or group based on a policy value. The policy value may indicate a name, tag, or another type of identifier representing the node or group. In some embodiments, a given client or user may be associated with a node or group for the purposes of the MEMBER-OF policy if the client or user directly belongs to the node or group. In additional or alternative embodiments, a given client or user may be associated with a node (e.g., Node A <b>1020</b>) for the purposes of the MEMBER-OF policy if the client or user belongs to a child node (e.g., Node B <b>1030</b>) or parent node (e.g., the root node <b>1010</b>) of that node (e.g., Node A <b>1020</b>). In additional or alternative embodiments, a given client or user may be associated with a group (e.g., Group B <b>1120</b>) for the purposes of the MEMBER-OF policy if the client or user belongs to a group (e.g., Group A <b>1110</b>) that is included in that group (e.g., Group B <b>1120</b>).</p><p id="p-0175" num="0174">In some embodiments, the policies <b>115</b> may include a NULL policy. The NULL policy may be concerned with whether a key attribute of an encryption key is set to NULL. Illustrating with a non-limiting example, the NULL policy may evaluate whether a date (e.g., date created, date deleted, date modified, date approved, date relocated, and/or the like) associated with an encryption key is set to NULL, as compared to another value. Illustrating with another non-limiting example, the NULL policy may evaluate whether a name of an encryption key is set to NULL, as compared to another value.</p><p id="p-0176" num="0175">In some embodiments, the policies <b>115</b> may include a NOT-NULL policy. The NOT-NULL policy may be concerned with whether a key attribute of an encryption key is set to a non-NULL value. Illustrating with a non-limiting example, the NOT-NULL policy may evaluate whether a date (e.g., date created, date deleted, date modified, date approved, date relocated, and/or the like) associated with an encryption key is set to a non-NULL value, as compared to NULL. Illustrating with another non-limiting example, the NOT-NULL policy may evaluate whether a name of an encryption key is set to a non-NULL value, as compared to NULL.</p><p id="p-0177" num="0176">In some embodiments, the policies <b>115</b> may include a GREATER-THAN policy. The GREATER-THAN policy may be concerned with whether a key attribute of an encryption key is greater than a policy value. Illustrating with a non-limiting example, the GREATER-THAN policy may evaluate whether a size of an encryption key is greater than a policy value. Illustrating with another non-limiting example, the GREATER-THAN policy may evaluate whether an ASCII value or a number of characters of a name (or a portion thereof) of an encryption key is greater than a policy value.</p><p id="p-0178" num="0177">In some embodiments, the policies <b>115</b> may include a GREATER-THAN-OR-EQUAL-TO policy. The GREATER-THAN-OR-EQUAL-TO policy may be concerned with whether a key attribute of an encryption key is greater than or equal to a policy value. Illustrating with a non-limiting example, the GREATER-THAN-OR-EQUAL-TO policy may evaluate whether a size of an encryption key is greater than or equal to a policy value. Illustrating with another non-limiting example, the GREATER-THAN-OR-EQUAL-TO policy may evaluate whether an ASCII value or a number of characters of a name (or a portion thereof) of an encryption key is greater than or equal to a policy value.</p><p id="p-0179" num="0178">In some embodiments, the policies <b>115</b> may include a LESS-THAN policy. The LESS-THAN policy may be concerned with whether a key attribute of an encryption key is less than a policy value. Illustrating with a non-limiting example, the LESS-THAN policy may evaluate whether a size of an encryption key is less than a policy value. Illustrating with another non-limiting example, the LESS-THAN policy may evaluate whether an ASCII value or a number of characters of a name (or a portion thereof) of an encryption key is less than a policy value.</p><p id="p-0180" num="0179">In some embodiments, the policies <b>115</b> may include a LESS-THAN-OR-EQUAL-TO policy. The LESS-THAN-OR-EQUAL-TO policy may be concerned with whether a key attribute of an encryption key is less than or equal to a policy value. Illustrating with a non-limiting example, the LESS-THAN-OR-EQUAL-TO policy may evaluate whether a size of an encryption key is less than or equal to a policy value. Illustrating with another non-limiting example, the LESS-THAN-OR-EQUAL-TO policy may evaluate whether an ASCII value or a number of characters of a name (or a portion thereof) of an encryption key is less than or equal to a policy value.</p><p id="p-0181" num="0180"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a process flow diagram illustrating an example of organizing a policy hierarchy process according to various embodiments.</p><p id="p-0182" num="0181">Referring to <figref idref="DRAWINGS">FIGS. <b>1</b>-<b>11</b></figref>, the process <b>1100</b> may be for organizing devices in a policy hierarchy, such as policy hierarchy <b>1000</b>. At step B<b>1110</b>, the method <b>1100</b> may include creating a first node. The first node may be a root node (e.g., Root Node <b>1010</b>) or may be another node downstream from the root node (e.g., Node A <b>1020</b> or Node B <b>1030</b>). The first node may be created by an administrator of the encryption applied key management system <b>200</b>.</p><p id="p-0183" num="0182">At step B<b>1120</b>, the method <b>1100</b> may include assigning a first policy to the first node. The assigning may be performed by an administrator of the encryption applied key management system <b>200</b>. The first policy may be one of the complex policies described above. The assigning may be facilitated by referencing a unique identifier of the first node or of the first policy to associate the first node and the first policy with each other.</p><p id="p-0184" num="0183">At step B<b>1130</b>, the method <b>1100</b> may include creating a second node. The second node may be a child node of the first node such that the second node inherits the first policy associated with the first node. The first and second nodes may be stored as a data structure (e.g., a data table) in a database in the encryption applied key management system <b>200</b>. The second node may refer to a unique identifier associated with the first node to indicate that the second node is a child node of the first node and the first node is a parent node of the second node.</p><p id="p-0185" num="0184">In some embodiments, the method <b>1100</b> may include assigning a second policy to the second node such that the second node is assigned the first policy and the second policy. In some embodiments, the second node may be assigned additional policies to those inherited from the first node. Accordingly, a child node of the second node may inherit the policies inherited by the second node and the policies added to the second node thereafter. The assigning may be performed by an administrator of the encryption applied key management system <b>200</b>. The second policy may be one of the complex policies described above. The assigning may be facilitated by referencing a unique identifier of the second node or of the second policy to associate the second node and the second policy with each other.</p><p id="p-0186" num="0185">In some embodiments, the method <b>1100</b> may include creating a third node. The third node may reference the second node as a parent node such that the third node inherits the first policy and the second policy of the second node. The third node may be a child node of the second node such that the third node inherits the policies associated with the second node. The third node may be stored as a data structure (e.g., a data table) in a database in the encryption applied key management system <b>200</b>. The third node may refer to a unique identifier associated with the second node to indicate that the third node is a child node of the second node and the second node is a parent node of the third node.</p><p id="p-0187" num="0186">In some embodiments, the method <b>1100</b> further includes registering a first device to the first node such that the first device is bound by the first policy of the first node, and registering a second device to the second node such that the second device is bound by the first and second policies of the second node. Each device of an enterprise may be associated with a node of the policy hierarchy <b>1000</b>. Registering of the first and second devices may include referencing an identifier of the first node. Data corresponding to the registration of the devices (e.g., the referencing data and unique identifiers associated with devices) may be stored in a database in the encryption applied key management system <b>200</b>. The first device and/or the second device may be a source device <b>150</b><i>a </i>or a target device <b>150</b><i>b. </i>The first device may be visible to the second device because the first device is at a higher level in the policy hierarchy <b>1000</b> than the second device is.</p><p id="p-0188" num="0187">In some embodiments, the method <b>1100</b> may further include performing an applied key management operation on the second device registered to the second node such that the applied key management operation is evaluated based on the first and second policies of the second node. The applied key management operation may include one of key management, key distribution, or key federation. For example, the applied key management operation may evaluate a key generated for the second device, and may evaluate that key against the policies associated with the second node, since the second device is assigned to the second node.</p><p id="p-0189" num="0188">In some embodiments, the method <b>1100</b> may further include receiving an encryption key having a key attribute from the first device. The method <b>1100</b> may further include determining acceptability of the encryption key based on the key attribute and the first and second policies of the second device associated with the second device. The method <b>1100</b> may further include, in response to determining that the encryption key is acceptable, distributing the encryption key to the second device. As such, the applied key management operation can be said to be performed against the second node, to which the second device is assigned.</p><p id="p-0190" num="0189">In some embodiments, the method <b>1100</b> may further include creating a third policy, and assigning the third policy to the second node such that the second node is assigned the first policy, the second policy, and the third policy. A user at the encryption applied key management system <b>200</b> may update the second node to include the third policy. Accordingly, in some embodiments, the method <b>1100</b> may further include updating the second device to be bound by the first, second, and third policies of the second node, as the second device may be updated consistent with the policy update of the assigned second node.</p><p id="p-0191" num="0190">The embodiments described with respect to the figures relate to encryptions keys. It should be appreciated by one of ordinary skills in the art that, in other embodiments, the systems and methods directed to the applied key management device <b>110</b> involving management, distribution, and federation may be likewise implemented for other sensitive objects such as, but not limited to, user identity information, certificates, biometric data, random number generator data, determinate random number generator data, non-determinate random number generator data, user authentication information, policy components, other components associated with organization security component, and/or the like.</p><p id="p-0192" num="0191">Various embodiments described above with reference to the figures include the performance of various processes or tasks. In various embodiments, such processes or tasks may be performed through the execution of computer code read from computer-readable storage media. For example, in various embodiments, one or more computer-readable storage mediums store one or more computer programs that, when executed by a processor cause the processor to perform processes or tasks as described with respect to the processor in the above embodiments. Also, in various embodiments, one or more computer-readable storage mediums store one or more computer programs that, when executed by a device, cause the computer to perform processes or tasks as described with respect to the devices mentioned in the above embodiments. In various embodiments, one or more computer-readable storage mediums store one or more computer programs that, when executed by a database, cause the database to perform processes or tasks as described with respect to the database in the above embodiments.</p><p id="p-0193" num="0192">Thus, embodiments include program products comprising computer-readable or machine-readable media for carrying or having computer or machine executable instructions or data structures stored thereon. Such computer-readable storage media can be any available media that can be accessed, for example, by a general purpose or special purpose computer or other machine with a processor. By way of example, such computer-readable storage media can comprise semiconductor memory, flash memory, hard disks, optical disks such as compact disks (CDs) or digital versatile disks (DVDs), magnetic storage, random access memory (RAM), read only memory (ROM), and/or the like. Combinations of those types of memory are also included within the scope of computer-readable storage media. Computer-executable program code may comprise, for example, instructions and data which cause a computer or processing machine to perform certain functions, calculations, actions, or the like.</p><p id="p-0194" num="0193">The embodiments disclosed herein are to be considered in all respects as illustrative, and not restrictive. The present disclosure is in no way limited to the embodiments described above. Various modifications and changes may be made to the embodiments without departing from the spirit and scope of the disclosure. Various modifications and changes that come within the meaning and range of equivalency of the claims are intended to be within the scope of the disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method, comprising:<claim-text>receiving, by a system, a security object configured to encrypt or decrypt data;</claim-text><claim-text>determining, by the system based on at least one policy configured for evaluating whether one or more attributes of the security object are secure, that the security object is secure to be used by a device, wherein the at least one policy comprises at least one of at least one first policy of a first node or at least one second policy of a second node, wherein the first node and the second node are parts of a hierarchical structure of policies, the one or more attributes comprises at least one of a length of the security object or a time at which the security object is created; and</claim-text><claim-text>authorizing, by the system, the device to use the security object to encrypt or decrypt data.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the at least one first policy comprises a policy used to evaluate the length of the security object; and</claim-text><claim-text>the at least one second policy a policy used to evaluate the time at which the security object is created.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more attributes of the security object comprises a cryptographic algorithm of the security object.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the system receives the security object responsive to the security object being requested by the device for communicating the data.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the security object is receive from one of a hardware security module, a key management device, or an security object source.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one first policy comprises one or more policies different from one or more policies of the at least one second policy.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the at least one policy comprises the at least one first policy and the at least one second policy; and</claim-text><claim-text>the device is registered to the first node.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, the second node is a parent node of the first node, and the at least one second policy is inherited by the first node from the second node.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the hierarchical structure is a Directed Acyclic Graph having a plurality of nodes; and</claim-text><claim-text>the plurality of nodes comprises the first node and the second node.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein authorizing the device to use the security object comprises distributing the security object to the device in response to determining that the security object is secure to be used by the first device.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A system, comprising:<claim-text>a memory; and</claim-text><claim-text>a processor coupled to the memory, wherein the processor is configured to:</claim-text><claim-text>receive a security object configured to encrypt or decrypt data;</claim-text><claim-text>determine, based on at least one policy configured for evaluating whether one or more attributes of the security object are secure, that the security object is secure to be used by a device, wherein the at least one policy comprises at least one of at least one first policy of a first node or at least one second policy of a second node, wherein the first node and the second node are parts of a hierarchical structure of policies, the one or more attributes comprises at least one of a length of the security object or a time at which the security object is created; and</claim-text><claim-text>authorize the device to use the security object to encrypt or decrypt data.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein<claim-text>the at least one first policy comprises a policy used to evaluate the length of the security object; and</claim-text><claim-text>the at least one second policy a policy used to evaluate the time at which the security object is created.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the one or more attributes of the security object comprises a cryptographic algorithm of the security object.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the processor receives the security object responsive to the security object being requested by the device for communicating the data.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the security object is receive from one of a hardware security module, a key management device, or an security object source.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the at least one first policy comprises one or more policies different from one or more policies of the at least one second policy.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the at least one policy comprises the at least one first policy and the at least one second policy; and</claim-text><claim-text>the device is registered to the first node.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, the second node is a parent node of the first node, and the at least one second policy is inherited by the first node from the second node.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein authorizing the device to use the security object comprises distributing the security object to the device in response to determining that the security object is secure to be used by the first device.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. A non-transitory computer-readable medium comprising computer-readable instructions, such that, when executed, causes a processor to:<claim-text>receive a security object configured to encrypt or decrypt data;</claim-text><claim-text>determine, based on at least one policy configured for evaluating whether one or more attributes of the security object are secure, that the security object is secure to be used by a device, wherein the at least one policy comprises at least one of at least one first policy of a first node or at least one second policy of a second node, wherein the first node and the second node are parts of a hierarchical structure of policies, the one or more attributes comprises at least one of a length of the security object or a time at which the security object is created; and</claim-text><claim-text>authorize the device to use the security object to encrypt or decrypt data.</claim-text></claim-text></claim></claims></us-patent-application>