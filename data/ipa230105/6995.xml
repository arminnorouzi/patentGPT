<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006996A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006996</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17850684</doc-number><date>20220627</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>0853</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>083</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">Code-based Two Factor Authentication</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63217029</doc-number><date>20210630</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Sony Group Corporation</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant><us-applicant sequence="01" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Sony Pictures Entertainment Inc.</orgname><address><city>Culver City</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Diehl</last-name><first-name>Eric</first-name><address><city>Culver City</city><state>CA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Rudrabhatla</last-name><first-name>Chaitanya</first-name><address><city>Torrance</city><state>CA</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Authenticating a user account to access a remote service from a user device includes: capturing a machine-readable image code displayed on the user device using a mobile device, wherein the image code is provided by the remote service; extracting and calling a corresponding session code embedded in the image code; determining whether a phone token is in storage; one of: (a) sending the phone token to the remote service, if the phone token is in the storage; or (b) prompting a user to enter credentials including username and password and sending the entered credentials to the remote service, if the phone token is not in the storage; and receiving access to the remote service for the user device, when the session code is valid and either the credentials are valid or the phone token is confirmed.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="165.78mm" wi="126.32mm" file="US20230006996A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="197.19mm" wi="128.35mm" file="US20230006996A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="169.76mm" wi="116.67mm" file="US20230006996A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="138.43mm" wi="126.15mm" file="US20230006996A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="220.98mm" wi="163.75mm" file="US20230006996A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims the benefit of priority under 35 U.S.C. &#xa7;119(e) of co-pending U.S. Provisional Patent Application No. 63/217,029, filed Jun. 30, 2021, entitled &#x201c;QR Code-Based Two Factor Authentication&#x201d;. The disclosure of the above-referenced application is incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">BACKGROUND</heading><heading id="h-0003" level="1">Field</heading><p id="p-0003" num="0002">The present disclosure relates to two-factor authentication, and more specifically, to authenticating a user account to access a remote service at a user device.</p><heading id="h-0004" level="1">Background</heading><p id="p-0004" num="0003">Many streaming services running on smart TVs, Set-Top Boxes, or dedicated devices such as Apple TV&#x2122; require user authentication. This authentication is often not user-friendly, especially if authentication is mandatory for each new access. For example, inputting a complex password can quickly become a tedious task when using only a remote control.</p><p id="p-0005" num="0004">Most conventional solutions use the traditional username-password combination. However, this combination is not user-friendly and may even be insecure. Some solutions use a traditional Two-Factor Authentication (<b>2</b>FA) with a registered phone. The service sends a code to the user's registered mobile device via SMS. This solution still requires the users to enter their credentials via a remote control. Other solutions register the device for the user by sending a code to an already-registered device. Again, the user must enter credentials using the remote control.</p><heading id="h-0005" level="1">SUMMARY</heading><p id="p-0006" num="0005">The present disclosure provides for authenticating a user account to access a remote service.</p><p id="p-0007" num="0006">In one implementation, a method for authenticating a user account to access a remote service from a user device is disclosed. The method includes capturing a machine-readable image code displayed on the user device using a mobile device, wherein the image code is provided by the remote service. The method also includes extracting and calling a corresponding session code embedded in the image code. The method also includes determining whether a phone token is in storage; one of: (a) sending the phone token to the remote service, if the phone token is in the storage; or (b) prompting a user to enter credentials including username and password and sending the entered credentials to the remote service, if the phone token is not in the s storage. The method further includes receiving access to the remote service for the user device, when the session code is valid and either the credentials are valid or the phone token is confirmed.</p><p id="p-0008" num="0007">In another implementation, a remote service method for authenticating a user account to access a remote service at a user device is disclosed. The method includes receiving a session code from a mobile device, determining whether the session code matches one of pending session codes in a set structure; and deleting the matched session code from the set structure. The method also includes receiving a phone token or credentials of the user account; and one of: (a) determining the validity of the credentials, if the credentials are received; or (b) determining whether the phone token is present in a credential database of the remote service, if the credentials are not received. The method further includes generating and sending a phone token to the user device when the credentials are determined to be valid; and granting access to a remote service application installed on the user device for the remote service using the credentials.</p><p id="p-0009" num="0008">In yet another implementation, a system for authenticating a user account to access a remote service includes a user device, a mobile device, and a remote service. The user device includes a remote service application to display a machine-readable image code provided by the remote service. The mobile device captures the machine-readable image code to access the remote service, extracts and calls a corresponding session code embedded in the machine-readable image code. The mobile device also sends the extracted session code and one of (a) a phone token in storage of the mobile device, or (b) credentials obtained from a user, to the remote service to receive access to the remote service for the user device, when either the credentials are valid or the phone token is confirmed.</p><p id="p-0010" num="0009">Other features and advantages should be apparent from the present description which illustrates, by way of example, aspects of the disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0006" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0011" num="0010">The details of the present disclosure, both as to its structure and operation, may be gleaned in part by study of the appended drawings, in which like reference numerals refer to like parts, and in which:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a flow diagram of a process for authenticating a user account to access a remote service at a user device in accordance with one implementation of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow diagram of a remote service process for authenticating a user account to access a remote service in accordance with one implementation of the present disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a system for authenticating a user account to access a remote service in accordance with one implementation of the present disclosure;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a representation of a computer system and a user in accordance with an implementation of the present disclosure; and</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a functional block diagram illustrating the computer system hosting the authentication application in accordance with an implementation of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0007" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">As described above, user authentication for many streaming services is often not user-friendly and can quickly become a tedious task when using only a remote control. Thus, a need exists for a simple technique to authenticate a user account.</p><p id="p-0018" num="0017">Certain implementations of the present disclosure provide methods and systems for authenticating a user account. In one implementation, a server system provides a machine-readable code (e.g., a quick response (QR) code) including a session code to a user device. A user captures the image of the QR code from the user device using a mobile device and extracts the session code from the QR code. The mobile device returns the session code to the server system. The server system then authenticates the received information to grant access to the user device (including a display) to a service provided by the server system. In one example implementation, the server system provides a content streaming service. In another example implementation, the display device is a television connected to the remote service system through the Internet.</p><p id="p-0019" num="0018">Features provided in implementations can include, but are not limited to, one or more of the following items:</p><p id="p-0020" num="0019">(a) creating a session code and creating an image code (such as a QR code) including the session code;</p><p id="p-0021" num="0020">(b) extracting a session code from a captured image of an image code;</p><p id="p-0022" num="0021">(c) creating a token for a mobile device to identify the mobile device for future transactions; and</p><p id="p-0023" num="0022">(d) authenticating a user device using a session code and user credentials or using a session code and a token.</p><p id="p-0024" num="0023">After reading the below descriptions, it will become apparent how to implement the disclosure in various implementations and applications. Although various implementations of the present disclosure will be described herein, it is understood that these implementations are presented by way of example only, and not limitation. As such, the detailed description of various implementations should not be construed to limit the scope or breadth of the present disclosure.</p><p id="p-0025" num="0024">In one implementation, a content service provides streaming video by sending video data from a server system (e.g., a remote service) over the Internet to user devices, such as televisions, computers, or game consoles. In one implementation, a user device includes an application that connects with the remote/streaming service. The user launches the application to access the remote/streaming service.</p><p id="p-0026" num="0025">To access the streaming service through a television, for example, a user authenticates the television with the server system using a mobile device. The user requests access to the service through the television (connected to the Internet). The server system creates a session code and creates a QR code indicating the session code. The server system sends the QR code to the television through the Internet. The television displays the received QR code. The user captures an image of the QR code using the camera of a mobile device. The mobile device extracts or derives the session code from the QR code image.</p><p id="p-0027" num="0026">In one implementation, the mobile device uses the session code and token received from the server system. If the mobile device does not have a token, the mobile device sends the session code to the server system without a token. The server system verifies the session code and requests user credentials from the mobile device (e.g., username and password). The mobile device requests and receives the user credentials from the user (if not already stored) and then sends the credentials to the server system. The server system verifies the credentials. After verifying, the server system grants access to the streaming service to the television. The authenticated television can request, receive, and display video data from the server system. The server also creates and stores a token associated with the user (e.g., user name), and sends the token to the mobile device. The mobile device stores the token for future requests.</p><p id="p-0028" num="0027">If the mobile device has previously received a token from the server system, the mobile device sends the session code and token to the server system. The server system verifies the session code and token. After verifying, the server system grants access to the television to the streaming service. The authenticated television can request, receive, and display video data from the server system.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a flow diagram of a process <b>100</b> for authenticating a user account to access a remote service at a user device in accordance with one implementation of the present disclosure. In one implementation, to access the remote service using the user device, the user captures an image code (e.g., the QR code) displayed on the user device, at block <b>110</b>, using a mobile device. The image code may include other codes or tags such as bar codes, near-field communication (NFC) tags, SnapTags, and other similar items including Image Recognition, and Bluetooth beacons. In one implementation, the user device is one of television, computer, or game console. In one implementation, the QR code is displayed by a remote service application installed on the user device.</p><p id="p-0030" num="0029">Once the QR code has been captured, at block <b>110</b>, the mobile device extracts and calls a corresponding location code (e.g., uniform resource locator (URL)) embedded in the QR Code, at block <b>112</b>. This is a feature often present in modern Operating Systems of mobile devices. In some implementations, the mobile device may also extract and send a corresponding session code to the remote service. The mobile device checks to determine, at block <b>120</b>, whether it has a phone token in its storage. If the mobile device determines that it already has the phone token, it sends the phone token to the remote service, at block <b>130</b>, and waits for a confirmation, at block <b>132</b>.</p><p id="p-0031" num="0030">Otherwise, if the mobile device determines that it does not have the phone token, the mobile device prompts the user, at block <b>122</b>, to enter the credentials including the username and the password. The mobile device then sends the received credentials to the remote service, at block <b>140</b>. The mobile device then waits, at block <b>150</b>, for the token answer that holds the phone token. Once the mobile device receives the confirmation (along with the phone token if the mobile device does not already have one stored), at block <b>160</b>, it stores the phone token in its secure storage, at block <b>170</b>. Further, once the mobile device receives the confirmation, the server system grants access to the streaming service to the user device. Thus, the authenticated user device can request, receive, and display video data from the remote service.</p><p id="p-0032" num="0031">In a particular implementation, a method for authenticating a user account to access a remote service from a user device is disclosed. The method includes: capturing a machine-readable image code displayed on the user device using a mobile device, wherein the image code is provided by the remote service; extracting and calling a corresponding session code embedded in the image code; determining whether a phone token is in storage; one of: (a) sending the phone token to the remote service, if the phone token is in the storage; or (b) prompting a user to enter credentials including username and password and sending the entered credentials to the remote service, if the phone token is not in the storage; and receiving access to the remote service for the user device, when the session code is valid and either the credentials are valid or the phone token is confirmed.</p><p id="p-0033" num="0032">In one implementation, the machine-readable image code includes a quick response (QR) code. In one implementation, the user device is one of television, computer, or game console. In one implementation, the method further includes displaying the machine-readable image code by a remote service application installed on the user device. In one implementation, the method further includes storing the phone token in the storage of the mobile device when the phone token is received from the remote device.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flow diagram of a remote service process <b>200</b> for authenticating a user account to access a remote service in accordance with one implementation of the present disclosure. Initially, to authenticate the user account, the remote service performs the following steps: (a) generates a session code (e.g., a 256-bit nonce session code) and stores the code in a set structure; (b) generates a QR code with the stored session code (e.g., defined by URLlbase64, wherein base64 encodes a binary number into a string following the RFC2045 standard); and (c) sends the generated QR code to a remote service application installed on the user device, as stated above.</p><p id="p-0035" num="0034">In the illustrated implementation of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the remote service receives the QR code sent by the mobile device and extracts a session code (e.g., by decoding the base64-encoded code), at block <b>210</b>. The remote service determines, at block <b>220</b>, whether the extracted code is one of the pending session codes. If the remote service determines, at block <b>220</b>, that the retrieved code is one of the pending session codes, it deletes the corresponding session code from the set structure. The remote service then sends a request answer message to the mobile device, at block <b>222</b>, to provide the credentials (e.g., username and password) of the user.</p><p id="p-0036" num="0035">If the remote service determines, at block <b>230</b>, that the mobile device answered with credentials, the remote service then checks the validity of the credentials, at block <b>234</b>. In one implementation, the remote service validates the credentials by calculating saltedPassword and checking whether the pair {username, saltedPassword} is in the credential database of the remote service. In one implementation, saltedPassword=SHA512(password|salt), wherein salt is a 512-bit random number. If the remote service determines that the credentials are valid, at block <b>234</b>, it generates a phone token, at block <b>240</b>, and sends the generated phone token to the user device. In one implementation, the phone token is Java Web Token (e.g., a 256-bit nonce) containing username. In one implementation, the remote service also stores the phone token in the credential database, for example, as a salted hash. On subsequent uses of the remote service, the mobile device sends both the captured code and the stored phone token for quick access.</p><p id="p-0037" num="0036">Otherwise, if the remote service determines, at block <b>230</b>, that the mobile device did not answer with credentials, the remote service checks to determine, at block <b>232</b>, whether the mobile device answered with a phone token and whether the phone token is present in the credential database of the remote service. If it is determined, at block <b>232</b>, that the mobile device answered with a phone token and the phone token is present in the credential database of the remote service, the remote service may generate a Java Web Token containing the username (related to the phone token) and send it to the user device. It should be noted that the Java Web Token carries only the user name and not the phone token. If the tests at block <b>232</b> and block <b>234</b> pass (i.e., known token and credential validity tests), the remote service grants access to the application for the username of the user, at block <b>250</b>. The remote service also sends back the phone token to the mobile device to securely store the phone token in the storage of mobile device, if the mobile phone answered with the credentials because it did not have the phone token.</p><p id="p-0038" num="0037">In one implementation, the remote service adds an expiration time to the session code to provide enhance security. Thus, if the mobile device answers after the expiration time, the authentication may fail. In another implementation, the phone token also has an expiration time. Thus, the presentation of an expired phone token may mandate the mobile device to present a valid username and password. In yet another implementation, the remote service randomly requires the presentation of credentials regardless of the value or freshness of the phone token. In a further embodiment, the remote service limits the number of phone tokens associated with a username.</p><p id="p-0039" num="0038">In one implementation, a remote service method for authenticating a user account to access a remote service from a user device is disclosed. The method includes: receiving a session code from a mobile device; determining whether the session code matches one of pending session codes in a set structure; deleting the matched session code from the set structure; receiving a phone token or credentials of the user account; one of: (a) determining the validity of the credentials, if the credentials are received; or (b) determining whether the phone token is present in a credential database of the remote service, if the credentials are not received; generating and sending a phone token to the user device when the credentials are determined to be valid; and granting access to a remote service application installed on the user device for the remote service using the credentials.</p><p id="p-0040" num="0039">In one implementation, the method further includes: generating and storing the session code in the set structure; generating a machine-readable image code using the stored session code; and sending the generated machine-readable image code to the remote service application installed on the user device. In one implementation, the credentials include a username and a password, and determining the validity of the credentials includes: salting the password to generate saltedpassword; and checking whether a pair {username, saltedPassword} is in the credential database, wherein saltedPassword is a result of applying a hashing function on combined password and salt, and wherein salt is a random number. In one implementation, the phone token is Java Web Token containing the username. In one implementation, the method further includes storing the phone token in the credential database as a salted hash. In one implementation, the method further includes sending the phone token to the mobile device to store the phone token in storage of the mobile device. In one implementation, the session code includes an expiration time to limit the use of the session code. In one implementation, the phone token includes an expiration time to limit the use of the phone token.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram of a system <b>300</b> for authenticating a user account to access a remote service in accordance with one implementation of the present disclosure. In the illustrated implementation of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the system <b>300</b> includes a user device <b>310</b>, a mobile device <b>320</b>, and a remote service <b>330</b>. In one implementation, the blocks <b>320</b>, <b>330</b>, <b>340</b> of the system <b>300</b> are configured entirely with hardware including one or more digital signal processors (DSPs), general purpose microprocessors, application specific integrated circuits (ASICs), field programmable logic arrays (FPGAs), or other equivalent integrated or discrete logic circuitry.</p><p id="p-0042" num="0041">In the illustrated implementation of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the mobile device <b>320</b> is used to capture the QR code displayed on the user device <b>310</b> to access the remote service <b>330</b>. In one implementation, the user device <b>310</b> is one of television, computer, or game console. In one implementation, the QR code is displayed by a remote service application <b>312</b> installed on the user device <b>310</b>. The mobile device <b>320</b> extracts and calls the corresponding URL embedded in the QR Code once the QR code has been captured. The mobile device <b>320</b> checks whether it has a phone token in its storage. If the mobile device <b>320</b> already has the phone token, it sends the phone token to the remote service <b>330</b> and waits for a confirmation.</p><p id="p-0043" num="0042">Otherwise, the mobile device <b>320</b> prompts the user to enter the credentials including the username and the password, if the mobile device <b>320</b> does not have the phone token. The mobile device <b>320</b> then sends the received credentials to the remote service <b>330</b>. The mobile device <b>320</b> then waits for the token answer that holds the phone token. Once the mobile device <b>320</b> receives the confirmation (along with the phone token if the mobile device does not already have one stored), it <b>320</b> stores the phone token in its storage. Further, once the mobile device <b>320</b> receives the confirmation, the remote service <b>330</b> grants access to the streaming service to the user device <b>310</b>. Thus, the authenticated user device can request, receive, and display video data from the remote service.</p><p id="p-0044" num="0043">In the illustrated implementation of <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the remote service <b>330</b> receives the QR code sent by the mobile device <b>320</b> and extracts a session code (e.g., by decoding the base64-encoded code). The remote service <b>330</b> checks whether the extracted code is one of the pending session codes. The remote service <b>330</b> deletes the corresponding session code from the set structure and sends a request answer message to the mobile device <b>320</b> to provide the credentials (e.g., username and password) of the user, if the extracted code is one of the pending session codes (and sent without a token). The remote service <b>330</b> checks the validity of the credentials, if the mobile device <b>320</b> answers with credentials. The remote service <b>330</b> generates a phone token and sends the generated phone token to the user device <b>310</b>, if the credentials are valid. The mobile device <b>320</b> sends both the captured code and the stored phone token on subsequent uses of the remote service <b>330</b> for quick access.</p><p id="p-0045" num="0044">Otherwise, the remote service <b>330</b> checks whether the phone token is present in the credential database of the remote service <b>320</b>, if the mobile device <b>320</b> did not answer with credentials, but with a phone token. The remote service <b>330</b> generates a Java Web Token containing the username associated with the phone token and sends it to the user device <b>310</b>, if the phone token is present in the credential database of the remote service <b>330</b>. The remote service <b>330</b> grants access to the application for the username of the user, if either token test or credential validity test passes. The remote service <b>330</b> also sends back the phone token to the mobile device <b>320</b> to securely store the phone token in the storage of mobile device <b>320</b>.</p><p id="p-0046" num="0045">In a particular implementation, a system for authenticating a user account to access a remote service is disclosed. The system includes: a user device including a remote service application to display a machine-readable image code provided by the remote service; and a mobile device to capture the machine-readable image code to access the remote service, the mobile device to extract and call a corresponding session code embedded in the machine-readable image code, the mobile device to send the extracted session code and one of (a) a phone token in storage of the mobile device, or (b) credentials obtained from a user, to the remote service to receive access to the remote service for the user device, when either the credentials are valid or the phone token is confirmed.</p><p id="p-0047" num="0046">In one implementation, the machine-readable image code includes a quick response (QR) code. In one implementation, the user device is one of television, computer, or game console. In one implementation, the system further includes a remote service to receive the location code from the mobile device and extract a session code, the remote service to determine whether the extracted session code matches one of pending session codes in a set structure, wherein the remote service receives the phone token or the credentials of the user account, and either (a) determines the validity of the credentials, or (b) determines the presence of the phone token in a credential database of the remote service, wherein the remote service grants access to the remote service application installed on the user device for the remote service, when either (a) the credentials are valid, or (b) the phone token is in the credential database of the remote service. In one implementation, the session code includes an expiration time to limit the use of the session code. In one implementation, the phone token is Java Web Token containing the username. In one implementation, the phone token includes an expiration time to limit the use of the phone token.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a representation of a computer system <b>400</b> and a user <b>402</b> in accordance with an implementation of the present disclosure. The user <b>402</b> uses the computer system <b>400</b> to implement an authentication application <b>490</b> for authenticating a user account to access a remote service with respect to the processes <b>100</b>, <b>200</b> of <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, and the system <b>300</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0049" num="0048">The computer system <b>400</b> stores and executes the authentication application <b>490</b> of <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>. In addition, the computer system <b>400</b> may be in communication with a software program <b>404</b>. Software program <b>404</b> may include the software code for the authentication application <b>490</b>. Software program <b>404</b> may be loaded on an external medium such as a CD, DVD, or a storage drive, as will be explained further below.</p><p id="p-0050" num="0049">Furthermore, the computer system <b>400</b> may be connected to a network <b>480</b>. The network <b>480</b> can be connected in various different architectures, for example, client-server architecture, a Peer-to-Peer network architecture, or other type of architectures. For example, network <b>480</b> can be in communication with a server <b>485</b> that coordinates engines and data used within the lens parameter shifting application <b>490</b>. Also, the network can be different types of networks. For example, the network <b>480</b> can be the Internet, a Local Area Network or any variations of Local Area Network, a Wide Area Network, a Metropolitan Area Network, an Intranet or Extranet, or a wireless network.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a functional block diagram illustrating the computer system <b>400</b> hosting the authentication application <b>490</b> in accordance with an implementation of the present disclosure. A controller <b>410</b> is a programmable processor and controls the operation of the computer system <b>400</b> and its components. The controller <b>410</b> loads instructions (e.g., in the form of a computer program) from the memory <b>420</b> or an embedded controller memory (not shown) and executes these instructions to control the system, such as to provide the data processing. In its execution, the controller <b>410</b> provides the authentication application <b>490</b> with a software system. Alternatively, this service can be implemented as separate hardware components in the controller <b>410</b> or the computer system <b>400</b>.</p><p id="p-0052" num="0051">Memory <b>420</b> stores data temporarily for use by the other components of the computer system <b>400</b>. In one implementation, memory <b>420</b> is implemented as RAM. In one implementation, memory <b>420</b> also includes long-term or permanent memory, such as flash memory and/or ROM.</p><p id="p-0053" num="0052">Storage <b>430</b> stores data either temporarily or for long periods of time for use by the other components of the computer system <b>400</b>. For example, storage <b>430</b> stores data used by the authentication application <b>490</b>. In one implementation, storage <b>430</b> is a hard disk drive.</p><p id="p-0054" num="0053">The media device <b>440</b> receives removable media and reads and/or writes data to the inserted media. In one implementation, for example, the media device <b>440</b> is an optical disc drive.</p><p id="p-0055" num="0054">The user interface <b>450</b> includes components for accepting user input from the user of the computer system <b>400</b> and presenting information to the user <b>402</b>. In one implementation, the user interface <b>450</b> includes a keyboard, a mouse, audio speakers, and a display. In another implementation, the user interface <b>450</b> also includes a headset worn by the user and used to collect eye movements as user inputs. The controller <b>410</b> uses input from the user <b>402</b> to adjust the operation of the computer system <b>400</b>.</p><p id="p-0056" num="0055">The I/O interface <b>460</b> includes one or more I/O ports to connect to corresponding I/O devices, such as external storage or supplemental devices (e.g., a printer or a PDA). In one implementation, the ports of the I/O interface <b>460</b> include ports such as: USB ports, PCMCIA ports, serial ports, and/or parallel ports. In another implementation, the I/O interface <b>460</b> includes a wireless interface for communication with external devices wirelessly.</p><p id="p-0057" num="0056">The network interface <b>470</b> includes a wired and/or wireless network connection, such as an RJ-45 or &#x201c;Wi-Fi&#x201d; interface (including, but not limited to 802.11) supporting an Ethernet connection.</p><p id="p-0058" num="0057">The computer system <b>400</b> includes additional hardware and software typical of computer systems (e.g., power, cooling, operating system), though these components are not specifically shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> for simplicity. In other implementations, different configurations of the computer system can be used (e.g., different bus or storage configurations or a multi-processor configuration).</p><p id="p-0059" num="0058">The description herein of the disclosed implementations is provided to enable any person skilled in the art to make or use the present disclosure. Numerous modifications to these implementations would be readily apparent to those skilled in the art, and the principles defined herein can be applied to other implementations without departing from the spirit or scope of the present disclosure. For example, the remote service can provide various kinds of information and data, such as video data, music data, image data, educational data, or medical data. In other implementations, alternative forms of authentication can be used instead of or in addition to codes, such as biometric information, security questions, or encrypted passwords. Thus, the present disclosure is not intended to be limited to the implementations shown herein but is to be accorded the widest scope consistent with the principal and novel features disclosed herein. Accordingly, additional variations and implementations are also possible.</p><p id="p-0060" num="0059">All features of each of the above-discussed examples are not necessarily required in a particular implementation of the present disclosure. Further, it is to be understood that the description and drawings presented herein are representative of the subject matter which is broadly contemplated by the present disclosure. It is further understood that the scope of the present disclosure fully encompasses other implementations that may become obvious to those skilled in the art and that the scope of the present disclosure is accordingly limited by nothing other than the appended claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for authenticating a user account to access a remote service from a user device, the method comprising:<claim-text>capturing a machine-readable image code displayed on the user device using a mobile device, wherein the image code is provided by the remote service;</claim-text><claim-text>extracting and calling a corresponding session code embedded in the image code;</claim-text><claim-text>determining whether a phone token is in storage;</claim-text><claim-text>one of: (a) sending the phone token to the remote service, if the phone token is in the storage; or (b) prompting a user to enter credentials including username and password and sending the entered credentials to the remote service, if the phone token is not in the storage; and</claim-text><claim-text>receiving access to the remote service for the user device, when the session code is valid and either the credentials are valid or the phone token is confirmed.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the machine-readable image code includes a quick response (QR) code.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the user device is one of television, computer, or game console.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of clam <b>1</b>, further comprising<claim-text>displaying the machine-readable image code by a remote service application installed on the user device.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising<claim-text>storing the phone token in the storage of the mobile device when the phone token is received from the remote device.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A remote service method for authenticating a user account to access a remote service from a user device, the method comprising:<claim-text>receiving a session code from a mobile device;</claim-text><claim-text>determining whether the session code matches one of pending session codes in a set structure;</claim-text><claim-text>deleting the matched session code from the set structure;</claim-text><claim-text>receiving a phone token or credentials of the user account;</claim-text><claim-text>one of: (a) determining the validity of the credentials, if the credentials are received; or (b) determining whether the phone token is present in a credential database of the remote service, if the credentials are not received;</claim-text><claim-text>generating and sending a phone token to the user device when the credentials are determined to be valid; and</claim-text><claim-text>granting access to a remote service application installed on the user device for the remote service using the credentials.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising:<claim-text>generating and storing the session code in the set structure;</claim-text><claim-text>generating a machine-readable image code using the stored session code; and</claim-text><claim-text>sending the generated machine-readable image code to the remote service application installed on the user device.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the credentials include a username and a password, and wherein determining the validity of the credentials comprises:<claim-text>salting the password to generate saltedpassword; and</claim-text><claim-text>checking whether a pair {username, saltedPassword} is in the credential database,</claim-text><claim-text>wherein saltedPassword is a result of applying a hashing function on combined password and salt, and</claim-text><claim-text>wherein salt is a random number.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the phone token is Java Web Token containing the username.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising<claim-text>storing the phone token in the credential database as a salted hash.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising<claim-text>sending the phone token to the mobile device to store the phone token in storage of the mobile device.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the session code includes an expiration time to limit the use of the session code.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The remote service method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the phone token includes an expiration time to limit the use of the phone token.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A system for authenticating a user account to access a remote service, the system comprising:<claim-text>a user device including a remote service application to display a machine-readable image code provided by the remote service; and</claim-text><claim-text>a mobile device to capture the machine-readable image code to access the remote service, the mobile device to extract and call a corresponding session code embedded in the machine-readable image code, the mobile device to send the extracted session code and one of (a) a phone token in storage of the mobile device, or (b) credentials obtained from a user, to the remote service to receive access to the remote service for the user device, when either the credentials are valid or the phone token is confirmed.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the machine-readable image code includes a quick response (QR) code.</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, the user device is one of television, computer, or game console.</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising:<claim-text>a remote service to receive the session code from the mobile device, and to determine whether the session code matches one of pending session codes in a set structure, the remote service to delete the matched session code from the set structure</claim-text><claim-text>wherein the remote service receives the phone token or the credentials of the user account, and either (a) determines the validity of the credentials, or (b) determines the presence of the phone token in a credential database of the remote service,</claim-text><claim-text>wherein the remote service grants access to the remote service application installed on the user device for the remote service, when the session code matches one of the pending session codes in the set structure, and either (a) the credentials are valid, or (b) the phone token is in the credential database of the remote service.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the session code includes an expiration time to limit the use of the session code.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the phone token is Java Web Token containing the username.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the phone token includes an expiration time to limit the use of the phone token.</claim-text></claim></claims></us-patent-application>