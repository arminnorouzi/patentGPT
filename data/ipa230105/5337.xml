<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230005338A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230005338</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942913</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>07</class><subclass>F</subclass><main-group>17</main-group><subgroup>32</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>58</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>F</subclass><main-group>17</main-group><subgroup>3262</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>7</main-group><subgroup>58</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>07</class><subclass>F</subclass><main-group>17</main-group><subgroup>3213</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">LOW-COMPLEXITY REEL SYMBOL REPLACEMENT STRATEGY WITH CLUSTERING</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>16836588</doc-number><date>20200331</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11450178</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942913</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Aristocrat Technologies, Inc.</orgname><address><city>Las Vegas</city><state>NV</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Penacho</last-name><first-name>Gary</first-name><address><city>Henderson</city><state>NV</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Englman</last-name><first-name>Allon</first-name><address><city>Las Vegas</city><state>NV</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In an electronic gaming device, instances of a target symbol are swapped in to symbol positions of one or more reel strips using one or more index tables to identify the symbol positions at which to swap in the instances of the target symbol. The index table(s) can be configured to cluster instances of the target symbol according to a deterministic approach. Subsequently, spin results are determined for one or more spins of reels using the reel strips.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="120.82mm" wi="66.89mm" file="US20230005338A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="247.48mm" wi="174.50mm" orientation="landscape" file="US20230005338A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="226.06mm" wi="164.93mm" file="US20230005338A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="212.01mm" wi="170.77mm" file="US20230005338A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="173.40mm" wi="136.31mm" file="US20230005338A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="229.36mm" wi="143.59mm" orientation="landscape" file="US20230005338A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="226.40mm" wi="143.59mm" orientation="landscape" file="US20230005338A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="226.99mm" wi="143.59mm" orientation="landscape" file="US20230005338A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="240.54mm" wi="160.78mm" orientation="landscape" file="US20230005338A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="238.25mm" wi="155.70mm" orientation="landscape" file="US20230005338A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="238.25mm" wi="155.70mm" orientation="landscape" file="US20230005338A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="238.68mm" wi="160.78mm" orientation="landscape" file="US20230005338A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="243.76mm" wi="160.78mm" orientation="landscape" file="US20230005338A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="244.01mm" wi="160.78mm" orientation="landscape" file="US20230005338A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="236.30mm" wi="160.78mm" orientation="landscape" file="US20230005338A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="149.78mm" wi="148.34mm" file="US20230005338A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="143.43mm" wi="148.25mm" file="US20230005338A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="175.18mm" wi="161.04mm" file="US20230005338A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="187.88mm" wi="161.04mm" file="US20230005338A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="239.27mm" wi="155.11mm" orientation="landscape" file="US20230005338A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="226.57mm" wi="155.11mm" orientation="landscape" file="US20230005338A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="246.80mm" wi="153.42mm" file="US20230005338A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="241.47mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="241.30mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="224.87mm" wi="94.15mm" orientation="landscape" file="US20230005338A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="220.22mm" wi="159.51mm" orientation="landscape" file="US20230005338A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="236.47mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="239.78mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="98.13mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="232.33mm" wi="161.88mm" file="US20230005338A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="251.38mm" wi="161.88mm" file="US20230005338A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="239.35mm" wi="164.68mm" file="US20230005338A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="239.18mm" wi="160.53mm" file="US20230005338A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="220.56mm" wi="154.43mm" orientation="landscape" file="US20230005338A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="247.48mm" wi="154.94mm" file="US20230005338A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="252.31mm" wi="168.74mm" file="US20230005338A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">User interface (&#x201c;UP&#x201d;) features of electronic gaming devices are described herein, along with features of backend processing to implement the UI features. For example, in an electronic gaming device with spinning reels, various special mode approaches and reel strip replacement mechanisms and strategies provide computationally-effective ways to manage volatility while improving usability and enhancing the user experience.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Electronic gaming machines (&#x201c;EGMs&#x201d;) or gaming devices provide a variety of wagering games such as slot games, video poker games, video blackjack games, roulette games, video bingo games, keno games and other types of games that are frequently offered at casinos and other locations. Play on EGMs typically involves a player establishing a credit balance by inputting money, or another form of monetary credit, and placing a monetary wager (from the credit balance) on one or more outcomes of an instance (or single play) of a primary or base game. In some cases, a player may qualify for a special mode of the base game, a secondary game, or a bonus round of the base game by attaining a certain winning combination or triggering event in, or related to, the base game, or after the player is randomly awarded the special mode, secondary game, or bonus round. In the special mode, secondary game, or bonus round, the player is given an opportunity to win extra game credits, game tokens or other forms of payout. In the case of &#x201c;game credits&#x201d; that are awarded during play, the game credits are typically added to a credit meter total on the EGM and can be provided to the player upon completion of a gaming session or when the player wants to &#x201c;cash out.&#x201d;</p><p id="p-0004" num="0003">&#x201c;Slot&#x201d; type games are often displayed to the player in the form of various symbols arrayed in a row-by-column grid or matrix. Specific matching combinations of symbols along predetermined paths (or pay lines) through the matrix indicate the outcome of the game. The display typically highlights winning combinations/outcomes for ready identification by the player. Matching combinations and their corresponding awards are usually shown in a &#x201c;pay-table&#x201d; which is available to the player for reference. Often, the player may vary his/her wager to include differing numbers of pay lines and/or the amount bet on each line. By varying the wager, the player may sometimes alter the frequency or number of winning combinations, frequency or number of secondary games, and/or the amount awarded.</p><p id="p-0005" num="0004">Typical games use a random number generator (&#x201c;RNG&#x201d;) to randomly determine the outcome of each game. The game is designed to return a certain percentage of the amount wagered back to the player over the course of many plays or instances of the game, which is generally referred to as return to player (&#x201c;RTP&#x201d;). The RTP and randomness of the RNG ensure the fairness of the games and are highly regulated. Upon initiation of play, the RNG randomly determines a game outcome and symbols are then selected which correspond to that outcome. Notably, some games may include an element of skill on the part of the player and are therefore not entirely random.</p><p id="p-0006" num="0005">EGMs depend on usability to enhance the user experience and extend player time on the EGMs. Although previous EGMs include various UI features, and backend operations associated with the UI features, that improve usability and enhance the user experience, there is room for further improvement to EGMs.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0007" num="0006">In summary, the detailed description presents innovations in user interface (&#x201c;UP&#x201d;) features of electronic gaming devices, as well as innovations in features of backend processing to implement the UI features. Some of the innovations relate to use of a special mode of a process that uses a set of reels in an electronic gaming device. For the special mode, reel strips for the reels are modified and a reel area is enlarged, so that a final outcome necessarily satisfies a threshold condition (e.g., a minimum award for the special mode, for all-ways evaluation of instances of symbols enclosed in a reel area). Other innovations relate to use of a linked reel strip mechanism to switch reel strips when iteratively spinning a reel. Still other innovations relate to use of index tables that are configured to cluster instances of a target symbol, when replacing instances of symbols in reel strips with target symbol instances. These innovations provide different tools for managing volatility and return to player (&#x201c;RTP&#x201d;) in a computationally-effective way, while also improving usability and enhancing the user experience.</p><p id="p-0008" num="0007">For example, according to a first set of innovations described herein, a computer system is configured to perform backend operations to control a UI of an electronic gaming device. The backend operations include starting an instance of a process that uses a set of reels. Each of the reels has a reel strip. A determination is made whether or not a result satisfies a trigger condition for a special mode of the process (e.g., using a random number generation event). Responsive to the special mode being triggered, the process is adjusted so that a final outcome of the instance of the process, for all-ways evaluation of instances of symbols enclosed in a reel area, necessarily satisfies a threshold condition for the final outcome. For example, the process is adjusted so that at least a minimum amount is awarded in the special mode. The process can be adjusted by changing the set of reels (e.g., for at least one of the reels, swapping or modifying the reel strip for the reel to include a higher concentration of target symbol instances). The process can also be adjusted by enlarging the reel area and, for at least some of the reels, increasing a count of instances of symbols that are enclosed in the reel area. The final outcome is then determined according to the adjusted process, with the final outcome being determined according to the all-ways evaluation of instances of symbols enclosed in the reel area. This approach to adjusting the process for the special mode provides a computationally-effective way to manage volatility for a target level of RTP for the special mode.</p><p id="p-0009" num="0008">As another example, according to a second set of innovations described herein, a computer system is configured to perform UI-focused operations to control the UI of an electronic gaming device. The UI-focused operations include receiving user input at the electronic gaming device. The user input indicates a start to an instance of a process that uses a set of reels. Each of the reels has a reel strip, which for UI-focused operations can be displayed as spinning through a reel area on a display screen of the electronic gaming device upon a spin of the reel. The process is associated with graphical elements for display. A determination is made whether or not a special mode of the process has been triggered. (If the special mode has been triggered, the process has been adjusted so that a final outcome of the instance of the process, for all-ways evaluation of instances of symbols enclosed in the reel area, necessarily satisfies a threshold condition, e.g., a minimum award for the special mode.) Based on the special mode having been triggered, one or more of the graphical elements are changed for the UI-focused operations. The set of reels can be changed by, for at least one of the reels, swapping or modifying the reel strip for the reel to include a higher concentration of target symbol instances. Or, the reel area can be enlarged and, for at least some of the reels, a count of instances of symbols that are enclosed in the reel area can be increased. Finally, using the graphical elements for the adjusted process, indicators of the instance of the process and the final outcome are displayed, with the final outcome having been determined according to the all-ways evaluation of instances of symbols enclosed in the reel area. This approach to performing UI-focused operations for the special mode can improve usability of the electronic gaming device and enhance the user experience.</p><p id="p-0010" num="0009">As another example, according to a third set of innovations described herein, a computer system is configured to perform backend operations to control a UI of an electronic gaming device. The backend operations include starting, for a reel, a re-spin series that uses a linked reel strip mechanism with one or more data structures for multiple reel strips of a reel strip group. The reel strips of the reel strip group are linked, in the data structure(s), using multiple logical links (e.g., reel strip identifiers). Each of the logical links is associated with an outcome for one of the reel strips and indicates a next reel strip to use, from among the reel strips of the reel strip group. For each of one or more iterations of the re-spin series, a current reel strip is selected (from among the reel strips of the reel strip group) by traversing the data structure(s). In the iteration, an outcome is determined for a spin that uses the current reel strip. After the iteration(s) of the re-spin series, an outcome for the re-spin series is determined based on the outcome(s) of the iteration(s) of the re-spin series. The linked reel strip mechanism is a computationally-effective way to switch reel strips when iteratively spinning a reel in a re-spin series, providing another useful tool for managing volatility for a target level of RTP in an electronic gaming device.</p><p id="p-0011" num="0010">As another example, according to a fourth set of innovations described herein, a computer system is configured to perform UI-focused operations to control the UI of an electronic gaming device. The UI-focused operations include receiving user input at the electronic gaming device. The user input indicates a start, for a reel, to a re-spin series that uses a linked reel strip mechanism with one or more data structures for multiple reel strips of a reel strip group. Each of the reel strips of the reel strip group can be displayed as spinning through a reel area on a display screen of the electronic gaming device upon a spin of the reel. Further, for backend operations, the reel strips of the reel strip group are linked, in the data structure(s), using multiple logical links. Each of the logical links is associated with an outcome for one of the reel strips and indicates a next reel strip to use, from among the reel strips of the reel strip group. For each of one or more iterations of the re-spin series, a current reel strip has been selected (from among the reel strips of the reel strip group) by traversing the data structure(s). In the iteration, the current reel strip is displayed spinning within the reel area on the display screen for a spin that uses the current reel strip, and then an indicator of an outcome for the spin is displayed. After the iteration(s) of the re-spin series, an indicator of an outcome for the re-spin series is displayed, where the outcome is based on the outcome(s) of the iteration(s) of the re-spin series. This approach to performing UI-focused operations for a linked reel strip mechanism can improve usability of the electronic gaming device and enhance the user experience.</p><p id="p-0012" num="0011">As another example, according to a fifth set of innovations described herein, a computer system is configured to perform backend operations to control a UI of an electronic gaming device. The backend operations include operations performed for a process that uses a set of reels. Each of the reels has a reel strip. In the process, at symbol positions of at least one of the reel strips, instances of a target symbol are swapped in, using one or more index tables to identify the symbol positions at which to swap in the target symbol instances. In particular, the index table(s) can be configured to cluster instances of the target symbol according to a deterministic approach, without using random number generator events to identify the symbol positions at which to swap in the instances of the target symbol. Spin results are then determined for one or more spins of the reels, respectively, using the reel strips. Using index tables is a computationally-effective way to swap target symbol instances in to symbol positions in reel strips, while also clustering the target symbol instances, which provides another useful tool for managing volatility for a target level of RTP in an electronic gaming device.</p><p id="p-0013" num="0012">The innovations can be implemented as part of a method, as part of an electronic gaming device such as an EGM or electronic gaming server configured to perform the method, or as part of non-transitory computer-readable media storing computer-executable instructions for causing one or more processors in a computer system to perform the method. The various innovations can be used in combination or separately. This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. The foregoing and other objects, features, and advantages of the invention will become more apparent from the following detailed description, which proceeds with reference to the accompanying figures and illustrates a number of examples. Examples may also be capable of other and different applications, and some details may be modified in various respects all without departing from the spirit and scope of the disclosed innovations.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an exemplary diagram showing several EGMs networked with various gaming related servers.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram showing various functional elements of an exemplary EGM.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates, in block diagram form, an embodiment of a game processing architecture that implements a game processing pipeline for the play of a game in accordance with various embodiments described herein.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a diagram showing replacement or modification of a reel strip, when a special mode is triggered, to have a higher concentration of target symbol instances.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. <b>5</b><i>a</i>-<b>5</b><i>c </i></figref>are diagrams showing examples of growth of a reel area on a display screen when a special mode is triggered.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIGS. <b>6</b><i>a</i>-<b>6</b><i>n </i></figref>are screenshots showing example stages of gameplay for a special mode, with a reel area growing for the special mode and reel strips having a higher concentration of target symbol instances for the special mode.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>7</b><i>a </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device, focusing on backend operations, for a special mode in which a final outcome necessarily satisfies a threshold condition. <figref idref="DRAWINGS">FIG. <b>7</b><i>b </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device, focusing on UI-frontend operations, for a special mode in which a final outcome necessarily satisfies a threshold condition. <figref idref="DRAWINGS">FIGS. <b>7</b><i>c </i>and <b>7</b><i>d </i></figref>are flowcharts showing example techniques for controlling the UI of an electronic gaming device, according to alternative approaches for backend operations.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIGS. <b>8</b><i>a </i>and <b>8</b><i>b </i></figref>are diagrams showing reel strips for example linked reel strip mechanisms.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a diagram showing data structures for an example linked reel strip mechanism.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIGS. <b>10</b><i>a</i>-<b>10</b><i>m </i></figref>are screenshots showing example stages of gameplay including use of a ribbon wheel with a linked reel strip mechanism in a re-spin series.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device that uses a linked reel strip mechanism, focusing on backend operations. <figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device that uses a linked reel strip mechanism, focusing on UI-frontend operations.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>12</b><i>a </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device that uses sampling without replacement in a re-spin series for a ribbon wheel, focusing on backend operations. <figref idref="DRAWINGS">FIG. <b>12</b><i>b </i></figref>is a flowchart showing an example technique for controlling the UI of an electronic gaming device that uses sampling without replacement in a re-spin series for a ribbon wheel, focusing on UI-frontend operations.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a diagram showing a reel strip before and after operations to swap in target symbol instances at symbol positions of the reel strip.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. <b>14</b>-<b>16</b></figref> are diagrams showing example index tables that indicate symbol positions of reel strips at which to swap in target symbol instances.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>17</b><i>a </i></figref>is flowchart showing an example technique for controlling the UI of an electronic gaming device, focusing on backend operations, when swapping in target symbol instances at symbol positions of a reel strip. <figref idref="DRAWINGS">FIGS. <b>17</b><i>b</i>-<b>17</b><i>d </i></figref>are flowcharts showing example backend operations when swapping in target symbol instances at symbol positions of a reel strip.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0029" num="0028">The detailed description presents innovations in user interface (&#x201c;UI&#x201d;) features of electronic gaming devices, as well as innovations in features of backend processing to implement the UI features. For example, some of the innovations relate to use of a special mode of a process that uses a set of reels, where reel strips for the reels are modified and a reel area is enlarged, so that a final outcome necessarily satisfies a threshold condition. As another example, some innovations relate to the use of a linked reel strip mechanism to switch reel strips when iteratively spinning a reel. As another example, some innovations relate to use of index tables that are configured to cluster instances of a target symbol, when replacing instances of symbols in reel strips with the target symbol instances. These innovations provide different tools for managing volatility and return to player (&#x201c;RTP&#x201d;) in a computationally-effective way, while also improving usability of the electronic gaming device and enhancing the user experience.</p><p id="p-0030" num="0029">In some examples described herein, operations are performed for a special mode of a process that uses a set of reels. Each of the reels has a reel strip. Responsive to the special mode being triggered, the process is adjusted so that a final outcome of an instance of the process necessarily satisfies a threshold condition for the final outcome. For example, the process is adjusted so that at least a minimum amount is awarded in the special mode, according to all-ways evaluation of instances of symbols enclosed in a reel area. The process can be adjusted by changing the set of reels (e.g., to include a higher concentration of instances of a target symbol) and/or enlarging the reel area so that, for at least some of the reels, more instances of symbols are enclosed in the reel area. Graphical elements for the UI can be changed accordingly. The final outcome is determined according to the adjusted process, e.g., according to all-ways evaluation of instances of symbols enclosed in the reel area, and indicators of the instance of the process and the final outcome are displayed. This approach to adjusting the process for the special mode provides a computationally-effective way to manage volatility for a target level of RTP for the special mode, while also improving the usability of the electronic gaming device and enhancing the user experience.</p><p id="p-0031" num="0030">In other examples described herein, a linked reel strip mechanism is used to switch reel strips when iteratively spinning a reel in a re-spin series. The linked reel strip mechanism uses one or more data structures for reel strips of a reel strip group. The reel strips of the reel strip group are linked, in the data structure(s), using multiple logical links (e.g., reel strip identifiers). Each of the logical links is associated with an outcome for one of the reel strips and indicates a next reel strip to use, from among the reel strips of the reel strip group. For an iteration of the re-spin series, a current reel strip is selected by traversing the data structure(s). An outcome is determined for a spin that uses the current reel strip. In the UI, the current reel strip is displayed spinning within a reel area for the reel, and then an indicator of the outcome for the spin is displayed. After the iteration(s) of the re-spin series, an outcome for the re-spin series is determined, and an indicator of the outcome for the re-spin series is displayed. The linked reel strip mechanism is a computationally-effective way to switch reel strips when iteratively spinning a reel, providing another useful tool for managing volatility for a target level of RTP in an electronic gaming device, while also improving the usability of the electronic gaming device and enhancing the user experience.</p><p id="p-0032" num="0031">In other examples described herein, special index tables are used when replacing instances of symbols in reel strips with instances of a target symbol. At symbol positions of at least one of the reel strips, instances of the target symbol are swapped in, using the index tables to identify the symbol positions. The index tables are configured to cluster the target symbol instances in the reel strips. Spin results are then determined for one or more spins of the reels, respectively, using the reel strips. The index tables provide a computationally-effective way to swap target symbol instances in to symbol positions in reel strips, while also clustering the target symbol instances, which provides another useful tool for managing volatility for a target level of RTP in an electronic gaming device.</p><p id="p-0033" num="0032">In the examples described herein, identical reference numbers in different figures indicate an identical component, module, or operation. More generally, various alternatives to the examples described herein are possible. For example, some of the methods described herein can be altered by changing the ordering of the method acts described, by splitting, repeating, or omitting certain method acts, etc. The various aspects of the disclosed technology can be used in combination or separately. Some of the innovations described herein address one or more of the problems noted in the background. Typically, a given technique/tool does not solve all such problems. It is to be understood that other examples may be utilized and that structural, logical, software, hardware, and electrical changes may be made without departing from the scope of the disclosure. The following description is, therefore, not to be taken in a limited sense.</p><heading id="h-0006" level="1">I. EXAMPLE ELECTRONIC GAMING SERVERS AND ELECTRONIC GAMING MACHINES (&#x201c;EGMS&#x201d;)</heading><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates several different models of EGMs which may be networked to various gaming related servers. Shown is a system <b>100</b> in a gaming environment including one or more server computers <b>102</b> (e.g., slot servers of a casino) that are in communication, via a communications network, with one or more gaming devices <b>104</b>A-<b>104</b>X (EGMs, slots, video poker, bingo machines, etc.) that can implement one or more aspects of the present disclosure. The gaming devices <b>104</b>A-<b>104</b>X may alternatively be portable and/or remote gaming devices such as, but not limited to, a smart phone, a tablet, a laptop, or a game console. Gaming devices <b>104</b>A-<b>104</b>X utilize specialized software and/or hardware to form non-generic, particular machines or apparatuses that comply with regulatory requirements regarding devices used for wagering or games of chance that provide monetary awards.</p><p id="p-0035" num="0034">Communication between the gaming devices <b>104</b>A-<b>104</b>X and the server computers <b>102</b>, and among the gaming devices <b>104</b>A-<b>104</b>X, may be direct or indirect using one or more communication protocols. As an example, gaming devices <b>104</b>A-<b>104</b>X and the server computers <b>102</b> can communicate over one or more communication networks, such as over the Internet through a website maintained by a computer on a remote server or over an online data network including commercial online service providers, Internet service providers, private networks (e.g., local area networks and enterprise networks), and the like (e.g., wide area networks). The communication networks could allow gaming devices <b>104</b>A-<b>104</b>X to communicate with one another and/or the server computers <b>102</b> using a variety of communication-based technologies, such as radio frequency (&#x201c;RF&#x201d;) (e.g., wireless fidelity (WiFi&#xae;) and Bluetooth&#xae;), cable TV, satellite links and the like.</p><p id="p-0036" num="0035">In some embodiments, server computers <b>102</b> may not be necessary and/or preferred. For example, in one or more embodiments, a stand-alone gaming device such as gaming device <b>104</b>A, gaming device <b>104</b>B or any of the other gaming devices <b>104</b>C-<b>104</b>X can implement one or more aspects of the present disclosure. However, it is typical to find multiple EGMs connected to networks implemented with one or more of the different server computers <b>102</b> described herein.</p><p id="p-0037" num="0036">The server computers <b>102</b> may include a central determination gaming system server <b>106</b>, a ticket-in-ticket-out (&#x201c;TITO&#x201d;) system server <b>108</b>, a player tracking system server <b>110</b>, a progressive system server <b>112</b>, and/or a casino management system server <b>114</b>. Gaming devices <b>104</b>A-<b>104</b>X may include features to enable operation of any or all servers for use by the player and/or operator (e.g., the casino, resort, gaming establishment, tavern, pub, etc.). For example, game outcomes may be generated on a central determination gaming system server <b>106</b> and then transmitted over the network to any of a group of remote terminals or remote gaming devices <b>104</b>A-<b>104</b>X that utilize the game outcomes and display the results to the players.</p><p id="p-0038" num="0037">Gaming device <b>104</b>A is often of a cabinet construction which may be aligned in rows or banks of similar devices for placement and operation on a casino floor. The gaming device <b>104</b>A often includes a main door which provides access to the interior of the cabinet. Gaming device <b>104</b>A typically includes a button area or button deck <b>120</b> accessible by a player that is configured with input switches or buttons <b>122</b>, an access channel for a bill validator <b>124</b>, and/or an access channel for a ticket-out printer <b>126</b>.</p><p id="p-0039" num="0038">In <figref idref="DRAWINGS">FIG. <b>1</b></figref>, gaming device <b>104</b>A is shown as a Relm XL&#x2122; model gaming device manufactured by Aristocrat&#xae; Technologies, Inc. As shown, gaming device <b>104</b>A is a reel machine having a gaming display area <b>118</b> comprising a number (typically 3 or 5) of mechanical reels <b>130</b> with various symbols displayed on them. The reels <b>130</b> are independently spun and stopped to show a set of symbols within the gaming display area <b>118</b> which may be used to determine an outcome to the game.</p><p id="p-0040" num="0039">In many configurations, the gaming device <b>104</b>A may have a main display <b>128</b> (e.g., video display monitor) mounted to, or above, the gaming display area <b>118</b>. The main display <b>128</b> can be a high-resolution liquid crystal display (LCD), plasma, light emitting diode (LED), or organic light emitting diode (OLED) panel which may be flat or curved as shown, a cathode ray tube, or other conventional electronically controlled video monitor.</p><p id="p-0041" num="0040">In some embodiments, the bill validator <b>124</b> may also function as a &#x201c;ticket-in&#x201d; reader that allows the player to use a casino issued credit ticket to load credits onto the gaming device <b>104</b>A (e.g., in a cashless ticket (TITO) system). In such cashless embodiments, the gaming device <b>104</b>A may also include a &#x201c;ticket-out&#x201d; printer <b>126</b> for outputting a credit ticket when a &#x201c;cash out&#x201d; button is pressed. Cashless TITO systems are used to generate and track unique bar-codes or other indicators printed on tickets to allow players to avoid the use of bills and coins by loading credits using a ticket reader and cashing out credits using a ticket-out printer <b>126</b> on the gaming device <b>104</b>A. The gaming device <b>104</b>A can have hardware meters for purposes including ensuring regulatory compliance and monitoring the player credit balance. In addition, there can be additional meters that record the total amount of money wagered on the gaming device, total amount of money deposited, total amount of money withdrawn, total amount of winnings on gaming device <b>104</b>A.</p><p id="p-0042" num="0041">In some embodiments, a player tracking card reader <b>144</b>, a transceiver for wireless communication with a mobile device (e.g., a player's smartphone), a keypad <b>146</b>, and/or an illuminated display <b>148</b> for reading, receiving, entering, and/or displaying player tracking information is provided in gaming device <b>104</b>A. In such embodiments, a game controller within the gaming device <b>104</b>A can communicate with the player tracking system server <b>110</b> to send and receive player tracking information.</p><p id="p-0043" num="0042">Gaming device <b>104</b>A may also include a bonus topper wheel <b>134</b>. When bonus play is triggered (e.g., by a player achieving a particular outcome or set of outcomes in the primary game), bonus topper wheel <b>134</b> is operative to spin and stop with indicator arrow <b>136</b> indicating the outcome of the bonus game. Bonus topper wheel <b>134</b> is typically used to play a bonus game, but it could also be incorporated into play of the base or primary game.</p><p id="p-0044" num="0043">A candle <b>138</b> may be mounted on the top of gaming device <b>104</b>A and may be activated by a player (e.g., using a switch or one of buttons <b>122</b>) to indicate to operations staff that gaming device <b>104</b>A has experienced a malfunction or the player requires service. The candle <b>138</b> is also often used to indicate a jackpot has been won and to alert staff that a hand payout of an award may be needed.</p><p id="p-0045" num="0044">There may also be one or more information panels <b>152</b> which may be a back-lit, silkscreened glass panel with lettering to indicate general game information including, for example, a game denomination (e.g., $0.25 or $1), pay lines, pay tables, and/or various game related graphics. In some embodiments, the information panel(s) <b>152</b> may be implemented as an additional video display.</p><p id="p-0046" num="0045">Gaming devices <b>104</b>A have traditionally also included a handle <b>132</b> typically mounted to the side of main cabinet <b>116</b> which may be used to initiate game play.</p><p id="p-0047" num="0046">Many or all the above described components can be controlled by circuitry (e.g., a game controller) housed inside the main cabinet <b>116</b> of the gaming device <b>104</b>A, the details of which are shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0048" num="0047">An alternative example gaming device <b>104</b>B illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is the Arc&#x2122; model gaming device manufactured by Aristocrat&#xae; Technologies, Inc. Note that where possible, reference numerals identifying similar features of the gaming device <b>104</b>A embodiment are also identified in the gaming device <b>104</b>B embodiment using the same reference numbers. Gaming device <b>104</b>B does not include physical reels and instead shows game play functions on main display <b>128</b>. An optional topper screen <b>140</b> may be used as a secondary game display for bonus play, to show game features or attraction activities while a game is not in play, or any other information or media desired by the game designer or operator. In some embodiments, topper screen <b>140</b> may also or alternatively be used to display progressive jackpot prizes available to a player during play of gaming device <b>104</b>B.</p><p id="p-0049" num="0048">Example gaming device <b>104</b>B includes a main cabinet <b>116</b> including a main door which opens to provide access to the interior of the gaming device <b>104</b>B. The main or service door is typically used by service personnel to refill the ticket-out printer <b>126</b> and collect bills and tickets inserted into the bill validator <b>124</b>. The main or service door may also be accessed to reset the machine, verify and/or upgrade the software, and for general maintenance operations.</p><p id="p-0050" num="0049">Another example gaming device <b>104</b>C shown is the Helix&#x2122; model gaming device manufactured by Aristocrat&#xae; Technologies, Inc. Gaming device <b>104</b>C includes a main display <b>128</b>A that is in a landscape orientation. Although not illustrated by the front view provided, the landscape display <b>128</b>A may have a curvature radius from top to bottom, or alternatively from side to side. In some embodiments, display <b>128</b>A is a flat panel display. Main display <b>128</b>A is typically used for primary game play while secondary display <b>128</b>B is typically used for bonus game play, to show game features or attraction activities while the game is not in play or any other information or media desired by the game designer or operator. In some embodiments, example gaming device <b>104</b>C may also include speakers <b>142</b> to output various audio such as game sound, background music, etc.</p><p id="p-0051" num="0050">Many different types of games, including mechanical slot games, video slot games, video poker, video black jack, video pachinko, keno, bingo, and lottery, may be provided with or implemented within the depicted gaming devices <b>104</b>A-<b>104</b>C and other similar gaming devices. Each gaming device may also be operable to provide many different games. Games may be differentiated according to themes, sounds, graphics, type of game (e.g., slot game vs. card game vs. game with aspects of skill), denomination, number of pay lines, maximum jackpot, progressive or non-progressive, bonus games, and may be deployed for operation in Class <b>2</b> or Class <b>3</b>, etc.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram depicting exemplary internal electronic components of a gaming device <b>200</b> connected to various external systems. All or parts of the example gaming device <b>200</b> shown could be used to implement any one of the example gaming devices <b>104</b>A-X depicted in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, gaming device <b>200</b> includes a topper display <b>216</b> or another form of a top box (e.g., a topper wheel, a topper screen, etc.) that sits above cabinet <b>218</b>. Cabinet <b>218</b> or topper display <b>216</b> may also house a number of other components which may be used to add features to a game being played on gaming device <b>200</b>, including speakers <b>220</b>, a ticket printer <b>222</b> which prints bar-coded tickets or other media or mechanisms for storing or indicating a player's credit value, a ticket reader <b>224</b> which reads bar-coded tickets or other media or mechanisms for storing or indicating a player's credit value, and a player tracking interface <b>232</b>. Player tracking interface <b>232</b> may include a keypad <b>226</b> for entering information, a player tracking display <b>228</b> for displaying information (e.g., an illuminated or video display), a card reader <b>230</b> for receiving data and/or communicating information to and from media or a device such as a smart phone enabling player tracking. <figref idref="DRAWINGS">FIG. <b>2</b></figref> also depicts utilizing a ticket printer <b>222</b> to print tickets for a TITO system server <b>108</b>. Gaming device <b>200</b> may further include a bill validator <b>234</b>, player-input buttons <b>236</b> for player input, cabinet security sensors <b>238</b> to detect unauthorized opening of the cabinet <b>218</b>, a primary game display <b>240</b>, and a secondary game display <b>242</b>, each coupled to and operable under the control of game controller <b>202</b>.</p><p id="p-0053" num="0052">The games available for play on the gaming device <b>200</b> are controlled by a game controller <b>202</b> that includes one or more processors <b>204</b>. Processor <b>204</b> represents a general-purpose processor, a specialized processor intended to perform certain functional tasks, or a combination thereof. As an example, processor <b>204</b> can be a central processing unit (CPU) that has one or more multi-core processing units and memory mediums (e.g., cache memory) that function as buffers and/or temporary storage for data. Alternatively, processor <b>204</b> can be a specialized processor, such as an application specific integrated circuit (ASIC), graphics processing unit (GPU), field-programmable gate array (FPGA), digital signal processor (DSP), or another type of hardware accelerator. In another example, processor <b>204</b> is a system on a chip (SoC) that combines and integrates one or more general-purpose processors and/or one or more specialized processors. Although <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that game controller <b>202</b> includes a single processor <b>204</b>, game controller <b>202</b> is not limited to this representation and instead can include multiple processors <b>204</b> (e.g., two or more processors).</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that processor <b>204</b> is operatively coupled to memory <b>208</b>. Memory <b>208</b> is defined herein as including volatile and nonvolatile memory and other types of non-transitory data storage components. Volatile memory is memory that do not retain data values upon loss of power. Nonvolatile memory is memory that do retain data upon a loss of power. Examples of memory <b>208</b> include random access memory (RAM), read-only memory (ROM), hard disk drives, solid-state drives, universal serial bus (USB) flash drives, memory cards accessed via a memory card reader, floppy disks accessed via an associated floppy disk drive, optical discs accessed via an optical disc drive, magnetic tapes accessed via an appropriate tape drive, and/or other memory components, or a combination of any two or more of these memory components. In addition, examples of RAM include static random access memory (SRAM), dynamic random access memory (DRAM), magnetic random access memory (MRAM), and other such devices. Examples of ROM include a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device. Even though <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that game controller <b>202</b> includes a single memory <b>208</b>, game controller <b>202</b> could include multiple memories <b>208</b> for storing program instructions and/or data.</p><p id="p-0055" num="0054">Memory <b>208</b> can store one or more game programs <b>206</b> that provide program instructions and/or data for carrying out various embodiments (e.g., game mechanics) described herein. Stated another way, game program <b>206</b> represents an executable program stored in any portion or component of memory <b>208</b>. In one or more embodiments, game program <b>206</b> is embodied in the form of source code that includes human-readable statements written in a programming language or machine code that contains numerical instructions recognizable by a suitable execution system, such as a processor <b>204</b> in a game controller or other system. Examples of executable programs include: (1) a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of memory <b>208</b> and run by processor <b>204</b>; (2) source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of memory <b>208</b> and executed by processor <b>204</b>; and (3) source code that may be interpreted by another executable program to generate instructions in a random access portion of memory <b>208</b> to be executed by processor <b>204</b>.</p><p id="p-0056" num="0055">Alternatively, game programs <b>206</b> can be setup to generate one or more game instances based on instructions and/or data that gaming device <b>200</b> exchange with one or more remote gaming devices, such as a central determination gaming system server <b>106</b> (not shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> but shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>). For purpose of this disclosure, the term &#x201c;game instance&#x201d; refers to a play or a round of a game that gaming device <b>200</b> presents (e.g., via a user interface (UI)) to a player. The game instance is communicated to gaming device <b>200</b> via the network <b>214</b> and then displayed on gaming device <b>200</b>. For example, gaming device <b>200</b> may execute game program <b>206</b> as video streaming software that allows the game to be displayed on gaming device <b>200</b>. When a game is stored on gaming device <b>200</b>, it may be loaded from memory <b>208</b> (e.g., from a read only memory (ROM)) or from the central determination gaming system server <b>106</b> to memory <b>208</b>.</p><p id="p-0057" num="0056">Gaming devices, such as gaming device <b>200</b>, are highly regulated to ensure fairness and, in many cases, gaming device <b>200</b> is operable to award monetary awards (e.g., typically dispensed in the form of a redeemable voucher). Therefore, to satisfy security and regulatory requirements in a gaming environment, hardware and software architectures are implemented in gaming devices <b>200</b> that differ significantly from those of general-purpose computers. Adapting general purpose computers to function as gaming devices <b>200</b> is not simple or straightforward because of: (1) the regulatory requirements for gaming devices <b>200</b>, (2) the harsh environment in which gaming devices <b>200</b> operate, (3) security requirements, (4) fault tolerance requirements, and (5) the requirement for additional special purpose componentry enabling functionality of an EGM. These differences require substantial engineering effort with respect to game design implementation, game mechanics, hardware components, and software.</p><p id="p-0058" num="0057">One regulatory requirement for games running on gaming device <b>200</b> generally involves complying with a certain level of randomness. Typically, gaming jurisdictions mandate that gaming devices <b>200</b> satisfy a minimum level of randomness without specifying how a gaming device <b>200</b> should achieve this level of randomness. To comply, <figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that gaming device <b>200</b> includes an RNG <b>212</b> that utilizes hardware and/or software to generate RNG outcomes that lack any pattern. The RNG operations are often specialized and non-generic in order to comply with regulatory and gaming requirements. For example, in a reel game, game program <b>206</b> can initiate multiple RNG calls to RNG <b>212</b> to generate RNG outcomes, where each RNG call and RNG outcome corresponds to an outcome for a reel. In another example, gaming device <b>200</b> can be a Class II gaming device where RNG <b>212</b> generates RNG outcomes for creating Bingo cards. In one or more embodiments, RNG <b>212</b> could be one of a set of RNGs operating on gaming device <b>200</b>. More generally, an output of the RNG <b>212</b> can be the basis on which game outcomes are determined by the game controller <b>202</b>. Game developers could vary the degree of true randomness for each RNG (e.g., pseudorandom) and utilize specific RNGs depending on game requirements. The output of the RNG <b>212</b> can include a random number or pseudorandom number (either is generally referred to as a &#x201c;random number&#x201d;).</p><p id="p-0059" num="0058">Another regulatory requirement for running games on gaming device <b>200</b> includes ensuring a certain level of RTP. Similar to the randomness requirement discussed above, numerous gaming jurisdictions also mandate that gaming device <b>200</b> provides a minimum level of RTP (e.g., RTP of at least 75%). A game can use one or more lookup tables (also called weighted tables) as part of a technical solution that satisfies regulatory requirements for randomness and RTP. In particular, a lookup table can integrate game features (e.g., trigger events for special modes or bonus games; newly introduced game elements such as extra reels, new symbols, or new cards; stop positions for dynamic game elements such as spinning reels, spinning wheels, or shifting reels; or card selections from a deck) with random numbers generated by one or more RNGs, so as to achieve a given level of volatility for a target level of RTP. (In general, volatility refers to the frequency or probability of an event such as a special mode, payout, etc. For example, for a target level of RTP, a higher-volatility game may have a lower payout most of the time with an occasional bonus having a very high payout, while a lower-volatility game has a steadier payout with more frequent bonuses of smaller amounts.) Configuring a lookup table can involve engineering decisions with respect to how RNG outcomes are mapped to game outcomes for a given game feature, while still satisfying regulatory requirements for RTP. Configuring a lookup table can also involve engineering decisions about whether different game features are combined in a given entry of the lookup table or split between different entries (for the respective game features), while still satisfying regulatory requirements for RTP and allowing for varying levels of game volatility.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>2</b></figref> illustrates that gaming device <b>200</b> includes an RNG conversion engine <b>210</b> that translates the RNG outcome from RNG <b>212</b> to a game outcome presented to a player. To meet a designated RTP, a game developer can setup the RNG conversion engine <b>210</b> to utilize one or more lookup tables to translate the RNG outcome to a symbol element, stop position on a reel strip layout, and/or randomly chosen aspect of a game feature. As an example, the lookup tables can regulate a prize payout amount for each RNG outcome and how often the gaming device <b>200</b> pays out the prize payout amounts. The RNG conversion engine <b>210</b> could utilize one lookup table to map the RNG outcome to a game outcome displayed to a player and a second lookup table as a pay table for determining the prize payout amount for each game outcome. The mapping between the RNG outcome to the game outcome controls the frequency in hitting certain prize payout amounts.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>2</b></figref> also depicts that gaming device <b>200</b> is connected over network <b>214</b> to player tracking system server <b>110</b>. Player tracking system server <b>110</b> may be, for example, an OASIS&#xae; system manufactured by Aristocrat&#xae; Technologies, Inc. Player tracking system server <b>110</b> is used to track play (e.g., amount wagered, games played, time of play and/or other quantitative or qualitative measures) for individual players so that an operator may reward players in a loyalty program. The player may use the player tracking interface <b>232</b> to access his/her account information, activate free play, and/or request various information. Player tracking or loyalty programs seek to reward players for their play and help build brand loyalty to the gaming establishment. The rewards typically correspond to the player's level of patronage (e.g., to the player's playing frequency and/or total amount of game plays at a given casino). Player tracking rewards may be complimentary and/or discounted meals, lodging, entertainment and/or additional play. Player tracking information may be combined with other information that is now readily obtainable by a casino management system.</p><p id="p-0062" num="0061">When a player wishes to play the gaming device <b>200</b>, he/she can insert cash or a ticket voucher through a coin acceptor (not shown) or bill validator <b>234</b> to establish a credit balance on the gamine device. The credit balance is used by the player to place wagers on instances of the game and to receive credit awards based on the outcome of winning instances. The credit balance is decreased by the amount of each wager and increased upon a win. The player can add additional credits to the balance at any time. The player may also optionally insert a loyalty club card into the card reader <b>230</b>. During the game, the player views with one or more UIs, the game outcome on one or more of the primary game display <b>240</b> and secondary game display <b>242</b>. Other game and prize information may also be displayed.</p><p id="p-0063" num="0062">For each game instance, a player may make selections, which may affect play of the game. For example, the player may vary the total amount wagered by selecting the amount bet per line and the number of lines played. In many games, the player is asked to initiate or select options during course of game play (such as spinning a wheel to begin a bonus round or select various items during a feature game). The player may make these selections using the player-input buttons <b>236</b>, the primary game display <b>240</b> which may be a touch screen, or using some other device which enables a player to input information into the gaming device <b>200</b>.</p><p id="p-0064" num="0063">During certain game events, the gaming device <b>200</b> may display visual and auditory effects that can be perceived by the player. These effects add to the excitement of a game, which makes a player more likely to enjoy the playing experience. Auditory effects include various sounds that are projected by the speakers <b>220</b>. Visual effects include flashing lights, strobing lights or other patterns displayed from lights on the gaming device <b>200</b> or from lights behind the information panel <b>152</b> (<figref idref="DRAWINGS">FIG. <b>1</b></figref>).</p><p id="p-0065" num="0064">When the player is done, he/she cashes out the credit balance (typically by pressing a cash out button to receive a ticket from the ticket printer <b>222</b>). The ticket may be &#x201c;cashed-in&#x201d; for money or inserted into another machine to establish a credit balance for play.</p><p id="p-0066" num="0065">Although <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> illustrates specific embodiments of a gaming device (e.g., gaming devices <b>104</b>A-<b>104</b>X and <b>200</b>), the disclosure is not limited to those embodiments shown in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. For example, not all gaming devices suitable for implementing embodiments of the present disclosure necessarily include top wheels, top boxes, information panels, cashless ticket systems, and/or player tracking systems. Further, some suitable gaming devices have only a single game display that includes only a mechanical set of reels and/or a video display, while others are designed for bar counters or tabletops and have displays that face upwards. Additionally, or alternatively, gaming devices <b>104</b>A-<b>104</b>X and <b>200</b> can include credit transceivers that wirelessly communicate (e.g., Bluetooth or other near-field communication technology) with one or more mobile devices to perform credit transactions. As an example, bill validator <b>234</b> could contain or be coupled to the credit transceiver that output credits from and/or load credits onto the gaming device <b>104</b>A by communicating with a player's smartphone (e.g., a digital wallet interface). Gaming devices <b>104</b>A-<b>104</b>X and <b>200</b> may also include other processors that are not separately shown. Using <figref idref="DRAWINGS">FIG. <b>2</b></figref> as an example, gaming device <b>200</b> could include display controllers (not shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>) configured to receive video input signals or instructions to display images on game displays <b>240</b> and <b>242</b>. Alternatively, such display controllers may be integrated into the game controller <b>202</b>. The use and discussion of <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref> are examples to facilitate ease of description and explanation.</p><p id="p-0067" num="0066">Those of skill in the art will appreciate that embodiments of the present disclosure could be implemented with more or fewer elements than are depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The pictured example embodiments of a gaming device <b>200</b>, as well as example gaming devices <b>104</b>A-C, are merely a few examples from a wide range of possible gaming device designs on which embodiments of the present disclosure may be implemented. Depending on implementation and the type of processing desired, components of the gaming device <b>200</b> can be added, omitted, split into multiple components, combined with other components, and/or replaced with like components. In alternative embodiments, gaming devices with different components and/or other configurations of components perform one or more of the described techniques. Specific embodiments of gaming devices typically use a variation or supplemented version of the gaming device <b>200</b>. The relationships shown between components within the gaming device <b>200</b> indicate general flows of information in the gaming device <b>200</b>; other relationships are not shown for the sake of simplicity. In general, the game controller <b>202</b> can be implemented by software executable on a CPU, by software controlling special-purpose hardware, or by special-purpose hardware (e.g., in an ASIC).</p><heading id="h-0007" level="1">II. EXAMPLE GAME PROCESSING ARCHITECTURES</heading><p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates, in block diagram form, an embodiment of a game processing architecture <b>300</b> that implements a game processing pipeline for the play of a game in accordance with various embodiments described herein. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the gaming processing pipeline starts with having a UI system <b>302</b> receive one or more player inputs for the game instance. Based on the player input(s), the UI system <b>302</b> generates and sends one or more RNG calls to a game processing backend system <b>314</b>. Game processing backend system <b>314</b> then processes the RNG calls with RNG engine <b>316</b> to generate one or more RNG outcomes. The RNG outcomes are then sent to the RNG conversion engine <b>320</b> to generate one or more game outcomes for the UI system <b>302</b> to display to a player. The game processing architecture <b>300</b> can implement the game processing pipeline using a gaming device, such as gaming devices <b>104</b>A-<b>104</b>X and <b>200</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, respectively. Alternatively, portions of the gaming processing architecture <b>300</b> can implement the game processing pipeline using a gaming device and one or more remote gaming devices, such as central determination gaming system server <b>106</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0069" num="0068">The UI system <b>302</b> includes one or more UIs that a player can interact with. The UI system <b>302</b> could include one or more game play UIs <b>304</b>, one or more bonus game play UIs <b>308</b>, and one or more multiplayer UIs <b>312</b>, where each UI type includes one or more mechanical UIs and/or graphical UIs (GUIs). In other words, game play UI <b>304</b>, bonus game play UI <b>308</b>, and the multiplayer UI <b>312</b> may utilize a variety of UI elements, such as mechanical UI elements (e.g., physical &#x201c;spin&#x201d; button or mechanical reels) and/or GUI elements (e.g., virtual reels shown on a video display or a virtual button deck) to receive player inputs and/or present game play to a player. Using <figref idref="DRAWINGS">FIG. <b>3</b></figref> as an example, the different UI elements are shown as game play UI elements <b>306</b>A-<b>306</b>N and bonus game play UI elements <b>310</b>A-<b>310</b>N.</p><p id="p-0070" num="0069">The game play UI <b>304</b> represents a UI that a player typically interfaces with for a base game. During a game instance of a base game, the game play UI elements <b>306</b>A-<b>306</b>N (e.g., GUI elements depicting one or more virtual reels) are shown and/or made available to a user. In a subsequent game instance, the UI system <b>302</b> could transition out of the base game to one or more bonus games. The bonus game play UI <b>308</b> represents a UI that utilizes bonus game play UI elements <b>310</b>A-<b>310</b>N for a player to interact with and/or view during a bonus game. In one or more embodiments, at least some of the game play UI element <b>306</b>A-<b>306</b>N are similar to the bonus game play UI elements <b>310</b>A-<b>310</b>N. In other embodiments, the game play UI element <b>306</b>A-<b>306</b>N can differ from the bonus game play UI elements <b>310</b>A-<b>310</b>N.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>3</b></figref> also illustrates that UI system <b>302</b> could include a multiplayer UI <b>312</b> purposed for game play that differ or is separate from the typical base game. For example, multiplayer UI <b>312</b> could be set up to receive player inputs and/or presents game play information relating to a tournament mode. When a gaming device transitions from a primary game mode that presents the base game to a tournament mode, a single gaming device is linked and synchronized to other gaming devices to generate a tournament outcome. For example, multiple RNG engines <b>316</b> corresponding to each gaming device could be collectively linked to determine a tournament outcome. To enhance a player's gaming experience, tournament mode can modify and synchronize sound, music, reel spin speed, and/or other operations of the gaming devices according to the tournament game play. After tournament game play ends, operators can switch back the gaming device from tournament mode to a primary game mode to present the base game. Although <figref idref="DRAWINGS">FIG. <b>3</b></figref> does not explicitly depict that multiplayer UI <b>312</b> includes UI elements, multiplayer UI <b>312</b> could also include one or more multiplayer UI elements.</p><p id="p-0072" num="0071">Based on the player inputs, the UI system <b>302</b> could generate RNG calls to a game processing backend system <b>314</b>. As an example, the UI system <b>302</b> could use one or more application programming interfaces (&#x201c;APIs&#x201d;) to generate the RNG calls. To process the RNG calls, the RNG engine <b>316</b> could utilize gaming RNG <b>318</b> and/or non-gaming RNGs <b>319</b>A-<b>319</b>N. Gaming RNG <b>318</b> corresponds to RNG <b>212</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. As previously discussed with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, gaming RNG <b>318</b> often performs specialized and non-generic operations that comply with regulatory and/or game requirements. For example, because of regulation requirements, gaming RNG <b>318</b> could be a cryptographic random or pseudorandom number generator (&#x201c;PRNG&#x201d;) (e.g., Fortuna PRNG) that securely produces random numbers for one or more game features. To generate random numbers, gaming RNG <b>318</b> could collect random data from various sources of entropy, such as from an operating system (&#x201c;OS&#x201d;). Alternatively, non-gaming RNGs <b>319</b>A-<b>319</b>N may not be cryptographically secure and/or be computationally less expensive. Non-gaming RNGs <b>319</b>A-<b>319</b>N can, thus, be used to generate outcomes for non-gaming purposes. As an example, non-gaming RNGs <b>319</b>A-<b>319</b>N can generate random numbers for such as generating random messages that appear on the gaming device.</p><p id="p-0073" num="0072">The RNG conversion engine <b>320</b> processes each RNG outcome from RNG engine <b>316</b> and converts the RNG outcome to a UI outcome that is feedback to the UI system <b>302</b>. With reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, RNG conversion engine <b>320</b> corresponds to RNG conversion engine <b>210</b> used for game play. As previously described, RNG conversion engine <b>320</b> translates the RNG outcome from the RNG <b>212</b> to a game outcome presented to a player. RNG conversion engine <b>320</b> utilizes one or more lookup tables <b>322</b>A-<b>322</b>N to regulate a prize payout amount for each RNG outcome and how often the gaming device pays out the derived prize payout amounts. In one example, the RNG conversion engine <b>320</b> could utilize one lookup table to map the RNG outcome to a game outcome displayed to a player and a second lookup table as a pay table for determining the prize payout amount for each game outcome. In this example, the mapping between the RNG outcome and the game outcome controls the frequency in hitting certain prize payout amounts. Different lookup tables could be utilized depending on the different game modes, for example, a base game versus a bonus game.</p><p id="p-0074" num="0073">After generating the UI outcome, the game processing backend system <b>314</b> sends the UI outcome to the UI system <b>302</b>. Examples of UI outcomes are symbols to display on a video reel or reel stops for a mechanical reel. In one example, if the UI outcome is for a base game, the UI system <b>302</b> updates one or more game play UI elements <b>306</b>A-<b>306</b>N, such as symbols, for the game play UI <b>304</b>. In another example, if the UI outcome is for a bonus game, the UI system could update one or more bonus game play UI elements <b>310</b>A-<b>310</b>N (e.g., symbols) for the bonus game play UI <b>308</b>. In response to updating the appropriate UI, the player may subsequently provide additional player inputs to initiate a subsequent game instance that progresses through the game processing pipeline.</p><p id="p-0075" num="0074">The example game processing architecture <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be used to process game play instructions and generate outcomes as described in later sections.</p><heading id="h-0008" level="1">III. REEL GAMES, SUPPLEMENTAL FEATURES, AND OUTCOME DETERMINATIONS</heading><p id="p-0076" num="0075">Electronic gaming devices can incorporate the innovations described herein into various types of reel games or other games. A reel game can be a base reel game or bonus reel game. A base, or primary, reel game includes play that involves spinning reels. A bonus, or secondary, reel game/feature can add the possibility of winning a relatively large payout. A bonus reel game/feature may require an additional wager, but typically does not. A single play of a reel game can constitute a single complete game or wager, e.g., a single spin of the reels or a series of spins which culminate in a final aggregate outcome. Depending on implementation, in addition to a base reel game, an electronic gaming device can conduct a bonus reel game and/or a gateway wheel game. A reel game uses spinning reels and one or more reel areas (game windows) on a display screen.</p><p id="p-0077" num="0076">For a reel game, a reel area encloses viewable portions of a set of reels associated with the reel area. For each of the reels, the viewable portion of the reel includes one or more positions for instances of symbols. Thus, the reel area is a matrix of instances of symbols on a display screen, and may be highlighted graphically to emphasize reels and symbol instances within the reel area. The number of reels and dimensions of the reel area depend on implementation. In some configurations, a reel area has m reels and can enclose different counts of symbol instances for different reels. For example, a reel area encloses 4 symbol instances for a first reel, 6 symbol instances for each of a second reel, third reel, and fourth reel, and 4 symbol instances for a fifth reel. Such a configuration can be described as a 4-6-6-6-4 configuration. In other typical configurations, a reel area has an m&#xd7;n configuration, with m reels and with n symbol instances visible per reel. For example, for a base reel game, a reel area can have a 5&#xd7;3 configuration&#x2014;five reels per window, with three symbol instances showing in the window for each of the reels. More generally, the reel area spans m reels in a first dimension and spans n symbol instances in a second dimension orthogonal to the first dimension, where the value of m can be 4, 5, 6, 7, 8, or some other number of reels, and the value of n can be 2, 3, 4, 5, 6, or some other number of symbol instances. Typically, the m reels are arranged horizontally in the reel area from left-to-right, with the m reels spinning vertically and the reel area showing symbol instances of each of the respective reels. Alternatively, the m reels are arranged vertically in the reel area from top-to-bottom, with the m reels spinning horizontally and the reel area showing symbol instances of each of the respective reels. Alternatively, a reel area can have another configuration.</p><p id="p-0078" num="0077">For each of the reels, a reel strip includes x positions along a one-dimensional strip of symbol instances, where x depends on implementation. For example, x is 30, 80, 100, 200, or some other number of positions. The value of x can be the same or different for different reels (thus, different reels can have different numbers of positions). Each reel can have a data structure (e.g., array, linked list, table) that tracks the symbol instances at the respective positions of the reel strip for the reel. In some implementations, the configuration of the symbol instances at the positions of the reel strips for the reels of a reel game is fixed after the reel game boots, although limited reconfiguration operations may be permitted. In other implementations, the configuration of the symbol instances at the positions of the reel strips for the reels of a reel game can change dynamically after the reel game boots (e.g., depending on bet amount or some other factor). Different sets of reels can be used for a base reel game, special mode of a base reel game, and bonus reel game or other supplemental feature. For example, for a special mode of a base reel game, more &#x201c;valuable&#x201d; symbols, such as a wild symbol or scatter symbol, can be added to the reels of a base reel game or swapped in for other symbols on the reels.</p><p id="p-0079" num="0078">The symbol set for reels has various types of symbols, including one or more target symbols and other symbols. The symbols can be static or animated. Depending on implementation, the symbol set for the reels includes one or more target symbol types, at least one jackpot symbol type, a wild symbol type, some number of picture symbol types, some number of minor/low symbol types, and a scatter symbol type (which triggers bonuses). Alternatively, the symbol set for the reels can include other and/or additional symbols. In general, for a given type of symbol, one or more instances of the symbol can appear in a reel strip, but games can have different constraints on symbol placement. Depending on context, the term &#x201c;symbol&#x201d; can indicate a symbol type or a symbol instance. In general, an instance of wild symbol can substitute for any other symbol (except, in most implementations, a scatter symbol or jackpot symbol) when determining win conditions along pay lines. In general, an instance of a scatter symbol can contribute to a win condition even if it is not on the same pay line as another scatter symbol. In some implementations, a win condition depends on a count of instances of a scatter symbol that occur anywhere within a reel area, regardless of where they land within the reel area. The symbol set can be the same or different between a base reel game and bonus reel game (or other supplemental feature). Some types of symbols are dimmed out (not active) at times (e.g., symbols other than target symbols are dimmed out during a supplemental feature).</p><p id="p-0080" num="0079">As in a reel game with physical reels, the reels of a reel game on a display screen &#x201c;spin&#x201d; graphically through a reel area on the display screen when a player actuates a &#x201c;spin&#x201d; or &#x201c;play&#x201d; button, which acts as a &#x201c;handle pull&#x201d; event. A backend system randomly selects symbol positions of reel strips at which to stop the reel strips for the respective reels, and the respective reels stop at the selected symbol positions of the reel strips, with some number of symbol instances visible in the game window for each of the reels. For example, for a given reel, the backend system generates a random number and determines a symbol position at which to stop the reel strip of the reel using the random number (e.g., with a lookup table). The backend system generates different random numbers for the respective reels that are spun. In this way, the backend system can determine which symbol instances of the respective reels are visible in the game window (reel area) on the display screen. In other scenarios, symbol instances visible in a reel area can be &#x201c;transferred&#x201d; from another reel area when certain conditions are satisfied. For example, symbol instances can be graphically transferred or otherwise added to the reel area for a bonus reel game from a base reel game upon the occurrence of certain conditions for the base reel game.</p><p id="p-0081" num="0080">In general, a display screen (or simply &#x201c;display&#x201d; or &#x201c;screen&#x201d;) for a reel game is an area that conveys information to a viewer. The information may be dynamic, in which case, the display screen may use LCD technology, LED technology, cathode ray tube (CRT) technology, or some other display technology. A main display screen (also called a primary game screen or main display) can be a display screen or an area of a display screen used to display game information related to a base reel game, such as a video representation of one or more spinning reels. A secondary display screen (also called a secondary game screen or bonus display) can be a display screen or an area of a display screen used to display secondary game information, such as animations and other graphics associated with a bonus reel game. A credit display can display a player's current number of credits, cash, account balance, or the equivalent. A bet display can display a player's amount wagered. The credit display and/or bet display may be standalone displays, independent of the main display and bonus display. Alternatively, the credit display and/or bet display can be incorporated into the main display or bonus display. Any of the display screens can be implemented as a touchscreen, with an associated touchscreen controller. In this case, such display screens may be operated as input devices in addition to presenting information, to provide input game play decisions (e.g., actions on and selection of game presentation objects).</p><p id="p-0082" num="0081">An electronic gaming device may award a special mode for a base reel game, a bonus reel game, or another supplemental feature to a player. A special mode or supplemental feature may enhance the electronic gaming device and the experience of players by adding elements of excitement and chance. The special mode or supplemental feature can utilize a different set of reels, display screens, controls, symbols, etc. than the base reel game in normal operation. Alternatively, the special mode or supplemental feature can reuse or reconfigure at least some of the reels, display screens, symbols, etc. of a base reel game. The special mode or supplemental feature can be started in response to satisfaction of a trigger condition. For example, the special mode or supplemental feature can be triggered upon the occurrence of some defined combination of symbol instances or threshold count of target symbol instances in one or more sets of reels. Alternatively, the special mode or supplemental feature can be triggered in some other way (e.g., randomly).</p><p id="p-0083" num="0082">In general, a backend system can determine various outcomes and perform operations for various types of base reel games, special modes, and supplemental features. A UI system can then output indications of those outcomes and perform operations for various types of base reel games, special modes, and supplemental features. For example, for various types of events, the backend system uses an RNG (which can be a cryptographic RNG or PRNG) to generate a random number and maps the random number to an outcome using a lookup table. This series of operations is generally referred to as an RNG event. <figref idref="DRAWINGS">FIG. <b>3</b></figref> shows examples of lookup tables <b>322</b>A-<b>322</b>N, which are also called weighted tables. In general, a lookup table can be implemented as any data structure that assigns probabilities to different options, in order for one of the different options to be selected using a random number. Different options are represented in different entries of a lookup table. The probabilities for different options can be reflected in threshold values (e.g., for a random number RND, generated by an RNG, in the range 0&#x3c;RND&#x3c;=100, with four options, 0&#x3c;RND&#x3c;=40 for option 1, 40&#x3c;RND&#x3c;=70 for option 2, 70&#x3c;RND&#x3c;=90 for option 3, and 90&#x3c;RND&#x3c;=100 for option 4). The threshold values can represent percentages or, more generally, sub-ranges within the range for a random number. In some implementations, the threshold values for a lookup table are represented as count values (weights) for the respective entries of the lookup table. For example, the following table shows count values for the four options described above:</p><p id="p-0084" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Example Lookup Table</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="1" colwidth="105pt" align="center"/><colspec colname="2" colwidth="112pt" align="left"/><tbody valign="top"><row><entry>count value</entry><entry>entry</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row><row><entry>40</entry><entry>&#x3c;value a1, value a2, . . .&#x3e;</entry></row><row><entry>30</entry><entry>&#x3c;value b1, value b2, . . .&#x3e;</entry></row><row><entry>20</entry><entry>&#x3c;value c1, value c2, . . .&#x3e;</entry></row><row><entry>10</entry><entry>&#x3c;value d1, value d2, . . .&#x3e;</entry></row><row><entry namest="1" nameend="2" align="center" rowsep="1"/></row></tbody></tgroup></table></tables><br/>The sum total of the count values (weights) indicates the range of the options. The backend system can use a random number, generated between 1 and the sum total of the count values, to select one of the entries in the lookup table by comparing the random number to successive running totals. In the example shown in Table 1, if the random number is 40 or less, the first entry is selected. Otherwise, if the random number is between 41 and 70, the second entry is selected. Otherwise, if the random number is between 71 and 90, the third entry is selected. Otherwise, the last entry is selected. The threshold values for a lookup table can be fixed and predetermined. Or, the threshold values for a lookup table can vary dynamically (e.g., depending on bet amount). Or, a lookup table can be dynamically selected (e.g., depending on bet amount, depending on another factor) from among multiple available lookup tables. Different parameters or choices during game play can use different lookup tables. Or, different combinations of parameters or choices can be combined in entries of a given lookup table.</p><p id="p-0085" num="0083">In general, after reels have landed (stopped) in a reel area, any win conditions can be detected and any win amounts can be awarded to the player (e.g., credited to the player's credit balance). In some examples, win conditions depend on a count of target symbol instances in a reel area. In other examples, win conditions are defined as combinations of symbol instances along pay lines (also called win lines) across at least a portion of a reel area on a display screen. Typically, a pay line is traversed from one side of the reel area to the opposite side of the reel area (e.g., left to right), using one symbol instance per reel along the pay line as part of possible combinations of symbol instances. For a round of play, when a certain combination of symbol instances appears along a pay line, a win amount corresponding to that combination of symbol instances and that pay line is awarded. Win amounts can vary according to the combination of symbol instances and according to the particular pay line along which the combination of symbol instances appears. Win amounts are typically determined according to a pay table, where the pay table comprehends the various combinations of symbol instances and pay lines that may occur (examples of win conditions). The win amount for a round of play may be a fraction of an amount wagered for that round of play for certain win conditions. For other win conditions, the win amount may be much larger than the amount wagered. The number of pay lines and base credit cost to play depends on implementation. There can be 2&#xd7;, 3&#xd7;, 4&#xd7;, and 5&#xd7; bet multipliers. Multipliers can also appear as symbols in reels. Alternatively, there could be higher bet multipliers (e.g., up to 8&#xd7;), different credit options, and/or a different number of pay lines.</p><p id="p-0086" num="0084">Depending on implementation, symbol instances along a pay line can be counted in different ways. For example, when evaluating a win condition along a pay line, symbol instances along the pay line in any reel can be counted, even if the reels are not adjacent. Alternatively, when evaluating a win condition along a pay line, only symbol instances along the pay line in adjacent reels are counted. For a given pay line, only the highest-paying combination of symbol instances is awarded. Alternatively, for a given pay line, all possible combinations of symbol instances are awarded, in the aggregate. A given symbol instance (e.g., wild symbol) is counted only towards its highest-paying combination in a given pay line. Alternatively, a given symbol instance can be counted towards multiple combinations in a given pay line.</p><p id="p-0087" num="0085">Instead of evaluating win conditions on explicitly-designated pay lines across reels in a reel area, an award can be determined according to a &#x201c;ways&#x201d; approach, which is also referred to herein as &#x201c;all-ways evaluation&#x201d; or simply &#x201c;ways evaluation.&#x201d; For all-ways evaluation, each possible path through designated (active) symbol display position(s) of the respective reels provides a way to win. A path is traversed from one side of the reel area to the opposite side of the reel area (e.g., left to right), using one symbol instance per reel along the path. For one symbol instance per reel in a combination, any symbol instance displayed at an active symbol display position for a given reel in the reel area can be used to form a symbol instance combination with any symbol instance displayed at an active display position of each of the other reels. As a result, the total number of ways to win is determined by multiplying the number of active display position(s) of each reel. For example, for five reels each showing three symbol instances at active display positions in a reel area, there are 3<sup>5</sup>=243 ways to win for all-ways evaluation. As another example, for five reels each showing four symbol instances at active display positions in a reel area, there are 4<sup>5</sup>=1024 ways to win for all-ways evaluation. As another example, for five reels, with the first and last reels each showing four symbol instances and the other reels each showing six symbol instances at active display positions in the reel area, there are 4&#xd7;6&#xd7;6&#xd7;6&#xd7;4=3456 ways to win for all-ways evaluation. As a final example, for five reels, with the first and last reels each showing four symbol instances and the other reels each showing ten symbol instances at active display positions in the reel area, there are 4&#xd7;10&#xd7;10&#xd7;10&#xd7;4=16000 ways to win for all-ways evaluation.</p><p id="p-0088" num="0086">For all-ways evaluation, the designated (active) symbol display positions for the respective reels can be pre-defined and static. For example, the designated (active) symbol display positions for each reel can be all of the symbol display positions enclosed in a reel area for the reel. Or, the designated (active) symbol display positions for the respective reels can change, e.g., depending on a bet amount. In some implementations, an individual reel can be selected to have all symbol display positions active or only a single symbol display position active, e.g., for different bet amounts. That is, the symbol instance displayed in any symbol display position can be used for a selected reel. For example, depending on the bet amount, all symbol display positions per reel can be active for one reel, two reels, three reels, four reels, or five reels. If all symbol display positions are not active for a reel, then only one symbol display position is active for that reel for all-ways evaluation. For example, for five reels each showing three symbol instances in a reel area, if three reels are selected, there are 3&#xd7;3&#xd7;3&#xd7;1&#xd7;1=27 ways to win for all-ways evaluation. For such all-ways evaluation, each possible path through the designated (active) symbol display position(s) of the respective reels provides a way to win. The total number of ways to win is determined by multiplying the number of active symbol display position(s) of each reel, where the active symbol display position(s) for a reel are all symbol display positions in the reel area for a selected reel but only the designated (e.g., center) symbol display position in the reel area for a non-selected reel.</p><p id="p-0089" num="0087">In some implementations, for all-ways evaluation using a set of reels, a backend system determines which symbol display positions of the reel area are active for the reels, respectively. For example, the backend system determines which symbol display positions of the reel area are active for the reels, respectively, depending on the bet amount. Alternatively, the symbol display positions of the reel area that are active for the reels, respectively, can be pre-defined and static. In any case, for all of the possible paths through the active symbol display positions of the reel area, the backend system evaluates combinations of instances of symbols along the possible paths for one or more win conditions. Each of the possible paths uses one of the instances of symbols per reel and crosses the reel area from one side of the reel area to an opposite side of the reel area (e.g., left to right).</p><heading id="h-0009" level="1">IV. EXAMPLE IMPLEMENTATION IN AN ELECTRONIC GAMING DEVICE</heading><p id="p-0090" num="0088">This section describes an example implementation in an electronic gaming device, in which the innovations described herein can be implemented. The example implementation is presented to provide one example of context for the innovations. The innovations described herein can be used in other implementations. For example, the innovations described herein can be used in implementations of an electronic gaming device with different hardware features and/or different gameplay mechanics. Also, although the innovations described herein can be used in combination, the innovations described herein can also be used separately.</p><p id="p-0091" num="0089">In the example implementation, a reel area of a display screen of an electronic gaming device has five reels. For a base reel game, the reel area encloses four symbol display positions for each of the first and fifth reels, and the reel area encloses six symbol display positions for each of the second, third, and fourth reels. That is, the reel configuration is 4-6-6-6-4 for the base reel game. Alternatively, a different reel configuration can be used.</p><p id="p-0092" num="0090">In the example implementation, the symbol types include a highest-value symbol (shown as a white buffalo in some example screenshots), a high-value symbol (shown as a buffalo), various lower-value symbol types of different denominations (shown as other animals, numbers, card values), a wild symbol (shown as a sunset), and a scatter symbol (shown as a coin). The scatter symbol is a dynamic symbol that is resolved to one of several different scatter symbol types (shown as a regular coin, a super coin, or one of several different jackpot coins) upon a spin. Alternatively, other and/or additional symbol types can be used.</p><p id="p-0093" num="0091">In the example implementation, a player can choose a bet denomination (e.g., one cent, two cents, five cents) or use a default bet denomination for a base reel game. The player can also choose a bet amount (e.g., different amounts of credits) or use a default bet amount. The bet amount affects the number of reels that are selected for all-ways evaluation&#x2014;from one reel up to five reels, depending on the bet amount. The player can also choose a bet multiplier (e.g., 1&#xd7;, 2&#xd7;, 3&#xd7;, 4&#xd7;, 5&#xd7;) or use a default bet multiplier (e.g., 1&#xd7;). Alternatively, other bet settings, evaluation approaches, etc. can be used.</p><p id="p-0094" num="0092">The player initiates a spin for the base reel game (e.g., pushing a spin button). The spin uses the bet denomination, bet amount, and bet multiplier in effect (either default or selected by the player), assuming credits are sufficient in a credit meter. The credit meter decreases by the bet size.</p><p id="p-0095" num="0093">For the spin of the base reel game, a check is made whether a special mode is triggered. In particular, a random number is generated, and the random number is mapped to an outcome (i.e., that the special mode is triggered, or that the special mode is not triggered) using a lookup table. The lookup table that is used can depend on the bet amount. Generally, as the bet amount increases, the special mode is more likely to be triggered, as reflected in weights for the possible outcomes in different lookup tables for different bet amounts. Alternatively, the special mode can be triggered in some other way.</p><p id="p-0096" num="0094">When the special mode is not triggered, the spin of the base reel game proceeds in a regular mode for the base reel game. The regular mode has several stages, including assignment of reels, resolution of dynamic symbols, and outcome evaluation.</p><p id="p-0097" num="0095">In the regular mode of the base reel game, reel strips can be reconfigured for at least some of the reels. For example, upon a spin, a selection can be made between two different sets of reel strips to use for one or more reels (e.g., middle reels 2-4 of five reels). The first set of reel strips possible for the reels includes instances of a wild symbol, which can be resolved to a 2&#xd7; multiplier, 3&#xd7; multiplier, or regular wild symbol for outcome evaluation, using an RNG event. The second set of reel strips possible for the reels includes instances of a wild symbol, but the wild symbol cannot switch to a 2&#xd7; multiplier or a 3&#xd7; multiplier for outcome evaluation. Instead, the RTP associated with the (possible) multiplier is reallocated to one or more stacks of instances of a high-value target symbol (buffalo) in the second set of reel strips. In the example implementation, a stack of high-value target symbol instances in a reel strip is at least as tall as the count of symbol instances that show in the reel area for the reel, making it possible for a &#x201c;full&#x201d; stack of high-value target symbol instances to land. The selection between the different versions of reel strips can use an RNG event. For example, upon the spin, a random number is generated, and the random number is mapped to an outcome (i.e., use the first version of reel strips, or use the second version of reel strips) using a lookup table. The lookup table that is used can depend on the bet amount. Generally, as the bet amount increases, the second version of reel strips is more likely to be selected, as reflected in weights in different lookup tables for different bet amounts. Alternatively, the version of reel strips can be selected in some other way. Or, alternatively, the same version of reel strips can always be used in regular mode for a base reel game, without switching between versions of reel strips.</p><p id="p-0098" num="0096">For a spin of the base reel game in regular mode, any instance of a placeholder for a dynamic symbol in a reel strip is replaced with an instance of a specific symbol type. In the example implementation, the reel strip for each of the respective reels of the base reel game in regular mode can include an instance of a dynamic symbol (coin). Before outcome evaluation, any instance of the dynamic symbol is replaced with (a) an instance of a regular coin symbol, which is a scatter symbol, (b) an instance of a super coin symbol, which is a scatter symbol that also triggers a separate series of operations for the free game feature, or (c) an instance of a jackpot coin symbol, which is a scatter symbol that can also help satisfy a win condition for a jackpot (e.g., grand, major, or minor jackpot, depending on jackpot coin symbol type). The type of symbol used to replace the dynamic symbol is selected by generating a random number and mapping the random number to an outcome (e.g., use symbol type <b>1</b>, use symbol type <b>2</b>, and so on) using a lookup table. In the lookup table, different weights can be assigned to the different symbol types. The lookup table that is used can depend on the bet amount. Generally, as the bet amount increases, the higher-value symbol types (e.g., super coin symbol, jackpot coin symbols) are more likely to be selected, as reflected in weights for symbol types in different lookup tables for different bet amounts. In the example implementation, the available lookup tables for the first reel include the jackpot coin symbol types, but the available lookup tables for the remaining reels do not. Each different reel of the base reel game can have its own lookup table for resolving dynamic symbols, or at least some of the reels (e.g., reels after the first reel) can share a lookup table. Alternatively, dynamic symbols can be resolved in a different way for a spin, or an implementation can use only non-dynamic symbols.</p><p id="p-0099" num="0097">For a spin of the base reel game in regular mode, an outcome is determined. For example, a symbol position of a reel strip at which to stop the reel strip is determined for each of the reels, and win conditions are evaluated. The example implementation uses all-ways evaluation for the regular mode, with the number of selected (active) reels depending on bet amount. The number of active reels can be one reel (the first reel), two reels (the first two reels), three reels (the first three reels), four reels (the first four reels), or five reels (all reels). Win conditions are evaluated on possible paths starting from one side of the reel area and continuing (one symbol instance per reel) to the opposite side of the reel area (e.g., left to right). For any given symbol instance, only the highest-value combination is awarded. Win conditions count symbol instances on adjacent reels along a path, except for scatter symbol instances.</p><p id="p-0100" num="0098">For purposes of outcome evaluation, an instance of a wild symbol along a path can be treated as an instance of any other symbol, except a scatter. In addition, a wild symbol is selectively replaced with a 2&#xd7; multiplier or 3&#xd7; multiplier, or stays as a wild symbol, using an RNG event with a lookup table. Alternatively, a wild symbol is always resolved to be a 2&#xd7; multiplier or 3&#xd7; multiplier, using an RNG event with a lookup table. The lookup tables can vary depending on bet amount. In the example implementation, instances of a wild symbol appear only in the reel strips for the second reel, third reel, and fourth reel. Any 2&#xd7; multiplier or 3&#xd7; multiplier along a path with a winning combination of symbol instances is graphically shown. Any 2&#xd7; multiplier or 3&#xd7; multiplier can also be applied to a winning combination of scatter symbol instances.</p><p id="p-0101" num="0099">Alternatively, outcomes can be evaluated using a different approach in the regular mode of the base reel game. For example, outcomes are evaluated using a conventional approach with one or more pay lines. In any case, after the outcome evaluation for a spin in the regular mode of the base reel game, any credits from winning combinations of symbol instances are shown in a win meter and added to a credit meter.</p><p id="p-0102" num="0100">When the special mode for the base reel game is triggered, the spin of the base reel game proceeds in the special mode for the base reel game. In the example implementation, in the special mode, one or more aspects of the base reel game are adjusted to ensure that an outcome satisfies a threshold condition, as explained in section V. For example, different reel strips can be used for at least some of the reels in the special mode. The different reel strips include stacks of instances of a high-value symbol (buffalo). As another example, the reel area can be enlarged for the special mode to enclose more symbol instances, for at least some of the reels. In the example implementation, the reel area transitions to a 4-10-10-10-4 configuration during the special mode, with the reel area enclosing ten symbol instances for each of the three middle reels. Unlike the regular mode, however, there are no dynamic symbols in the special mode in the example implementation. Alternatively, different aspects of the base reel game can be adjusted for the special mode.</p><p id="p-0103" num="0101">For a spin of the base reel game in the special mode, an outcome is determined. For example, a symbol position of a reel strip at which to stop the reel strip is determined for each of the reels, and win conditions are evaluated. The example implementation uses all-ways evaluation for the special mode, with the number of selected (active) reels depending on bet amount, as explained for the regular mode. As in the regular mode, win conditions are evaluated on possible paths starting from one side of the reel area and continuing (one symbol instance per reel) to the opposite side of the reel area (e.g., left to right). Win conditions count symbol instances on adjacent reels along a path. For any given symbol instance, only the highest-value combination is awarded. Wild symbols can be evaluated as in the regular mode of the base reel game (resolving to a 2&#xd7; multiplier, 3&#xd7; multiplier, or regular wild symbol). Alternatively, wild symbols can remain as wild symbols (and never be resolved as a multiplier) in the special mode, or wild symbols can be ignored in the special mode.</p><p id="p-0104" num="0102">Alternatively, outcomes can be evaluated using a different approach in the special mode of the base reel game. For example, outcomes are evaluated using a conventional approach with one or more pay lines. In any case, after the outcome evaluation, any credits from winning combinations of symbol instances are shown in a win meter and added to a credit meter.</p><p id="p-0105" num="0103">During the regular mode of the base reel game, if at least a threshold count (e.g., three or more) of instances of a scatter symbol (coin, super coin, or jackpot) land in any position, a free games feature is triggered. (As noted, there are no dynamic symbols in the special mode of the base reel game in the example implementation, so the free games features cannot be triggered from the special mode.) The player is prompted to start the free games feature, and a transition to the free games feature occurs. Each spin of the free games feature is started in response to a user input event. The free games feature continues until all free games (spins) have been used. The number of free games depends on the count of instances of a scatter symbol that have landed to trigger the free games feature. The number of free games can be increased if the free games feature is &#x201c;re-triggered&#x201d; from within the free games feature.</p><p id="p-0106" num="0104">For each spin in the free games feature, any instance of a dynamic coin symbol is replaced with an instance of a specific symbol type, generally as explained above with reference to the regular mode of the base reel game. The outcome of the spin is then determined using all-ways evaluation, generally as described above for the base reel game. Alternatively, outcome evaluation can be performed using a different approach for a spin of the free games feature. In any case, after the outcome evaluation for a spin, any credits from winning combinations of symbol instances are shown in a win meter. The free games feature continues in a cycle of spin/stop/outcome evaluation until there are no more free games (spins). After the outcome evaluation for all spins of the free games feature, the total from the win meter is added to a credit meter.</p><p id="p-0107" num="0105">In a spin of the free games feature, if at least a threshold count (e.g., two or more) of instances of a scatter symbol (coin, super coin, or jackpot) land in any position, the free games feature is re-triggered. Free games (spins) are added to a running count of free games. The number of additional free games (spins) depends on the count of instances of a scatter symbol that have landed.</p><p id="p-0108" num="0106">In a spin of the regular mode of the base reel game or the free games feature, if a super coin symbol instance is part of a combination of symbol instances that triggers or re-triggers the free games feature, operations for a ribbon wheel series are triggered (in addition to the free games feature being triggered or re-triggered). For each instance of the super coin symbol, a spin of a ribbon wheel gives a count of instances of the highest-value symbol (white buffalo) to add to the reels for the free game feature. Specifically, an animation zooms in to the instance of the super coin symbol, and a graphical element for the ribbon wheel slides out from behind the super coin symbol. A reel strip for the ribbon wheel spins. In the example implementation, the reel strip for the ribbon wheel is selected using a linked reel strip mechanism, as described in section VI. Alternatively, the reel strip for the ribbon wheel is determined in some other way, e.g., using an approach that implements sampling without replacement for multiple spins of a ribbon wheel with a given reel strip, as described in section VI. In any case, a symbol position at which to stop the reel strip is determined using an RNG event with a lookup table for the reel strip, and a count of instances of the highest-value symbol is determined as the outcome of the spin of the ribbon wheel. After the spin, an animation zooms back out to the reel area for the free games feature. If the combination of symbol instances that triggers or re-triggers the free games feature includes multiple instances of the super coin symbol, the ribbon wheel spin series occurs for each of the super coin symbol instances, successively zooming in, spinning, and zooming out for each of the super coin symbol instances (e.g., in a left-to-right manner across the reel area).</p><p id="p-0109" num="0107">After all of the spins of the ribbon wheel are completed (for super coin symbol instances), the player is prompted to start the free games feature. In general, the free games feature proceeds as described above, but first the new instances of the highest-value symbol are added to the reels. When the player starts the free games feature, a transition to the free games feature occurs. As the reels spin for a first spin of the free games feature (or first spin after a re-trigger), new instances of the highest-value symbol (white buffalo) are added to the reels (e.g., by replacing other instances of symbols in reel strips for the reels). In the example implementation, the symbol positions of the reel strips at which the instances of the highest-value symbol are added are determined using specially-configured index tables, so that the instances of the highest-value symbol are clustered in the reel strips, as described in section VII. Alternatively, the symbol positions (at which the instances of the highest-value symbol are added) are determined in some other way. Visually, the instances of the highest-value symbol are graphically added to the reel strips, one instance at a time, from left-to-right by reel, as the reel strips spin, or according to another pattern. For each spin of the free games feature, operations are generally performed as described above for the free games feature (with a user input event initiating each spin, resolution of instances of a dynamic symbol, and outcome evaluation). For outcome evaluation, instances of the highest-value symbol (white buffalo) are treated as their own symbol type. For example, for all-ways evaluation, an instance of the highest-value symbol (white buffalo) can be counted as part of a 3-way, 4-way, or 5-way combination of instances of the highest-value symbol along a path. An instance of the highest-value symbol (white buffalo) can also be treated as a wild symbol for the high-value symbol (buffalo). For example, for all-ways evaluation, an instance of the highest-value symbol (white buffalo) can be counted as part of a 3-way, 4-way, or 5-way combination with a mix of instances of the highest-value symbol and high-value symbol. Alternatively, outcome evaluation can performed using a different approach.</p><p id="p-0110" num="0108">In the free games feature, different lookup tables can be used when resolving dynamic symbols at different times, so that the super coin symbol becomes progressively less likely as the count of landed instances of the super coin symbol increases. In this way, the number of spins of the ribbon wheel can be limited for the free game feature, which in turn limits the count of instances of the highest-value symbol that can be added to the reels for the free games feature. For example, a different lookup table for dynamic symbol resolution can be used for each reel depending on the number of instances of the super coin symbol that have already landed. Thus, as more instances of the super coin symbol land, it becomes harder to get a new instance of the super coin symbol. In the example implementation, no more than ten instances of the super coin symbol/ten spins of the ribbon wheel can happen for an instance of the free games feature. For example, if six instances of the super coin symbol have landed, the super coin symbol option is disabled for the fifth reel, so at most four more instances of the super coin symbol can land.</p><heading id="h-0010" level="1">V. EXAMPLES OF SPECIAL MODE WITH A FINAL OUTCOME SATISFYING A THRESHOLD CONDITION</heading><p id="p-0111" num="0109">This section describes innovations for a special mode of a process that uses a set of reels in an electronic gaming device, in which the process is adjusted so that a final outcome of an instance of the process necessarily satisfies a threshold condition for the final outcome (e.g., a minimum award for the special mode, for all-ways evaluation of instances of symbols enclosed in a reel area). In this way, a positive final outcome can be ensured for the instance of the process. For example, reel strips for the reels can be modified and the reel area can be enlarged, so that the final outcome necessarily satisfies the threshold condition. Alternatively, the process can be adjusted in various other ways, as described below, to ensure that the final outcome satisfies the threshold condition.</p><p id="p-0112" num="0110">In the example implementation described in section IV, the special mode is for a spin of a base reel game. In the special mode, the award for the spin is guaranteed to be at least a minimum amount, for all-ways evaluation of instances of symbols enclosed in a reel area. The special mode does not occur for a spin in a free games feature or other supplemental feature. Alternatively, for innovations described in this section, the special mode can occur for a spin in a supplemental feature or in an instance of a different type of process.</p><heading id="h-0011" level="1">A. Options for Triggering the Special Mode</heading><p id="p-0113" num="0111">The special mode of a process that uses a set of reels (in which the process is adjusted so that a final outcome of an instance of the process necessarily satisfies a threshold condition for the final outcome) can be triggered in various ways. The special mode can be a random feature that is evaluated for each instance of a process, without checking any eligibility condition. For example, for each instance of a process, a random number is generated and mapped to an outcome using a lookup table. At least one outcome indicates the special mode is triggered, and at least one outcome indicates the special mode is not triggered.</p><p id="p-0114" num="0112">Alternatively, the special mode can be triggered for only a subset of the instances of a process. For example, the decision about whether or not to trigger the special mode is only checked if an eligibility condition is first satisfied. The eligibility condition can depend on symbol instances that have landed for the instance (spin), as described below. Or, the eligibility condition can depend on other criteria.</p><p id="p-0115" num="0113">The chance of triggering the special mode can change as bet amount changes. For example, the chance of triggering the special mode can increase as the bet amount increases. This can be implemented by using different lookup tables for different bet amounts, with the weights for the outcomes in the lookup tables changing for the different bet amounts.</p><p id="p-0116" num="0114">Alternatively, instead of using an RNG event, the special feature can be triggered in some other way (e.g., landing a combination of symbol instances for a scatter symbol, or landing some other combination of symbol instances).</p><heading id="h-0012" level="1">B. Adjusting Attributes of a Process to Ensure that Threshold Condition is Reached in Special Mode</heading><p id="p-0117" num="0115">If the special mode is triggered, one or more attributes of a process can be adjusted before an instance of the process begins, so that the final outcome of the instance of the process necessarily satisfies a threshold condition for the final outcome in the special mode. The threshold condition depends on implementation. For example, the threshold condition is 50&#xd7; a bet amount. After the adjustments are made to the process, the instance of the process continues. For example, symbol positions at which to stop reel strips are determined for the reel strips of reels, the final outcome of the instance is evaluated (e.g., using all-ways evaluation), and the final outcome is presented. In this way, the final outcome for the instance of the process can be made to satisfy the threshold condition without significantly increasing the computational complexity for the special mode, compared to the regular mode.</p><p id="p-0118" num="0116">For example, one or more reels can be adjusted so that the final outcome of an instance of the process necessarily satisfies a threshold condition for the final outcome in the special mode. Reels can be adjusted in combination with enlarging the reel area or without enlarging the reel area.</p><p id="p-0119" num="0117"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example <b>400</b> of replacement or modification of a reel strip, when a special mode is triggered, to have a higher concentration of instances of a target symbol. In <figref idref="DRAWINGS">FIG. <b>4</b></figref>, a reel strip <b>410</b> includes instances of a variety of symbols, including a target symbol (shown as a star). When the special mode is triggered, the reel strip <b>410</b> is modified or replaced, producing a reel strip <b>412</b> with a higher concentration of instances of the target symbol. The reel strip <b>410</b> can be modified by adding target symbol instances or replacing instances of other symbols in the reel strip with target symbol instances. For example, target symbol instances can be added at pre-defined locations in the reel strip <b>410</b>. Alternatively, the reel strip <b>410</b> can be replaced by swapping in a different reel strip that has a higher concentration of target symbol instances.</p><p id="p-0120" num="0118">In the example implementation described in section IV, reel strips for the reels of a regular mode of the base reel game are replaced with reel strips for the special mode. The reel strips for the special mode guarantee that a final outcome (award for all-ways evaluation) is at least a minimum amount. For example, for the first reel of the example implementation, the new reel strip includes clusters of target symbol instances spaced in the reel strip so that any spin of the first reel in the special mode lands with at least one target symbol instance showing in the reel area. For each of the other reels of the example implementation, the new reel strip includes clusters of target symbol instances spaced in the reel strip so that any spin of the reel in the special mode lances with at least two instances of the target symbol showing in the reel area. In particular, the new reel strip for each of the second, third, and fourth reels (which each show ten symbol positions in the enlarged reel area) includes at least one 9-high stacks of target symbol instances, as well as shorter stacks of target symbol instances. The new reel strip for the fifth reel (which still shows four symbol positions in the enlarged reel area) includes 3-high stacks of target symbol instances. For all-ways evaluation of possible paths across the reel area in the special mode, this configuration of reel strips guarantees at least 1&#xd7;2&#xd7;2&#xd7;2&#xd7;2=16 combinations of five instances of the target symbol, which satisfies the threshold condition for the final outcome of the spin in the special mode of the base reel game.</p><p id="p-0121" num="0119">When the special mode is triggered, the reel area can be enlarged, so that the count of symbol instances enclosed is increased for at least some of the reels. <figref idref="DRAWINGS">FIGS. <b>5</b><i>a</i>-<b>5</b><i>c </i></figref>show examples of growth of a reel area on a display screen when a special mode is triggered for a base reel game. Enlarging the reel area, while also increasing the count of symbol instances enclosed in the reel area for at least some of the reels, provides a way to increase volatility for a target level of RTP. Outcome evaluation happens for the extended reel area. In particular, for all-ways evaluation, increasing the count of symbol instances enclosed in the reel area increases the number of paths evaluated, making higher awards more likely for the special mode.</p><p id="p-0122" num="0120"><figref idref="DRAWINGS">FIG. <b>5</b><i>a </i></figref>shows an example <b>501</b> of reel growth for a special mode. In <figref idref="DRAWINGS">FIG. <b>5</b><i>a</i></figref>, a reel area <b>530</b> on a display screen <b>520</b> of an electronic gaming machine includes display positions for a set of five reels of a process. In a regular mode of the base reel game, the reel area <b>530</b> shows three display positions for each of the five reels. When the special mode is triggered, the reel area <b>530</b> grows. Specifically, the reel area <b>530</b> grows into an enlarged reel area <b>531</b> on the display screen <b>520</b> of the electronic gaming device. The enlarged reel area <b>530</b> encloses an increased count of instances of symbols for all of the reels.</p><p id="p-0123" num="0121">In <figref idref="DRAWINGS">FIG. <b>5</b><i>a</i></figref>, reel growth affects all reels in the reel area, and all reels have the same height in the reel area before and after the reel growth. Alternatively, reel growth can affect fewer than all of the reels in a reel area and/or different reels can grow by different amounts. <figref idref="DRAWINGS">FIG. <b>5</b><i>b </i></figref>shows another example <b>502</b> of reel growth for a special mode. In <figref idref="DRAWINGS">FIG. <b>5</b><i>b</i></figref>, a reel area <b>533</b> on a display screen <b>520</b> of an electronic gaming machine includes display positions for a set of five reels of a process, but the reels have different heights. In a regular mode of the base reel game, the reel area <b>533</b> shows three display positions for each of the first and last reels, and the reel area <b>533</b> shows four display positions for each of the middle three reels. When the special mode is triggered, the reel area <b>533</b> grows. Specifically, the reel area <b>430</b> grows into an enlarged reel area <b>534</b> on the display screen <b>520</b> of the electronic gaming device. The enlarged reel area <b>534</b> encloses an increased count of instances of symbols for the middle three reels, but the count of symbol instances is unchanged for the first reel and the last reel.</p><p id="p-0124" num="0122">In <figref idref="DRAWINGS">FIGS. <b>5</b><i>a </i>and <b>5</b><i>b</i></figref>, the growth of the reel area happens in one direction when the special mode is triggered. Alternatively, when the special mode is triggered, the reel area can grow in multiple directions. <figref idref="DRAWINGS">FIG. <b>5</b><i>c </i></figref>shows another example <b>503</b> of reel growth for a special mode. In <figref idref="DRAWINGS">FIG. <b>5</b><i>c</i></figref>, when the special mode is triggered, a reel area <b>535</b> on a display screen <b>520</b> of an electronic gaming machine grows upward and downward. To start, the reel area <b>535</b> includes four display positions for each of five reels of a process. The enlarged reel area <b>536</b> encloses an increased count of instances of symbols for the middle three reels, with the reel area <b>536</b> being enlarged upward and downward, but the count of symbol instances is unchanged for the first reel and the last reel.</p><p id="p-0125" num="0123">In the example implementation described in section IV, in the regular mode of the base reel game, the reel as in a 4-6-6-6-4 configuration. The reel area encloses 4 symbol instances for a first reel, 6 symbol instances for each of a second reel, third reel, and fourth reel, and 4 symbol instances for a fifth reel. When the special mode is triggered, the reels transition to a 4-10-10-10-4 configuration. The reel area encloses 4 symbol instances for a first reel, 10 symbol instances for each of a second reel, third reel, and fourth reel, and 4 symbol instances for a fifth reel.</p><p id="p-0126" num="0124">Aside from changing the reels and/or enlarging the reel area when the special mode is triggered, a defined number of credits can be awarded, as part of ensuring that a minimum amount is awarded for the special mode. The award of credits can depend on bet amount.</p><heading id="h-0013" level="1">C. Screenshots of Example Implementation</heading><p id="p-0127" num="0125"><figref idref="DRAWINGS">FIGS. <b>6</b><i>a</i>-<b>6</b><i>n </i></figref>show example stages of gameplay for a special mode in the example implementation described in section IV, with a reel area growing for the special mode and reel strips having a higher concentration of target symbol instances for the special mode. <figref idref="DRAWINGS">FIGS. <b>6</b><i>a</i>-<b>6</b><i>n </i></figref>show the example stages of gameplay on a display screen <b>620</b> for an electronic gaming device.</p><p id="p-0128" num="0126">In the example screenshot <b>601</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>, the display screen <b>620</b> shows a reel area <b>630</b> for a regular mode of the base reel game. The enlarged reel area <b>630</b> shows five reels in a 4-6-6-6-4 configuration. In <figref idref="DRAWINGS">FIG. <b>6</b><i>a</i></figref>, the reels of the base reel game are stopped in the reel area <b>630</b>. The reel strips for the reels includes some instances of a target symbol (shown as a buffalo). The electronic gaming device receives user input from a player indicating the start of a spin of the base reel game. This, in turn, causes a decision to be made about whether or not the special mode is triggered. In the example implementation, the decision uses an RNG event, with the chance of the special mode being triggered increasing as the bet amount increases.</p><p id="p-0129" num="0127">In the example screenshot <b>602</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>b</i></figref>, the reels of the base reel game are shown spinning in the reel area <b>630</b>, in response to the user input indicating the start of the spin. In addition, in response to a decision that the special mode is triggered, a transition animation starts for the special mode. The transition animation is accompanied by audible cues. In <figref idref="DRAWINGS">FIG. <b>6</b><i>b</i></figref>, the transition animation affects the background shown on the display screen <b>620</b> (showing a flash) while darkening the reel area <b>630</b>.</p><p id="p-0130" num="0128">In the example screenshots <b>603</b>-<b>609</b> of <figref idref="DRAWINGS">FIGS. <b>6</b><i>c</i>-<b>6</b><i>i</i></figref>, the transition animation continues for the special mode, as the reels continue to spin. In particular, in the example screenshots <b>603</b>-<b>606</b> of <figref idref="DRAWINGS">FIGS. <b>6</b><i>c</i>-<b>6</b><i>f</i></figref>, the reel area <b>630</b> and other graphical elements on the display screen <b>620</b> shift horizontally and/or vertically to simulate shaking motion, and the electronic gaming device produces a low rumbling sound to simulate the sound of an approaching herd of buffalos. Also, a dust cloud grows in the background on the display screen <b>620</b>. As the rumbling sound increases in volume, the background shows the herd of buffalos approaching, from the perspective of the player. In the example screenshot <b>607</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>g</i></figref>, the herd of buffalos &#x201c;stampedes&#x201d; over the reels, obscuring the reel area <b>632</b>. In the example screenshot <b>608</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>h</i></figref>, an enlarged reel area <b>634</b> is revealed as the animation dissolves. In the example screenshot <b>609</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>i</i></figref>, the transition animation finished. The enlarged reel area <b>634</b> shows five reels in a 4-10-10-10-4 configuration, with the reels still spinning in the enlarged reel area <b>634</b>.</p><p id="p-0131" num="0129">In the example screenshots <b>610</b>-<b>614</b> of <figref idref="DRAWINGS">FIGS. <b>6</b><i>j</i>-<b>6</b><i>n</i></figref>, the reels land in the enlarged reel area <b>634</b>. As explained above, the reel strips for the reels in the special mode are different than the reel strips in the regular mode. The reel strips for the reels in the special mode include a higher concentration of instances of the target symbol (buffalo). The example screenshot <b>610</b> of <figref idref="DRAWINGS">FIG. <b>6</b><i>j </i></figref>shows the first reel landed in the enlarged reel area. The reel strip for the first reel is configured so that at least one instance of the target symbol (buffalo) lands in the reel area <b>634</b> for the first reel. When the reel lands, the presence of at least one target symbol instance is emphasized graphically and audibly. Delays between times the respective reels land can further emphasize the target symbol instances. In the example screenshots <b>611</b>-<b>614</b> of <figref idref="DRAWINGS">FIGS. <b>6</b><i>k</i>-<b>6</b><i>n</i></figref>, the remaining reels successively land in the enlarged reel area <b>634</b>. The reel strips for the remaining reels are configured so that at least two instances of the target symbol (buffalo) lands in the reel area <b>634</b> for each of the remaining reels. Finally, the final outcome of the special mode is evaluated using all-ways evaluation, and an indicator <b>640</b> of the final outcome is presented on the display screen <b>620</b>, as shown in the example screenshot of <figref idref="DRAWINGS">FIG. <b>6</b></figref><i>n. </i></p><heading id="h-0014" level="1">D. Alternative Approaches to Ensuring Threshold Reached in Special Mode</heading><p id="p-0132" num="0130">In many of the examples described earlier in this section, when the special mode is triggered, the process is adjusted so that a final outcome necessarily satisfies a threshold condition for the final outcome in the special mode. For example, the process can be adjusted by changing the reels and/or enlarging the reel area. Or, the process can be adjusted by switching to an iterative evaluation mode in which candidate outcomes are successively evaluated until a suitable outcome is found. Alternatively, operations can be performed in a different order while still ensuring that a final outcome necessarily satisfies a threshold condition for the final outcome in the special mode.</p><p id="p-0133" num="0131">In a first alternative approach, a multi-stage check is used, with an eligibility check followed by evaluation of an outcome for an instance of a process (e.g., a spin of a base reel game). When the instance of the process starts, a determination is made whether the instance of the process is eligible for the special mode (e.g., using an RNG event). If the instance is not eligible for the special mode, the instance of the process proceeds in a regular mode. If the instance is eligible for the special mode, a candidate outcome is determined for the instance of the process. The candidate outcome can be determined and evaluated using regular reel strips, for symbol instances enclosed in an enlarged reel area (e.g., reels in a 4-10-10-10-4 configuration). If the candidate outcome satisfies the threshold condition, the special mode is triggered, and the candidate outcome is used as the final outcome. If the candidate outcome does not satisfy the threshold condition, the special mode is not triggered, and another candidate outcome is evaluated using a regular reel area, for the regular mode. In this approach, outcome evaluations for the enlarged reel area are avoided except when the instance of the process is eligible for the special mode. Alternatively, if the instance is eligible for the special mode, a candidate outcome can be determined and evaluated using regular reel strips, for symbol instances enclosed in a regular reel area (e.g., reels in a 4-6-6-6-4 configuration), but such an evaluation might not accurately capture whether the threshold condition is satisfied for an enlarged reel area, or at least might require that winning combinations happen within the regular reel area. This alternative approach can be used in combination with the reel strip switching mechanism described above. If higher-RTP reel strips are selected, the eligibility condition for the special mode can be deemed satisfied, which saves computing resources that would otherwise be used to check the eligibility condition.</p><p id="p-0134" num="0132">Or, in a second alternative approach, a multi-stage check is used. An evaluation of an outcome for an instance of a process (e.g., a spin of a base reel game) is followed by a check for whether or not to trigger the special mode (e.g., using an RNG event). After a candidate outcome is determined for an instance of a process (e.g., spin of a base reel game), a determination is made whether the candidate outcome satisfies the threshold condition. If the candidate outcome satisfies the threshold condition, a special mode trigger check is performed. On the other hand, if the candidate outcome does not satisfy the threshold condition, the special mode trigger check is skipped. This approach avoids the special mode trigger check in many cases. In this alternative approach, the candidate outcome can be evaluated using regular reels and a regular reel area. If the special mode is triggered, the same symbol positions at which to stop reel strips can be used in an enlarged reel area, yielding an outcome that is at least as good as the outcome for the regular reel area. This alternative approach can be used in combination with the reel strip switching mechanism described above. If higher-RTP reel strips are selected, the candidate outcome is more likely to satisfy the threshold condition.</p><heading id="h-0015" level="1">E. Example Techniques for Ensuring Threshold Reached in Special Mode</heading><p id="p-0135" num="0133"><figref idref="DRAWINGS">FIGS. <b>7</b><i>a </i>and <b>7</b><i>b </i></figref>show different aspects of controlling a user interface (&#x201c;UP&#x201d;) of an electronic gaming device such as an electronic gaming machine (&#x201c;EGM&#x201d;), for a special mode in which a final outcome necessarily satisfies a threshold condition. In particular, <figref idref="DRAWINGS">FIG. <b>7</b><i>a </i></figref>shows an example technique <b>700</b> for a special mode in which a final outcome necessarily satisfies a threshold condition, from the perspective of a backend. Operations of the example technique <b>700</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>a </i></figref>can be performed, for example, in a game processing backend system <b>314</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>7</b><i>b </i></figref>shows an example technique <b>750</b> for a special mode in which a final outcome necessarily satisfies a threshold condition, from the perspective of a UI frontend. Operations of the example technique <b>750</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>b </i></figref>can be performed, for example, in a UI system <b>302</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIGS. <b>7</b><i>c </i>and <b>7</b><i>d </i></figref>show alternative techniques <b>701</b>, <b>702</b> for a special mode in which a final outcome necessarily satisfies a threshold condition, from the perspective of a backend. The game processing backend system and UI system can be implemented using memory and one or more processors that are part of the electronic gaming device and/or part of a gaming system located remotely from the electronic gaming device. Depending on implementation, the backend system and UI system can be implemented by software executable on a CPU, by software controlling special-purpose hardware (e.g., a GPU or other graphics hardware for video acceleration), and/or by special-purpose hardware (e.g., in an ASIC), to process game play instructions in accordance with game play rules, determine outcomes in accordance with game play rules, and/or generate outputs (e.g., to one or more display screens and/or speakers).</p><p id="p-0136" num="0134">In general, the techniques <b>700</b>-<b>702</b>, <b>750</b> shown in <figref idref="DRAWINGS">FIGS. <b>7</b><i>a</i>-<b>7</b><i>d </i></figref>use one or more reel areas on one or more display screens of an electronic gaming device. The reel area(s) can be displayed on a single display screen (e.g., main display screen, or secondary display screen). Or, the reel areas(s) can be split among multiple display screens (e.g., one reel area on a first display screen, and a reel area on a second display screen). The number of reel areas depends on implementation. As used herein, the term &#x201c;game window&#x201d; or &#x201c;reel area&#x201d; can be used interchangeably.</p><p id="p-0137" num="0135">In the techniques <b>700</b>-<b>702</b>, <b>750</b> shown in <figref idref="DRAWINGS">FIGS. <b>7</b><i>a</i>-<b>7</b><i>d</i></figref>, a special mode is selectively triggered for a process that uses a set of reels. Each of the reels has a reel strip, which for UI-focused operations can be displayed as spinning through a reel area on a display screen of the electronic gaming device upon a spin of the reel. In some implementations, the process is a base reel game. Alternatively, the process can be a supplemental feature or other type of process. The set of reels includes n reels, where n depends on implementation. For example, n is 3, 4, or 5.</p><p id="p-0138" num="0136">In some implementations, the electronic gaming device is an EGM with video reels. Alternatively, the electronic gaming device is another type of electronic gaming device.</p><p id="p-0139" num="0137">1. Example Backend Operations.</p><p id="p-0140" num="0138">With reference to <figref idref="DRAWINGS">FIG. <b>7</b><i>a</i></figref>, at stage <b>710</b>, a backend system (such as the game processing backend system <b>314</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) starts an instance of a process that uses a set of reels.</p><p id="p-0141" num="0139">At stage <b>720</b>, the backend system determines whether or not a result satisfies a trigger condition for a special mode of the process. For example, the backend system generates a random number with an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes at least one entry indicating the trigger condition is satisfied and at least one entry indicating the trigger condition is not satisfied. Based at least in part on bet amount, the backend system can adjust the lookup table or select the lookup table from among multiple available lookup tables. In this way, the likelihood of the special mode being triggered can be adjusted, depending on bet amount. Alternatively, the backend system can determine whether or not a result satisfies the trigger condition for the special mode by determining whether or not a symbol combination is present in the reel area. Or, the backend system can determine whether or not a result satisfies the trigger condition for the special mode in some other way.</p><p id="p-0142" num="0140">At stage <b>730</b>, the backend system, responsive to the special mode being triggered, adjusts the process so that a final outcome of the instance of the process necessarily satisfies a threshold condition for the final outcome. For example, the backend system adjusts the process so that, for all-ways evaluation of instances of symbols enclosed in the reel area, the final outcome necessarily satisfies the threshold condition. The backend system can adjust the process by changing the set of reels. For at least one of the reels, the backend process can swap or modify the reel strip for the reel to include a higher concentration of target symbol instances. In some implementations, after the set of reels is changed, for a first reel of the set of reels, the reel area will necessarily enclose at least one target symbol instance upon a spin of the first reel, and for each other reel of the set of reels, the reel area will necessarily enclose at least two target symbol instances upon a spin of the other reel. Alternatively, the reels can be changed in some other way.</p><p id="p-0143" num="0141">The backend system can also adjust the process by enlarging the reel area and, for at least some of the set of reels, increasing a count of instances of symbols that are enclosed in the reel area. In some implementations, for a first reel of the set of reels and for a last reel of the set of reels, the enlarged reel area encloses a first count of instances of symbols that is unchanged by the adjusting. For each of one or more interior reels of the set of reels, the enlarged reel area encloses a second count of instances of symbols that is increased as part of the adjusting. Alternatively, the reel area is enlarged in some other way.</p><p id="p-0144" num="0142">The backend system can perform additional operations as part of the special mode. For example, when the reel strips for the reels of the process include dynamic symbols, the backend system can, for each reel of the set of reels, replace any instance of a placeholder in the reel strip for the reel with an instance of an actual symbol.</p><p id="p-0145" num="0143">Finally, the backend system determines the final outcome according to the adjusted process if the special mode has been triggered (at stage <b>740</b>) or determines the final outcome according to the process in regular mode (at stage <b>745</b>) if the special mode has not been triggered). For example, the backend system determines the final outcome according to the all-ways evaluation of the instances of symbols enclosed in the reel area. When the set of reels for the process has been changed, the backend system determines the final outcome using the changed set of reels. When the reel area has been enlarged, the backend system determines the final outcome using symbol instances enclosed in the enlarged reel area. For example, to determine the final outcome, for each reel of the set of reels, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of the reel strip in use. With the lookup operation, the backend system determines one of the different symbol positions at which to stop the reel strip. The backend system then determines the final outcome based at least in part on the determined symbol positions of the reel strips for the reels, respectively.</p><p id="p-0146" num="0144">Alternatively, the backend system can adjust the process (at stage <b>730</b>) by switching to an iterative evaluation mode of the process. In this case, when the special mode has been triggered, the backend system can determine the final outcome (at stage <b>740</b>) according to the adjusted process by iteratively evaluating candidate outcomes until it finds one that satisfies the threshold condition for the final outcome. In an iteration, the backend system determines a candidate outcome of the instance of the process evaluates the candidate outcome against the threshold condition for the final outcome. For example, for each reel of the set of reels, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of the reel strip for the reel. In this way, the backend system determines one of the different symbol positions at which to stop the reel strip for the reel. The candidate outcome is determined based at least in part on the determined symbol positions at which to stop the reel strips for the reels, respectively. The candidate outcome can be determined using an enlarged reel area and, for at least some of the set of reels, an increased count of instances of symbols that are enclosed in the reel area. Or, the candidate outcome can be determine using a regular reel area. In any case, if the candidate outcome satisfies the threshold condition for the final outcome, the backend system uses the candidate outcome as the final outcome. Otherwise (the candidate outcome not satisfying the threshold condition for the final outcome), for a new outcome as the candidate outcome, the backend system repeats the determining the candidate outcome for the instance of the process and the evaluating.</p><p id="p-0147" num="0145">2. Example Frontend Operations.</p><p id="p-0148" num="0146">With reference to <figref idref="DRAWINGS">FIG. <b>7</b><i>b</i></figref>, at stage <b>760</b>, a UI system (such as the UI system <b>302</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) receives user input at the electronic gaming device. The user input indicates a start to an instance of a process that uses a set of reels. The process is associated with graphical elements for display.</p><p id="p-0149" num="0147">At stage <b>770</b>, the UI system determines whether or not a special mode of the process has been triggered. The special mode can be triggered using any of the approaches described with reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref><i>a. </i></p><p id="p-0150" num="0148">At stage <b>780</b>, based on the special mode having been triggered, the UI system changes one or more of the graphical elements associated with the process. At this point, the process has been adjusted so that a final outcome of the instance of the process necessarily satisfies a threshold condition for the final outcome. For example, the process has been adjusted so that, for all-ways evaluation of instances of symbols enclosed in the reel area, the final outcome necessarily satisfies the threshold condition. The UI system can change the set of reels by, for at least one of the reels, swapping or modifying the reel strip for the reel to include a higher concentration of target symbol instances. In some implementations, after the set of reels is changed, for a first reel of the set of reels, the reel area will necessarily enclose at least one target symbol instance upon a spin of the first reel, and for each other reel of the set of reels, the reel area will necessarily enclose at least two target symbol instances upon a spin of the other reel. Alternatively, the reels can be changed in some other way.</p><p id="p-0151" num="0149">The UI system can also enlarge the reel area and, for at least some of the set of reels, increase a count of instances of symbols that are enclosed in the reel area. In some implementations, for a first reel of the set of reels and for a last reel of the set of reels, the enlarged reel area encloses a first count of instances of symbols that is unchanged by the adjusting. For each of one or more interior reels of the set of reels, the enlarged reel area encloses a second count of instances of symbols that is increased as part of the adjusting. Alternatively, the reel area is enlarged in some other way.</p><p id="p-0152" num="0150">The UI system displays, using the graphical elements for the adjusted process in the special mode if the special mode has been triggered (at stage <b>790</b>) or using the graphical elements for the process in regular mode if the special mode has not been triggered (at stage <b>795</b>), indicators of the instance of the process and the final outcome (which has been determined, e.g., according to the all-ways evaluation of instances of symbols enclosed in the reel area). For example, when the special mode has been triggered, the UI system displays the reel area in a first configuration (e.g., with the reels in a 4-6-6-6-4 configuration), then displays an animation that obscures the reel area. The UI system subsequently displays the reel area in a second configuration, different than the first configuration, that incorporates the changed graphical element(s). Finally, the UI system displays an indicator of the final outcome. Alternatively, the UI system displays the indicators of the instance of the process and the final outcome in some other way.</p><p id="p-0153" num="0151">3. First Alternative Backend Operations.</p><p id="p-0154" num="0152"><figref idref="DRAWINGS">FIG. <b>7</b><i>c </i></figref>shows operations for an alternative technique <b>701</b> for a special mode in which a final outcome necessarily satisfies a threshold condition, where the decision about whether the special mode is triggered happens only after a determination of eligibility for the special mode. With reference to <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, at stage <b>710</b>, a backend system (such as the game processing backend system <b>314</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) starts an instance of a process that uses a set of reels.</p><p id="p-0155" num="0153">At stage <b>721</b>, the backend system determines whether or not a result satisfies a trigger condition for eligibility for a special mode of the process. For example, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes at least one entry indicating the trigger condition can be satisfied (eligible) and at least one entry indicating the trigger condition cannot be satisfied (not eligible). Based at least in part on bet amount, the backend system can adjust the lookup table or select the lookup table from among multiple available lookup tables. In this way, the likelihood of eligibility for the special mode can be adjusted, depending on bet amount. Alternatively, the backend system can determine whether or not a result satisfies the trigger condition for eligibility for the special mode in some other way.</p><p id="p-0156" num="0154">Responsive to a determination of eligibility for the special mode of the process, the backend system determines (at stage <b>722</b>) a candidate outcome of the instance of the process and evaluates (at stage <b>723</b>) the candidate outcome against a threshold condition for a final outcome of the instance of the process (e.g., for all-ways evaluation of instances of symbols enclosed in the reel area). Based at least in part on a result of the evaluating, the backend system determines (at stage <b>724</b>) whether or not to trigger the special mode. At stage <b>741</b>, responsive to the special mode being triggered, the backend system determines the final outcome in the special mode (e.g., according to the all-ways evaluation of instances of symbols enclosed in the reel area). Otherwise, responsive to the special mode not being triggered, or responsive to a determination of non-eligibility for the special mode, the backend system determines (at stage <b>746</b>) the final outcome in the regular mode (e.g., according to the all-ways evaluation of instances of symbols enclosed in the reel area).</p><p id="p-0157" num="0155">For example, to determine the candidate outcome (at stage <b>722</b>), for each reel of the set of reels, the backend system generates a random number using and RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of a reel strip for the reel. In this way, the backend system determines one of the different symbol positions at which to stop the reel strip for the reel. The candidate outcome is determined based at least in part on the determined symbol positions at which to stop the reel strips for the reels, respectively. The candidate outcome can be determined using an enlarged reel area and, for at least some of the set of reels, an increased count of instances of symbols that are enclosed in the reel area. In this case, the determining the final outcome in the special mode uses the candidate outcome as the final outcome. Alternatively, the candidate outcome can be determined using a regular reel area. In this case, when the special mode is triggered, the final outcome can be determined in the special mode (a) based at least in part on the determined symbol positions at which to stop reel strips for the reels, respectively, (b) using an enlarged reel area, and (c) for at least some of the set of reels, an increased count of symbols that are enclosed in the reel area.</p><p id="p-0158" num="0156">According to the approach shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>c</i></figref>, responsive to the determination of eligibility for the special mode of the process and/or responsive to the candidate outcome satisfying the threshold condition, the backend system can adjust the process. The backend system can adjust the process by changing the set of reels. For at least one of the reels, the backend process can swap or modify the reel strip for the reel to include a higher concentration of target symbol instances. In some implementations, after the set of reels is changed, for a first reel of the set of reels, the reel area will necessarily enclose at least one target symbol instance upon a spin of the first reel, and for each other reel of the set of reels, the reel area will necessarily enclose at least two target symbol instances upon a spin of the other reel. Alternatively, the reels can be changed in some other way. The backend system can also adjust the process by enlarging the reel area and, for at least some of the set of reels, increasing a count of instances of symbols that are enclosed in the reel area. In some implementations, for a first reel of the set of reels and for a last reel of the set of reels, the enlarged reel area encloses a first count of instances of symbols that is unchanged by the adjusting. For each of one or more interior reels of the set of reels, the enlarged reel area encloses a second count of instances of symbols that is increased as part of the adjusting. Alternatively, the reel area is enlarged in some other way.</p><p id="p-0159" num="0157">4. Second Alternative Backend Operations.</p><p id="p-0160" num="0158"><figref idref="DRAWINGS">FIG. <b>7</b><i>d </i></figref>shows operations for an alternative technique <b>702</b> for a special mode in which a final outcome necessarily satisfies a threshold condition, where the decision about whether the special mode is triggered happens only after a determination that a candidate outcome would satisfy the threshold condition. With reference to <figref idref="DRAWINGS">FIG. <b>7</b><i>d</i></figref>, at stage <b>710</b>, a backend system (such as the game processing backend system <b>314</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) starts an instance of a process that uses a set of reels.</p><p id="p-0161" num="0159">The backend system determines (at stage <b>725</b>) a candidate outcome of the instance of the process and evaluates (at stage <b>726</b>) the candidate outcome against a threshold condition for a final outcome of the instance of the process (e.g., for all-ways evaluation of instances of symbols enclosed in the reel area). For example, to determine the candidate outcome (at stage <b>725</b>), for each reel of the set of reels, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of a reel strip for the reel. In this way, the backend system determines one of the different symbol positions at which to stop the reel strip for the reel. The candidate outcome is determined based at least in part on the determined symbol positions at which to stop the reel strips for the reels, respectively. The candidate outcome can be determined using an enlarged reel area and, for at least some of the set of reels, an increased count of instances of symbols that are enclosed in the reel area. (In this case, later operations to determine the final outcome in the special mode use the candidate outcome as the final outcome.) Alternatively, the candidate outcome can be determined using a regular reel area. (In this case, when the special mode is triggered, the final outcome can be subsequently determined in the special mode (a) based at least in part on the determined symbol positions at which to stop the reel strips for the reels, respectively, (b) using an enlarged reel area, and (c) for at least some of the set of reels, an increased count of symbols that are enclosed in the reel area.)</p><p id="p-0162" num="0160">At stage <b>727</b>, the backend system determines whether or not the candidate outcome satisfies the threshold condition. If so, responsive to the candidate outcome satisfying the threshold condition, the backend system determines (at stage <b>728</b>) whether or not a result satisfies a trigger condition for a special mode of the process. For example, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes at least one entry indicating the trigger condition is satisfied and at least one entry indicating the trigger condition is not satisfied. Based at least in part on bet amount, the backend system can adjust the lookup table or select the lookup table from among multiple available lookup tables. In this way, the likelihood of the special mode being triggered can be adjusted, depending on bet amount. Alternatively, the backend system can determine whether or not a result satisfies the trigger condition for the special mode by determining whether or not a symbol combination is present in the reel area (e.g., a count of instances of one or more scatter symbols). Or, the backend system can determine whether or not a result satisfies the trigger condition for the special mode in some other way.</p><p id="p-0163" num="0161">At stage <b>741</b>, responsive to the special mode being triggered, the backend system determines the final outcome in the special mode (e.g., according to the all-ways evaluation of instances of symbols enclosed in the reel area). Otherwise, responsive to the special mode not being triggered, or responsive to a determination of non-eligibility for the special mode, the backend system determines (at stage <b>746</b>) the final outcome in the regular mode (e.g., according to the all-ways evaluation of instances of symbols enclosed in the reel area).</p><p id="p-0164" num="0162">According to the approach shown in <figref idref="DRAWINGS">FIG. <b>7</b><i>d</i></figref>, responsive to the candidate outcome satisfying the threshold condition and/or responsive to the special mode being triggered, the backend system can adjust the process. The backend system can adjust the process by changing the set of reels. For at least one of the reels, the backend process can swap or modify the reel strip for the reel to include a higher concentration of instances of a target symbol. In some implementations, after the set of reels is changed, for a first reel of the set of reels, the reel area will necessarily enclose at least one target symbol instance upon a spin of the first reel, and for each other reel of the set of reels, the reel area will necessarily enclose at least two target symbol instances upon a spin of the other reel. Alternatively, the reels can be changed in some other way. The backend system can also adjust the process by enlarging the reel area and, for at least some of the set of reels, increasing a count of instances of symbols that are enclosed in the reel area. In some implementations, for a first reel of the set of reels and for a last reel of the set of reels, the enlarged reel area encloses a first count of instances of symbols that is unchanged by the adjusting. For each of one or more interior reels of the set of reels, the enlarged reel area encloses a second count of instances of symbols that is increased as part of the adjusting. Alternatively, the reel area is enlarged in some other way.</p><heading id="h-0016" level="1">F. Examples of Integration into Electronic Gaming Devices</heading><p id="p-0165" num="0163">Innovations described herein can be implemented in a gaming server <b>102</b> and/or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. Thus, a gaming server <b>102</b> or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> is an example of an electronic gaming device as described in section V.</p><p id="p-0166" num="0164">For example, for the electronic gaming device, a game controller such as a game controller <b>202</b> described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref> can perform operations for a special mode in which a final outcome necessarily satisfies a threshold condition. In some implementations, the game controller <b>202</b> performs backend operations as well as frontend UI operations. With respect to frontend UI operations, the game controller <b>202</b> can receive user input indicating a start to an instance of a process that uses a set of reels. Further, based on the special mode being triggered, the game controller <b>202</b> can adjust graphical elements for the process (e.g., reel strips, reel area). The game controller <b>202</b> can also control display of indicators of the instance of the process and final outcome. With respect to backend operations, the game controller <b>202</b> can start an instance of a process that uses a set of reels and determine whether a result satisfies a trigger condition for a special mode. When the special mode is triggered, the game controller <b>202</b> can adjust the process so that a final outcome of the instance of the process necessarily satisfies a threshold condition, and determine the final outcome.</p><p id="p-0167" num="0165">Innovations described in section V can be implemented in a game processing pipeline that follows the example game processing architecture <b>300</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. As described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, RNG conversion engine <b>320</b> utilizes one or more lookup tables <b>322</b>A-<b>322</b>N. In the context of the innovations described herein, for example, one or more of the lookup tables <b>322</b>A-<b>322</b>N can be used to determine whether or not a special mode is triggered, to determine symbol positions at which to stop reel strips, and/or to determine other results. In some variations, different lookup tables can be used, so as to adjust the likelihood of specific results depending on bet amount.</p><p id="p-0168" num="0166">In general, the example game processing architecture <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be used to process game play instructions and generate outcomes. In some implementations, the game processing architecture <b>300</b> implements a game processing pipeline for a process (e.g., base reel game). The UI system <b>302</b> (e.g., the game play UI <b>304</b> of the UI system <b>302</b>) receives user input that indicates a start to an instance of a process that uses a set of reels. The backend system <b>314</b> starts an instance of the process. For the instance of the process, the UI system <b>302</b> (e.g., the game play UI <b>304</b>) makes one or more RNG calls to the game processing backend system <b>314</b>. In response, the backend system <b>314</b> performs various operations. Using a gaming RNG <b>318</b>, the RNG engine <b>316</b> generates one or more random numbers, which are passed to the RNG conversion engine <b>320</b>. The RNG conversion engine <b>320</b>, using one or more of the random number(s) and one or more of the lookup tables <b>322</b>A-<b>322</b>N, determine whether a special mode is triggered. Responsive to the special mode being triggered, the backend system <b>314</b> adjusts the process for the special mode (e.g., changing reel strips for the reels, enlarging a reel area) and determines symbol positions at which to stop reel strips for the reels. After determining the symbol positions at which to stop the reel strips for the reels, the backend system <b>314</b> determines an outcome (e.g., calculating win conditions for all-ways evaluation). The backend system <b>314</b> returns the generated results to the game play UI <b>304</b> of the UI system <b>302</b>, which can, among other operations, change graphical elements for the process and control display of indicators of the instance of the process and final outcome.</p><p id="p-0169" num="0167">In general, the generated results returned by the backend system <b>314</b> can include game-related information (such as symbol positions at which to stop reel strips for the respective reels, outcomes) as well as animation effects not related to game parameters. Alternatively, the game play UI <b>304</b> can make one or more separate RNG calls to the backend system <b>314</b> to determine animation effects. In response, the backend system <b>314</b> can use the gaming RNG <b>318</b> and/or one or more of the non-gaming RNGs <b>319</b>A-<b>319</b>N to generate random numbers, which the RNG conversion engine <b>320</b> uses (with one or more of the lookup tables <b>322</b>A-<b>322</b>N) to determine animation effects. The game play UI <b>304</b> (or bonus game play UI <b>308</b>) can perform operations consistent with the animation effects, which are returned from the backend system <b>314</b>.</p><heading id="h-0017" level="1">G. Technical Advantages</heading><p id="p-0170" num="0168">Approaches described herein address the technical problem of controlling volatility for a target level of RTP in an electronic gaming device. The approaches provide ways to achieve a desired volatility of a base reel game without significantly deviating from a designated level of RTP for the base reel game.</p><p id="p-0171" num="0169">In particular, in some implementations, for a special mode of the base reel game, the base reel game is adjusted so that a final outcome necessarily satisfies a threshold condition (e.g., a minimum award for the special mode, for all-ways evaluation of instances of symbols enclosed in a reel area). The adjustments can include changes to reel strips and/or enlarging a reel area for the special mode of the base reel game. In terms of technical effects, innovative features of a special mode represent improvements in the technical area of electronic gaming software and provide new technology, in that they provide a computationally-effective way to manage volatility for a designated level of RTP for the special mode. Furthermore, by managing lookup tables and/or other aspects of RNG events for the special mode, game play can be kept fair and consistent with regulations while also enabling variation of volatility for the designated level of RTP. Also, UI-focused operations for the special mode can improve the usability of electronic gaming devices by enhancing the user experience for players, extending player time on the electronic gaming devices, and maintaining the interest of current players in the electronic gaming devices. These embodiments are thus not merely new game rules or new display patterns.</p><heading id="h-0018" level="1">VI. EXAMPLES OF RE-SPIN SERIES</heading><p id="p-0172" num="0170">This section describes innovations for a linked reel strip mechanism that can be used to switch reel strips when iteratively spinning a reel in a re-spin series, as well as other mechanisms that can be used to adapt a reel strip when iteratively spinning a reel in a re-spin series. The linked reel strip mechanism uses one or more data structures for reel strips of a reel strip group. The reel strips are linked, in the data structure(s), using multiple logical links. For each of one or more iterations of a re-spin series, a current reel strip is selected (from among the reel strips of the reel strip group) by traversing the data structure(s). In particular, after a symbol position for a given reel strip is selected in one iteration of the re-spin series, the next reel strip to use in a subsequent iteration of the re-spin series is determined, and the next reel strip is missing the symbol position selected from the given reel strip. This approach simulates sampling without replacement for iterative spins of a reel using a reel strip with multiple symbol positions. The linked reel strip mechanism is a computationally-effective way to switch reel strips when iteratively spinning a reel, which provides a useful tool for managing volatility for a target level of RTP in an electronic gaming device, while also improving usability of the electronic gaming device and enhancing the user experience.</p><p id="p-0173" num="0171">In the example implementation described in section IV, the linked reel strip mechanism is used to switch reel strips for spins of a ribbon wheel during a free games feature. In a spin of a base reel game (regular mode) or the free games feature, if an instance of a super coin symbol is part of a combination of symbol instances that triggers or re-triggers the free games feature, operations for a ribbon wheel are triggered. For each instance of the super coin symbol, a spin of the ribbon wheel gives a count of instances of a highest-value symbol to add to the reels for the free game feature. Specifically, an animation zooms in to the super coin symbol instance, and a graphical element for the ribbon wheel slides out from behind the super coin symbol instance. A reel strip, selected using a linked reel strip mechanism, spins for the ribbon wheel. A symbol position of the reel strip, at which to stop the reel strip, is determined using an RNG event with a lookup table for the reel strip, and a count of instances of the highest-value symbol is determined as the outcome of the spin of the ribbon wheel. After the spin, an animation zooms back out to the reel area for the free games feature. If the combination of symbol instances that triggers or re-triggers the free games feature includes multiple instances of the super coin symbol, the ribbon wheel spin series occurs for each of the instances of the super coin symbol, successively zooming in, spinning, and zooming out for each of the instances of the super coin symbol. After the iteration(s) of the ribbon wheel spin series finish, the instances of the highest-value symbol are added to the reels for the free games feature.</p><p id="p-0174" num="0172">The example implementation described in section IV is one possible use of the linked reel strip mechanism, but the linked reel strip mechanism can be used in many other ways. For example, the linked reel strip mechanism can be used to switch reel strips when iteratively spinning a reel for another type of supplemental feature in an electronic gaming device, for a base reel game in an electronic gaming device, or for some other process. Although some examples described herein use the linked reel strip mechanism to select reel strips for spins of a ribbon wheel, the linked reel strip mechanism can be used to select reel strips for spins of some other type of reel. A re-spin series that uses the linked reel strip mechanism can be triggered when a defined event occurs, or a re-spin series that uses the linked reel strip mechanism can be performed by default in a process. The outcome of the reel spins can be a count of instances of a target symbol (e.g., highest-value symbol) or some other outcome or outcomes.</p><p id="p-0175" num="0173">A. Examples of Linked Reel Strip Mechanisms.</p><p id="p-0176" num="0174">A linked reel strip mechanism organizes reel strips that can be selected for different spins of a reel. Each of the reel strips includes symbol positions, which are associated with outcomes. Each of the reel strips is associated with a lookup table, which includes entries with weights for the respective symbol positions of the reel strip, and which is used when selecting one of the symbol positions of the reel strip.</p><p id="p-0177" num="0175">The reel strips in the linked reel strip mechanism are connected by logical links in one or more data structures. For example, the logical links are reel strip identifiers. Alternatively, the reel strips can be connected by pointers, logical references, or some other type of logical link. The root (starting) reel strip for the linked reel strip mechanism can be identified by a root logical link, such as an initial reel strip identifier. Each other reel strip for the linked reel strip mechanism can be identified by a reel strip identifier associated with at least one symbol position of a preceding reel strip. In some cases, a reel strip is a &#x201c;terminal&#x201d; or &#x201c;leaf&#x201d; reel strip for the linked reel strip mechanism, and its symbol positions are not associated with any logical links to other reel strips.</p><p id="p-0178" num="0176">The linked reel strip mechanism can be traversed by following logical links. For the first iteration of a re-spin series, the root reel strip can be selected by following a root logical link to the root reel strip. In or after a given iteration in which a given reel strip has been selected, the reel strip for a subsequent iteration of the re-spin series can be selected by following the logical link associated with the symbol position selected in the given reel strip. The reel strip used a given iteration of the re-spin series is missing previously-selected entries from any earlier iterations, which simulates sampling without replacement for multiple spins of a reel using the root reel strip.</p><p id="p-0179" num="0177">A linked reel strip mechanism uses one or more data structures to organize the reel strips of the linked reel strip mechanism. In general, the data structure(s) include, for the respective symbol positions (outcomes) of the reel strips, logical links to the next reel strips to use, in subsequent iterations of the re-spin series, after selection of the respective symbol positions (outcomes). For example, for each of the outcomes for symbol positions of a given reel strip, a data structure associates that outcome with a next reel strip to use if the outcome is selected for the given reel strip. For the next reel strip, the previously-selected outcome can be removed, or given a lower weight, or replaced with another outcome, to account for the previous selection of the outcome of the given reel strip.</p><p id="p-0180" num="0178">The data structure(s) for the linked reel strip mechanism can be implemented as an array, a linked list, linked tables, a tree, or another type of data structure. The data structure(s) for the linked reel strip mechanism can include a data structure (e.g., array, linked list, table) per reel strip, where the data structure for a reel strip includes fields for the respective symbol positions (outcomes) of the reel strip. The field for a symbol position can store a logical link to a next reel strip to use after selection of that symbol position, in addition to storing an indication of the outcome associated with the symbol position. Data structures for the linked reel strip mechanism can be lookup tables for reel strips, which are logically linked to other lookup tables for reel strips. For example, for a reel strip, a lookup table can include multiple entries for symbol positions of the reel strip. For a given one of the symbol positions, an entry in the lookup table can include a weight, an outcome, and a logical link to a next reel strip to use if the outcome is selected. Or, an entry in the lookup table can include a weight and logical link, with the outcome included in a different table that maps symbol positions to outcomes. Alternatively, the data structure for a reel strip can be separate from the lookup table associated with the reel strip. For example, for a reel strip, a lookup table includes multiple entries for symbol positions of the reel strip, with each entry including a weight and possibly an outcome. A separate data structure for the reel strip maps the respective symbol positions (and outcomes) of the reel strip to logical links to next reel strips to use in subsequent iterations of the re-spin series. Alternatively, the data structure(s) for the linked reel strip mechanism can include a single data structure for all of the reel strips, aggregating such information.</p><p id="p-0181" num="0179"><figref idref="DRAWINGS">FIG. <b>8</b><i>a </i></figref>shows reel strips for an example linked reel strip mechanism <b>800</b>. In <figref idref="DRAWINGS">FIG. <b>8</b><i>a</i></figref>, the reel strips include a small number of symbol positions to illustrate various features of the linked reel strip mechanisms <b>800</b>. In practice, the reel strips for a linked reel strip mechanism can include more symbol positions (e.g., 20, 40, 100) or fewer symbol positions (e.g., 4, 5), with the number of symbol positions depending on implementation. In <figref idref="DRAWINGS">FIG. <b>8</b><i>a</i></figref>, the reel strips are linked by logical links, such as the logical link <b>812</b>.</p><p id="p-0182" num="0180">With reference to <figref idref="DRAWINGS">FIG. <b>8</b><i>a</i></figref>, the linked reel strip mechanism <b>800</b> includes a root reel strip <b>810</b>, which is used for an initial iteration (iteration 0) of a re-spin series. A root logical link <b>805</b> references the root reel strip <b>810</b>. The root reel strip <b>810</b> has eight symbol positions, which are associated with different outcomes (shown as A, B, C, D, E, F, G, and H). Each of the eight symbol positions/outcomes of the root reel strip <b>810</b> is associated (in a data structure of the linked reel strip mechanism) with a logical link to one of the reel strips <b>820</b>-<b>82</b><i>n </i>possible for the next iteration (iteration 1) of the re-spin series, for which the symbol position (outcome) of the root reel strip <b>810</b> is missing. For example, the symbol position for outcome A in the root reel strip <b>810</b> is associated with a logical link to a reel strip <b>820</b> that is missing a symbol position for outcome A. The symbol position for outcome B in the root reel strip <b>810</b> is associated with a logical link to a reel strip <b>821</b> that is missing a symbol position for outcome B, and the symbol position for outcome H in the root reel strip <b>810</b> is associated with a logical link to a reel strip <b>82</b><i>n </i>that is missing a symbol position for outcome H.</p><p id="p-0183" num="0181">Each of the reel strips <b>820</b>-<b>82</b><i>n </i>possible for iteration 1 of the re-spin series has seven symbol positions, which are associated with different outcomes. Each of the seven symbol positions of the reel strip (one of the reel strips <b>820</b>-<b>82</b><i>n</i>) is associated (in a data structure of the linked reel strip mechanism) with a logical link to one of the reel strips <b>830</b>-<b>83</b><i>n </i>possible for the next iteration (iteration 2) of the re-spin series, for which the symbol position (outcome) of the reel strip (one of the reel strips <b>820</b>-<b>82</b><i>n</i>) is missing. For example, for the first reel strip <b>820</b> possible for iteration 1, the symbol position for outcome B is associated with a logical link to a reel strip <b>830</b> that is missing a symbol position for outcome B (and is still missing a symbol position for outcome A). For the reel strip <b>820</b>, the symbol position for outcome C is associated with a logical link to a reel strip <b>831</b> that is missing a symbol position for outcome C (and the symbol position for outcome A). Finally, for the reel strip <b>820</b>, the symbol position for outcome H is associated with a logical link to a reel strip <b>83</b><i>n </i>that is missing a symbol position for outcome H (and the symbol position for outcome A).</p><p id="p-0184" num="0182">Similarly, each of the reel strips <b>830</b>-<b>83</b><i>n </i>possible for iteration 2 of the re-spin series has six symbol positions, which are associated with different outcomes. Each of the six symbol positions of the reel strip (one of the reel strips <b>830</b>-<b>83</b><i>n</i>) is associated with a logical link to one of the reel strips <b>840</b>-<b>84</b><i>n </i>possible for the next iteration (iteration 3) of the re-spin series, for which the symbol position (outcome) of the reel strip (one of the reel strips <b>830</b>-<b>83</b><i>n</i>) is missing. For example, for the first reel strip <b>830</b> possible for iteration 2, the symbol position for outcome C is associated with a logical link to a reel strip <b>840</b> that is missing a symbol position for the outcome C (and is still missing symbol positions for the outcomes A and B). For the reel strip <b>830</b>, the symbol position for the outcome D is associated with a logical link to a reel strip <b>841</b> that is missing a symbol position for the outcome D (and symbol positions for the outcomes A and B). For the reel strip <b>830</b>, the symbol position for the outcome H is associated with a logical link to a reel strip <b>84</b><i>n </i>that is missing symbol positions the outcome H (and symbol positions for the outcomes A and B).</p><p id="p-0185" num="0183"><figref idref="DRAWINGS">FIG. <b>8</b><i>b </i></figref>shows reel strips for another example linked reel strip mechanism <b>850</b>. The linked reel strip mechanism <b>850</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b><i>b </i></figref>is similar to the linked reel strip mechanism <b>800</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b><i>a</i></figref>, but the reel strips for linked reel strip mechanism <b>850</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b><i>b </i></figref>include symbol positions with repeated outcomes. As shown in <figref idref="DRAWINGS">FIG. <b>8</b><i>b</i></figref>, this reduces the number of reel strips used by the linked reel strip mechanism <b>850</b>, compared to linked reel strip mechanism <b>800</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref><i>a. </i></p><p id="p-0186" num="0184">In <figref idref="DRAWINGS">FIG. <b>8</b><i>b</i></figref>, the example linked reel strip mechanism <b>850</b> includes a root reel strip <b>860</b>, which is used for an initial iteration (iteration 0) of a re-spin series. A root logical link <b>855</b> references the root reel strip <b>860</b>. The root reel strip <b>860</b> has eight symbol positions with associated outcomes, including at least some repeated outcomes (shown as A, B, B, B, B, C, C, and D). Each of the eight symbol positions of the root reel strip <b>860</b> is associated (in a data structure of the linked reel strip mechanism) with a logical link to one of the reel strips <b>870</b>-<b>87</b><i>n </i>possible for the next iteration (iteration 1) of the re-spin series, for which the symbol position (outcome) of the root reel strip <b>810</b> is missing. For example, the symbol position for outcome A of the root reel strip <b>860</b> is associated with a logical link to a reel strip <b>870</b> that is missing a symbol position for outcome A. Each of the four symbol positions for outcome B of the root reel strip <b>860</b> is associated with a logical link to a reel strip <b>871</b> that is missing one symbol position for outcome B. The symbol position for outcome D of the root reel strip <b>860</b> is associated with a logical link to a reel strip <b>87</b><i>n </i>that is missing a symbol position for outcome D. As shown in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>, each of the four symbol positions for outcome B in the root reel strip <b>860</b> is associated with a logical link to the same reel strip <b>871</b> for the next iteration.</p><p id="p-0187" num="0185">Each of the reel strips <b>870</b>-<b>87</b><i>n </i>possible for iteration 1 of the re-spin series has seven symbol positions, which are associated with outcomes (including some repeated outcomes). Each of the seven symbol positions of the reel strip (one of the reel strips <b>870</b>-<b>87</b><i>n</i>) is associated (in a data structure of the linked reel strip mechanism) with a logical link to one of the reel strips <b>880</b>-<b>88</b><i>n </i>possible for the next iteration (iteration 2) of the re-spin series, for which the symbol position (outcome) of the reel strip (one of the reel strips <b>870</b>-<b>87</b><i>n</i>) is missing. For example, for the first reel strip <b>870</b> possible for iteration 1, each of the four symbol positions for outcome B is associated with a logical link to a reel strip <b>880</b> that is missing one symbol position for outcome B (and is still missing a symbol position for outcome A). For the reel strip <b>870</b>, each of the two symbol positions for outcome C is associated with a logical link to a reel strip <b>881</b> that is missing one symbol position for outcome C (and the symbol position for outcome A). Finally, for the reel strip <b>870</b>, the symbol position for outcome D is associated with a logical link to a reel strip <b>88</b><i>n </i>that is missing a symbol position for outcome D (and the symbol position for outcome A). As shown in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>, each of the four symbol positions for outcome B in the first reel strip <b>870</b> is associated with a logical link to the same reel strip <b>880</b> for the next iteration, and each of the two symbol positions for outcome C in the first reel strip <b>870</b> is associated with a logical link to the same reel strip <b>881</b> for the next iteration.</p><p id="p-0188" num="0186">Similarly, each of the reel strips <b>880</b>-<b>88</b><i>n </i>possible for iteration 2 of the re-spin series has six symbol positions, which are associated with outcomes (including some repeated outcomes). Each of the six symbol positions of the reel strip (one of the reel strips <b>880</b>-<b>88</b><i>n</i>) is associated (in a data structure of the linked reel strip mechanism) with a logical link to one of the reel strips <b>890</b>-<b>89</b><i>n </i>possible for the next iteration (iteration 3) of the re-spin series, for which the symbol position (outcome) of the reel strip (one of the reel strips <b>880</b>-<b>88</b><i>n</i>) is missing. For example, for the first reel strip <b>880</b> possible for iteration 2, each of the three symbol positions for outcome B is associated with a logical link to a reel strip <b>890</b> that is missing two symbol positions for outcome B (and is still missing a symbol position for outcome A). For the reel strip <b>880</b>, each of the two symbol positions for outcome C is associated with a logical link to a reel strip <b>891</b> that is missing one symbol position for outcome C (and the symbol position for outcome A and one symbol position for outcome B). Finally, for the reel strip <b>880</b>, the symbol position for outcome D is associated with a logical link to a reel strip <b>89</b><i>n </i>that is missing a symbol position for outcome D (and the symbol position for outcome A and one symbol position for outcome B). As shown in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>, each of the three symbol positions for outcome B in the first reel strip <b>880</b> is associated with a logical link to the same reel strip <b>890</b> for the next iteration, and each of the two symbol positions for outcome C in the first reel strip <b>880</b> is associated with a logical link to the same reel strip <b>891</b> for the next iteration.</p><p id="p-0189" num="0187">When a symbol position (outcome) is missing from a reel strip, the lookup table associated with the reel strip can be modified to lack an entry for the symbol position (outcome) or to give the entry for the symbol position (outcome) a weight of zero, so that the entry cannot be selected. When symbol position is missing from a reel strip, the graphic associated with the reel strip lacks a graphical indication for the symbol position. Alternatively, when a symbol position is missing from a reel strip, the graphical indication for the symbol position can be dimmed in the graphic associated with the reel strip to indicate the symbol position is not active or available, or the graphic associated with the reel strip can be unchanged (but selection of the symbol position can be made to be impossible).</p><p id="p-0190" num="0188"><figref idref="DRAWINGS">FIG. <b>9</b></figref> shows a set of example data structures <b>900</b> for the linked reel strip mechanism <b>850</b> of <figref idref="DRAWINGS">FIG. <b>8</b><i>b</i></figref>. For the root reel strip (reel strip 0), a data structure (e.g., table, array, linked list) includes fields for the respective symbol positions of the reel strip. For each symbol position, the corresponding field stores an indication of the associated outcome and a reel strip identifier for the next reel strip, if that symbol position is selected. For example, for the root reel strip (reel strip 0), the first field stores an indication of outcome A and a reel strip identifier for reel strip 1, which lacks a symbol position for outcome A. The next four fields each store an indication of outcome B and a reel strip identifier for reel strip 2, which is missing one symbol position for outcome B. The next two fields each store an indication of outcome C and a reel strip identifier for reel strip 3, which is missing one symbol position for outcome C. The last field stores an indication of outcome D and a reel strip identifier for reel strip 4, which lacks a symbol position for outcome D.</p><p id="p-0191" num="0189">For reel strip 1, the first four fields each store an indication of outcome B and a reel strip identifier for reel strip 5, which is missing a symbol position for outcome A and one symbol position for outcome B. The next two fields each store an indication of outcome C and a reel strip identifier for reel strip 6, which is missing a symbol position for outcome A and one symbol position for outcome C. The last field stores an indication of outcome D and a reel strip identifier for reel strip 7, which lacks a symbol position for outcome A and a symbol position for outcome D.</p><p id="p-0192" num="0190">In some cases, a given reel strip can be reached by traversal through various paths. For example, reel strip 14 includes three symbol positions for outcome B, a symbol position for outcome C, and a symbol position for outcome D. Reel strip 14 can be reached after selection of symbol positions for outcomes A, B, and C at any symbol positions, in any order.</p><p id="p-0193" num="0191">In the example implementation described in section IV, for a linked reel strip mechanism used in iterations of a re-spin series for spins of a ribbon wheel, the initial reel strip includes ten symbol positions. The ten symbol positions are associated with different counts of target symbol instances to add to reels of a supplemental feature. For example, the different counts are +10, +15, +15, +20, +20, +20, +25, +25, +50, and +50, but the outcomes for the symbol positions could instead be other count values.</p><p id="p-0194" num="0192">In the example implementation described in section IV, after a symbol position is selected for a reel strip, the selected symbol position is missing from reel strips that can be used in later iterations of the re-spin series (which simulates sampling without replacement). For example, after the symbol position for the outcome +10 is selected, the symbol position for the outcome +10 is missing from reel strips that can be used in later iterations of the re-spin series. If any of the symbol positions for the outcome +20 is selected, one fewer symbol position for the outcome +20 is present in the reel strips that can be used in later iterations of the re-spin series. The selected symbol position can be &#x201c;removed&#x201d; by using a lookup table that lacks an option for the selected symbol position or has a weight of zero for the selected symbol position, and by using a graphic with a corresponding change (if desired) for the reel strip.</p><p id="p-0195" num="0193">In a lookup table associated with a reel strip, entries for symbol positions are given weights that depend on implementation. In the example implementation described in section IV, the weights can vary between entries to make specific outcomes more or less likely. Alternatively, the weights can be the same for all entries in the lookup table associated with a reel strip.</p><p id="p-0196" num="0194">In the example implementation described in section IV, the lookup table associated with a reel strip can include logical links for the respective symbol positions (outcomes) of the reel strip. That is, the lookup table is the data structure for the linked reel strip mechanism. For each of the symbol positions of the reel strip, in addition to including a weight and an associated outcome, the lookup table can include a logical link (e.g., reel strip identifier) that identifies a next reel strip to use if the symbol position is selected. Alternatively, a data structure separate from the lookup table can include logical links for the respective symbol positions (outcomes) of the reel strip.</p><p id="p-0197" num="0195">In the example implementation described in section IV, for which the initial reel strip includes ten symbol positions (outcomes), the linked reel strip mechanism includes 215 reel strips, which are each associated with a different combination of symbol positions (outcomes). Each of the 215 reel strips has a different reel strip identifier. In general, with each successive spin of the reel, the next reel strip includes fewer symbol positions since the previously-selected symbol positions are missing. In practice, the graphics associated with the reel strips can have a minimum number of symbol positions, so that the graphics are correctly rendered when spinning. In the example implementation, each reel strip includes at least six symbol positions, although the weights for at least some of the symbol positions in the corresponding lookup table can be zero to prevent selection of those symbol positions.</p><p id="p-0198" num="0196">In general, the number of iterations possible for the re-spin series, and hence the number of levels of reel strips in the linked reel strip mechanism, depends on implementation. In the example implementation described in section IV, there is a limit on the number of iterations of the re-spin series. Specifically, there can be at most ten spins of the ribbon wheel that uses the linked reel strip mechanism in the example implementation. Alternatively, the number of iterations possible for the re-spin series can be larger or smaller. Or, the number of iterations possible for the re-spin series can be unlimited, but eventually there are no more symbol positions (outcomes) of the reel strip to remove. For example, instead of removing an entry in a lookup table or changing the weight for the entry to zero, a selected entry can be replaced with a different entry associated with a different outcome (e.g., adding credits or free spins, instead of adding a count of target symbol instances). In this way, the count of target symbol instances that are added to the reel can be limited, by replacing a selected entry with a new entry associated with a different outcome.</p><p id="p-0199" num="0197">B. Example Screenshots Showing Use of a Linked Reel Strip Mechanism.</p><p id="p-0200" num="0198"><figref idref="DRAWINGS">FIGS. <b>10</b><i>a</i>-<b>10</b><i>m </i></figref>show example stages of gameplay including use of a ribbon wheel with a linked reel strip mechanism. <figref idref="DRAWINGS">FIGS. <b>10</b><i>a</i>-<b>10</b><i>m </i></figref>show the example stages of gameplay on a display screen <b>1020</b> for an electronic gaming device.</p><p id="p-0201" num="0199">In the example screenshot <b>1001</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>a</i></figref>, the display screen <b>1020</b> shows a reel area <b>1030</b> for a regular mode of a base reel game. The reel area <b>1030</b> shows five reels in a 4-6-6-6-4 configuration. In <figref idref="DRAWINGS">FIG. <b>10</b><i>a</i></figref>, the reels of the base reel game are stopped in the reel area <b>1030</b>. The reel area <b>1030</b> encloses a combination of instances of scatter symbols (shown as coins). The combination of instances of the scatter symbols includes at least a threshold count (3 instances) of instances of the scatter symbols. In the example implementation described in section IV, a free games feature is triggered if the reel area <b>1030</b>, after a spin of the base reel game, encloses three, four, or five instances of a scatter symbol. Each reel strip includes one instance of a scatter symbol, which is a dynamic symbol that can resolved as a coin symbol, super coin symbol, or jackpot coin symbol. The number of free games awarded depends on the count of scatter symbol instances.</p><p id="p-0202" num="0200">In the example screenshot <b>1001</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b><i>a</i></figref>, at least one of the scatter symbol instances is an instance of a super scatter symbol (shown as a super coin symbol depicting an eagle coin). As such, a re-spin series is also triggered for the free games feature. In the example implementation described in section IV, one iteration of the re-spin series is performed for each instance of the super scatter symbol, when a combination of scatter symbol instances satisfies the threshold count. (The jackpot coin symbol is treated as a type of super scatter symbol in the example implementation.)</p><p id="p-0203" num="0201">In the example screenshot <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>b</i></figref>, the display screen <b>1020</b> shows a different background, a symbol count meter <b>1040</b>, a prompt <b>1042</b>, and a running count of free games. The prompt <b>1042</b> includes a graphic indicator that free games have been awarded for the free games feature and a graphic indicator that the free games feature will begin upon receipt of user input. The symbol count meter <b>1040</b> indicates that instances of a target symbol (white buffalo) can be added to reels for the free games feature. (Later, the symbol count meter <b>1040</b> will show a running total count of instances of the target symbol to be added to the reels for the free games feature.)</p><p id="p-0204" num="0202">The electronic gaming device receives user input from a player indicating the start of the free games feature. Upon receipt of user input to start the free games feature, a transition animation starts for the free games feature. The transition animation is accompanied by audible cues. The transition animation affects the background shown on the display screen <b>1020</b> (e.g., showing a flash).</p><p id="p-0205" num="0203">Since the combination of scatter symbol instances that triggered the free games feature includes at least one instance of the super scatter symbol, an iteration of a re-spin series occurs for each instance of the super scatter symbol. An animation starts for the re-spin series. The animation can be accompanied by audible cues. For example, the animation zooms in to the location of an instance of the super scatter symbol. In the example screenshot <b>1003</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>c</i></figref>, the animation has zoomed in so that an instance <b>1050</b> of the super scatter symbol (eagle coin) is approximately 250% of its normal size. The example screenshot <b>1003</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>c </i></figref>also shows a reel area <b>1060</b> for a ribbon wheel sliding out from behind the instance of the super scatter symbol (eagle coin). In the example screenshot <b>1003</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>c</i></figref>, a reel strip for the ribbon wheel is shown spinning in the reel area <b>1060</b>, in response to the user input indicating the start of the free games feature. In the example implementation described in section IV, the reel strip for the ribbon wheel is selected using a linked reel strip mechanism, as described herein.</p><p id="p-0206" num="0204">The reel strip for the ribbon wheel stops in the reel area <b>1060</b> for the ribbon wheel. The example screenshot <b>1004</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>d </i></figref>shows the ribbon wheel stopped at a symbol position of the reel strip associated with a count &#x201c;+15&#x201d; of additional target symbol instances for reel strips of the reels of the free games feature. An indicator of the count of additional target symbol instances can be displayed on the display screen <b>1020</b>. <figref idref="DRAWINGS">FIGS. <b>10</b><i>e </i>and <b>10</b><i>f </i></figref>show two examples of indicators of a count of additional target symbol instances. The indicator <b>1062</b> in the screenshot <b>1005</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>e </i></figref>shows the count in large text, while the indicator <b>1064</b> in the screenshot <b>1006</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>f </i></figref>shows the count in larger text with an animation that emphasizes the award.</p><p id="p-0207" num="0205">As shown in the example screenshot <b>1007</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>g</i></figref>, the animation for the re-spin series zooms out from the location of the instance of the super scatter symbol (eagle coin). For example, the animation zooms out to the reel area <b>1030</b> for the set of reels for the free games feature, with the instance of the super scatter symbol (eagle coin) returning to its normal size. The count of additional target symbol instances can still be shown near the instance of the super scatter symbol, then move (via an animation) to the symbol count meter <b>1040</b>. As shown in the example screenshot <b>1007</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>g</i></figref>, the symbol count meter <b>1040</b> is updated by the count of additional target symbol instances. At this point, the display screen <b>1020</b> can also show the pay table for the free games feature along with the running count of free games.</p><p id="p-0208" num="0206">The example screenshot <b>1008</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>h </i></figref>shows details of the symbol count meter <b>1040</b>. The symbol count meter <b>1040</b> shows the current total count value <b>1046</b> for target symbol instances to be added to reel strips for the free games feature. The symbol count meter <b>1040</b> also includes a fullness indicator <b>1044</b>, which graphically indicates the current total count value in a range of possible values for the count of target symbol instances to be added to reel strips for the free games feature. The fullness indicator <b>1044</b> can show a minimum count value, a maximum count value, and multiple intermediate count values. The fullness indicator <b>1044</b> also shows a graphical marker (white buffalo) of the current total count value in the range of possible values.</p><p id="p-0209" num="0207">In the example implementation described in section IV, the re-spin series can continue in other iterations&#x2014;one iteration for each instance of the super scatter symbol (treating an instance of the jackpot coin symbol as an instance of the super scatter symbol). Between zero and five instances of the super scatter symbol can land as part of a combination of scatter symbol instances in the example implementation. In the series of screenshots shown in <figref idref="DRAWINGS">FIGS. <b>10</b><i>a</i>-<b>10</b><i>d </i>and <b>10</b><i>g</i></figref>, only one iteration is shown. In successive iterations of the re-spin series, symbol positions (outcomes) that have been already been selected for the ribbon wheel for the free games features are missing from consideration (e.g., missing from the reel strips still available for the ribbon wheel, or effectively skipped by giving them a weight of zero in lookup tables for the reel strips). Counts of new instances of the target symbol are combined across the iterations of the re-spin series.</p><p id="p-0210" num="0208">After the iterations of the re-spin series have completed, the reels spin for the free games feature. In the example screenshots <b>1009</b>-<b>1011</b> of <figref idref="DRAWINGS">FIGS. <b>10</b><i>i</i>-<b>10</b><i>k</i></figref>, the reels spin in the reel area <b>1030</b>. At this point, the additional instances of the target symbol (white buffalo) are graphically added to the reel strips of the reels. <figref idref="DRAWINGS">FIG. <b>10</b><i>j </i></figref>shows a new instance <b>1070</b> of the target symbol being added to the first reel in the reel area <b>1030</b>. In the example implementation described in section IV, the addition of the target symbol instances is animated by showing the new instances, e.g., after a launch from behind the perspective of the player or floating in from the sides of the display screen <b>1020</b>, successively land on the reel strips. <figref idref="DRAWINGS">FIGS. <b>10</b><i>i </i>and <b>10</b><i>j </i></figref>show the reels continuing to spin. In this way, new target symbol instances can be added to the reels according to a pattern, e.g., from side to side, from top to bottom.</p><p id="p-0211" num="0209">After all new instances of the target symbol have been added to the reels, the reels land in the reel area <b>1030</b> for the first spin of the free games feature, and an outcome is determined for the spin of the free games feature (using all-ways evaluation), as shown in the example screenshot <b>1011</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>k</i></figref>. The free games feature continues for other spins. For the other spins, the new target symbol instances remain on the reels. The display screen <b>1020</b> can show an indicator of the outcome for the spin of the free games feature.</p><p id="p-0212" num="0210">During a spin of the free games feature, the free games feature can be re-triggered. In the example implementation, a free games feature is re-triggered if the reel area <b>1030</b>, after a spin of the free games feature, encloses two, three, four, or five instances of a scatter symbol. The number of free games awarded depends on the count of scatter symbol instances. If at least one of the scatter symbol instances is an instance of a super scatter symbol (eagle coin), the re-spin series is also re-triggered for the free games feature. One iteration of the re-spin series is performed for each instance of the super scatter symbol (treating an instance of the jackpot coin symbol as an instance of the super scatter symbol), when a combination of scatter symbol instances satisfies the threshold count for re-triggering the free games feature.</p><p id="p-0213" num="0211">In the example screenshot <b>1012</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>l</i></figref>, the reel area <b>1030</b> encloses two instances of the scatter symbol. The display screen <b>1020</b> shows a graphic indicator that more free games have been awarded for the free games feature. If at least one of the instances of the scatter symbol is a super scatter symbol, the display screen <b>1020</b> can also show a prompt, which includes a graphic indicator that the free games feature will continue upon receipt of user input. For each instance of the super scatter symbol, an iteration of the re-spin series occurs, involving another spin of the ribbon wheel, as shown in <figref idref="DRAWINGS">FIGS. <b>10</b><i>c</i>-<b>10</b><i>g</i></figref>, with the linked reel strip mechanism resuming from its final state when the re-spin series was previously triggered. After the re-spin series, new instances of the target symbol are added to the reels, as shown in <figref idref="DRAWINGS">FIGS. <b>10</b><i>i</i>-<b>10</b><i>k</i></figref>. To limit the number of iterations of the re-spin series, and thereby limit the count of new target symbol instances that can be added to the reels for the free games feature, the way that the scatter symbol is resolved (as a dynamic symbol) can be changed depending on the number of iterations of the re-spin series that have already occurred. Specifically, the option for the super scatter symbol (and jackpot coin symbol) can disabled for a reel when resolving a dynamic symbol.</p><p id="p-0214" num="0212">Finally, after all spins have completed for the free games feature, an indicator of the final outcome of the free games feature is presented on the display screen <b>1020</b>. The example screenshot <b>1013</b> of <figref idref="DRAWINGS">FIG. <b>10</b><i>m </i></figref>shows an indicator <b>1080</b> of a final award amount for the free games feature.</p><p id="p-0215" num="0213">C. Example Techniques for Using a Linked Reel Strip Mechanism.</p><p id="p-0216" num="0214"><figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>shows an example technique <b>1100</b> for controlling the UI of an electronic gaming device that uses a linked reel strip mechanism, focusing on backend operations. Operations of the example technique <b>1100</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a </i></figref>can be performed, for example, in a game processing backend system <b>314</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>shows an example technique <b>1150</b> for controlling the UI of an electronic gaming device that uses a linked reel strip mechanism, focusing on UI-frontend operations. Operations of the example technique <b>1150</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b </i></figref>can be performed, for example, in a UI system <b>302</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The game processing backend system and UI system can be implemented using memory and one or more processors that are part of the electronic gaming device and/or part of a gaming system located remotely from the electronic gaming device. Depending on implementation, the backend system and UI system can be implemented by software executable on a CPU, by software controlling special-purpose hardware (e.g., a GPU or other graphics hardware for video acceleration), and/or by special-purpose hardware (e.g., in an ASIC), to process game play instructions in accordance with game play rules, determine outcomes in accordance with game play rules, and/or generate outputs (e.g., to one or more display screens and/or speakers).</p><p id="p-0217" num="0215">In general, the techniques <b>1100</b>, <b>1150</b> shown in <figref idref="DRAWINGS">FIGS. <b>11</b><i>a </i>and <b>11</b><i>b </i></figref>involve a reel area on a display screen of an electronic gaming device. The reel area can be displayed on a single display screen (e.g., main display screen, or secondary display screen).</p><p id="p-0218" num="0216">In the techniques <b>1100</b>, <b>1150</b> shown in <figref idref="DRAWINGS">FIGS. <b>11</b><i>a </i>and <b>11</b><i>b</i></figref>, a linked reel strip mechanism is used for a supplemental feature such as a free games feature. Alternatively, the linked reel strip mechanism can be used as part of another type of supplemental feature, as part of a base reel game, or as part of another type of process of an electronic gaming device. In some implementations, the electronic gaming device is an EGM with video reels. Alternatively, the electronic gaming device is another type of electronic gaming device.</p><p id="p-0219" num="0217">At least for backend processing, the linked reel strip mechanism uses one or more data structures for multiple reel strips of a reel strip group. For example, the reel strips of the reel strip group are associated with a ribbon wheel, and the reel area for the ribbon wheel encloses at most one complete instance of a symbol at a time. Alternatively, the associated reel for the reel strips of the reel strip group can be another type of reel, for which the reel area encloses a single instance of a symbol or multiple instances of symbols at a time. At least for backend processing, the reel strips of the reel strip group are linked, in the data structure(s), using multiple logical links. Each of the logical links (a) is associated with an outcome for one of the reel strips of the reel strip group and (b) indicates a next reel strip to use, from among the reel strips of the reel strip group. The logical links can be reel strip identifiers or another type of reference to other reel strips, where a given reel strip is associated with a lookup table for the given reel strip and/or a data structure for the linked reel strip mechanism. The data structure(s) for the linked reel strip mechanism can be the lookup tables for reel strips. For example, an entry in the lookup table for a reel strip can include an outcome, a weight for the outcome, and a logical link (such as a reel strip identifier) to the reel strip to use in the next iteration of the re-spin series. Alternatively, the data structure(s) for the linked reel strip mechanism can be separate from the lookup tables for reel strips.</p><p id="p-0220" num="0218">1. Example Backend Operations.</p><p id="p-0221" num="0219">With reference to <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>, at stage <b>1105</b>, a backend system (such as the game processing backend system <b>314</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) starts, for a reel, a re-spin series that uses a linked reel strip mechanism with data structure(s) for reel strips of a reel strip group.</p><p id="p-0222" num="0220">For each of one or more iterations of a re-spin series, a current reel strip is selected (at stage <b>1110</b>), from among the multiple reel strips of the reel strip group, by traversing the data structure(s). In general, the backend system can traverse the data structure(s) by following logical links. For an initial iteration among the iteration(s) of the re-spin series, the backend system can determine a root reel strip (from among the reel strips of the reel strip group) to use as the current reel strip, e.g., by following a root logical link that indicates the root reel strip. For a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the backend system can determine the next reel strip to use (from among the reel strips of the reel strip group) to use as the current reel strip by following a logical link, in one of the data structure(s), that is associated with an outcome for a previous spin that used a previous reel strip (among the multiple reel strips of the reel strip group). For example, after the outcome is found for the previous spin, the backend system follows a logical link to the next reel strip.</p><p id="p-0223" num="0221">At stage <b>1120</b>, the backend system determines an outcome for a spin that uses the current reel strip. For example, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of the current reel strip. In this way, the backend system can determine one of the different symbol positions at which to stop the current reel strip. The outcome for the spin can be a count of new target symbol instances to add to reel strips for a set of reels used in a process. In the example implementation described in section IV, the outcome for a spin is a count of new instances of a highest-value symbol (white buffalo) to add to reel strips for a set of reels used in a free games feature. Alternatively, the target symbol can be another symbol for which instances of the symbol are added to reels of the process. The process can be any supplemental feature or base reel game that uses a set of reels.</p><p id="p-0224" num="0222">After the backend system determines the outcome for the spin that uses the current reel strip, the backend system can update one or more counters or other variables. For example, in each of the iteration(s) of the re-spin series, the backend system can update a symbol count meter that indicates a running total count of target symbol instances to add to reel strips for a set of reels used in a process.</p><p id="p-0225" num="0223">At stage <b>1130</b>, the backend system determines whether to continue the re-spin series for another iteration. If so, the backend system selects (at stage <b>1110</b>) the next reel strip to use as the current reel strip by traversing the data structure(s). Otherwise (after the iteration(s) of the re-spin series have finished), the backend system determines (at stage <b>1140</b>) an outcome for the re-spin series. The outcome for the re-spin series is based on the outcome(s) for the spins in the iteration(s) of the re-spin series. For example, the outcome for the re-spin series is a final count of instances of a target symbol to add to reel strips for a set of reels used in a process.</p><p id="p-0226" num="0224">In terms of the timing of operations, as shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>, the backend system can determine a next reel strip to use as the current reel strip in a given iteration of the iteration(s) of the re-spin series, and then determine (at stage <b>1120</b>) the outcome for the spin that uses the current reel strip later in the given iteration. Alternatively, the backend system can determine a next reel strip to use as the current reel strip in a given iteration of the iteration(s) of the re-spin series, and then determine the outcome for the spin that uses the current reel strip in a next iteration of the iteration(s) of the re-spin series. Thus, the backend system can determine the next reel strip to use at the end of a given iteration.</p><p id="p-0227" num="0225">In any case, when the backend system determines the next reel strip to use, the next reel strip can be different in any of several ways compared to the previous reel strip. For example, the next reel strip includes fewer symbol positions for possible outcomes, because the next reel strip lacks a symbol position for an outcome for a previous spin that used a previous reel strip). Or, as another example, the next reel strip includes a symbol position for a possible outcome with a decreased likelihood, because the possible outcome with the decreased likelihood is an outcome for a previous spin that used a previous reel strip. For each successive iteration (after an initial iteration among the iteration(s) of the re-spin series), a lookup table used (at stage <b>1120</b>) to determine the outcome for a spin that uses the current reel strip (a) is missing an entry associated with an outcome for a previous spin that used a previous reel strip, or (b) includes an entry associated with a possible outcome with a decreased likelihood, where the possible outcome with the decreased likelihood is the outcome for the previous spin that used the previous reel strip.</p><p id="p-0228" num="0226">Alternatively, for a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), a lookup table used (at stage <b>1120</b>) to determine the outcome for a spin that uses the current reel strip can include a new entry for a new outcome. The new entry replaces an entry associated with an outcome for a previous spin that used a previous reel strip.</p><p id="p-0229" num="0227">After the iteration(s) of the re-spin series finish, to add target symbol instances to reel strips for a set of reels used in a process, the backend system can increase the length of the reel strips or replace, with the target symbol instances, instances of other symbols in the reel strips for the set of reels used in the process. Alternatively, the backend system can add the target symbol instances to the reel strips during the iteration(s) of the re-spin series.</p><p id="p-0230" num="0228">Although not shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>, the operations of the re-spin series can be contingent on the occurrence of an earlier event. For example, the backend system determines whether or not a trigger result satisfies a trigger condition for the re-spin series. The re-spin series starts responsive to satisfaction of the trigger condition. To determine whether or not the trigger result satisfies the trigger condition, the backend system can determine whether or not a combination of instances of one or more scatter symbols includes at least one instance of a super scatter symbol. In this case, each of the at least one instance of the super scatter symbol corresponds to one of the iteration(s) of the re-spin series. In the example implementation described in section IV, the super scatter symbol is a super coin symbol, but alternatively the super scatter symbol could be a different type of symbol. The scatter symbol(s) can be dynamic symbols having any of multiple possible symbol types, such as a regular scatter symbol, a super scatter symbol, and a jackpot symbol. For the trigger condition, the combination of instances of the scatter symbol(s) includes at least a threshold count of instances of the scatter symbol(s). The threshold count can be different between a first use of the linked reel strip mechanism (triggering the re-spin series) and a second use of the linked reel strip mechanism (re-triggering the re-spin series).</p><p id="p-0231" num="0229">2. Example Frontend Operations.</p><p id="p-0232" num="0230">With reference to <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, at stage <b>1155</b>, a UI system (such as the UI system <b>302</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) receives user input at the electronic gaming device. The user input indicates a start to a re-spin series that uses a linked reel strip mechanism, which (at least for backend processing) has one or more data structures for reel strips of a reel strip group.</p><p id="p-0233" num="0231">In each of one or more iterations of the re-spin series, a current reel strip is selected from among the reel strips of the reel strip group. For example, the UI system can select the current reel strip based on a reel strip identifier of the current reel strip. (During backend processing, the current reel strip was selected by traversing the data structure(s), as explained above.)</p><p id="p-0234" num="0232">At stage <b>1160</b>, the UI system displays, for a spin that uses the current reel strip, the current reel strip spinning within a reel area on a display screen of the electronic gaming device. Before displaying the current reel strip spinning within the reel area on the display screen, the UI system can zoom in to the reel area on the display screen. (Conversely, after the displaying an indicator of an outcome for the spin that uses the current reel strip, the UI system can zoom out from the reel area on the display screen.)</p><p id="p-0235" num="0233">At stage <b>1170</b>, the UI system displays an indicator of an outcome for the spin that uses the current reel strip. For example, the outcome for the spin is a count of new instances of a target symbol to add to reel strips for a set of reels used in a process. In the example implementation described in section IV, the outcome for the spin is a count of instances of a highest-value symbol (white buffalo) to add to reel strips for a set of reels used in a free games feature. Alternatively, the target symbol can be another symbol for which instances of the symbol are added to reels of the process. The process can be any supplemental feature or base reel game that uses a set of reels, where for UI-focused operations each of the reel strips for the set of reels can be displayed as spinning through a reel area for the set of reels on the display screen of the electronic gaming device upon a spin of the reel. The UI system can display an updated symbol count meter that indicates a running total count of target symbol instances to add to the reel strips for the set of reels used in the process.</p><p id="p-0236" num="0234">At stage <b>1180</b>, the UI system determines whether to continue the re-spin series for another iteration. If so, the UI system displays (at stage <b>1160</b>) the next reel strip, as the current reel strip, spinning within the reel area. Otherwise (after the iteration(s) of the re-spin series have finished), the UI system displays (at stage <b>1190</b>) an indicator of an outcome for the re-spin series. The outcome for the re-spin series is based on the outcome(s) for the spins in the iteration(s) of the re-spin series. For example, the outcome for the re-spin series is a final count of instances of a target symbol to add to reel strips for a set of reels used in a process.</p><p id="p-0237" num="0235">In terms of the timing of operations, the UI system can determine a next reel strip to use as the current reel strip in a given iteration of the iteration(s) of the re-spin series, and then display (at stage <b>1160</b>) the current reel strip spinning within the reel area later in the given iteration. Alternatively, the UI system can determine a next reel strip to use as the current reel strip in a given iteration of the iteration(s) of the re-spin series, and then display the current reel strip spinning within the reel area in a next iteration of the iteration(s) of the re-spin series. Thus, the UI system can determine the next reel strip to use at the end of a given iteration.</p><p id="p-0238" num="0236">In any case, when the UI system determines the next reel strip to use, the next reel strip can be different compared to the previous reel strip. For example, the next reel strip includes fewer symbol positions for possible outcomes, because the next reel strip lacks a symbol position for an outcome for a previous spin that used the previous reel strip. Thus, for a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the current reel strip can be missing a symbol position for an outcome for a previous spin that used a previous reel strip. Alternatively, for a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the current reel strip can include a symbol position for a new outcome. The symbol position for the new outcome replaces a symbol position for an outcome for a previous spin that used a previous reel strip.</p><p id="p-0239" num="0237">After the iteration(s) of the re-spin series have finished, to add instances of a target symbol to reel strips for a set of reels used in a process, the UI system can display one or more animations that depict (a) adding the target symbol instances to the reel strips for the set of reels used in the process by lengthening the reel strips or (b) replacing, with the target symbol instances, instances of other symbols in the reel strips for the set of reels used in the process. For example, after the UI system receives additional user input that indicates a start of the process, the UI system can display the animation(s) during spinning of the reels for the set of reels used in the process. The animation(s) can depict, according to a pattern, the target symbol instances being successively added to the reel strips for the set of reels used in the process, or successively replacing the instances of the other symbols in the reel strips for the set of reels used in the process. Alternatively, the backend system can add the target symbol instances to the reel strips during the iteration(s) of the re-spin series.</p><p id="p-0240" num="0238">Although not shown in <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the operations of the re-spin series can be contingent on the occurrence of an earlier event. For example, the backend system determines whether or not a trigger result satisfies a trigger condition for the re-spin series. The re-spin series starts responsive to satisfaction of the trigger condition. In this case, the UI system displays a trigger result that satisfies a trigger condition for re-spin series. The UI system can then display a prompt, and the user input can be received (at stage <b>1155</b>) responsive to the displaying the prompt. The trigger condition can be a combination of instances of one or more scatter symbols that includes at least one instance of a super scatter symbol. In this case, each of the at least one instance of the super scatter symbol corresponds to one of the iteration(s) of the re-spin series. In the example implementation described in section IV, the super scatter symbol is a super coin symbol, but alternatively the super scatter symbol could be a different type of symbol. The scatter symbol(s) can be dynamic symbols having any of multiple possible symbol types, such as a regular scatter symbol, a super scatter symbol, and a jackpot symbol.</p><p id="p-0241" num="0239">D. Alternative Approach for Re-Spin Series.</p><p id="p-0242" num="0240">Instead of using a linked reel strip mechanism that simulates sampling without replacement, a re-spin series for a reel can use an approach in which adjustments are made to a reel strip and lookup table for iterations of the re-spin series. Such an approach directly incorporates sampling without replacement for spins of the reel, and can be used to implement a re-spin series for a ribbon wheel as described in section IV.</p><p id="p-0243" num="0241">For example, for a reel, a reel strip initially includes symbol positions, which are associated with outcomes. The reel strip is associated with a lookup table, which initially includes weights for the respective symbol positions of the reel strip, and which is used when selecting one of the symbol positions of the reel strip. In an initial iteration of the re-spin series, one of the initial symbol positions of the reel strip is selected using the lookup table.</p><p id="p-0244" num="0242">For a later iteration of the re-spin series, the entry for the previously-selected symbol position is removed from the lookup table, producing an updated lookup table. The previously-selected symbol position can also be removed from the reel strip, producing an updated reel strip. For example, the lookup table can be modified to remove an entry for the previously-selected symbol position or to give the entry for the previously-selected symbol position a weight of zero, so that the entry cannot be selected from the updated lookup table. The graphic associated with the reel strip can be modified to remove a graphical indication for the previously-selected symbol position or to dim the graphical indication for the previously-selected symbol position. Or, the graphic associated with the reel strip can be unchanged (while still making selection of the entry for the previously-selected symbol position impossible by changing the lookup table).</p><p id="p-0245" num="0243">After the updated lookup table and reel strip are used in the later iteration, the entry for a symbol position selected in the later iteration can be removed from the updated lookup table, as described above. Similarly, the symbol position selected in the later iteration can be removed from the reel strip, as described above. In this way, any previously-selected symbol position (outcome) is removed from consideration in any later iteration of the re-spin series.</p><p id="p-0246" num="0244">The number of iterations possible for the re-spin series depends on implementation. For example, the number of iterations can be limited to ten, e.g., for ten spins of a ribbon wheel. Alternatively, the number of iterations possible for the re-spin series can be larger or smaller. Or, the number of iterations possible for the re-spin series can be unlimited, but eventually there are no more symbol positions of the reel strip to remove. For example, instead of removing an entry for a selected symbol position in a lookup table or changing the weight for the entry to zero, a selected entry can be replaced with a different entry associated with a different outcome (e.g., adding credits or free spins, instead of adding a count of target symbol instances). In this way, the count of target symbol instances that are added to the reel can be limited, by replacing a selected entry with a new entry associated with a different outcome. Or, as another alternative, instead of removing selected symbol positions from a reel strip, after a maximum count of target symbol instances is reached, the symbol positions of the reel strip are replaced with symbol positions associated with different outcomes (e.g., adding credits or free spins, instead of adding a count of target symbol instances).</p><p id="p-0247" num="0245"><figref idref="DRAWINGS">FIG. <b>12</b><i>a </i></figref>shows an example technique <b>1200</b> for controlling the UI of an electronic gaming device that uses sampling without replacement in a re-spin series for a ribbon wheel, focusing on backend operations. Operations of the example technique <b>1200</b> shown in <figref idref="DRAWINGS">FIG. <b>12</b><i>a </i></figref>can be performed, for example, in a game processing backend system <b>314</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIG. <b>12</b><i>b </i></figref>shows an example technique <b>1250</b> for controlling the UI of an electronic gaming device that uses sampling without replacement in a re-spin series for a ribbon wheel, focusing on UI-frontend operations. Operations of the example technique <b>1250</b> shown in <figref idref="DRAWINGS">FIG. <b>12</b><i>b </i></figref>can be performed, for example, in a UI system <b>302</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. The game processing backend system and UI system can be implemented using memory and one or more processors that are part of the electronic gaming device and/or part of a gaming system located remotely from the electronic gaming device. Depending on implementation, the backend system and UI system can be implemented by software executable on a CPU, by software controlling special-purpose hardware (e.g., a GPU or other graphics hardware for video acceleration), and/or by special-purpose hardware (e.g., in an ASIC), to process game play instructions in accordance with game play rules, determine outcomes in accordance with game play rules, and/or generate outputs (e.g., to one or more display screens and/or speakers).</p><p id="p-0248" num="0246">In general, the techniques <b>1200</b>, <b>1250</b> shown in <figref idref="DRAWINGS">FIGS. <b>12</b><i>a </i>and <b>12</b><i>b </i></figref>use a reel area on a display screen of an electronic gaming device. The reel area can be displayed on a single display screen (e.g., main display screen, or secondary display screen). In the techniques <b>1200</b>, <b>1250</b> shown in <figref idref="DRAWINGS">FIGS. <b>12</b><i>a </i>and <b>12</b><i>b</i></figref>, a re-spin series for a ribbon wheel is used for a supplemental feature such as a free games feature. A reel area for the ribbon wheel encloses at most one complete instance of a symbol at a time. Alternatively, the re-spin series for a ribbon wheel can be used as part of another type of supplemental feature, as part of a base reel game, or as part of another type of process of an electronic gaming device. In some implementations, the electronic gaming device is an EGM with video reels. Alternatively, the electronic gaming device is another type of electronic gaming device.</p><p id="p-0249" num="0247">1. Example Backend Operations.</p><p id="p-0250" num="0248">With reference to <figref idref="DRAWINGS">FIG. <b>12</b><i>a</i></figref>, at stage <b>1205</b>, a backend system (such as the game processing backend system <b>314</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) starts, for a ribbon wheel, a re-spin series that uses a lookup table for a reel strip. The re-spin series uses sampling without replacement for entries of the lookup table.</p><p id="p-0251" num="0249">In each of one or more iterations of the re-spin series, the backend system determines (at stage <b>1210</b>) an outcome for a spin that uses the reel strip. For an initial iteration (among the iteration(s) of the re-spin series), the reel strip can be an initial version of the reel strip. For a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the reel strip may have been modified to modify or remove one of the symbol positions of the reel strip. For example, to determine the outcome for the spin, the backend system generates a random number using an RNG and performs a lookup operation for the random number in the lookup table for the reel strip. The lookup table includes entries that indicate different symbol positions of the reel strip. In this way, the backend system can determine one of the different symbol positions at which to stop the reel strip.</p><p id="p-0252" num="0250">The outcome for the spin can be a count of new target symbol instances to add to reel strips for a set of reels used in a process. For example, the outcome for the spin is a count of new instances of a highest-value symbol (white buffalo) to add to reel strips for a set of reels used in a free games feature. Alternatively, the target symbol can be another symbol for which instances of the symbol are added to reels of the process. The process can be any supplemental feature or base reel game that uses a set of reels.</p><p id="p-0253" num="0251">After the backend system determines the outcome for the spin that uses the reel strip, the backend system can update one or more counters or other variables. For example, in each of the iteration(s) of the re-spin series, the backend system can update a symbol count meter that indicates a running total count of target symbol instances to add to reel strips for a set of reels used in a process.</p><p id="p-0254" num="0252">At stage <b>1220</b>, the backend system adjusts the lookup table. For example, the backend system modifies a weight in one of the entries of the lookup table for the selected one of the symbol positions of the reel strip, or the backend system removes one of the entries of the lookup table for the selected one of the symbol positions of the reel strip. In some implementations, for each successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the lookup table (a) is missing one of the entries that is associated with an outcome for a previous spin that used the reel strip, or (b) includes one of the entries that is associated with a possible outcome with a decreased likelihood (where the possible outcome with the decreased likelihood is the outcome for the previous spin that used the reel strip). Alternatively, the lookup table can (c) include a new entry for a new outcome (where the new entry for the new outcome replaces an entry that is associated with the outcome for the previous spin that used the reel strip).</p><p id="p-0255" num="0253">At stage <b>1230</b>, the backend system determines whether to continue the re-spin series for another iteration. If so, the backend system determines (at stage <b>1210</b>) an outcome for another spin that uses the reel strip. In terms of the timing of operations, the backend system can determine (at stage <b>1210</b>) the outcome for a spin that uses the reel strip, and then adjust (at stage <b>1220</b>) the lookup table later in a given iteration. Alternatively, the backend system can adjust the lookup table in a given iteration, and then determine the outcome for the spin in the given iteration using the adjusted lookup table. Thus, the backend system can determine the outcome for the spin at the end of a given iteration.</p><p id="p-0256" num="0254">In any case, after an initial iteration, the reel strip can be different in any of several ways compared to the previously-used reel strip. For example, the reel strip includes fewer symbol positions for possible outcomes, because the reel strip lacks a symbol position for an outcome for the previous spin that used the reel strip. Or, as another example, the reel strip can include a symbol position for a possible outcome with a decreased likelihood, because the possible outcome with the decreased likelihood is an outcome for the previous spin that used the reel strip. For each successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the reel strip is missing one of the symbol positions for an outcome for a previous spin that used the reel strip. The lookup table is missing one of the entries for the outcome or has a weight of zero for the one of the entries for the outcome. Alternatively, for each successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the reel strip includes a new symbol position for a new outcome, the new symbol position for the new outcome replacing one of the symbol positions for an outcome for a previous spin that used the reel strip.</p><p id="p-0257" num="0255">After the iteration(s) of the re-spin series finish, the backend system determines (at stage <b>1240</b>) an outcome for the re-spin series. The outcome for the re-spin series is based on the outcome(s) of the iteration(s) of the re-spin series. For example, the outcome for the re-spin series is a final count of instances of a target symbol to add to reel strips for a set of reels used in a process. To add the target symbol instances to the reel strips for the set of reels used in the process, the backend system can increase the length of the reel strips or replace, with the target symbol instances, instances of other symbols in the reel strips for the set of reels used in the process. Alternatively, the backend system can add the target symbol instances to the reel strips during the iteration(s) of the re-spin series.</p><p id="p-0258" num="0256">Although not shown in <figref idref="DRAWINGS">FIG. <b>12</b><i>a</i></figref>, the operations of the re-spin series can be contingent on the occurrence of an earlier event, as described with reference to <figref idref="DRAWINGS">FIG. <b>11</b><i>a</i></figref>. For example, the backend system determines whether or not a trigger result satisfies a trigger condition for the re-spin series. The initialization and the iteration(s) of the re-spin series are performed responsive to satisfaction of the trigger condition.</p><p id="p-0259" num="0257">2. Example Frontend Operations.</p><p id="p-0260" num="0258">With reference to <figref idref="DRAWINGS">FIG. <b>12</b><i>b</i></figref>, at stage <b>1255</b>, a UI system (such as the UI system <b>302</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>) receives user input at the electronic gaming device. The user input indicates a start to a re-spin series for a ribbon wheel. The re-spin series uses sampling without replacement for symbol positions of a reel strip associated with the ribbon wheel. For UI-focused operations, the reel strip can be displayed as spinning through a reel area on a display screen of the electronic gaming device upon a spin of the ribbon wheel.</p><p id="p-0261" num="0259">In each of one or more iterations of the re-spin series, the UI system determines (at stage <b>1260</b>) the reel strip. For example, for an initial iteration (among the iteration(s) of the re-spin series), the UI system selects an initial version of the reel strip. Or, for a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the UI system modifies one of the symbol positions of the reel strip or removes one of the symbol positions of the reel strip.</p><p id="p-0262" num="0260">At stage <b>1270</b>, the UI system displays, for a spin that uses the reel strip, the reel strip spinning within the reel area on the display screen. Before displaying the reel strip spinning within the reel area on the display screen, the UI system can zoom in to the reel area on the display screen. (Conversely, after the displaying the outcome for the spin that uses the reel strip, the UI system can zoom out from the reel area on the display screen.)</p><p id="p-0263" num="0261">At stage <b>1280</b>, the UI system displays an indicator of an outcome for the spin that uses the reel strip. For example, the outcome for the spin is a count of new instances of a target symbol to add to reel strips for a set of reels used in a process. The target symbol can be a highest-value symbol (white buffalo) to add to reel strips for a set of reels used in a free games feature. Alternatively, the target symbol can be another symbol for which instances of the symbol are added to reels of the process. The process can be any supplemental feature or base reel game that uses a set of reels. The UI system can display an updated symbol count meter that indicates a running total count of target symbol instances to add to the reel strips for the set of reels used in the process.</p><p id="p-0264" num="0262">At stage <b>1290</b>, the UI system determines whether to continue the re-spin series for another iteration. If so, the UI system determines (at stage <b>1260</b>) the reel strip to use for the next iteration. In terms of the timing of operations, the UI system can determine (at stage <b>1260</b>) the reel strip in a given iteration, and then display (at stage <b>1270</b>) the reel strip spinning within the reel area later in the given iteration. Alternatively, the UI system can determine the reel strip to use in a given iteration, and then display the reel strip spinning within the reel area in a next iteration. Thus, the UI system can determine the reel strip to use next at the end of a given iteration.</p><p id="p-0265" num="0263">In any case, when the UI system determines the reel strip to use, the reel strip can be different compared to the previously-used reel strip. For example, the reel strip includes fewer symbol positions for possible outcomes, because the reel strip lacks a symbol position for an outcome for the previous spin that used the reel strip. For a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the reel strip can be missing a symbol position for an outcome for the previous spin that used the reel strip. Alternatively, for a successive iteration (after an initial iteration among the iteration(s) of the re-spin series), the reel strip includes a symbol position for a new outcome. The symbol position for the new outcome replaces a symbol position for an outcome for the previous spin that used the reel strip.</p><p id="p-0266" num="0264">After the iteration(s) of the re-spin series have finished), the UI system displays (at stage <b>1295</b>) an indicator of an outcome for the re-spin series. The outcome for the re-spin series is based on the outcome(s) for the spins in the iteration(s) of the re-spin series. For example, the outcome for the re-spin series is a final count of instances of a target symbol to add to reel strips for a set of reels used in a process. As described with reference to <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, to add the instances of the target symbol to the reel strips for the set of reels used in the process, the UI system can display one or more animations that depict (a) adding the target symbol instances to the reel strips for the set of reels used in the process by lengthening the reel strips or (b) replacing, with the target symbol instances, instances of other symbols in the reel strips for the set of reels used in the process.</p><p id="p-0267" num="0265">As described with reference to <figref idref="DRAWINGS">FIG. <b>11</b><i>b</i></figref>, the operations of the re-spin series can be contingent on the occurrence of an earlier event. For example, the backend system determines whether or not a trigger result satisfies a trigger condition for the re-spin series. The iteration(s) of the re-spin series are performed responsive to satisfaction of the trigger condition. In this case, the UI system displays a trigger result that satisfies a trigger condition for re-spin series. The UI system can then display a prompt, and the user input can be received (at stage <b>1255</b>) responsive to the displaying the prompt.</p><p id="p-0268" num="0266">E. Examples of Integration into Electronic Gaming Devices.</p><p id="p-0269" num="0267">Innovations described herein can be implemented in a gaming server <b>102</b> and/or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. Thus, a gaming server <b>102</b> or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> is an example of an electronic gaming device as described in section VI.</p><p id="p-0270" num="0268">For example, for the electronic gaming device, a game controller such as a game controller <b>202</b> described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref> can perform operations that use a linked reel strip mechanism and/or otherwise implement a re-spin series for a ribbon wheel. In some implementations, the game controller <b>202</b> performs backend operations as well as frontend UI operations. With respect to frontend UI operations, the game controller <b>202</b> can receive user input indicating a start to a re-spin series. Further, for an iteration of the re-spin series, the game controller <b>202</b> can select or adjust a reel strip, cause display of the reel strip spinning through a reel area, and display an indicator of an outcome for a spin that uses the reel strip. With respect to backend operations, for the re-spin series, the game controller <b>202</b> can start a re-spin series. Further, for an iteration of the re-spin series, the game controller <b>202</b> can select or adjust a reel strip and/or associated lookup table and determine an outcome for a spin that uses the reel strip.</p><p id="p-0271" num="0269">Innovations described in section VI can be implemented in a game processing pipeline that follows the example game processing architecture <b>300</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. As described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, RNG conversion engine <b>320</b> utilizes one or more lookup tables <b>322</b>A-<b>322</b>N. In the context of the innovations described herein, for example, one or more of the lookup tables <b>322</b>A-<b>322</b>N can be used to determine a symbol position at which to stop a reel strip and/or to determine other results. Different lookup tables can be used for different reel strips or different adjusted versions of a given reel strip, having different entries as symbol positions (outcomes) are removed or adjusted based on previous results.</p><p id="p-0272" num="0270">In general, the example game processing architecture <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be used to process game play instructions and generate outcomes. In some implementations, the game processing architecture <b>300</b> implements a game processing pipeline for a process (e.g., a free games feature or other supplemental feature). The UI system <b>302</b> (e.g., the game play UI <b>304</b> of the UI system <b>302</b>) receives user input that indicates a start to a re-spin series. The UI system <b>302</b> (e.g., the bonus game play UI <b>308</b>) makes one or more calls to the game processing backend system <b>314</b>. In response, the backend system <b>314</b> performs various operations. The backend system <b>314</b> starts a re-spin series. For each iteration of the re-spin series, the backend system <b>314</b> determines or adjusts the reel strip to use for the iteration. Using a gaming RNG <b>318</b>, the RNG engine <b>316</b> generates one or more random numbers, which are passed to the RNG conversion engine <b>320</b>. The RNG conversion engine <b>320</b>, using one or more of the random number(s) and one or more of the lookup tables <b>322</b>A-<b>322</b>N, determines a symbol position at which to stop a reel strip for a spin of the reel strip and determines the outcome associated with that symbol position. The backend system <b>314</b> returns generated results (e.g., reel strip identifier, indicators of the outcome) to the bonus game play UI <b>308</b> of the UI system <b>302</b>, which can, among other operations, select or adjust the reel strip for the iteration, cause display of the reel strip spinning within the reel area, and then display an indicator of the outcome for the spin. The backend system <b>314</b> and bonus game play UI <b>308</b> can iteratively repeat their operations in multiple iterations of the re-spin series.</p><p id="p-0273" num="0271">In general, the generated results returned by the backend system <b>314</b> can include game-related information (such as reel strip identifiers, outcomes) as well as animation effects not related to game parameters. Alternatively, the game play UI <b>304</b> can make one or more separate RNG calls to the backend system <b>314</b> to determine animation effects, as described in section V.</p><p id="p-0274" num="0272">F. Technical Advantages of a Re-spin Series.</p><p id="p-0275" num="0273">Approaches described herein address the technical problem of controlling volatility for a target level of RTP in an electronic gaming device. The approaches provide ways to achieve a desired volatility of a supplemental feature without significantly deviating from a designated level of RTP for the supplemental feature.</p><p id="p-0276" num="0274">In particular, in some implementations that use a linked reel strip mechanism, for each of one or more iterations of a re-spin series, a current reel strip is selected (from among reel strips of reel strip group) by traversing one or more data structures of the linked reel strip mechanism. In terms of technical effects, innovative features of the linked reel strip mechanism represent improvements in the technical area of electronic gaming software and provide new technology, in that they provide a computationally-effective way to switch reel strips when iteratively spinning a reel. Furthermore, by managing lookup tables and/or other aspects of RNG events for the linked reel strip mechanism, game play can be kept fair and consistent with regulations while also enabling variation of volatility for the designated level of RTP. Also, UI-focused operations for the re-spin series for a ribbon wheel can improve the usability of electronic gaming devices by enhancing the user experience for players, extending player time on the electronic gaming devices, and maintaining the interest of current players in the electronic gaming devices. These embodiments are thus not merely new game rules or new display patterns.</p><heading id="h-0019" level="1">VII. EXAMPLES OF LOW-COMPLEXITY REEL SYMBOL REPLACEMENT STRATEGIES WITH CLUSTERING</heading><p id="p-0277" num="0275">This section describes innovations for replacing instances of symbols in reel strips with instances of a target symbol, using index tables configured to cluster the instances of the target symbol. The index tables are used to identify symbol positions in the reel strips at which to swap in the target symbol instances. After the target symbol instances are swapped in at the identified symbol positions, spin results are determined for one or more spins of the reels using the reel strips. Using index tables is a computationally-effective way to swap target symbol instances in to symbol positions in reel strips, while also clustering the target symbol instances. This provides another useful tool for managing volatility for a target level of RTP in an electronic gaming device.</p><p id="p-0278" num="0276">In the example implementation described in section IV, index tables used to swap in instances of a highest-value symbol (white buffalo) during a free games feature. For a count of instances of the highest-value symbol, the index tables indicate symbol positions in one or more reel strips at which the previous symbol instances are replaced. The instances of the highest-value symbol are then swapped in to the reel strips before continuing with free games (spins) of the free games feature, with the swapped-in target symbol instances remaining in the reel strips for the duration of the free games feature. This is one possible use of index tables for reel symbol replacement, but reel symbol replacement with index tables as described herein can be used in many other ways. For example, the index tables can be used when replacing symbol instances for another type of supplemental feature in an electronic gaming device, for a base reel game in an electronic gaming device, or for some other process. Reel symbol replacement that uses the index tables can be triggered when a defined event occurs, or reel symbol replacement that uses the index tables can be performed by default in a process. The target symbol can be a highest-value symbol or some other type of symbol.</p><p id="p-0279" num="0277">A. Examples of Index Tables.</p><p id="p-0280" num="0278"><figref idref="DRAWINGS">FIG. <b>13</b></figref> shows a reel strip before and after operations to swap in instances of a target symbol at symbol positions of the reel strip. In <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the reel strip <b>1310</b> includes instances of a variety of symbols. Instances of the target symbol (shown as a shaded star) are swapped in at positions indicated in an index table. The modified reel strip <b>1312</b> includes clusters of swapped-in target symbol instances. In contrast, if target symbol instances were added to reel strips using RNG events to determine symbol positions, the target symbol instances would likely not be clustered to the same extent.</p><p id="p-0281" num="0279"><figref idref="DRAWINGS">FIG. <b>14</b></figref> shows example index tables <b>1400</b> that indicate symbol positions of reel strips at which to swap in target symbol instances. The index tables <b>1400</b> are per-reel index tables, which are indexed by a per-reel counter. For each reel strip, a corresponding index table includes symbol positions <b>1410</b> at which target symbol instances may be swapped in. During reel symbol replacement, for a reel strip, target symbol instances are swapped in at symbol positions successively listed in the index table for the reel strip, starting at index 0 and continuing for successive indexes (according to the per-reel counter). For example, for reel strip 0, twelve instances of the target symbol are swapped in a symbol positions 3, 4, 5, 11, 12, 13, 14, 15, 19, 20, 21, and 22.</p><p id="p-0282" num="0280">The index tables for the reel strips can have the same length. Or, the index tables for the reel strips can have different lengths. In any case, the total count of symbol positions in the index tables is equal to the maximum count of target symbol instances that can be added to the reel strips.</p><p id="p-0283" num="0281">In some implementations, target symbol instances are added to reel strips by completely traversing the index table for a given reel strip, from index 0 to the last index for the index table, then continuing by traversing the index table for a next reel strip, and so on, until reaching the count of target symbol instances to add. For example, suppose each index table includes 50 symbol positions. To add 70 instances of the target symbol, 50 target symbol instances are swapped in to a first reel strip at the 50 symbol positions indicated in the index table for the first reel strip, and 20 target symbol instances are swapped in to a second reel strip at symbol positions indicated by the first 20 symbol positions in the index table for the second reel strip.</p><p id="p-0284" num="0282">Alternatively, target symbol instances can be added to reel strips in amounts indicated for the reel strips, respectively. A separate table can list the counts of target symbol instances to be added for the respective reel strips. The separate table can implicitly indicate the order of reel strips to which target symbol instances are added. For a given reel strip, target symbol instances for that reel strip are swapped in at symbol positions successively listed in the index table for the given reel strip, starting at index 0 and continuing for successive indexes in the index table, up to the count for the reel strip. For example, to add 80 instances of the target symbol apportioned between five reels as 30 instances, 20 instances, 10 instances, 10 instances, and 10 instances, 30 target symbol instances are swapped in to a first reel strip at symbol positions indicated by the first 30 symbol positions in the index table for the first reel strip, 20 target symbol instances are swapped in to a second reel strip at symbol positions indicated by the first 20 symbol positions in the index table for the second reel strip, and so on. When the count of target symbol instances is determined (e.g., with one or more spins of a reel in a re-spin series), the counts of target symbol instances to be added for the respective reel strips can be incremented. For example, if 20 target symbol instances are added, those 20 target symbol instances can be allocated evenly between five reel strips in the separate table. Or, the added target symbol instances can be allocated unevenly in the separate table, according to a distribution indicated in a table or data structure (e.g., a data structure for a linked reel strip mechanism, a lookup table with entries for symbol positions of a reel strip, or another table).</p><p id="p-0285" num="0283"><figref idref="DRAWINGS">FIG. <b>15</b></figref> shows another example index table <b>1500</b> that indicates symbol positions of reel strips at which to swap in instances of a target symbol. The index table <b>1500</b> is a combined 2D index table, which combines the index tables <b>1400</b> shown in <figref idref="DRAWINGS">FIG. <b>14</b></figref> into a single index table. The single index table <b>1500</b> is indexed by reel strip identifier and per-reel counter. The symbol positions <b>1510</b> in the index table <b>1500</b> of <figref idref="DRAWINGS">FIG. <b>15</b></figref> are the same as the symbol positions <b>1410</b> in the index tables of <figref idref="DRAWINGS">FIG. <b>14</b></figref>. The index table <b>1500</b> can be traversed in different orders to identify symbol positions at which to add target symbol instances, as described above with reference to <figref idref="DRAWINGS">FIG. <b>14</b></figref>.</p><p id="p-0286" num="0284"><figref idref="DRAWINGS">FIG. <b>16</b></figref> shows another example index table <b>1600</b> that indicates symbol positions of reel strips at which to swap in instances of a target symbol. The index table <b>1600</b> is a combined 1D index table, which is indexed by an overall counter. The index table <b>1600</b> includes the symbol positions <b>1410</b> from the index tables shown in <figref idref="DRAWINGS">FIG. <b>14</b></figref> as a one-dimensional series of symbol positions <b>1620</b> in the index table <b>1600</b>. For each index, the index table <b>1600</b> also lists a reel strip identifier for a reel strip that includes the symbol position for the index. The index table <b>1600</b> can be traversed from index 0 to the last index to add target symbol instances, one reel strip at a time, finishing swapping in target symbol instances for a given reel strip before continuing with the next reel strip.</p><p id="p-0287" num="0285">In the example implementation described in section IV, an index table for each reel strip indicates symbol positions at which to swap in target symbol instances for that reel strip. The index tables have equal length. For example, if the maximum count of target symbol instances that can be added to the reel strips is 250, the length of each of five index tables is 50. Alternatively, the index tables can have different lengths whose total length is equal to the maximum count of target symbol instances that can be added to the reel strips (e.g., lengths of 38, 48, 48, 48, 68 for index tables for five reel strips).</p><p id="p-0288" num="0286">In the example implementation, target symbol instances replace instances of low-value symbols. Instances of high-value symbols (such as a buffalo symbol, dynamic symbol, or wild symbol) are not replaced by target symbol instances. That said, the target symbol instances are clustered in the reel strips after replacement. Alternatively, target symbol instances can replace instances for any type of symbol.</p><p id="p-0289" num="0287">In the example implementation described in section IV, target symbol instances are added successively at symbol positions listed in the index table for a given reel strip. Target symbol instances can be swapped in at all symbol positions in the index table for a given reel strip, before continuing with the next reel strip. Or, target symbol instances can be swapped in to the reel strips by counts indicated for the respective reel strips. A separate table can include the counts of target symbol instances to add for the respective reel strips, and implicitly indicate the order of reel strips to which target symbol instances are added.</p><p id="p-0290" num="0288">B. Example Techniques for Low-Complexity Reel Symbol Replacement.</p><p id="p-0291" num="0289"><figref idref="DRAWINGS">FIG. <b>17</b><i>a </i></figref>shows an example technique <b>1700</b> for controlling the UI of an electronic gaming device, focusing on backend operations, when swapping in instances of a target symbol at symbol positions of a reel strip. Operations of the example technique <b>1700</b> shown in <figref idref="DRAWINGS">FIG. <b>17</b><i>a </i></figref>can be performed, for example, in a game processing backend system <b>314</b> explained with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. <figref idref="DRAWINGS">FIGS. <b>17</b><i>b</i>-<b>17</b><i>d </i></figref>show example backend operations when swapping in target symbol instances at symbol positions of a reel strip. The game processing backend system can be implemented using memory and one or more processors that are part of the electronic gaming device and/or part of a gaming system located remotely from the electronic gaming device. Depending on implementation, the backend system can be implemented by software executable on a CPU, by software controlling special-purpose hardware (e.g., a GPU or other graphics hardware for video acceleration), and/or by special-purpose hardware (e.g., in an ASIC), to process game play instructions in accordance with game play rules, determine outcomes in accordance with game play rules, and/or generate outputs.</p><p id="p-0292" num="0290">In the technique <b>1700</b> shown in <figref idref="DRAWINGS">FIG. <b>17</b><i>a</i></figref>, low-complexity reel symbol replacement is performed for a process that uses a set of reels. The set of reels includes n reels, where n depends on implementation. For example, n is 3, 4, or 5. Each of the reels has a reel strip. In some implementations, the process is a supplemental feature such as a free games feature. Alternatively, the process is a base reel game or another type of process of an electronic gaming device. In some implementations, the electronic gaming device is an EGM with video reels. Alternatively, the electronic gaming device is another type of electronic gaming device.</p><p id="p-0293" num="0291">With reference to <figref idref="DRAWINGS">FIG. <b>17</b><i>a</i></figref>, at symbol positions of at least one of the reel strips, the backend system swaps in instances of a target symbol. In doing so, the backend system uses one or more index tables to identify the symbol positions at which to swap in the target symbol instances. The count of target symbol instances to be added for the reels can depend at least in part on RNG events (e.g., as described in section VI). For example, the backend system can determine, as an outcome of one or more iterations of a re-spin series for a ribbon wheel, the count of instances of the target symbol to be added for the reels, depending at least in part on RNG events. Alternatively, the count of target symbol instances to be added for the reels can be determined in another manner. The target symbol instances can be swapped in sequentially for entries in the index table(s), as described above, one reel strip after another, or for multiple reel strips before any given reel strip finishes. In some implementations, the swapped-in target symbol instances replace only instances of low-value symbols in the at least one of the reel strips. In particular, when the reel strips include instances of a dynamic symbol, none of the instances of the dynamic symbol is replaced by the target symbol instances when swapping in the target symbol instances. Alternatively, the swapped-in target symbol instances can replace instances of any type of symbols in the reel strips.</p><p id="p-0294" num="0292">The target symbol can be pre-defined. For example, the target symbol is a highest-value symbol (e.g., a white buffalo, in the example implementation). Alternatively, the target symbol can be dynamically determined. For example, the backend system selects, using an RNG event, one of multiple possible symbol types for the target symbol. The multiple possible symbol types for the target symbol can include a highest-value symbol, a wild symbol, and/or another symbol type.</p><p id="p-0295" num="0293">In general, the index table(s) are configured to cluster the instances of the target symbol according to a deterministic approach, without using RNG events to identify the symbol positions at which to swap in the instances of the target symbol. Each of the index table(s) has entries that include at least some of the symbol positions. The index tables can be organized in any of various ways.</p><p id="p-0296" num="0294">For example, the index table(s) can consist of one index table per reel, with the per-reel index table being indexed along a dimension for a per-reel counter. In this case, each entry of the per-reel index table includes one of the symbol positions of the reel strip for the reel. <figref idref="DRAWINGS">FIG. <b>14</b></figref> shows examples of such index tables. The length can be identical for each of the index table(s), or the length can be different for at least some of the index table(s).</p><p id="p-0297" num="0295">As another example, the index table(s) can consist of a single index table for all of the reels, with the single index table being indexed along a first dimension for a reel strip identifier and being indexed along a second dimension for a per-reel counter. In this case, each entry of the single index table includes one of the symbol positions of a reel strip, which is indicated by the reel strip identifier that indexes the entry. <figref idref="DRAWINGS">FIG. <b>15</b></figref> shows an example of such an index table.</p><p id="p-0298" num="0296">As another example, the index table(s) can consist of a single index table for all of the reels, with the single index table being indexed along a dimension for an overall counter. In this case, each entry of the single index table includes a reel strip identifier and one of the symbol positions of a reel strip, which is indicated by the reel strip identifier. <figref idref="DRAWINGS">FIG. <b>16</b></figref> shows an example of such an index table.</p><p id="p-0299" num="0297">Alternatively, the index table(s) are organized in some other way.</p><p id="p-0300" num="0298">In some implementations, the swapping in the target symbol instances also uses a reel strip table. The reel strip table can include count values for target symbol instances to be added for the reels, respectively. For example, given a total count of target symbol instances to be added for the reels, the reel strip table includes count values that allocate the target symbol instances between the respective reels. In this case, the reel strip table implicitly indicates the order for adding the target symbol instances to the reel strips. Alternatively, the reel strip table can include reel strip identifiers for successive target symbol instances to be added for the reels. In this case, the reel strip table explicitly indicates the order for adding the target symbol instances to the reel strips.</p><p id="p-0301" num="0299"><figref idref="DRAWINGS">FIG. <b>17</b><i>b </i></figref>shows first example backend operations <b>1701</b> that can be performed when swapping in target symbol instances at symbol positions of reel strips. In the first example backend operations <b>1701</b>, a total count of target symbol instances to be added for a set of reels is provided, and target symbol instances are swapped in at symbol positions of a reel strip for a given reel, up to a maximum count for the given reel, before continuing with the next reel. At stage <b>1711</b>, the backend system determines the total count of target symbol instances to be added for a set of reels. The backend system sets (at stage <b>1715</b>) an overall counter to zero. At stage <b>1721</b>, the backend system identifies a next reel to process as a current reel (given reel). The backend system determines (at stage <b>1731</b>) a maximum count of target symbol instances that can be added for the given reel and sets (at stage <b>1735</b>) a per-reel counter to zero. At stage <b>1741</b>, the backend system uses one of the index table(s) to identify a symbol position of the reel strip for the given reel at which to swap in a target symbol instance. The backend system swaps in (at stage <b>1751</b>) the target symbol instance at the identify symbol position of the reel strip for the given reel. At stage <b>1761</b>, the backend system increments the per-reel counter and the overall counter. If the overall counter has reached the total count of target symbol instances to be added (&#x201c;yes&#x201d; path at stage <b>1771</b>), the last target symbol instance has been added, and the backend operations <b>1701</b> end. Otherwise, the overall counter being less than the total count of target symbol instances to be added (&#x201c;no&#x201d; path at stage <b>1771</b>), the backend system checks (at stage <b>1775</b>) whether the reel counter has reached the maximum count of target symbol instances that can be added for the given reel. If not (&#x201c;no&#x201d; path at stage <b>1775</b>), the backend system continues by identifying the next symbol position of the reel strip for the given reel at which to swap in a target symbol instance. Otherwise, the reel counter having reached the maximum count of target symbol instances that can be added for the given reel (&#x201c;yes&#x201d; path at stage <b>1775</b>), the backend system continues by identifying (at stage <b>1721</b>) the next reel to process as a current reel (given reel).</p><p id="p-0302" num="0300"><figref idref="DRAWINGS">FIG. <b>17</b><i>c </i></figref>shows second example backend operations <b>1702</b> that can be performed when swapping in target symbol instances at symbol positions of reel strips. In the second example backend operations <b>1702</b>, actual counts of target symbol instances to be added for respective reels are provided, and target symbol instances are swapped in at symbol positions of a reel strip for a given reel, up to the actual count for the given reel, before continuing with the next reel. At stage <b>1722</b>, the backend system identifies a next reel to process as a current reel (given reel). The backend system determines (at stage <b>1732</b>) the actual count of target symbol instances to be added for the given reel and sets (at stage <b>1735</b>) a per-reel counter to zero. At stage <b>1741</b>, the backend system uses one of the index table(s) to identify a symbol position of the reel strip for the given reel at which to swap in a target symbol instance. The backend system swaps in (at stage <b>1751</b>) the target symbol instance at the identify symbol position of the reel strip for the given reel. At stage <b>1762</b>, the backend system increments the per-reel counter. The backend system checks (at stage <b>1772</b>) whether the reel counter has reached the actual count of target symbol instances to be added for the given reel. If not (&#x201c;no&#x201d; path at stage <b>1772</b>), the backend system continues by identifying the next symbol position of the reel strip for the given reel at which to swap in a target symbol instance. Otherwise, the reel counter having reached the actual count of target symbol instances to be added for the given reel (&#x201c;yes&#x201d; path at stage <b>1772</b>), the backend system continues by checking (at stage <b>1778</b>) whether the last reel has been processed. If so, the backend operations <b>1702</b> end. Otherwise, the backend system continues by identifying (at stage <b>1722</b>) the next reel to process as a current reel (given reel).</p><p id="p-0303" num="0301"><figref idref="DRAWINGS">FIG. <b>17</b><i>d </i></figref>shows third example backend operations <b>1703</b> that can be performed when swapping in target symbol instances at symbol positions of reel strips. In the third example backend operations <b>1703</b>, a total count of target symbol instances to be added for a set of reels is provided, and target symbol instances are swapped in at symbol positions of a reel strip for a given reel identified using an overall counter. At stage <b>1711</b>, the backend system determines the total count of target symbol instances to be added for a set of reels. The backend system sets (at stage <b>1715</b>) an overall counter to zero. At stage <b>1723</b>, the backend system identifies one of the reels using the overall counter (e.g., using the overall counter as an index for an index table as shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref>, to identify a reel strip identifier for the reel). At stage <b>1743</b>, the backend system uses one of the index table(s) to identify a symbol position of the reel strip for the identified reel at which to swap in a target symbol instance. The backend system swaps in (at stage <b>1753</b>) the target symbol instance at the identify symbol position of the reel strip for the identified reel. At stage <b>1763</b>, the backend system increments the overall counter. If the overall counter has reached the total count of target symbol instances to be added (&#x201c;yes&#x201d; path at stage <b>1771</b>), the last target symbol instance has been added, and the backend operations <b>1703</b> end. Otherwise, the overall counter being less than the total count of target symbol instances to be added (&#x201c;no&#x201d; path at stage <b>1771</b>), the backend system continues by identifying (at stage <b>1723</b>) one of the reels using the overall counter.</p><p id="p-0304" num="0302">Alternatively, backend operations can be performed in some other way when swapping in target symbol instances at symbol positions of reel strips.</p><p id="p-0305" num="0303">With reference to <figref idref="DRAWINGS">FIG. <b>17</b><i>a</i></figref>, at stage <b>1790</b>, after swapping in the instance of the target symbol, the backend system determines spin results for one or more spins of the reels, respectively, using the reel strips. For example, for each reel of the set of reels, the backend system generates a random number using an RNG and performs a lookup operation for the random number in a lookup table. The lookup table includes entries that indicate different symbol positions of the reel strip for the reel. In this way, the backend system determines one of the different symbol positions at which to stop the reel strip for the reel. After determining the spin results, the backend system can determine an outcome of the process based at least in part on the spin results (e.g., using all-ways evaluation of different possible paths through the reel area).</p><p id="p-0306" num="0304">C. Examples of Integration of Low-Complexity Reel Symbol Replacement with Clustering into Electronic Gaming Devices.</p><p id="p-0307" num="0305">Innovations described herein can be implemented in a gaming server <b>102</b> and/or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> described with reference to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. Thus, a gaming server <b>102</b> or gaming device <b>104</b>A, <b>104</b>B, <b>104</b>C, <b>104</b>X, <b>200</b> is an example of an electronic gaming device as described in section VII.</p><p id="p-0308" num="0306">For example, for the electronic gaming device, a game controller such as a game controller <b>202</b> described with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref> can perform operations for reel symbol replacement using one or more index tables. In some implementations, the game controller <b>202</b> performs backend operations as well as frontend UI operations. With respect to backend operations, the game controller <b>202</b> can use the index table(s) to identify symbol positions of reel strips at which to swap in target symbol instances. Further, the game controller <b>202</b> can determine spin results for one or more spins that use the reel strips after symbol replacement, and determine outcomes associated with the spin results.</p><p id="p-0309" num="0307">Innovations described in section VII can be implemented in a game processing pipeline that follows the example game processing architecture <b>300</b> described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>. As described with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, RNG conversion engine <b>320</b> utilizes one or more lookup tables <b>322</b>A-<b>322</b>N. In the context of the innovations described herein, for example, one or more of the lookup tables <b>322</b>A-<b>322</b>N can be used to determine spin results for one or more spins that use reel strips after symbol replacement, and/or to determine other results. Different lookup tables can be used for different reel strips.</p><p id="p-0310" num="0308">In general, the example game processing architecture <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be used to process game play instructions and generate outcomes. In some implementations, the game processing architecture <b>300</b> implements a game processing pipeline for a process (e.g., a free games feature or other supplemental feature). The backend system <b>314</b> loads one or more index tables for reel symbol replacement. Using the index table(s), the backend system <b>314</b> identifies symbol positions of reel strips at which to swap in target symbol instances. The backend system <b>314</b> then swaps in target symbol instances at the identified symbol positions of the reel strips. Using a gaming RNG <b>318</b>, the RNG engine <b>316</b> generates one or more random numbers, which are passed to the RNG conversion engine <b>320</b>. The RNG conversion engine <b>320</b>, using one or more of the random number(s) and one or more of the lookup tables <b>322</b>A-<b>322</b>N, determines symbol positions at which to stop reel strips for spins of the reel strips, respectively, and determines outcomes associated with the symbol positions, respectively. The backend system <b>314</b> returns generated results (indicators of the outcomes) to a bonus game play UI <b>308</b> of the UI system <b>302</b>, which can, among other operations, cause display of the reel strips within the reel area, and then display indicators of the outcomes associated with the spin results.</p><p id="p-0311" num="0309">In general, the generated results returned by the backend system <b>314</b> can include game-related information (such as reel strip identifiers, outcomes) as well as animation effects not related to game parameters. Alternatively, the game play UI <b>304</b> can make one or more separate RNG calls to the backend system <b>314</b> to determine animation effects, as described in section V.</p><p id="p-0312" num="0310">D. Technical Advantages of Low-Complexity Reel Symbol Replacement with Clustering.</p><p id="p-0313" num="0311">Approaches described herein address the technical problem of controlling volatility for a target level of RTP in an electronic gaming device. The approaches provide computationally-effective ways to achieve a desired volatility of a supplemental feature without significantly deviating from a designated level of RTP for the supplemental feature.</p><p id="p-0314" num="0312">In particular, in some implementations, index tables are used to swap target symbol instances in to symbol positions in reel strips, while also clustering the target symbol instances. In terms of technical effects, using index tables to identify symbol positions at which to swap in target symbol instances has various benefits. For example, using index tables allows a designer to set clusters of target symbol instances in a reel strip (as opposed to having the target symbol instances randomly distributed in the reel strips). Because the clusters of target symbol instances tend to lead to higher awards (e.g., for all-ways evaluation), the index tables provide a way for the designer to increase volatility for a designated level of RTP, which can enhance the user experience. Similarly, using index tables can reduce the number of spins needed to reach a certain game outcome (e.g., clusters of the target symbol), again providing a way for the designer to increase volatility for a designated level of RTP. As another example, using index tables to cluster target symbol instances, which are retained in reel strips throughout a supplemental feature, enables a supplemental feature to payout higher awards the longer the player remains in the feature. Again, this provides a way to increase volatility for a designated level of RTP, while enhancing the user experience. As another example, using index tables to identify symbol positions at which to swap in target symbol instances (as opposed to adding target symbol instances by increasing the length of a reel strip), allows the target symbol instances to be added without affecting the probability of events dependent on other symbols that remain in the reels. For example, trigger conditions that depend on combinations of scatter symbols (e.g., coin symbols) are not affected when target symbol instances replace instances of low-value symbols, whereas adding target symbol instances by increasing the lengths of a reel strip could decrease the probabilities of occurrence for the combinations of scatter symbols. This provides a non-disruptive way to increase volatility for a designated level of RTP. Using index tables to identify symbol positions at which to add target symbol instances provides flexibility to add a variable count of target symbol instances. In contrast, if entire reel strips were replaced, the number of reel strips to account for different counts and placements of target symbol instances could quickly become infeasible. Using index tables for reel symbol replacement, game play can be kept fair and consistent with regulations while also enabling variation of volatility for the designated level of RTP. These embodiments are thus not merely new game rules or new display patterns.</p><heading id="h-0020" level="1">VIII. OTHER FEATURES OF ELECTRONIC GAMING DEVICES</heading><p id="p-0315" num="0313">A typical electronic gaming device is a specially-configured computer system, and not merely a general-purpose computer. For example, one difference between a typical electronic gaming device and common processor-based computer system is that the electronic gaming device is designed to be a state-based system. In a state-based system, the system stores and maintains its current state in non-volatile memory, which can be implemented using battery-backed RAM, flash memory, a solid-state drive, or other persistent memory. Different functions of a game (e.g., bet, play, result, points in the graphical presentation, etc.) may be defined as a state. When a game moves from one state to another, data regarding the game state is stored in a custom non-volatile memory subsystem. In some cases, the gaming device does not advance from a current state to a subsequent state until information that allows the current state to be reconstructed is stored. In the event of a power failure or other malfunction, the gaming device will return to its current state when the power is restored by recovering state information from non-volatile memory. The restored state may include metering information and graphical information that was displayed on the gaming device in the state prior to the malfunction. For instance, if a player was shown an award for a game of chance and, before the award could be provided to the player, the power failed, the gaming device, upon the restoration of power, would return to the state where the award is indicated. More generally, the gaming device records, in non-volatile memory, the values of game parameters assigned during play, such as variables determined by an RNG or internal counters. (A game parameter, in general, can be one or more variables whose values govern play at the gaming device and depend on a random selection process.) The value of a game parameter can be recorded periodically, in response to some event such as user input, or whenever the value of the game parameter changes. This way, the gaming device can recover its state in case of a power failure or &#x201c;tilt&#x201d; event, allowing the gaming device to reconstruct events that have taken place before the power failure or &#x201c;tilt&#x201d; event. This requirement affects the software and hardware design on a gaming device. Game history information regarding previous games played, such as an amount wagered, the outcome of the game and so forth, may also be stored in a non-volatile memory device.</p><p id="p-0316" num="0314">In the context of the innovations described herein, for example, a game controller <b>202</b> can save information about mode for a base reel game (special mode or regular mode), the reel strips in use, the reel area in use, and symbol positions at which to stop reel strips for reels in non-volatile memory at various stages. The non-volatile memory can also store other state information, such as a current bet amount, an amount of credits remaining, and/or a win amount for a base reel game, bonus reel game, and/or other supplemental feature. More generally, non-volatile memory can store state information such as positions of the respective reels, in addition to storing information that indicates the configuration of reel strips of the reels. After finishing a supplemental feature or a base reel game, the game controller <b>202</b> can store information in non-volatile memory that indicates an outcome (e.g., award amount) or status.</p><heading id="h-0021" level="1">IX. ALTERNATIVES AND VARIATIONS</heading><p id="p-0317" num="0315">Numerous embodiments are described in this disclosure, and are presented for illustrative purposes only. The described embodiments are not, and are not intended to be, limiting in any sense. The present disclosure is widely applicable to numerous embodiments, as is readily apparent from the disclosure. One of ordinary skill in the art will recognize that the innovations described herein may be practiced with various modifications and alterations, such as structural, logical, software, and electrical modifications. Although particular features of the innovations described herein may be described with reference to one or more particular embodiments and/or drawings, it should be understood that such features are not limited to usage in the one or more particular embodiments or drawings with reference to which they are described, unless expressly specified otherwise.</p><p id="p-0318" num="0316">The present disclosure is neither a literal description of all embodiments nor a listing of features of the innovations described herein that must be present in all embodiments.</p><p id="p-0319" num="0317">The Title (set forth at the beginning of the first page of this disclosure) is not to be taken as limiting in any way as the scope of the disclosed embodiments. Headings of sections provided in this disclosure are for convenience only, and are not to be taken as limiting the disclosure in any way.</p><p id="p-0320" num="0318">When an ordinal number (such as &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third&#x201d; and so on) is used as an adjective before a term, that ordinal number is used (unless expressly specified otherwise) merely to indicate a particular feature, such as to distinguish that particular feature from another feature that is described by the same term or by a similar term. For example, a &#x201c;first widget&#x201d; may be so named merely to distinguish it from, e.g., a &#x201c;second widget.&#x201d; Thus, the mere usage of the ordinal numbers &#x201c;first&#x201d; and &#x201c;second&#x201d; before the term &#x201c;widget&#x201d; does not indicate any other relationship between the two widgets, and likewise does not indicate any other characteristics of either or both widgets. For example, the mere usage of the ordinal numbers &#x201c;first&#x201d; and &#x201c;second&#x201d; before the term &#x201c;widget&#x201d; (1) does not indicate that either widget comes before or after any other in order or location; (2) does not indicate that either widget occurs or acts before or after any other in time; and (3) does not indicate that either widget ranks above or below any other, as in importance or quality. In addition, the mere usage of ordinal numbers does not define a numerical limit to the features identified with the ordinal numbers. For example, the mere usage of the ordinal numbers &#x201c;first&#x201d; and &#x201c;second&#x201d; before the term &#x201c;widget&#x201d; does not indicate that there must be no more than two widgets.</p><p id="p-0321" num="0319">When introducing elements of aspects of the present disclosure or embodiments thereof, the articles &#x201c;a,&#x201d; &#x201c;an,&#x201d; &#x201c;the,&#x201d; and &#x201c;said&#x201d; are intended to mean that there are one or more of the elements. The terms &#x201c;comprising,&#x201d; including,&#x201d; and &#x201c;having&#x201d; are intended to be inclusive and mean that there may be additional elements other than the listed elements.</p><p id="p-0322" num="0320">When a single device, component, structure, or article is described herein, more than one device, component, structure or article (whether or not they cooperate) may alternatively be used in place of the single device, component or article that is described. Accordingly, the functionality that is described as being possessed by a device may alternatively be possessed by more than one device, component or article (whether or not they cooperate).</p><p id="p-0323" num="0321">Similarly, where more than one device, component, structure, or article is described herein (whether or not they cooperate), a single device, component, structure, or article may alternatively be used in place of the more than one device, component, structure, or article that is described. For example, a plurality of computer-based devices may be substituted with a single computer-based device. Accordingly, the various functionality that is described as being possessed by more than one device, component, structure, or article may alternatively be possessed by a single device, component, structure, or article.</p><p id="p-0324" num="0322">The functionality and/or the features of a single device that is described may be alternatively embodied by one or more other devices that are described but are not explicitly described as having such functionality and/or features. Thus, other embodiments need not include the described device itself, but rather can include the one or more other devices which would, in those other embodiments, have such functionality/features.</p><p id="p-0325" num="0323">Further, the systems and methods described herein are not limited to the specific embodiments described herein but, rather, operations of the methods and/or components of the system and/or apparatus may be utilized independently and separately from other operations and/or components described herein. Further, the described operations and/or components may also be defined in, or used in combination with, other systems, methods, and/or apparatus, and are not limited to practice with only the systems, methods, and storage media as described herein.</p><p id="p-0326" num="0324">Devices that are in communication with each other need not be in continuous communication with each other, unless expressly specified otherwise. On the contrary, such devices need only transmit to each other as necessary or desirable, and may actually refrain from exchanging data most of the time. For example, a machine in communication with another machine via the Internet may not transmit data to the other machine for weeks at a time. In addition, devices that are in communication with each other may communicate directly or indirectly through one or more intermediaries.</p><p id="p-0327" num="0325">A description of an embodiment with several components or features does not imply that all or even any of such components and/or features are required. On the contrary, a variety of optional components are described to illustrate the wide variety of possible embodiments of the innovations described herein. Unless otherwise specified explicitly, no component and/or feature is essential or required.</p><p id="p-0328" num="0326">Further, although process steps, algorithms or the like may be described in a sequential order, such processes may be configured to work in different orders. In other words, any sequence or order of steps that may be explicitly described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further, some steps may be performed simultaneously despite being described or implied as occurring non-simultaneously (e.g., because one step is described after the other step). Moreover, the illustration of a process by its depiction in a drawing does not imply that the illustrated process is exclusive of other variations and modifications thereto, does not imply that the illustrated process or any of its steps are necessary to the innovations described herein, and does not imply that the illustrated process is preferred.</p><p id="p-0329" num="0327">Although a process may be described as including a plurality of steps, that does not indicate that all or even any of the steps are essential or required. Various other embodiments within the scope of the present disclosure include other processes that omit some or all of the described steps. Unless otherwise specified explicitly, no step is essential or required.</p><p id="p-0330" num="0328">Although a product may be described as including a plurality of components, aspects, qualities, characteristics and/or features, that does not indicate that all of the plurality are essential or required. Various other embodiments within the scope of the present disclosure include other products that omit some or all of the described plurality.</p><p id="p-0331" num="0329">An enumerated list of items (which may or may not be numbered) does not imply that any or all of the items are mutually exclusive, unless expressly specified otherwise. Likewise, an enumerated list of items (which may or may not be numbered) does not imply that any or all of the items are comprehensive of any category, unless expressly specified otherwise.</p><p id="p-0332" num="0330">For the sake of presentation, the detailed description uses terms like &#x201c;determine&#x201d; and &#x201c;select&#x201d; to describe computer operations in a computer system. These terms denote operations performed by a computer, and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation. For example, &#x201c;determining&#x201d; something can be performed in a variety of manners, and therefore the term &#x201c;determining&#x201d; (and like terms) can indicate calculating, computing, deriving, looking up (e.g., in a table, database or data structure), ascertaining, recognizing, and the like.</p><p id="p-0333" num="0331">As used herein, the term &#x201c;send&#x201d; denotes any way of conveying information from one component to another component, and the term &#x201c;receive&#x201d; denotes any way of getting information at one component from another component. The two components can be part of the same computer system or different computer systems. The information can be passed by value (e.g., as a parameter of a message or function call) or passed by reference (e.g., in a buffer). Depending on context, the information can be communicated directly between the two components or be conveyed through one or more intermediate components. As used herein, the term &#x201c;connected&#x201d; denotes an operable communication link between two components, which can be part of the same computer system or different computer systems. The operable communication link can be a wired or wireless network connection, which can be direct or pass through one or more intermediate components (e.g., of a network). Communication among computers and devices may be encrypted to insure privacy and prevent fraud in any of a variety of ways well known in the art.</p><p id="p-0334" num="0332">It will be readily apparent that the various methods and algorithms described herein may be implemented by, e.g., appropriately programmed general-purpose computers and computing devices. Typically a processor (e.g., one or more microprocessors) will receive instructions from a memory or like device, and execute those instructions, thereby performing one or more processes defined by those instructions. Further, programs that implement such methods and algorithms may be stored and transmitted using a variety of media (e.g., computer readable media) in a number of manners. In some embodiments, hard-wired circuitry or custom hardware may be used in place of, or in combination with, software instructions for implementation of the processes of various embodiments. Thus, embodiments are not limited to any specific combination of hardware and software. Accordingly, a description of a process likewise describes at least one apparatus for performing the process, and likewise describes at least one computer-readable medium for performing the process. The apparatus that performs the process can include components and devices (e.g., a processor, input and output devices) appropriate to perform the process. A computer-readable medium can store program elements appropriate to perform the method.</p><p id="p-0335" num="0333">The term &#x201c;computer-readable medium&#x201d; refers to any non-transitory storage or memory that may store computer-executable instructions or other data in a computer system and be read by a processor in the computer system. A computer-readable medium may take many forms, including but not limited to non-volatile storage or memory (such as optical or magnetic disk media, a solid-state drive, a flash drive, PROM, EPROM, and other persistent memory) and volatile memory (such as DRAM). The term &#x201c;computer-readable media&#x201d; excludes signals, waves, and wave forms or other intangible or transitory media that may nevertheless be readable by a computer.</p><p id="p-0336" num="0334">The present disclosure provides, to one of ordinary skill in the art, an enabling description of several embodiments and/or innovations. Some of these embodiments and/or innovations may not be claimed in the present application, but may nevertheless be claimed in one or more continuing applications that claim the benefit of priority of the present application. Applicants may file additional applications to pursue patents for subject matter that has been disclosed and enabled but not claimed in the present application.</p><p id="p-0337" num="0335">The foregoing description discloses only exemplary embodiments of the present disclosure. Modifications of the above disclosed apparatus and methods which fall within the scope of the present disclosure will be readily apparent to those of ordinary skill in the art. For example, although the examples discussed above are illustrated for a gaming market, embodiments of the present disclosure can be implemented for other markets. The gaming system environment of the examples is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the disclosure.</p><p id="p-0338" num="0336">While the invention has been described with respect to the figures, it will be appreciated that many modifications and changes may be made by those skilled in the art without departing from the spirit of the invention. Any variation and derivation from the above description and figures are included in the scope of the present invention as defined by the claims. In view of the many possible embodiments to which the principles of the disclosed invention may be applied, it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather, the scope of the invention is defined by the following claims. We therefore claim as our invention all that comes within the scope and spirit of these claims.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer system comprising one or more processors and memory readable by the one or more processors, the memory having stored thereon computer-executable instructions for causing the one or more processors, when programmed thereby, to perform operations to control a user interface of an electronic gaming device, the operations comprising:<claim-text>in a process that uses a set of reels, each of the reels having a reel strip:</claim-text><claim-text>using one or more index tables to identify symbol positions at which to swap in instances of a target symbol, wherein the symbol positions are identified without using random number generator events;</claim-text><claim-text>swapping in the instances of the target symbol; and<claim-text>after the swapping in the instances of the target symbol, determining spin results for one or more spins of the reels, respectively, using the reel strips.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the swapping in the instances of the target symbol includes, for each of the reels:<claim-text>for each of the instances of the target symbol to be added for the reel:<claim-text>using one of the one or more index tables to identify a symbol position of the reel strip for the reel at which to swap in the target symbol; and</claim-text><claim-text>at the identified symbol position of the reel strip for the reel, swapping in the instance of the target symbol.</claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the operations further comprise:<claim-text>selecting one of multiple possible symbol types for the target symbol, the multiple possible symbol types including a wild symbol and a highest-value symbol.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more index tables consist of one index table per reel, the index table per reel being indexed along a dimension for a per-reel counter.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more index tables consist of a single index table for all of the reels.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one of the reel strips includes instances of a dynamic symbol, and wherein none of the instances of the dynamic symbol is replaced by the instances of the target symbol when performing the swapping in the instances of the target symbol.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the one or more index tables are configured to cluster the instances of the target symbol according to a deterministic approach.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. A non-transitory computer readable medium comprising computer readable code executable by one or more processors to:<claim-text>in a process that uses a set of reels, each of the reels having a reel strip:</claim-text><claim-text>use one or more index tables to identify symbol positions at which to swap in instances of a target symbol, wherein the symbol positions are identified without using random number generator events;</claim-text><claim-text>swap in the instances of the target symbol; and</claim-text><claim-text>after the swapping in the instances of the target symbol, determine spin results for one or more spins of the reels, respectively, using the reel strips.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the swapping in the instances of the target symbol includes, computer readable code to, for each of the reels:<claim-text>for each of the instances of the target symbol to be added for the reel:<claim-text>use one of the one or more index tables to identify a symbol position of the reel strip for the reel at which to swap in the target symbol; and</claim-text><claim-text>at the identified symbol position of the reel strip for the reel, swap in the instance of the target symbol.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising computer readable code to:<claim-text>select one of multiple possible symbol types for the target symbol, the multiple possible symbol types including a wild symbol and a highest-value symbol.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more index tables consist of one index table per reel, the index table per reel being indexed along a dimension for a per-reel counter.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more index tables consist of a single index table for all of the reels.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the at least one of the reel strips includes instances of a dynamic symbol, and wherein none of the instances of the dynamic symbol is replaced by the instances of the target symbol when performing the swapping in the instances of the target symbol.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The non-transitory computer readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the one or more index tables are configured to cluster the instances of the target symbol according to a deterministic approach.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. A method comprising:<claim-text>in a process that uses a set of reels, each of the reels having a reel strip:</claim-text><claim-text>using one or more index tables to identify symbol positions at which to swap in instances of a target symbol, wherein the symbol positions are identified without using random number generator events;</claim-text><claim-text>swapping in the instances of the target symbol; and<claim-text>after the swapping in the instances of the target symbol, determining spin results for one or more spins of the reels, respectively, using the reel strips.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the swapping in the instances of the target symbol includes, for each of the reels:<claim-text>for each of the instances of the target symbol to be added for the reel:<claim-text>using one of the one or more index tables to identify a symbol position of the reel strip for the reel at which to swap in the target symbol; and</claim-text><claim-text>at the identified symbol position of the reel strip for the reel, swapping in the instance of the target symbol.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:<claim-text>selecting one of multiple possible symbol types for the target symbol, the multiple possible symbol types including a wild symbol and a highest-value symbol.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the one or more index tables consist of one index table per reel, the index table per reel being indexed along a dimension for a per-reel counter.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the one or more index tables consist of a single index table for all of the reels.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the at least one of the reel strips includes instances of a dynamic symbol, and wherein none of the instances of the dynamic symbol is replaced by the instances of the target symbol when performing the swapping in the instances of the target symbol.</claim-text></claim></claims></us-patent-application>