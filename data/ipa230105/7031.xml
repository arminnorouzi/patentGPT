<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007032A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007032</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17756258</doc-number><date>20200821</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>CN</country><doc-number>201911149432.8</doc-number><date>20191121</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1425</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20220501</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>9</main-group><subgroup>50</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>1416</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">BLOCKCHAIN-BASED HOST SECURITY MONITORING METHOD AND APPARATUS, MEDIUM AND ELECTRONIC DEVICE</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>BEIJING JINGDONG QIANSHI TECHNOLOGY CO., LTD.</orgname><address><city>Beijing</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KONG</last-name><first-name>Dezhuang</first-name><address><city>Beijing</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>NAN</last-name><first-name>Shihui</first-name><address><city>Beijing</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Yang</first-name><address><city>Beijing</city><country>CN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>BEIJING JINGDONG QIANSHI TECHNOLOGY CO., LTD.</orgname><role>03</role><address><city>Beijing</city><country>CN</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/CN2020/110562</doc-number><date>20200821</date></document-id><us-371c12-date><date>20220520</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present disclosure relates to a blockchain-based host security monitoring method and apparatus, a computer readable medium and an electronic device. The host security monitoring method in the embodiments of the present disclosure comprises: monitoring traffic data of a host in network communication, and determining whether the traffic data is malicious traffic; if the traffic data is malicious traffic, obtaining security state information of the host, and saving the security state information to a security state blockchain; generating an invasion log corresponding to the malicious traffic, and saving the invasion log and the security state information to a log storage blockchain.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="88.98mm" wi="135.72mm" file="US20230007032A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="183.13mm" wi="137.75mm" file="US20230007032A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="207.18mm" wi="148.59mm" file="US20230007032A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="90.85mm" wi="133.43mm" file="US20230007032A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="187.28mm" wi="145.29mm" file="US20230007032A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="182.54mm" wi="142.66mm" file="US20230007032A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="94.74mm" wi="77.89mm" file="US20230007032A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="190.92mm" wi="119.55mm" file="US20230007032A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="197.19mm" wi="153.25mm" file="US20230007032A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="193.46mm" wi="133.43mm" file="US20230007032A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="194.56mm" wi="153.42mm" file="US20230007032A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="174.92mm" wi="163.15mm" file="US20230007032A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCES TO RELATED APPLICATION</heading><p id="p-0002" num="0001">The present application is a 35 U.S.C. 371 national phase application of PCT International Application No. PCT/CN2020/110562 filed on Aug. 21, 2020, which claims the priority of the Chinese patent application filed on Nov. 21, 2019, with the application number of 201911149432.8 and titled by &#x201c;Blockchain-based Host Security Monitoring Method, Apparatus, Medium and Electronic Device&#x201d;, the entire disclosures of both are incorporated herein by reference.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">The present disclosure relates to the field of computer technology, and in particular to a blockchain-based host security monitoring method, a blockchain-based host security monitoring apparatus, a computer readable medium and an electronic device.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">With the continuous development of computer and Internet technology, they are also constantly suffering from cyber attacks. This has varying degrees of impact on their business, assets, image, etc. Network security issues are getting more and more attention. Moreover, in recent years, cyber attacks have shown a state from individual combat to teamwork, from focusing on system vulnerabilities to focusing on business vulnerabilities. Therefore, large enterprise organizations are facing more sophisticated Advanced Persistent Threat (APT).</p><p id="p-0005" num="0004">Discovering attack behaviors, restoring attack paths, determining the scope of attack, and attacking forensics have become the top concerns of enterprises when they are subjected to security attacks. However, in the current largescale organization, the internal network topology of the enterprise is complex, and the security intrusion detection devices are mainly distributed at various network nodes and edges. Although the attack may be found, it is impossible to determine whether the attacker successfully compromised the target host, and whether the attack is successful with the help of concealment channel causing a greater impact. Thus, the network security device has detection blind spots. In addition, attackers may delete log records after compromising the host, which will have a certain impact on the vulnerability investigation. Therefore, how to perform host security monitoring accurately and credibly is a problem that needs to be solved urgently.</p><p id="p-0006" num="0005">It should be noted that the information disclosed in the background art section above is only used to enhance the understanding of the background of the present disclosure, and therefore may include information that does not constitute the prior art known to those of ordinary skill in the art.</p><heading id="h-0004" level="1">SUMMARY</heading><p id="p-0007" num="0006">According to an aspect of the present disclosure, a blockchain-based host security monitoring method is provided. The method includes: monitoring traffic data of a host in a network communication, and determining whether the traffic data is malicious traffic; in response that the traffic data is malicious traffic, obtaining security state information of the host, and saving the security state information into a security state blockchain; and generating an intrusion log corresponding to the malicious traffic, and saving the intrusion log and the security state information into a log storage blockchain.</p><p id="p-0008" num="0007">The present disclosure also discloses a blockchain-based host security monitoring apparatus. The apparatus includes: a traffic data monitoring unit, configured to monitor traffic data of a host in a network communication, and determine whether the traffic data is malicious traffic; an security state saving unit, configured to obtain security state information of the host and save the security state information into the security state blockchain in response that the traffic data is determined to be the malicious traffic; and a log storage unit, configured to generate an intrusion log corresponding to the malicious traffic, and save the intrusion log and the security state information into the log storage blockchain.</p><p id="p-0009" num="0008">The present disclosure also discloses an electronic device, including: one or more processors; and one or more machine-readable media on which instructions are stored. When executed by the one or more processors, the electronic device performs the following steps of: monitoring traffic data of a host in a network communication, and determining whether the traffic data is malicious traffic; in response that the traffic data is malicious traffic, obtaining security state information of the host, and saving the security state information into the security state blockchain; and generating an intrusion log corresponding to the malicious traffic, and saving the intrusion log and the security state information into the log storage blockchain.</p><p id="p-0010" num="0009">The present disclosure also discloses one or more machine-readable media on which instructions are stored. When executed by one or more processors, the processor executes the following steps of monitoring traffic data of a host in a network communication, and determining whether the traffic data is malicious traffic; in response that the traffic data is malicious traffic, obtaining security state information of the host, and saving the security state information into the security state blockchain; and generating a intrusion log of the malicious traffic, and saving the intrusion log and the security state information into the log storage blockchain.</p><p id="p-0011" num="0010">It should be understood that the above general description and the following detailed description are only exemplary and explanatory, and cannot limit the present disclosure.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0012" num="0011">The drawings herein are incorporated into the specification and constitute a part of the specification, show embodiments that conform to the application, and are used together with the specification to explain the principle of the present disclosure. Obviously, the drawings in the following description are only some embodiments of the application. For those of ordinary skill in the art, other embodiments may be obtained based on these drawings without creative work. In the attached drawings:</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically shows a flowchart of steps in a blockchain-based host security monitoring method in some embodiments of the present disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically shows a flowchart of steps for determining attributes of traffic data in some embodiments of the present disclosure.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically shows a flowchart of steps for extracting features from traffic data in some embodiments of the present disclosure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically shows a flowchart of steps for obtaining security state information of a host in some embodiments of the present disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically shows a flowchart of steps for determining security state information of a host in some embodiments of the present disclosure.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically shows a flowchart of steps for storing security state information based on a blockchain in some embodiments of the present disclosure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically shows a flowchart of steps for saving a log based on a blockchain in some embodiments of the present disclosure.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically shows a block diagram of a blockchain-based host security monitoring apparatus in some embodiments of the present disclosure.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically shows a overall architecture of a host security monitoring system provided by an embodiment of the present disclosure.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically shows a schematic diagram of the detection determination principle of a safety detection model.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>11</b></figref> schematically shows a schematic diagram of the blockchain network principle of a log storage module.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically shows a host security monitoring process based on a host security monitoring system.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>13</b></figref> schematically shows a schematic diagram of a program product in an embodiment of the present disclosure.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>14</b></figref> schematically shows a schematic modular diagram of an electronic device in an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0006" level="1">DETAILED DESCRIPTION</heading><p id="p-0027" num="0026">In order to make the above objectives, features and advantages of the present disclosure more obvious and understandable, the present disclosure will be further described in detail below in conjunction with the accompanying drawings and specific embodiments.</p><p id="p-0028" num="0027">In the related technology of the present disclosure, the security state of a host may be monitored in two ways including traffic analysis or local scanning.</p><p id="p-0029" num="0028">The traffic analysis method is to deploy an intrusion detection system on a bypass of the main network, so as to analyze a data packet in the network and match it with the predefined attack success feature. If the data packet matches the feature, it is determined that the target host is invaded and the attack is recorded into a log and an alarm is provided.</p><p id="p-0030" num="0029">The local scanning method is to install the client detection application on the host, and scan the client regularly based on custom rules. When the host is found to have file abnormalities, user abnormalities, log abnormalities, network abnormalities, process abnormalities, etc., an alarm is reported, and the reported logs are stored in the background.</p><p id="p-0031" num="0030">The present disclosure provides a blockchain-based host security monitoring method. <figref idref="DRAWINGS">FIG. <b>1</b></figref> schematically shows a flowchart of steps in a blockchain-based host security monitoring method in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the method mainly includes the following steps S<b>110</b>, S<b>120</b>, and S<b>130</b>.</p><p id="p-0032" num="0031">In step S<b>110</b>, the traffic data of a host in a network communication is monitored, and it is determined whether the traffic data is malicious traffic.</p><p id="p-0033" num="0032">The current host in the security monitoring state may communicate with other hosts on the Internet through a wired communication link or a wireless communication link. This step monitors the traffic data of the current host in the network communication process, and determines through traffic analysis whether the current communication traffic data is malicious traffic with offensive behavior or carrying abnormal files.</p><p id="p-0034" num="0033">In step S<b>120</b>, in response that the traffic data is malicious traffic, the security state information of the host is obtained, and the security state information is saved into the security state blockchain.</p><p id="p-0035" num="0034">According to the determination result in step S<b>110</b>, if the monitored traffic data is determined to be malicious traffic, then the current host is at risk of malicious intrusion. The security state information of the host reflects whether the host is successfully invaded by malicious traffic. If the current host is successfully invaded, files, users, logs, networks, processes and other related contents of the current host may be abnormal. Conversely, if malicious traffic fails to invade the current host, the relevant contents of the current host will be in a normal state. The security state information of the host may be expressed as two security state identifiers of &#x201c;safe&#x201d; and &#x201c;intrusion&#x201d;, where &#x201c;intrusion&#x201d; means that the host is successfully invaded. As one of nodes in the security state blockchain network, the current host may save the security state information onto the security state blockchain. Thus, other nodes in the security state blockchain network may obtain the security state of the current host in a timely and accurate way.</p><p id="p-0036" num="0035">In step S<b>130</b>, an intrusion log corresponding to the malicious traffic is generated, and the intrusion log and the security state information is saved into the log storage blockchain.</p><p id="p-0037" num="0036">For the monitored intrusion behavior of the malicious traffic, logs may be recorded to generate corresponding intrusion logs. The intrusion log and the security state information of the host are saved on the log storage blockchain at the same time, which helps to realize the shared storage of intrusion behaviors and intrusion results. Thus, other nodes in the log storage blockchain network may effectively trace the history record of security monitoring.</p><p id="p-0038" num="0037">In the blockchain-based host security monitoring method provided by some embodiments of the present disclosure, the current security state of the host is quickly and accurately identified, which helps to determine the impact scope of the network attacks on the enterprise. Besides, the host state information is established based on the state machine, which enables to trace the historical security state of the host. Furthermore, the source of intrusion is identified at the host level, which helps to restore the attack path, and improve the emergency response capability of the enterprise. Additionally, the host state identification is separated from the log storage, which helps to ensure the non-repudiation and integrity of the log based on the characteristics such as blockchain decentralization and non-repudiation.</p><p id="p-0039" num="0038">According to an embodiment of the present disclosure, a pre-trained machine learning model may be used to make determinations on attributes of the traffic data. <figref idref="DRAWINGS">FIG. <b>2</b></figref> schematically shows a flowchart of steps for determining attributes of the traffic data in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the determining whether the traffic data is malicious traffic in step S<b>110</b> may include the following steps S<b>210</b> and S<b>220</b>.</p><p id="p-0040" num="0039">In step S<b>210</b>, feature extraction is performed on the traffic data to obtain a traffic feature of the traffic data.</p><p id="p-0041" num="0040">The traffic feature of the traffic data may include a communication data feature related to the communication content and a source host feature related to the source host. The source host is another host that performs data communication with the current host in the network. The source host feature may include current security state information of the source host and historical security state information of the source host. The current security state information and the historical security state information of the source host may be information directly obtained from the security state blockchain.</p><p id="p-0042" num="0041">In step S<b>220</b>, the traffic feature is input into a pre-trained support vector machine model to identify a data type of the traffic data by the support vector machine model. The data type includes normal traffic and malicious traffic.</p><p id="p-0043" num="0042">Support Vector Machine (SVM) is a class of generalized linear classifiers that classify data binary in a supervised learning way, the decision boundary of which is the maximum margin hyperplane that is solved for the learning sample. SVM uses the hinge loss function to calculate the empirical risk and adds a regularization term to the solution system so as optimize the structural risk. It is a sparse and robust classifier. Through the pre-trained support vector machine model, the extracted traffic feature may be analyzed and calculated, and the corresponding traffic data may be classified as normal traffic or malicious traffic according to the analysis and calculation results.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>3</b></figref> schematically shows a flowchart of steps for extracting features from traffic data in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the performing feature extraction on the traffic data to obtain the traffic feature of the traffic data in step S<b>210</b> may include the following steps S<b>310</b>, S<b>320</b>, S<b>330</b>, and S<b>340</b>.</p><p id="p-0045" num="0044">In step S<b>310</b>, the application layer protocol traffic in the traffic data is obtained, and feature extraction is performed on the application layer protocol traffic to obtain the protocol traffic feature of the application layer protocol traffic.</p><p id="p-0046" num="0045">The application layer protocol defines how application processes running on different end systems transfer messages to each other. For example, it may include File Transfer Protocol (FTP), HyperText Transfer Protocol (HTTP), and so on. Through feature extraction of the application layer protocol traffic, various protocol traffic features such as network address, port, protocol type, connection time, data packet length, and data packet content may be obtained.</p><p id="p-0047" num="0046">In step S<b>320</b>, when there is a file object in the application layer protocol traffic, feature extraction is performed on the file object to obtain the file object feature of the file object.</p><p id="p-0048" num="0047">In addition to the related data of the request message and the response message, the application layer protocol traffic may also carry a file object for file transmission. If there is a file object in the monitored application layer protocol traffic, then this step may separate the file object and perform feature extraction thereon, so as to obtain the corresponding file object feature. The file object feature may include, for example, file name, file format, file size, and other features.</p><p id="p-0049" num="0048">In step S<b>330</b>, the file object is running in a sandbox of the host, and the file operation feature related to the host is determined according to the operation result.</p><p id="p-0050" num="0049">Sandbox is a security mechanism that may provide an isolated environment for operating the file object. The sandbox may strictly control the resources that the file object can access during its operation. For example, the sandbox may provide disk and memory space that is reclaimed after use. In the sandbox, network access, access to the real system, and reading of input devices are usually prohibited or strictly restricted, and all changes in the sandbox will not cause any loss to the operation system. In this step, the separated file object is running in the sandbox of the host, which helps to safely and reliably monitor the operation process of the file object, and then determine the file operation feature related to the host according to the operation result of the file object. The file operation feature may include, for example, CPU state, memory state, network egress traffic state, and other features of the host.</p><p id="p-0051" num="0050">In step S<b>340</b>, the traffic feature of the traffic data is determined according to the protocol traffic feature, the file object feature, and the file operation feature.</p><p id="p-0052" num="0051">When there is a file object in the application layer protocol traffic, the protocol traffic feature, the file object feature, and the file operation feature extracted in the above steps may be combined into the traffic feature of the traffic data. If no file object is carried in the application layer protocol traffic, the traffic feature of the corresponding traffic data may be determined directly according to the protocol traffic feature.</p><p id="p-0053" num="0052">If the monitored traffic data is determined to be malicious traffic based on the traffic feature, then the malicious traffic may cause malicious attacks such as intruding the host, and therefore will also have a certain degree of impact on the security state of the host. <figref idref="DRAWINGS">FIG. <b>4</b></figref> schematically shows a flowchart of steps for obtaining security state information of the host in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the obtaining the security state information of the host in step S<b>120</b> may include the following steps S<b>410</b> and S<b>420</b>.</p><p id="p-0054" num="0053">In step S<b>410</b>, the operation state data of the host is obtained.</p><p id="p-0055" num="0054">In step S<b>420</b>, the security state information of the host is determined according to the operation state data and the malicious traffic.</p><p id="p-0056" num="0055">The operation state data of the host is obtained by collecting the local information of the current host. Based on the analysis of the operation state data and the malicious traffic, the security state information of the current host may be determined. <figref idref="DRAWINGS">FIG. <b>5</b></figref> schematically shows a flowchart of steps for determining the security state information of the host in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the determining the security state information of the host according to the operation state data and the malicious traffic in step S<b>420</b> may include the following steps S<b>510</b>, S<b>520</b>, and S<b>530</b>.</p><p id="p-0057" num="0056">In step S<b>510</b>, feature extraction is performed on the operation state data to obtain the state feature of the host.</p><p id="p-0058" num="0057">Through feature extraction of the operation state data, various state data such as CPU usage, memory usage, network traffic size, and root users of the host may be obtained.</p><p id="p-0059" num="0058">In step S<b>520</b>, the traffic feature corresponding to the malicious traffic is determined.</p><p id="p-0060" num="0059">The traffic feature corresponding to the malicious traffic may include various features such as protocol traffic feature, file object feature, and file operation feature obtained by feature extraction in the above embodiments.</p><p id="p-0061" num="0060">In step S<b>530</b>, the state feature and the traffic feature are input into a pre-trained random forest model to obtain the security state information of the host.</p><p id="p-0062" num="0061">The random forest model is a classifier that uses multiple decision trees to train and predict samples. In this step, the random forest model may be used to analyze the state feature and the traffic feature to determine the security state information of the host. Taking the two-class identification as an example, this step may classify the security state information of the host into two types: &#x201c;safe&#x201d; and &#x201c;intrusion&#x201d;.</p><p id="p-0063" num="0062">The use of blockchain technology to save the security state information of the host may be used to share data among multiple nodes in the blockchain network under the premise of ensuring the information accuracy. <figref idref="DRAWINGS">FIG. <b>6</b></figref> schematically shows a flowchart of steps for saving the security state information based on a blockchain in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the saving the security state information into the security state blockchain in step S<b>120</b> may include the following steps S<b>610</b>, S<b>620</b>, S<b>630</b>, S<b>640</b>, and S<b>650</b>.</p><p id="p-0064" num="0063">In step S<b>610</b>, network address and security state information of the host are saved in the block body of the current security state block to be consensus authenticated.</p><p id="p-0065" num="0064">Each security state block that constitutes the security state blockchain includes two data storage areas: a block header and a block body. The block body is used to store all the data recorded in the current security state block. For example, network address and security state information of the host are stored in the block body of the current security state block. The block header is used to store the link information between the current security state block and the previous security state block. Using the data stored in the block header, all the security state blocks may be linked one by one to form a complete security state blockchain.</p><p id="p-0066" num="0065">In step S<b>620</b>, when the block generation condition is met, the block header data of the previous security state block in the security state blockchain is obtained, and the parent block hash value is calculated according to the block header data.</p><p id="p-0067" num="0066">When certain block generation condition is met, this step may obtain the block header data of the previous security state block (that is, the recently generated new security state block) in the security state blockchain network. Based on the block header, the parent block hash value of the current security state block may be calculated. For example, the SHA256 algorithm may be used to perform a hash operation on the block header data of the previous security state block to obtain a hash value, which is used as the parent block hash value of the current security state block. The block generation condition in this step may be that the generation time from the last security state block reaches a time threshold, or the data stored in the block body of the current security state block reaches a data volume threshold. Alternatively, the block generation condition may also be that another arbitrary preset condition for triggering the generation of a new block, which is not specifically limited in an embodiment of the present disclosure.</p><p id="p-0068" num="0067">In step S<b>630</b>, the block body hash value of the current security state block is calculated according to the data stored in the block body of the current security state block.</p><p id="p-0069" num="0068">The block body of the current security state block stores the network address and the security state information of the host formed within a period of time. According to the data stored in the block body, a hash value may be obtained in this step, serving as the block body hash value of the current security state block. Taking hash coding as an example, all the network addresses and security state information in the block body may be stored in the block body in the form of a Merkle Tree. Specifically, the network address and the security state information may be stored in the leaf nodes of the Merkel tree. The network address and the security state information stored in every two adjacent leaf nodes may be combined and then hashed again to get a hash value stored in the child node. Using this way of performing a hash operation layer by layer on the pairwise combination of the hash values stored in the child nodes, a root node hash value may be finally obtained, and the root node hash value may be used as the block body hash value of the current security state block.</p><p id="p-0070" num="0069">In step S<b>640</b>, the parent block hash value, the block body hash value, and the timestamp of the current time are saved in the block header of the current security state block.</p><p id="p-0071" num="0070">After the parent block hash value and the block body hash value are respectively calculated in step S<b>620</b> and step S<b>630</b>, this step may generate a timestamp according to the current time, and the timestamp is used to record the generation time of the current security state block. Then, the parent block hash value, the block body hash value, and the timestamp may be stored together in the block header of the current security state block.</p><p id="p-0072" num="0071">In step S<b>650</b>, the current security state block is broadcasted to the security state blockchain network to perform consensus authentication on the current security state block, and the current security state block is linked to the security state blockchain upon a successful authentication.</p><p id="p-0073" num="0072">After saving the block header data, this step will broadcast the current security state block composed of the block header and the block body to the security state blockchain network. After the consensus authentication is successful, all or part of the blockchain nodes in the security state blockchain network save the current security state block, thus completing the inlinking process of the current security state block in the security state blockchain.</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>7</b></figref> schematically shows a flowchart of steps for saving a log based on a blockchain in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the saving the intrusion log and the security state information in the log storage blockchain in step S<b>130</b> may include the following steps S<b>710</b>, S<b>720</b>, S<b>730</b>, S<b>740</b>, and S<b>750</b>.</p><p id="p-0075" num="0074">In step S<b>710</b>, the network address of the host, the intrusion log, and the security state information are saved in the block body of the current log storage block to be consensus authenticated.</p><p id="p-0076" num="0075">Each log storage block that makes up the log storage blockchain includes two data storage areas: a block header and a block body. The block body is used to store all the data recorded in the current log storage block. For example, the host's address network, the intrusion log, and the security state information are stored in the block body of the current log storage block. The block header is used to store the link information between the current log storage block and the previous log storage block. Using the data stored in the block header, all the log storage blocks may be linked one by one to form a complete log storage blockchain.</p><p id="p-0077" num="0076">In step S<b>720</b>, in response that the block generation condition is met, the block header data of the previous log storage block in the log storage blockchain is obtained, and the parent block hash value is calculated according to the block header data.</p><p id="p-0078" num="0077">When certain block generation condition is met, this step may obtain the block header data of the previous log storage block (that is, the recently generated new log storage block) in the log storage blockchain network. Based on the block header data, the parent block hash value of the current log storage block may be obtained by calculation. For example, the SHA256 algorithm may be used to perform a hash operation on the block header data of the previous log storage block to obtain a hash value, which is used as the parent block hash value of the current log storage block. The block generation condition in this step may be that the generation time from the previous log storage block reaches a time threshold, or the data stored in the block body of the current log storage block reaches a data volume threshold. Alternatively, the block generation condition may be also that another arbitrary preset condition for triggering the generation of a new block, which is not specifically limited in an embodiment of the present disclosure.</p><p id="p-0079" num="0078">In step S<b>730</b>, the block body hash value of the current log storage block is calculated according to the data stored in the block body of the current log storage block.</p><p id="p-0080" num="0079">The block body of the current log storage block stores the network address of the host, the intrusion log, and the security state information formed over a period of time. According to the data stored in the block body, a hash value may be obtained in this step, serving as the block body hash value of the current log storage block. Taking hash coding as an example, all the network addresses, the intrusion logs, and the security state information in the block body may be stored in the block body in the form of a Merkle Tree. Specifically, the network address, the intrusion log, and the security state information may be stored in the leaf nodes of the Merkel tree. The network address, the intrusion log, and the security state information stored in every two adjacent leaf nodes may be combined and hashing again, so as to get a hash value stored in the child node. Using this way of performing a hash operation layer by layer on the pairwise combination of the hash values stored in the child nodes, a root node hash value may be obtained eventually, which may be used as the block body hash value of the current log storage block.</p><p id="p-0081" num="0080">In step S<b>740</b>, the parent block hash value, the block body hash value, and the timestamp of the current time are saved in the block header of the current log storage block.</p><p id="p-0082" num="0081">After the parent block hash value and the block body hash value are respectively calculated in step S<b>720</b> and step S<b>730</b>, this step may generate a timestamp according to the current time, and the timestamp is used to record the generation time of the current log storage block. Then, the parent block hash value, the block body hash value, and the timestamp may be stored together in the block header of the current log storage block.</p><p id="p-0083" num="0082">In step S<b>750</b>, the current log storage block is broadcasted to the log storage blockchain network to perform consensus authentication on the current log storage block, and the current log storage block is linked to the log storage blockchain when the authentication is successful.</p><p id="p-0084" num="0083">After the block header data is saved, this step will broadcast the current log storage block composed of the block header and the block body to the log storage blockchain network. After the consensus authentication is successful, all or some of the blockchain nodes in the log storage blockchain network save the current log storage block, thereby completing the inlinking process of the current log storage block in the log storage blockchain.</p><p id="p-0085" num="0084">It should be noted that although the above exemplary embodiments describe steps of the method in the present disclosure in a specific order, this does not require or imply that these steps must be performed in the specific order, or that all the steps must be performed to achieve the desired result. Additionally or alternatively, some steps may be omitted, multiple steps may be combined into one step for execution, and/or one step may be decomposed into multiple steps for execution, etc.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>8</b></figref> schematically shows a block diagram of a blockchain-based host security monitoring apparatus in some embodiments of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, the host security monitoring apparatus <b>800</b> may mainly include a traffic data monitoring unit <b>810</b>, a security state saving unit <b>820</b>, and a log storage unit <b>830</b>.</p><p id="p-0087" num="0086">The traffic data monitoring unit <b>810</b> is configured to monitor the traffic data of the host in a network communication, and determine whether the traffic data is malicious traffic.</p><p id="p-0088" num="0087">The security state saving unit <b>820</b> is configured to obtain the security state information of the host and save the security state information into the security state blockchain in response that the traffic data is malicious traffic.</p><p id="p-0089" num="0088">The log storage unit <b>830</b> is configured to generate an intrusion log corresponding to the malicious traffic, and save the intrusion log and the security state information into the log storage blockchain.</p><p id="p-0090" num="0089">In some embodiments of the present disclosure, the traffic data monitoring unit <b>810</b> may further include a traffic feature extraction unit and a first model prediction unit.</p><p id="p-0091" num="0090">The traffic feature extraction unit is configured to perform feature extraction on the traffic data to obtain the traffic feature of the traffic data.</p><p id="p-0092" num="0091">The first model prediction unit is configured to input the traffic feature into a pre-trained support vector machine model to identify the data type of the traffic data by the support vector machine model. The data type includes normal traffic and malicious traffic.</p><p id="p-0093" num="0092">In some embodiments of the present disclosure, the traffic feature extraction unit may further include a protocol traffic feature extraction unit, a file object feature extraction unit, a file operation feature extraction unit, and a first traffic feature determination unit.</p><p id="p-0094" num="0093">The protocol traffic feature extraction unit is configured to obtain the application layer protocol traffic in the traffic data, and perform feature extraction on the application layer protocol traffic to obtain the protocol traffic feature of the application layer protocol traffic.</p><p id="p-0095" num="0094">The file object feature extraction unit is configured to perform feature extraction on a file object when the file object exists in the application layer protocol traffic, so as to obtain the file object feature of the file object.</p><p id="p-0096" num="0095">The file operation feature extraction unit is configured to operate the file object in the sandbox of the host, and determine the file operation feature related to the host according to the operation result.</p><p id="p-0097" num="0096">The first traffic feature determination unit is configured to determine the traffic feature of the traffic data according to the protocol traffic feature, the file object feature, and the file operation feature.</p><p id="p-0098" num="0097">In some embodiments of the present disclosure, the security state saving unit <b>820</b> may include an operation state data obtaining unit and a security state information determination unit.</p><p id="p-0099" num="0098">The operation state data obtaining unit is configured to obtain the operation state data of the host.</p><p id="p-0100" num="0099">The security state information determination unit is configured to determine the security state information of the host according to the operation state data and the malicious traffic.</p><p id="p-0101" num="0100">In some embodiments of the present disclosure, the security state information determination unit may include a state feature extraction unit, a second traffic feature determination unit, and a second model prediction unit.</p><p id="p-0102" num="0101">The state feature extraction unit is configured to perform feature extraction on the operation state data to obtain the state feature of the host.</p><p id="p-0103" num="0102">The second traffic feature determination unit is configured as a traffic feature corresponding to the malicious traffic.</p><p id="p-0104" num="0103">The second model prediction unit is configured to input the state feature and the traffic feature into a pre-trained random forest model to obtain the security state information of the host.</p><p id="p-0105" num="0104">In some embodiments of the present disclosure, the security state saving unit <b>820</b> further includes a first block body saving unit, a first parent block hash value generation unit, a first block body hash value generation unit, a first block hear saving unit, and a first blockchain linking unit.</p><p id="p-0106" num="0105">The first block body saving unit is configured to save the network address and the security state information of the host in the block body of the current security state block to be consensus authenticated.</p><p id="p-0107" num="0106">The first parent block hash value generation unit is configured to, in response that the block generation condition is met, obtain the block header data of the previous security state block in the security state blockchain, and calculate the parent block hash value according to the block header data.</p><p id="p-0108" num="0107">The first block body hash value generation unit is configured to calculate the block body hash value of the current security state block according to the data saved in the block body of the current block.</p><p id="p-0109" num="0108">The first block header saving unit is configured to save the parent block hash value, the block body hash value and the timestamp of the current time in the block header of the current security state block.</p><p id="p-0110" num="0109">The first block linking unit is configured to broadcast the current security state block to the security state blockchain network to perform consensus authentication on the current security state block, and link the current security state block to the security state blockchain when the authentication is successful.</p><p id="p-0111" num="0110">In some embodiments of the present disclosure, the log storage unit <b>830</b> may include a second block body saving unit, a second parent block hash value generation unit, a second block body hash value generation unit, a second block header saving unit, and a second blockchain linking unit.</p><p id="p-0112" num="0111">The second block body saving unit is configured to save the network address of the host, the intrusion log, and the security state information in the block body of the current log storage block to be consensus authenticated.</p><p id="p-0113" num="0112">The second parent block hash value generation unit is configured to, in response that the block generation condition is met, obtain the block header data of the previous log storage block in the log storage blockchain, and calculate the parent block hash value according to the block header data.</p><p id="p-0114" num="0113">The second block body hash value generation unit is configured to calculate the block body hash value of the current log storage block according to the data stored in the block body of the current log storage block.</p><p id="p-0115" num="0114">The second block header saving unit is configured to save the parent block hash value, the block body hash value, and the timestamp of the current time in the block header of the current log storage block.</p><p id="p-0116" num="0115">The second block linking unit is configured to broadcast the current log storage block to the log storage blockchain network to perform consensus authentication on the current log storage block, and link the current log storage block to the log storage blockchain when the authentication is successful.</p><p id="p-0117" num="0116">The specific details of the above-mentioned blockchain-based host security monitoring apparatus have been described in detail in the corresponding blockchain-based host security monitoring method, so it will not be repeated here.</p><p id="p-0118" num="0117">The following describes the details of the blockchain-based host security monitoring method and the blockchain-based host security monitoring apparatus in the above embodiments of the present disclosure in conjunction with a specific application scenario.</p><p id="p-0119" num="0118"><figref idref="DRAWINGS">FIG. <b>9</b></figref> schematically shows the overall architecture of a host security monitoring system provided by an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the host security monitoring system <b>900</b> mainly includes three parts: a security management hub <b>910</b>, a local intrusion detection module <b>920</b>, and a log storage module <b>930</b>.</p><p id="p-0120" num="0119">The security management hub <b>910</b> is mainly responsible for the management and maintenance operations of the local intrusion detection module <b>920</b>, distributing the machine learning detection model optimized by manual training, and in the meanwhile obtaining logs from the log storage module <b>930</b> and displaying the log results.</p><p id="p-0121" num="0120">The local intrusion detection module <b>920</b> is deployed on the operation system of each host under the system monitoring and is the end node of the host security monitoring system. The local intrusion detection module <b>920</b> performs regular scanning and real-time traffic monitoring on the current host, and is responsible for identifying attack behaviors, recording attack logs and timestamps, maintaining host security state identifiers, and calculating hashes of host security state, logs, and timestamp.</p><p id="p-0122" num="0121">The local intrusion detection module <b>920</b> may mainly include four sub-modules: a local information collection module <b>921</b>, a local traffic monitoring module <b>922</b>, an intrusion determination module <b>923</b>, and a host security state identification module <b>924</b>. The host security state includes &#x201c;safe&#x201d; and &#x201c;intrusion&#x201d;, where &#x201c;intrusion&#x201d; refers to a host being successfully invaded.</p><p id="p-0123" num="0122">The local information collection module <b>921</b> is responsible for collecting various state information of the local client.</p><p id="p-0124" num="0123">The local traffic monitoring module <b>922</b> is responsible for real-time monitoring of the communication traffic of the current host.</p><p id="p-0125" num="0124">The intrusion determination module <b>923</b> makes determinations on the results of local information collection and traffic monitoring through the security detection model, so as to make further responses.</p><p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. <b>10</b></figref> schematically shows a schematic diagram of the detection determination principle of the security detection model. As shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref>, the local traffic monitoring module <b>922</b> may obtain the network traffic data set <b>1010</b> by monitoring the communication traffic of the current host, and then perform feature extraction on the application layer protocol traffic in the traffic data to obtain the protocol traffic feature. If the traffic data contains a file, the file is extracted and executed in the sandbox, and the file object feature of the file itself is extracted and the file operation feature after the file is extracted.</p><p id="p-0127" num="0126">The protocol traffic feature may mainly include: source host network address, source host port, destination host network address, destination host port, protocol type, connection time, request packet length, request packet content, response packet length, response packet content, number of first p communication connections being the same as the current data packet, first q security state identifiers of source host, and current security state identifier of source host, where p and q are preset numbers. For example, p may be 50, and q may be 5.</p><p id="p-0128" num="0127">The file object feature and the file operation feature may mainly include: file name, file hash, user execution authority, CPU state, memory state, hard disk read and write state, network exit traffic state, system user change, whether to include daemons, daemons name, shell command execution record, host firewall configuration change.</p><p id="p-0129" num="0128">The traffic feature of the above traffic data may be input to the intrusion determination module <b>923</b>. Then, the support vector machine model <b>1020</b> determines whether the currently monitored traffic data is normal traffic or malicious traffic according to the feature of the traffic data.</p><p id="p-0130" num="0129">If it is determined that the traffic data is normal traffic, the current determination result is directly output as safe.</p><p id="p-0131" num="0130">If it is determined that the traffic data is malicious traffic, it is necessary to continue to determine whether the current host is successfully invaded under the attack of the malicious traffic.</p><p id="p-0132" num="0131">The local information collection module <b>921</b> may obtain the local feature data set <b>1030</b> of the host by collecting local information. By performing feature extraction on the local feature data set <b>1030</b>, the state feature of the operation state data may be obtained.</p><p id="p-0133" num="0132">The state feature of the operation state data may mainly include: CPU usage, memory usage, network traffic size, root user, system user change, main command file link location, main command file hash, and first s times of login state for all users, last t shell execution records of user. Both s and t are preset numbers. For example, s may take a value of 5, and t may take a value of 100.</p><p id="p-0134" num="0133">The state feature of the current host and the traffic feature of the malicious traffic are input to the intrusion determination module <b>923</b>. Then the random forest model <b>1040</b> determines whether the current host is successfully invaded according to the state feature and the traffic feature, and outputs the corresponding determination result at the same time.</p><p id="p-0135" num="0134">The host security state identification module <b>924</b> may identify the current host security state based on the determination result of the intrusion determination module <b>923</b>. When the attack traffic or the host behavior feature are found to match the intrusion rule, the host state is marked as &#x201c;intrusion&#x201d; and the log recording function is enabled. When the intruding host sends malicious traffic to the host but the intrusion is not successful, only the log recording function is enabled.</p><p id="p-0136" num="0135">When the host is invaded, the current state is marked as intrusion, and the current host timestamp, security state identifier, hash (timestamp+host ip+host security state) are written into the security state blockchain corresponding to the local intrusion detection module <b>920</b>. The current host timestamp, security state identifier, intrusion log, hash (timestamp+host ip+intrusion log+host security state) are reported to the log storage module <b>930</b>, and then written by the log storage module <b>930</b> into the log storage blockchain.</p><p id="p-0137" num="0136">The security state blockchain mainly maintains the security identification information of the host, thus ensuring that each host knows the security state identifier of the other host during communication. When the local intrusion detection module <b>920</b> detects that the host with the security state identified as &#x201c;intrusion&#x201d; initiates a connection to the host, it may analyze the communication traffic between the two parties and report the attack behavior to the log storage module.</p><p id="p-0138" num="0137">The intrusion log about attacking network traffic may be divided into two levels: intrusion behavior and successful intrusion. Specifically, the level of the intrusion log reported to the log storage module <b>930</b> may be adjusted by setting a threshold.</p><p id="p-0139" num="0138">The log storage module <b>930</b> is the information gathering place of the host security monitoring system <b>900</b>, and uses the blockchain technology to store the logs reported by the client. Compared with the security state blockchain, the log storage blockchain introduces intrusion logs. Transferring the intrusion log storage from the client to the log storage blockchain helps to effectively reduce the load on the client and ensure the non-repudiation and integrity of information.</p><p id="p-0140" num="0139">As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the log storage module <b>930</b> includes a plurality of log storage nodes <b>931</b> constituting a blockchain network, and each log storage node is deployed on a log server. These nodes jointly maintain the log storage blockchain.</p><p id="p-0141" num="0140">The local intrusion detection module <b>920</b> randomly selects n log storage nodes <b>931</b> that can communicate normally and sends intrusion logs to them, where n&#x3e;=2, thus preventing the log recording module from losing logs due to a single point of failure. After the log storage module node receives the data, it verifies the data, and writes it to the log storage blockchain after the verification is successful.</p><p id="p-0142" num="0141"><figref idref="DRAWINGS">FIG. <b>12</b></figref> schematically shows the host security monitoring process based on the host security monitoring system. As shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref>, the monitoring process mainly includes the following steps S<b>1201</b>, S<b>1202</b>, S<b>1203</b>, S<b>1204</b>, S<b>1205</b>, S<b>1206</b>, S<b>1207</b>, S<b>1208</b>, S<b>1209</b>, and S<b>1210</b>.</p><p id="p-0143" num="0142">In step S<b>1201</b>, the communication traffic of the host is obtained.</p><p id="p-0144" num="0143">In step S<b>1202</b>, the local state of the host is obtained.</p><p id="p-0145" num="0144">In step S<b>1203</b>, the communication traffic of the host is pre-processed to determine the file object and other traffic.</p><p id="p-0146" num="0145">In step S<b>1204</b>, the file object is executed in the sandbox and a feature is extracted.</p><p id="p-0147" num="0146">In step S<b>1205</b>, the feature of the other traffic and the feature obtained by executing the file object are input into the support vector machine model.</p><p id="p-0148" num="0147">In step S<b>1206</b>, it is determined whether the current communication traffic data is malicious traffic according to the output result of the support vector machine. If it is not malicious traffic, the process ends. If it is malicious traffic, step S<b>1207</b> is executed.</p><p id="p-0149" num="0148">In step S<b>1207</b>, the feature of the malicious traffic and the feature of the local state of the host are input into a random forest model.</p><p id="p-0150" num="0149">In step S<b>1208</b>, it is determined whether the current host is successfully invaded according to the output result of the random forest model. If the intrusion fails, the process ends. If the intrusion is successful, steps S<b>1209</b> and S<b>1210</b> are executed.</p><p id="p-0151" num="0150">In step S<b>1209</b>, the timestamp, hash, and host state are saved to the security state blockchain, and the process ends.</p><p id="p-0152" num="0151">In step S<b>1210</b>, the timestamp, log, hash, and host state are saved to the log storage blockchain and the process ends.</p><p id="p-0153" num="0152">According to an embodiment of the present disclosure, intrusion detection capabilities are provided to each asset in the organization. This helps to significantly improve the intrusion detection capabilities of organization, monitor more comprehensively the historical state information of the organization's assets, and quickly and reliably record intrusion logs about attack behaviors. Thus, the organization is enabled to determine the impact scope of attack in a timely way, improve the organization's emergency response capabilities, and ensure the organization's business continuity. At the same time, credible logs ensure the effectiveness of evidence collection.</p><p id="p-0154" num="0153">It should be noted that although several modules or units of the device for action execution are mentioned in the above detailed description, such division is not mandatory. In fact, according to some embodiments of the present disclosure, the features and functions of two or more modules or units described above may be embodied in one module or unit. Conversely, the features and functions of a module or unit described above may be further divided into multiple modules or units to be embodied.</p><p id="p-0155" num="0154">In an exemplary embodiment of the present disclosure, there is also provided a computer-readable medium having a computer program stored thereon. When executed by a processor, the computer program can implement the above-mentioned method according an embodiment of the present disclosure. In some possible implementations, various aspects of the present disclosure may also be implemented in the form of a program product, which includes program code. The program product may be stored in a non-volatile storage medium (which may be a CD-ROM, U Disk or mobile hard disk, etc.) or stored on a network. When the program product runs on a computing device (which may be a personal computer, a server, a terminal device, or a network device, etc.), the program code is used to configure the computing device to perform steps of the method in the above-mentioned exemplary embodiments of the present disclosure.</p><p id="p-0156" num="0155">Referring to <figref idref="DRAWINGS">FIG. <b>13</b></figref>, the program product <b>1300</b> for implementing the above-mentioned method according to an embodiment of the present disclosure may adopt a portable compact disk read-only memory (CD-ROM) and include program code, and may be run in a computing device (such as a personal computer, server, terminal device or network device, etc.). However, the program product according to an embodiment of the present disclosure is not limited to it. In an exemplary embodiment, the computer-readable storage medium may be any tangible medium that contains or stores a program. The program may be used by or in combination with an instruction execution system, apparatus, or device.</p><p id="p-0157" num="0156">The program product may use any combination of one or more readable media. The readable medium may be a readable signal medium or a readable storage medium.</p><p id="p-0158" num="0157">The readable storage medium may be, for example, but not limited to, an electrical, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or a combination of any of the above. More specific examples (non-exhaustive list) of readable storage media include: electrical connections with one or more wires, portable disks, hard disks, random access memory (RAM), read-only memory (ROM), erasable programmable read-only memory (EPROM or flash memory), optical fiber, portable compact disk read-only memory (CD-ROM), optical storage device, magnetic storage device, or any suitable combination of the above.</p><p id="p-0159" num="0158">The readable signal medium may include a data signal propagated in baseband or as a part of a carrier wave, and readable program code is carried therein. Such propagated data signal may take many forms, including but not limited to electromagnetic signals, optical signals, or any suitable combination of the foregoing. The readable signal medium may also be any readable medium other than the readable storage medium. The readable medium may send, propagate, or transmit the program for use by or in combination with the instruction execution system, apparatus, or device.</p><p id="p-0160" num="0159">The program code contained on the readable medium may be transmitted by any suitable medium, including but not limited to wireless, wired, optical cable, RF, etc., or any suitable combination of the foregoing.</p><p id="p-0161" num="0160">The program code used to perform the operations according to an embodiment of the present disclosure may be written in any combination of one or more programming languages. The programming languages include an object-oriented programming language, such as Java, C++, etc., as well as a conventional procedural programming language, such as C or similar programming language. The program code may be executed entirely on the user's computing device, partly on the user's computing device, executed as an independent software package, partly executed on the user's computing device and partly executed on the remote computing device, or entirely executed on a remote computing device or a server. In the case of a remote computing device, the remote computing device may be connected to a user computing device through any kind of network (including a local area network (LAN) or a wide area network (WAN), etc.). Alternatively, it may be connected to an external computing device, for example, via the Internet using Internet service providers.</p><p id="p-0162" num="0161">In an exemplary embodiment of the present disclosure, there is also provided an electronic device, including at least one processor and at least one memory for storing executable instructions being executable by the processor.</p><p id="p-0163" num="0162">The processor is configured to execute steps of the method in the above-mentioned exemplary embodiments of the present disclosure by executing the executable instructions.</p><p id="p-0164" num="0163">The electronic device <b>1400</b> in an exemplary embodiment will be described below with reference to <figref idref="DRAWINGS">FIG. <b>14</b></figref>. The electronic device <b>1400</b> is only an example, and should not bring any limitation to the function and use scope of embodiments of the present disclosure.</p><p id="p-0165" num="0164">Referring to <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the electronic device <b>1400</b> is represented in the form of a general-purpose computing device. The components of the electronic device <b>1400</b> may include but are not limited to: at least one processing unit <b>1410</b>, at least one storage unit <b>1420</b>, a bus <b>1430</b> connecting different system components (including the processing unit <b>1410</b> and the storage unit <b>1420</b>), and a display unit <b>1440</b>.</p><p id="p-0166" num="0165">The storage unit <b>1420</b> stores program codes, and the program codes may be executed by the processing unit <b>1410</b>, so that the processing unit <b>1410</b> performs steps of the method in the foregoing exemplary embodiments of the present disclosure.</p><p id="p-0167" num="0166">The storage unit <b>1420</b> may include a readable medium in the form of a volatile storage unit, such as a random access storage unit <b>1421</b> (RAM) and/or a cache storage unit <b>1422</b>, and may further include a read-only storage unit <b>1423</b> (ROM).</p><p id="p-0168" num="0167">The storage unit <b>1420</b> may also include a program/utility tool <b>1424</b> having a set of (at least one) program modules <b>1425</b>. Such program modules include but are not limited to: an operation system, one or more application programs, other program modules, and program data. Each or some combination of the examples may include the implementation of a network environment.</p><p id="p-0169" num="0168">The bus <b>1430</b> may represent one or more of several types of bus structures, including a storage unit bus or a storage unit controller, a peripheral bus, a graphics acceleration port, a processing unit, or a local area that uses any of various bus structures.</p><p id="p-0170" num="0169">The electronic device <b>1400</b> may also communicate with one or more external devices <b>1500</b> (such as keyboards, pointing devices, Bluetooth devices, etc.), and may also communicate with one or more devices that allow a user to interact with the electronic device <b>1400</b>. Alternatively, it may also communicate with any device (such as router, modem, etc.) that enables the electronic device <b>1400</b> to communicate with one or more other computing devices. Such communication may be performed through an input/output (I/O) interface <b>1450</b>. In addition, the electronic device <b>1400</b> may also communicate with one or more networks (for example, local area network (LAN), wide area network (WAN), and/or public network, such as the Internet) through the network adapter <b>1460</b>. As shown in <figref idref="DRAWINGS">FIG. <b>14</b></figref>, the network adapter <b>1460</b> may communicate with other modules of the electronic device <b>1400</b> through the bus <b>1430</b>. It should be understood that although not shown in the figures, other hardware and/or software modules may be used in conjunction with the electronic device <b>1400</b>, including but not limited to: microcode, device drivers, redundant processing units, external disk drive arrays, RAID systems, tape drives and data backup storage system, etc.</p><p id="p-0171" num="0170">Those skilled in the art can understand that various aspects of the present disclosure may be implemented as a system, a method, or a program product. Therefore, various aspects of the present disclosure may be specifically implemented in the following forms, namely: a complete hardware implementation, a complete software implementation (including firmware, microcode, etc.), or a combination of hardware and software, which may be collectively referred to herein as &#x201c;circuit&#x201d;, &#x201c;module&#x201d; or &#x201c;system&#x201d;.</p><p id="p-0172" num="0171">Those skilled in the art will easily think of other embodiments of the present disclosure after considering the specification and practicing the content disclosed herein. The present application is intended to cover any variations, uses,</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A blockchain-based host security monitoring method, comprising:<claim-text>monitoring traffic data of a host in a network communication and determining whether the traffic data is malicious traffic;</claim-text><claim-text>in response that the traffic data is the malicious traffic, obtaining security state information of the host and saving the security state information into a security state blockchain; and</claim-text><claim-text>generating an invasion log corresponding to the malicious traffic and saving the invasion log and the security state information into a log storage blockchain.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the determining whether the traffic data is the malicious traffic comprises:<claim-text>performing feature extraction on the traffic data to obtain a traffic feature of the traffic data;</claim-text><claim-text>inputting the traffic feature into a pre-trained support vector machine model to identify a data type of the traffic data by the support vector machine model, wherein the data type comprises normal traffic or malicious traffic.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the performing the feature extraction on the traffic data to obtain the traffic feature of the traffic data comprises:<claim-text>obtaining application layer protocol traffic in the traffic data and performing feature extraction on the application layer protocol traffic to obtain a protocol traffic feature of the application layer protocol traffic;</claim-text><claim-text>in response that a file object exists in the application layer protocol traffic, performing feature extraction on the file object to obtain a file object feature of the file object;</claim-text><claim-text>operating the file object in a sandbox of the host and determining a file operation feature related to the host according to an operation result; and</claim-text><claim-text>determining a traffic feature of the traffic data according to the protocol traffic feature, the file object feature and the file operation feature.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the obtaining the security state information of the host comprises:<claim-text>obtaining operation state data of the host; and</claim-text><claim-text>determining the security state information of the host according to the operation state data and the malicious traffic.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the determining the security state information of the host according to the operation state data and the malicious traffic comprises:<claim-text>performing feature extraction on the operation state data to obtain a state feature of the host;</claim-text><claim-text>determining a traffic feature corresponding to the malicious traffic; and</claim-text><claim-text>inputting the state feature and the traffic feature into a pre-trained random forest model to obtain the security state information of the host.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the saving the security state information into the security state blockchain comprises:<claim-text>saving a network address of the host and the security state information into a block body of a current security state block to be consensus authenticated;</claim-text><claim-text>in response that a block generation condition is met, obtaining block header data of a previous security state block in the security state blockchain, and obtaining a parent block hash value by calculation according to the block header data;</claim-text><claim-text>calculating a block body hash value of the current security state block according to data saved in the block body of the current block;</claim-text><claim-text>saving the parent block hash value, the block body hash value and a timestamp of a current time into a block header of the current security state block; and</claim-text><claim-text>broadcasting the current security state block to a security state blockchain network to perform consensus authentication on the current security state block, and linking the current security state block onto the security state blockchain upon a successful authentication.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The blockchain-based host security monitoring method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the saving the invasion log and the security state information into the log storage blockchain comprises:<claim-text>saving a network address of the host, the intrusion log and the security state information into a block body of a current log storage block to be consensus authenticated;</claim-text><claim-text>in response that a block generation condition is met, obtaining block header data of a previous log storage block in the log storage blockchain and obtaining a parent block hash value by calculation according to the block header data;</claim-text><claim-text>calculating a block body hash value of the current log storage block according to data saved in the block body of the current log storage block;</claim-text><claim-text>saving the parent block hash value, the block body hash value and a timestamp of a current time into a block header of the current log storage block; and</claim-text><claim-text>broadcasting the current log storage block to a log storage blockchain network to perform consensus authentication on the current log storage block, and linking the current log storage block onto the log storage blockchain upon a successful authentication.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. (canceled)</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. A computer-readable medium, having a computer program stored thereon, wherein the computer program is configured, when executed by a processor, to perform a blockchain-based host security monitoring method, comprising:<claim-text>monitoring traffic data of a host in a network communication and determining whether the traffic data is malicious traffic;</claim-text><claim-text>in response that the traffic data is the malicious traffic, obtaining security state information of the host and saving the security state information into a security state blockchain; and</claim-text><claim-text>generating an invasion log corresponding to the malicious traffic and saving the invasion log and the security state information into a log storage blockchain.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. An electronic device, comprising:<claim-text>a processor;</claim-text><claim-text>a memory, configured to store executable instructions executable by the processor, wherein</claim-text><claim-text>the processor is configured to perform a blockchain-based host security monitoring method by executing the executable instructions, the blockchain-based host security monitoring method comprising:</claim-text><claim-text>monitoring traffic data of a host in a network communication and determining whether the traffic data is malicious traffic;</claim-text><claim-text>in response that the traffic data is the malicious traffic, obtaining security state information of the host and saving the security state information into a security state blockchain; and</claim-text><claim-text>generating an invasion log corresponding to the malicious traffic and saving the invasion log and the security state information into a log storage blockchain.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The electronic device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the determining whether the traffic data is the malicious traffic comprises:<claim-text>performing feature extraction on the traffic data to obtain a traffic feature of the traffic data;</claim-text><claim-text>inputting the traffic feature into a pre-trained support vector machine model to identify a data type of the traffic data by the support vector machine model, wherein the data type comprises normal traffic or malicious traffic.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The electronic device according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the performing the feature extraction on the traffic data to obtain the traffic feature of the traffic data comprises:<claim-text>obtaining application layer protocol traffic in the traffic data and performing feature extraction on the application layer protocol traffic to obtain a protocol traffic feature of the application layer protocol traffic;</claim-text><claim-text>in response that a file object exists in the application layer protocol traffic, performing feature extraction on the file object to obtain a file object feature of the file object;</claim-text><claim-text>operating the file object in a sandbox of the host and determining a file operation feature related to the host according to an operation result; and</claim-text><claim-text>determining a traffic feature of the traffic data according to the protocol traffic feature, the file object feature and the file operation feature.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The electronic device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the obtaining the security state information of the host comprises:<claim-text>obtaining operation state data of the host; and</claim-text><claim-text>determining the security state information of the host according to the operation state data and the malicious traffic.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The electronic device according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the determining the security state information of the host according to the operation state data and the malicious traffic comprises:<claim-text>performing feature extraction on the operation state data to obtain a state feature of the host;</claim-text><claim-text>determining a traffic feature corresponding to the malicious traffic; and</claim-text><claim-text>inputting the state feature and the traffic feature into a pre-trained random forest model to obtain the security state information of the host.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The electronic device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the saving the security state information into the security state blockchain comprises:<claim-text>saving a network address of the host and the security state information into a block body of a current security state block to be consensus authenticated;</claim-text><claim-text>in response that a block generation condition is met, obtaining block header data of a previous security state block in the security state blockchain, and obtaining a parent block hash value by calculation according to the block header data;</claim-text><claim-text>calculating a block body hash value of the current security state block according to data saved in the block body of the current block;</claim-text><claim-text>saving the parent block hash value, the block body hash value and a timestamp of a current time into a block header of the current security state block; and</claim-text><claim-text>broadcasting the current security state block to a security state blockchain network to perform consensus authentication on the current security state block, and linking the current security state block onto the security state blockchain upon a successful authentication.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The electronic device according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the saving the invasion log and the security state information into the log storage blockchain comprises:<claim-text>saving a network address of the host, the intrusion log and the security state information into a block body of a current log storage block to be consensus authenticated;</claim-text><claim-text>in response that a block generation condition is met, obtaining block header data of a previous log storage block in the log storage blockchain and obtaining a parent block hash value by calculation according to the block header data;</claim-text><claim-text>calculating a block body hash value of the current log storage block according to data saved in the block body of the current log storage block;</claim-text><claim-text>saving the parent block hash value, the block body hash value and a timestamp of a current time into a block header of the current log storage block; and</claim-text><claim-text>broadcasting the current log storage block to a log storage blockchain network to perform consensus authentication on the current log storage block, and linking the current log storage block onto the log storage blockchain upon a successful authentication.</claim-text></claim-text></claim></claims></us-patent-application>