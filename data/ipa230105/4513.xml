<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004514A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004514</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17784844</doc-number><date>20191212</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>40</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>42</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>409</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>13</main-group><subgroup>4221</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">COMMUNICATION PROTOCOLS FOR SECURE DIGITAL (SD) CARDS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only"><addressbook><orgname>HEWLETT-PACKARD DEVELOPMENT COMPANY, L.P.</orgname><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Jabori</last-name><first-name>Monji G.</first-name><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Lakdawala</last-name><first-name>Rahul</first-name><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Vu</last-name><first-name>Jonathan</first-name><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>HEWLETT-PACKARD DEVELOPMENT COMPANY, L.P.</orgname><role>02</role><address><city>Spring</city><state>TX</state><country>US</country></address></addressbook></assignee></assignees><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/US2019/066050</doc-number><date>20191212</date></document-id><us-371c12-date><date>20220613</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">In some examples, a system comprises: a socket; a controller coupled to the socket; a storage device comprising machine-readable instructions; and a processor coupled to the controller and the storage device, wherein execution of the machine-readable instructions causes the processor to: detect a Secure Digital (SD) card in the socket via the controller; prompt a user to select a communication protocol to be utilized by the system to communicate with the SD card; and enable the system to communicate with the SD card based on the user selection.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="97.87mm" wi="158.75mm" file="US20230004514A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="196.93mm" wi="128.86mm" orientation="landscape" file="US20230004514A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="201.34mm" wi="133.27mm" orientation="landscape" file="US20230004514A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="207.60mm" wi="140.72mm" orientation="landscape" file="US20230004514A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="202.18mm" wi="130.22mm" orientation="landscape" file="US20230004514A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="208.79mm" wi="132.59mm" orientation="landscape" file="US20230004514A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="206.59mm" wi="129.37mm" orientation="landscape" file="US20230004514A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="201.85mm" wi="141.31mm" orientation="landscape" file="US20230004514A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Secure Digital (SD) slots, or sockets, of an electronic device host SD cards, which provide additional memory capacity for the electronic device. The specification that guides the design and support of SD cards enables backward compatibility, so the electronic device may support legacy SD cards as well as next generation SD cards. For example, a legacy SD card may utilize an SD 3.0 communication protocol, while a next generation SD card may utilize the SD 3.0 communication protocol as well as a Peripheral Component Interconnect Express (PCIE&#xae;) communication protocol.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0003" num="0002">Various examples will be described below referring to the following figures:</p><p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a system for enabling a communication protocol, in accordance with various examples;</p><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram of a system for enabling a communication protocol with an SD card, in accordance with various examples;</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram of a system for enabling a communication protocol with a next generation SD card, in accordance with various examples;</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram of a system for determining a communication protocol, in accordance with various examples;</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram of a system for enabling a communication protocol with an SD card, in accordance with various examples;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram of a method for determining a communication protocol with an SD card, in accordance with various examples; and</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a method for enabling a communication protocol with an SD card, in accordance with various examples.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0003" level="1">DETAILED DESCRIPTION</heading><p id="p-0011" num="0010">As explained above, an electronic device may include a socket that supports both legacy SD cards as well as next generation SD cards. For example, the socket may support both an SD High Capacity (SDHC) card (e.g., legacy SD card) as well as an SD Express card (e.g., next generation SD card). Depending on whether an SD card is a legacy SD card or a next generation SD card, the electronic device may communicate with the SD card utilizing a legacy communication protocol alone or either the legacy communication protocol or a next generation communication protocol. For example, an SDHC card may utilize an SD 3.0 (SD3.0) communication protocol alone, while an SD Express card may utilize either the legacy SD3.0 communication protocol or the next generation Peripheral Component Interconnect Express (PCIE) communication protocol. As SD cards evolve and communication protocols evolve, what is currently next generation may become legacy and the latest evolution may become the next generation.</p><p id="p-0012" num="0011">The PCIE communication protocol allows direct communication between the SD card and components of the electronic device (e.g., bus mastering). Because content of the SD card does not first go through a processor of the electronic device, the electronic device has faster access to information stored on the SD card. However, the direct communication also leaves the electronic device vulnerable to malicious executable code that may be stored in the content of the SD card. The SD3.0 communication protocol provides a security layer between the electronic device and the content of the SD card. Communications between the electronic device and the SD card are handled by a controller and access to the components of the electronic device by the content of the SD card is limited.</p><p id="p-0013" num="0012">This disclosure describes various examples of a system that enables a user to select a communication protocol to utilize after an SD card is inserted into a socket of the system. For example, the system may detect an SD Express card in the socket. The system may prompt the user to select a desired communication protocol. In some examples, the system may block communications with the SD card until the user selects a communication protocol. In response to the user selection, the system may enable communications with the SD card utilizing the communication protocol.</p><p id="p-0014" num="0013">In one example in accordance with the present disclosure, a system is provided that includes a socket, a controller coupled to the socket, a storage device comprising machine-readable instructions, and a processor coupled to the controller and the storage device. Execution of the machine-readable instructions causes the processor to: detect a Secure Digital (SD) card in the socket via the controller; prompt a user to select a communication protocol to be utilized by the system to communicate with the SD card; and enable the system to communicate with the SD card based on the user selection.</p><p id="p-0015" num="0014">In another example in accordance with the present disclosure, a machine-readable medium is provided. The machine-readable medium is a non-transitory medium that stores machine-readable instructions which, when executed by a processor, cause the processor to detect a Secure Digital Express (SDExpress) card in a socket and prompt a user for a communication protocol to be utilized when communicating with the SDExpress card.</p><p id="p-0016" num="0015">In yet another example in accordance with the present disclosure, a method is provided. The method comprises: detecting a Secure Digital (SD) card in a socket coupled to a controller; determining whether the SD card is an SDExpress card; and, in response determining that the SD card is an SDExpress card, prompting a user for a communication protocol to be utilized when communicating with the SDExpress card.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a schematic diagram of a system <b>100</b> for enabling a communication protocol, in accordance with various examples. The system <b>100</b> comprises a controller <b>104</b> coupled to a socket <b>102</b> and a processor <b>110</b>. The processor <b>110</b> couples to a storage device <b>106</b>. The system <b>100</b> may be an electronic device such as a desktop, a laptop, a notebook, a tablet, a smartphone, a mobile device, a digital camera, a television, a portable game device, a printer, a Digital Versatile Disc (DVD) recorder, or some other electronic device utilizing memory, for example. For example, the socket <b>102</b> may be a slot for removable memory, such as a Secure Digital (SD) card. The controller <b>104</b> may be a microprocessor, a microcontroller, a microcomputer, or other suitable processor, for example. The storage device <b>106</b> may be a hard drive, solid state drive (SSD), flash memory, random access memory (RAM), or other suitable memory, for example. The processor <b>110</b> may be a microprocessor, a microcomputer, a microcontroller, or another suitable processor or controller, for example. In some examples, the storage device <b>106</b> may store machine-readable instructions <b>108</b>, which, when executed, cause the processor <b>110</b> to perform some or all of the actions attributed herein to the processor <b>110</b>.</p><p id="p-0018" num="0017">In various examples, the socket <b>102</b> may accept a Standard-Capacity (SDSC) card, a High-Capacity (SDHC) card, an eXtended-Capacity (SDXC) card, an Ultra-Capacity (SDUC) card, an Input Output (SDIO) card, an Express (SDExpress) or any other legacy SD card or next generation SD card. The socket <b>102</b> may accommodate a miniSD, a microSD, a standard SD card, or any other legacy SD card size or next generation SD card size, for example. As SD cards evolve, what is currently next generation may become legacy and the latest evolution may become the next generation.</p><p id="p-0019" num="0018">In some examples, the controller <b>104</b> may be installed at manufacture. The installation of the controller <b>104</b> may include storing, on the storage device <b>106</b>, machine-readable instructions (e.g., a device driver) for interacting with the controller <b>104</b>. The device driver of the controller <b>104</b> may be stored on the storage device <b>106</b> as machine-readable instructions <b>108</b>, for example. Execution of the device driver of the controller <b>104</b> may cause the processor <b>110</b> to perform some or all of the actions attributed herein to the processor <b>110</b>.</p><p id="p-0020" num="0019">In other examples, the controller <b>104</b> may comprise a storage device. The storage device may be flash memory, random access memory (RAM), or other suitable memory, for example. In various examples, the storage device of the controller <b>104</b> may comprise machine-readable instructions. The machine-readable instructions may cause the controller <b>104</b> to perform some or all of the actions attributed herein to the controller <b>104</b>. In yet other examples, the storage device of the controller <b>104</b> may include a register. The register contains data such as addresses, truth values, and numeric values. When the controller <b>104</b> detects a card in the socket <b>102</b>, the register of the controller <b>104</b> may be updated to indicate that the socket <b>102</b> contains a card. The controller <b>104</b> may communicate with the card in the socket <b>102</b> to determine the type of card. The register of the controller <b>104</b> may be updated to indicate the type of card in the socket <b>102</b>. In some examples, after the controller <b>104</b> determines the type of card in the socket <b>102</b>, the controller <b>104</b> may block a communication path between the controller <b>104</b> and the socket <b>102</b> until a security of the card in the socket <b>102</b> can be verified (e.g., verify the user trusts the source and/or contents of the card). The controller <b>104</b> may request, from the device driver of the controller <b>104</b>, a communication protocol to enable. In various examples, the controller <b>104</b> may block the communication path between the controller <b>104</b> and the socket <b>102</b> until the device driver of the controller <b>104</b> responds with the communication protocol.</p><p id="p-0021" num="0020">In various examples, a register may be stored on the storage device <b>106</b>. For example, the register stored on the storage device <b>106</b> may be part of the Basic Input/Output System (BIOS), Unified Extensible Firmware Interface (UEFI), or another specification for machine-readable instructions that connect machine-readable instructions of an operating system of a computing device to machine-readable instructions that control embedded systems of the computing device. The register stored on the storage device <b>106</b> may indicate a default communication protocol. For example, the register may indicate a default communication protocol of SD3.0. In another example, the register may indicate a default communication protocol of PCIE. In some examples, the register may be set to a default communication protocol at manufacture. In other examples, the register may be set by a user with an appropriate level of administrative privileges for the system <b>100</b>. For example, if the system <b>100</b> belongs to an enterprise (e.g., business, company), then the enterprise may set the default communication protocol to SD3.0 to protect the security of the system <b>100</b>. In another example, a user of the system <b>100</b> may be more concerned with access time and set the default communication protocol to PCIE.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a schematic diagram of the system <b>100</b> system for enabling a communication protocol with an SD card, in accordance with various examples. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the system <b>100</b> may be an electronic device. The system <b>100</b> may also comprise a user interface <b>212</b> coupled to the processor <b>110</b>. For example, the user interface <b>212</b> may be machine-readable instructions that, when executed, cause the processor <b>110</b> to cause the display to present options from which a user selects and to collect the user selection. In some examples, the options may be presented on a display (e.g., monitor) of the system <b>100</b>. The user selection may be collected from an input peripheral device (e.g., keyboard, touchscreen, mouse) of the system <b>100</b>. The machine-readable instructions of the user interface <b>212</b> may be stored on the storage device <b>106</b> as machine-readable instructions <b>108</b>, for example. Execution of the machine-readable instructions of the user interface <b>212</b> may cause the processor <b>110</b> to perform some or all of the actions attributed herein to the processor <b>110</b>.</p><p id="p-0023" num="0022">In some examples, the storage device <b>106</b> may store machine-readable instructions <b>200</b>, <b>202</b>, and <b>204</b>. The machine-readable instructions <b>200</b>, <b>202</b>, <b>204</b> may be machine-readable instructions <b>108</b>, for example. The machine-readable instructions <b>200</b>, <b>202</b>, <b>204</b> may be for execution by the processor <b>110</b>. The machine-readable instructions <b>200</b>, <b>202</b>, <b>204</b> may cause the processor <b>110</b> to detect a SD card and enable the system <b>100</b> to communicate with the SD card. Execution of instruction <b>200</b> may cause the processor <b>110</b> to detect an SD card in the socket <b>102</b> via the controller <b>104</b>. Execution of instruction <b>202</b> may cause the processor <b>110</b> to cause a display to show a prompt for a communication protocol to be utilized by the system <b>100</b> when communicating with the SD card. Execution of instruction <b>204</b> may cause the processor <b>110</b> to enable the system <b>100</b> to communicate with the SD card based on the user selection.</p><p id="p-0024" num="0023">As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, in some examples, the controller <b>104</b> detects a card in the socket <b>102</b> and updates the register of the controller <b>104</b>. Updating the register of the controller <b>104</b> may cause a signal to be sent to the processor <b>110</b> to indicate a card is in the socket <b>102</b>. In other examples, the controller <b>104</b> sending the signal to request the communication protocol from the device driver of the controller <b>104</b>, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, notifies the processor <b>110</b> that a card is in the socket <b>102</b>. After the processor <b>110</b> detects the signal (e.g., updated register, request for communication protocol), the processor <b>110</b> may read the register of the controller <b>104</b> to determine what type of card is in the socket <b>102</b>. In yet another example, the processor <b>110</b> may communicate with the controller <b>104</b> to instruct the controller <b>104</b> to communicate with the card in the socket <b>102</b> to determine the type of card.</p><p id="p-0025" num="0024">In other examples, in response to determining that an SD card is the card in the socket <b>102</b>, the processor <b>110</b> may prompt the user to select a communication protocol compatible with the SD card detected. For example, if the SD card is a legacy SD card, the processor <b>110</b> may prompt the user to verify the communication protocol is SD3.0. In another example, if the SD card is an SDExpress card, the processor <b>110</b> may prompt the user to select between PCIE and SD3.0 communication protocols. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the user interface <b>212</b> may cause the processor <b>110</b> to prompt the user for the communication protocol to be utilized by the system <b>100</b> to communicate with the SD card.</p><p id="p-0026" num="0025">In yet other examples, the user interface <b>212</b> may cause the processor <b>110</b> to present an option to the user to set a communication protocol as the default communication protocol. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, a register comprising the default communication protocol may be stored on the storage device <b>106</b>. If the user elects to set the communication protocol as the default communication protocol, then the processor <b>110</b> may update the register. In some instances, the user may change the default communication protocol stored in the register on the storage device <b>106</b> by executing the user interface <b>212</b> independent of the detection of a card in the socket <b>102</b>.</p><p id="p-0027" num="0026">In various examples, the user interface <b>212</b> may cause the processor <b>110</b> to present an option to the user to prevent the processor <b>110</b> from causing future prompts to the user for a communication protocol. If the user indicates the processor <b>110</b> should not prompt the user for a communication protocol in the future, the processor <b>110</b> may set a flag stored on the storage device <b>106</b>. For example, the register stored on the storage device <b>106</b> may include the flag. After detecting a card in the socket <b>102</b>, the processor <b>110</b> may determine if the flag is set. If the flag is set, then the processor <b>110</b> may not prompt the user for a communication protocol. Instead, the processor <b>110</b> may utilize the default communication protocol stored in the register of the storage device <b>106</b>. In other examples, the processor <b>110</b> may default to the most secure communication protocol (e.g., SD3.0). In yet other examples, the processor <b>110</b> may default to the communication protocol that provides the fastest access (e.g., PCIE).</p><p id="p-0028" num="0027">In other examples, the user interface <b>212</b> may cause the processor <b>110</b> to present the user an option for the system <b>100</b> to trust the security of the SD card in the socket <b>102</b>. For example, the user interface <b>212</b> may ask the user if the source and/or contents of the SD card are trusted. If the user indicates the security of the SD card is trusted, then the processor <b>110</b> may request an identifier from the SD card in the socket <b>102</b>. In some examples, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the controller <b>104</b> may block the communication path until the security of the SD card is verified. Once the user indicates the security of the SD card is trusted, then the controller <b>104</b> may unblock the communication path. For example, the processor <b>110</b> may signal the controller <b>104</b> to enable communications to indicate the security of the SD card is trusted. The processor <b>110</b> may receive the identifier of the SD card. For example, as discussed above, the controller <b>104</b> may store the identifier of the SD card in the register of the controller <b>104</b>. The processor <b>110</b> may receive the identifier of the SD card by reading the register of the controller <b>104</b>. In another example, the processor <b>110</b> may receive the identifier of the SD card by reading a register of the SD card. In various examples, the processor <b>110</b> may store the identifier on the storage device <b>106</b>. For example, the identifier may be stored in a data structure (e.g., list, database). In some examples, the processor <b>110</b> may store the user-selected communication protocol in the data structure with the identifier stored on the storage device <b>106</b>.</p><p id="p-0029" num="0028">In yet other examples, after detecting a SD card in the socket via the controller <b>104</b>, the processor <b>110</b> may request the identifier from the SD card in the socket <b>102</b>. After receiving the identifier, the processor <b>110</b> may compare the identifier to the list of stored identifiers on the storage device <b>106</b>. If the identifier is on the list of stored identifiers, then the processor <b>110</b> may utilize the communication protocol associated with the identifier to communicate with the SD card. In other examples, prior to utilizing the stored communication protocol, the processor <b>110</b> may prompt the user to determine if the SD card remains trusted. If the SD card is not trusted, the processor <b>110</b> may remove the identifier of the SD card from the stored data structure.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a schematic diagram of the system <b>100</b> for enabling a communication protocol with a next generation SD card, in accordance with various examples. As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, the system <b>100</b> may comprise the socket <b>102</b>, the controller <b>104</b>, the storage device <b>106</b>, and the processor <b>110</b>. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the system <b>100</b> may also comprise the user interface <b>212</b> coupled to the processor <b>110</b>. The controller <b>104</b> may comprise a control logic <b>300</b>. The control logic <b>300</b> may be a multiplexer, digital logic gates, or some other electronic component or circuitry that allows switching between communication paths or buses.</p><p id="p-0031" num="0030">In some examples, the storage device <b>106</b> may store machine-readable instructions <b>302</b>, <b>304</b>, and <b>306</b>. The machine-readable instructions <b>302</b>, <b>304</b>, <b>306</b> may be machine-readable instructions <b>108</b>, for example. The machine-readable instructions <b>302</b>, <b>304</b>, <b>306</b> may be for execution by the processor <b>110</b>. The machine-readable instructions <b>302</b>, <b>304</b>, <b>306</b> may cause the processor <b>110</b> to detect an SDExpress card and send a signal to the controller <b>104</b> to enable communications with the SDExpress card. Execution of instruction <b>302</b> may cause the processor <b>110</b> to detect the SDExpress card. Execution of instruction <b>304</b> may cause the processor <b>110</b> to determine whether the user selected a PCIE or an SD3.0 communication protocol. Execution of instruction <b>306</b> may cause the processor <b>110</b> to send a signal, based on the selection, to set the control logic <b>300</b> to enable either PCIE communications or SD3.0 communications.</p><p id="p-0032" num="0031">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, the controller <b>104</b> may detect a card in the socket <b>102</b>. In some examples, the controller <b>104</b> may determine the card in the socket <b>102</b> is a next generation SD card. For example, the controller <b>104</b> may read a register of the card in the socket <b>102</b> to determine the card is an SDExpress card. The controller <b>104</b> may update the register of the controller <b>104</b> to indicate a next generation SD card is in the socket <b>102</b>. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, updating the register of the controller <b>104</b> may send a signal to the processor <b>110</b>. The processor <b>110</b> may read the register of the controller <b>104</b> to determine a next generation card is in the socket <b>102</b>. In other examples, the processor <b>110</b> may read the register of the card in the socket <b>102</b> to determine the card is a next generation SD card. The processor <b>110</b> may prompt the user to select either a legacy communication protocol or a next generation communication protocol. For example, if the card is an SDExpress card, then the user interface <b>212</b> may cause the processor <b>110</b> to prompt the user to select either the legacy SD3.0 communication protocol or the next generation PCIE communication protocol. Based on the user selection, the processor <b>110</b> may send a signal to the controller <b>104</b> to enable communications with the next generation SD card. In some examples, the signal causes the controller <b>104</b> to close a switch of the control logic <b>300</b> associated with the selected communication protocol. For example, if the user selects the SD3.0 communication protocol, then the controller <b>104</b> closes the switch of the control logic <b>300</b> associated with the SD3.0 communication protocol. In another example, if the user selects the PCIE communication protocol, then the controller <b>104</b> closes the switch of the control logic <b>300</b> associated with the PCIE communication protocol.</p><p id="p-0033" num="0032">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, in some examples, the controller <b>104</b> may block the communication path with the socket <b>102</b>. For example, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the controller <b>104</b> may block the communication path with the socket <b>102</b> until a security of a card in the socket <b>102</b> is verified. In another example, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the controller <b>104</b> may block the communication path with the socket <b>102</b> until the controller <b>104</b> receives a communication protocol from the device driver of the controller <b>104</b>. In various examples, the controller <b>104</b> may block the communication path by opening the switches of the control logic <b>300</b>.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a schematic diagram of a system <b>400</b> for determining a communication protocol, in accordance with various examples. The system <b>400</b> comprises a machine-readable medium <b>402</b> and a processor <b>408</b> coupled to the machine-readable medium <b>402</b>. The system <b>400</b> may be the system <b>100</b>, for example. The system <b>400</b> may be an electronic device, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, for example. The machine-readable medium is a non-transitory medium that stores machine-readable instructions. The non-transitory medium includes all electronic mediums of storage, expect signals. The machine-readable medium <b>402</b> may be a storage device such as a hard drive, solid state drive (SSD), flash memory, random access memory (RAM), or other suitable memory, for example. The machine-readable medium <b>402</b> may be the storage device <b>106</b>, for example. The processor <b>408</b> may be a microprocessor, a microcomputer, a microcontroller, or another suitable processor or controller, for example. The processor <b>408</b> may be the processor <b>110</b>, for example. The machine-readable medium <b>402</b> may store machine-readable instructions, which, when executed, cause the processor <b>408</b> to perform some or all of the actions attributed herein to the processor <b>408</b>.</p><p id="p-0035" num="0034">The machine-readable medium <b>402</b> comprises machine-readable instructions <b>404</b> and <b>406</b>. The machine-readable instructions <b>404</b>, <b>406</b> may be machine-readable instructions <b>108</b>, for example. The machine-readable instructions <b>404</b>, <b>406</b> may be machine-readable instructions for execution by the processor <b>408</b>. Execution of the machine-readable instructions <b>404</b>, <b>406</b> may cause the processor <b>408</b> to detect an SDExpress card in a socket (e.g., <b>102</b>) and prompt the user for a communication protocol. Execution of machine-readable instruction <b>404</b> may cause the processor <b>408</b> to detect the SDExpress card in the socket. Execution of machine-readable instruction <b>406</b> may cause the processor <b>408</b> to prompt the user for the communication protocol to be utilized when communicating with the SDExpress card.</p><p id="p-0036" num="0035">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>3</b></figref>, the processor <b>408</b> may detect an SDExpress card in the socket via a controller (e.g., <b>104</b>). For example, the processor <b>408</b> may receive a signal from the controller. In response to the signal, the processor <b>408</b> may read a register of the controller to determine a type of the card in the socket, in an example. In another example, the processor <b>408</b> may read a register of the card in the socket. As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>2</b> and <b>3</b></figref>, the processor <b>408</b> may prompt the user for a communication protocol to be utilized when communicating with the SDExpress card. For example, machine-readable instructions of a user interface (e.g., <b>212</b>) may prompt the user to select either a PCIE or an SD3.0 communication protocol.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a schematic diagram of the system <b>400</b> for enabling a communication protocol with an SD card, in accordance with various examples. As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the system <b>400</b> comprises the machine-readable medium <b>402</b> coupled to the processor <b>408</b>. The machine-readable medium <b>402</b> comprises machine-readable instructions <b>500</b>, <b>502</b>, and <b>504</b>. The machine-readable instructions <b>500</b>, <b>502</b>, <b>504</b> may be machine-readable instructions <b>108</b>, for example. The machine-readable instructions <b>500</b>, <b>502</b>, <b>504</b> may be machine-readable instructions for execution by the processor <b>408</b>. Execution of the machine-readable instructions <b>500</b>, <b>502</b>, <b>504</b> may cause the processor <b>408</b> to send a signal to set the control logic (e.g., <b>300</b>) to enable a communication protocol. Execution of machine-readable instruction <b>500</b> may cause the processor <b>408</b> to send a signal to set the control logic to enable SD3.0 communications. Execution of machine-readable instruction <b>502</b> may cause the processor <b>408</b> to determine whether the user selected a PCIE or SD3.0 communication protocol. Execution of machine-readable instruction <b>504</b> may cause the processor <b>408</b> to send a signal to set the control logic to enable either PCIE or SD3.0 communications with an SDExpress card.</p><p id="p-0038" num="0037">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>, in various examples, a register indicating a default communication protocol may be stored on a storage device (e.g., <b>106</b>). For example, the register may indicate a default communication protocol of SD3.0. In another example, the register may indicate a default communication protocol of PCIE. In some examples, prior to detecting a card in a socket (e.g., <b>102</b>), the processor <b>110</b>, <b>408</b> may send a signal to a controller (e.g., <b>104</b>) to enable communications with the socket based on the default communication protocol. For example, if the register indicates a default communication protocol of SD3.0, then the controller sets the control logic (e.g., <b>300</b>) to enable SD3.0 communications with the card in the socket. In another example, if the register indicates a default communication protocol of PCIE, then the controller sets the control logic to enable PCIE communications with the card in the socket.</p><p id="p-0039" num="0038">As discussed above with respect to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, based on the detection of an SDExpress card in the socket, the processor <b>408</b> may prompt the user to select either a PCIE or an SD3.0 communication protocol. The processor <b>408</b> may determine whether the user selected the PCIE or the SD3.0 communication protocol. For example, a user interface (e.g., <b>212</b>) may instruct the processor <b>408</b> to collect the user selection from an input peripheral device, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Based on the user selection, the processor <b>408</b> may send a signal to the controller to set the control logic to enable the user-selected communication protocol. For example, if the user selects a communication protocol of SD3.0, then the controller sets the control logic to enable SD3.0 communications with the card in the socket. In another example, if the user selects a communication protocol of PCIE, then the controller sets the control logic to enable PCIE communications with the card in the socket.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flow diagram of a method <b>600</b> for determining a communication protocol with an SD card, in accordance with various examples. The method <b>600</b> may be performed, for instance, by the processor <b>110</b>, <b>408</b>. The method <b>600</b> includes detecting an SD card in a socket coupled to a controller (<b>602</b>). The method <b>600</b> also includes determining whether the SD card is an SDExpress card (<b>604</b>). In addition, the method <b>600</b> includes, in response to determining that the SD card is an SDExpress card, prompting a user for a communication protocol to be utilized when communicating with the SDExpress card (<b>606</b>).</p><p id="p-0041" num="0040">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>3</b>, and <b>4</b></figref>, the processor <b>110</b>, <b>408</b> may detect an SD card in the socket via a controller (e.g., <b>104</b>). For example, the processor <b>110</b>, <b>408</b> may receive a signal from the controller. In response to the signal, the processor <b>110</b>, <b>408</b> may read a register of the controller to determine a type of the card in the socket, in one example. In another example, the processor <b>110</b>, <b>408</b> may read a register of the card in the socket. As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>4</b></figref>, the processor <b>110</b>, <b>408</b> may determine a type of the card in the socket. The processor <b>110</b>, <b>408</b> may read a register of the controller to determine a type of the card in the socket, in one example. In another example, the processor <b>110</b>, <b>408</b> may read a register of the card in the socket. In response to determining the type of the card in the socket is SDExpress, the processor <b>110</b>, <b>408</b> may prompt the user for a communication protocol to be utilized when communicating with the SDExpress card. For example, machine-readable instructions of a user interface (e.g., <b>212</b>) may prompt the user to select either a PCIE or an SD3.0 communication protocol.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flow diagram of a method <b>700</b> for enabling a communication protocol with an SD card, in accordance with various examples. The method <b>700</b> may be performed, for instance, by the processor <b>110</b>, <b>408</b>. The method <b>700</b> includes determining whether the SD card is an SDExpress card (<b>702</b>). The method <b>700</b> also includes sending a signal to control logic of the controller to enable SD3.0 communications with the SD card (<b>704</b>). In addition, the method <b>700</b> includes determining whether the communication protocol is PCIE or SD3.0 (<b>706</b>). Additionally, the method <b>700</b> includes sending a signal to the control logic of the controller to enable PCIE communications with the SD card (<b>708</b>).</p><p id="p-0043" num="0042">In operation, if the processor <b>110</b>, <b>408</b> determines the SD card is not an SDExpress card, then the processor <b>110</b>, <b>408</b> sends a signal to the control logic (e.g., <b>300</b>) of the controller (e.g., <b>104</b>) to enable SD3.0 communications with the SD card. If the processor <b>110</b>, <b>408</b> determines the SD card is an SDExpress card, then the processor <b>100</b>, <b>408</b> determines whether the communication protocol is PCIE or SD3.0. If the processor <b>110</b>, <b>408</b> determines the communication protocol is PCIE, then the processor <b>110</b>, <b>408</b> sends a signal to the control logic of the controller to enable PCIE communications with the SD card. If the processor <b>110</b>, <b>408</b> determines the communication protocol is SD3.0, then the processor <b>110</b>, <b>408</b> sends a signal to the control logic of the controller to enable SD3.0 communications with the SD card.</p><p id="p-0044" num="0043">As discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, <b>4</b>, and <b>6</b></figref>, the processor <b>110</b>, <b>408</b> may determine a type of the card in the socket. The processor <b>110</b>, <b>408</b> may read a register of the controller to determine a type of the card in the socket, in one example. In another example, the processor <b>110</b>, <b>408</b> may read a register of the card in the socket. In some examples, if the processor <b>110</b>, <b>408</b> determines the SD card is a legacy SD card, then the processor <b>110</b>, <b>408</b> sends a signal to the control logic of the controller to enable SD3.0 communications with the legacy SD card.</p><p id="p-0045" num="0044">In various examples, if the processor <b>110</b>, <b>408</b> determines the SD card is an SDExpress card, then the processor <b>110</b>, <b>408</b> may determine whether the communication protocol is PCIE or SD3.0 by reading a register comprising a default communication protocol stored on the storage device (e.g., <b>106</b>) as discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>1</b>, <b>2</b>, and <b>5</b></figref>. In other examples, the processor <b>110</b>, <b>408</b> may determine the communication protocol by retrieving an identifier of the SDExpress card and comparing it to a list of identifiers stored on the storage device. For example, as discussed above with respect to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the communication protocol to utilize with the identified SDExpress card may be stored with the identifier of the SDExpress card. In yet other examples, the processor <b>110</b>, <b>408</b> may determine the communication protocol by prompting the user, as discussed above with respect to <figref idref="DRAWINGS">FIGS. <b>2</b>, <b>3</b>, <b>4</b>, <b>5</b>, and <b>6</b></figref>.</p><p id="p-0046" num="0045">The above discussion is meant to be illustrative of the principles and various examples of the present disclosure. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.</p><p id="p-0047" num="0046">In the figures, certain features and components disclosed herein may be shown exaggerated in scale or in somewhat schematic form, and some details of certain elements may not be shown in the interest of clarity and conciseness. In some of the figures, in order to improve clarity and conciseness, a component or an aspect of a component may be omitted.</p><p id="p-0048" num="0047">In the above discussion and in the claims, the terms &#x201c;including&#x201d; and &#x201c;comprising&#x201d; are used in an open-ended fashion, and thus should be interpreted to mean &#x201c;including, but not limited to. . . . &#x201d; Also, the term &#x201c;couple&#x201d; or &#x201c;couples&#x201d; is intended to be broad enough to encompass both indirect and direct connections. Thus, if a first device couples to a second device, that connection may be through a direct connection or through an indirect connection via other devices, components, and connections. As used herein, including in the claims, the word &#x201c;or&#x201d; is used in an inclusive manner. For example, &#x201c;A or B&#x201d; means any of the following: &#x201c;A&#x201d; alone, &#x201c;B&#x201d; alone, or both &#x201c;A&#x201d; and &#x201c;B.&#x201d;</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A system, comprising:<claim-text>a socket;</claim-text><claim-text>a controller coupled to the socket;</claim-text><claim-text>a processor coupled to the controller;</claim-text><claim-text>a storage device coupled to the processor, the storage device comprising machine-readable instructions which, when executed, cause the processor to:<claim-text>detect a Secure Digital (SD) card in the socket via the controller;</claim-text><claim-text>prompt a user to select a communication protocol to be utilized by the system when communicating with the SD card; and</claim-text><claim-text>enable the system to communicate with the SD card based on the user selection.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the communication protocol is either Peripheral Component Interconnect Express (PCIE) or SD 3.0.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein execution of the machine-readable instructions causes the processor to, based on the selection of the PCIE communication protocol, send a signal to the controller to enable PCIE communications with the SD card.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The system of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein execution of the machine-readable instructions causes the processor to, based on the selection of the SD3.0 communication protocol, send a signal to the controller to enable SD3.0 communications with the SD card.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein execution of the machine-readable instructions causes the processor to prompt the user for the communication protocol after detecting an SDExpress card.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. A non-transitory machine-readable medium storing machine-readable instructions which, when executed by a processor, cause the processor to:<claim-text>detect a Secure Digital Express (SDExpress) card in a socket; and</claim-text><claim-text>prompt a user for a communication protocol to be utilized when communicating with the SDExpress card.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein execution of the machine-readable instructions causes the processor to send a signal to set a control logic to enable SD 3.0 communications prior to detecting the SDExpress card in the socket.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the communication protocol is either Peripheral Component Interconnect Express (PCIE) or Secure Digital 3.0 (SD3.0).</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein execution of the machine-readable instructions causes the processor to, based on a selection of the PCIE communication protocol, send a signal to set a control logic to enable PCIE communications with the SDExpress card.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The non-transitory machine-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein execution of the machine-readable instructions causes the processor to, based on a selection of the SD3.0 communication protocol, send a signal to set a control logic to enable SD3.0 communications with the SDExpress card.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. A method, comprising:<claim-text>detecting a Secure Digital (SD) card in a socket coupled to a controller;</claim-text><claim-text>determining whether the SD card is an SD Express (SDExpress) card; and</claim-text><claim-text>in response to a determination that the SD card is an SDExpress card, causing a prompt to a user for a communication protocol to be utilized during communication with the SDExpress card.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, comprising, in response to a determination that the SD card is not an SDExpress card, sending a signal to a control logic of the controller to enable SD 3.0 communications with the SD card.</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the communication protocol is either Peripheral Component Interconnect Express (PCIE) or SD 3.0.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, comprising, based on a selection of the PCIE communication protocol, sending a signal to control logic to enable PCIE communications with the SD card.</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, comprising, based on a selection of the SD 3.0 communication protocol, sending a signal to the controller to enable SD 3.0 communications with the SD card.</claim-text></claim></claims></us-patent-application>