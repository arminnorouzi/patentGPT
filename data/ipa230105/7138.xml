<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007139A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007139</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17806098</doc-number><date>20220609</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2021-108374</doc-number><date>20210630</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>00973</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>00244</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>1</main-group><subgroup>0097</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>2201</main-group><subgroup>0094</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">IMAGE PROCESSING APPARATUS, IMAGE PROCESSING SYSTEM, AND STORAGE MEDIUM STORING PROGRAM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>BROTHER KOGYO KABUSHIKI KAISHA</orgname><address><city>Nagoya</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>ENOMOTO</last-name><first-name>Katsunori</first-name><address><city>Toyokawa</city><country>JP</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>TANIMOTO</last-name><first-name>Satoshi</first-name><address><city>Nagoya</city><country>JP</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>KAIGAWA</last-name><first-name>Shinsuke</first-name><address><city>Kitanagoya</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A controller is configured to: acquire first access information indicating a transmission source of instruction data; receive the instruction data based on the first access information; in response to receiving input-type instruction data, input content data of a storage target based on input method information included in the input-type instruction data, and store resource data in which the inputted content data is associated with resource identification information included in the input-type instruction data; in response to receiving output-type instruction data, read resource data corresponding to resource identification information included in the output-type instruction data, and output the content data associated with the resource identification information of the read resource data based on output method information included in the output-type instruction data; and in response to receiving the instruction data including reception instruction information, receive next instruction data based on second access information associated with the reception instruction information.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="187.20mm" wi="133.77mm" file="US20230007139A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="206.08mm" wi="135.81mm" file="US20230007139A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="177.38mm" wi="107.53mm" file="US20230007139A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="215.05mm" wi="130.47mm" file="US20230007139A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="194.99mm" wi="130.47mm" file="US20230007139A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="211.16mm" wi="130.64mm" file="US20230007139A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="211.24mm" wi="130.73mm" file="US20230007139A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="204.39mm" wi="130.64mm" file="US20230007139A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="214.63mm" wi="130.73mm" file="US20230007139A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="195.24mm" wi="130.81mm" file="US20230007139A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="179.75mm" wi="148.42mm" file="US20230007139A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="234.70mm" wi="152.15mm" file="US20230007139A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="150.54mm" wi="88.48mm" file="US20230007139A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="220.56mm" wi="130.98mm" file="US20230007139A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="235.88mm" wi="150.88mm" file="US20230007139A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="230.89mm" wi="138.35mm" file="US20230007139A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="115.57mm" wi="130.81mm" file="US20230007139A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="235.29mm" wi="150.45mm" file="US20230007139A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="63.58mm" wi="130.64mm" file="US20230007139A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application claims priority from Japanese Patent Application No. 2021-108374 filed on Jun. 30, 2021. The entire content of the priority application is incorporated herein by reference.</p><heading id="h-0002" level="1">BACKGROUND ART</heading><p id="p-0003" num="0002">Conventionally, an image processing system including an image processing apparatus and a server is known.</p><heading id="h-0003" level="1">DESCRIPTION</heading><p id="p-0004" num="0003">In an image processing system, an image processing apparatus accesses a server, analyzes instruction data sent from the server, and performs a series of processes including a process related to input and a process related to output according to the instruction data. As the series of processes, the image processing apparatus performs &#x201c;download printing&#x201d; of downloading a document from a storage and printing the document, and &#x201c;scan upload&#x201d; of scanning a document and uploading the scanned image data to a storage, for example. The instruction data may include execution instructions of download printing and scan upload. In a case where the instruction data includes an execution instruction for scan upload, for example, the image processing apparatus performs scan upload according to the instruction data.</p><p id="p-0005" num="0004">In the instruction data, in order to execute a series of processes including a process related to input and a process related to output, such as &#x201c;download printing&#x201d; and &#x201c;scan upload&#x201d;, an input process and an output process are provided as a fixed set. Therefore, in the above-described instruction data, it is difficult to customize the process, and a series of processes to be executed according to the instruction data has low flexibility (a low degree of freedom). For example, it is not possible to perform processing of scanning a document with a scanning function, uploading the scanned image data to a storage, and performing printing based on the image data.</p><p id="p-0006" num="0005">This specification discloses a technique for, in an image processing apparatus that executes processes based on instruction data, increasing flexibility of a series of processes to be executed according to the instruction data.</p><p id="p-0007" num="0006">According to one aspect, this specification discloses an image processing apparatus. The image processing apparatus includes a communication interface and a controller. The controller is configured to: acquire first access information indicating a transmission source of instruction data, the instruction data being data instructing the image processing apparatus to execute a process, the image processing apparatus being configured to execute an input-type process and an output-type process, an input-type instruction data being the instruction data indicating the input-type process, the input-type instruction data being one kind of the instruction data, the input-type instruction data including input process information, the input-type instruction data including input method information and input resource identification information, the input method information indicating an input method, the input resource identification information identifying resource data to be stored, an output-type instruction data being the instruction data indicating the output-type process, the output-type instruction data being one kind of the instruction data, the output-type instruction data including output process information, the output-type instruction data including output method information and output resource identification information, the output method information indicating an output method, the output resource identification information identifying resource data to be read, the instruction data further including reception instruction information instructing the image processing apparatus to receive next instruction data, the reception instruction information being associated with second access information indicating a transmission source of the next instruction data; receive, via the communication interface, the instruction data transmitted from the transmission source of the instruction data based on the acquired first access information; in response to receiving the input-type instruction data, input content data of a storage target by the input method corresponding to the input method information, the input method information being information included in the received input-type instruction data, and store resource data in which the inputted content data is associated with the input resource identification information included in the received input-type instruction data; in response to receiving the output-type instruction data, read the resource data corresponding to the output resource identification information included in the received output-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data, wherein in a case where the content data of an output target is image data, an image indicated by the image data is outputted; and in response to receiving the instruction data including the reception instruction information, receive, via the communication interface, the next instruction data from the transmission source of the next instruction data based on the second access information associated with the reception instruction information.</p><p id="p-0008" num="0007">According to a technique disclosed in this specification, instruction data may include input process information or output process information, and an instruction to receive next instruction data continuously from one instruction data may be included by reception instruction information. Further, resource data which is content data associated with resource identification information is handed over from an input process to an output process by using the resource identification information, thereby allowing processes described in instruction data to be prepared separately for the input process and the output process. This allows, for a series of processes based on instruction data, customizing of a combination of a process related to input and a process related to output, and increases flexibility of a series of processes executable by the instruction data.</p><p id="p-0009" num="0008">An image processing system including the image processing apparatus, a control method for realizing the function of the image processing apparatus, a computer program, and a computer-readable storage medium for storing the computer program are also new and useful and are disclosed herein.</p><p id="p-0010" num="0009">According to the technique disclosed herein, in an image processing apparatus that executes processes based on instruction data, a technique is realized for increasing flexibility of a series of processes to be executed according to the instruction data.</p><p id="p-0011" num="0010">Embodiments in accordance with this disclosure will be described in detail with reference to the following figures wherein:</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram showing the electrical configuration of an image processing system;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a flowchart showing the procedure of an additional function process;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is an explanatory diagram showing an example of instruction data of a scan instruction;</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>3</b>B</figref> is a flowchart showing the procedure of a scan process;</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is an explanatory diagram showing an example of instruction data for input;</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a flowchart showing the procedure of a resource input process;</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is an explanatory diagram showing an example of instruction data of a print instruction;</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a flowchart showing the procedure of a print process;</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is an explanatory diagram showing an example of instruction data for output;</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is a flowchart showing the procedure of a resource output process;</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is an explanatory diagram showing an example of instruction data of a conversion instruction;</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>7</b>B</figref> is a flowchart showing the procedure of a conversion process;</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>8</b>A</figref> is an explanatory diagram showing an example of instruction data of a composition instruction;</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>8</b>B</figref> is an explanatory diagram showing an example of instruction data of a composition instruction;</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>9</b>A</figref> is an explanatory diagram showing an example of instruction data for inputting layout information;</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>9</b>B</figref> is an explanatory diagram showing an example of layout information;</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a flowchart showing the procedure of a composition process;</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>11</b>A</figref> is an explanatory diagram showing an example of instruction data of replacement instruction;</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>11</b>B</figref> is an explanatory diagram showing an example of instruction data before replacement;</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>11</b>C</figref> is an explanatory diagram showing an example of instruction data after replacement;</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a flowchart showing the procedure of a replacement process;</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a sequence chart showing the procedure of a first additional function;</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a sequence chart showing the procedure of a second additional function;</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a sequence chart showing the procedure of a third additional function;</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is an explanatory diagram showing an example of layout information including a reserved word;</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a sequence chart showing the procedure of a fourth additional function; and</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is an explanatory diagram showing an example of instruction data of a deletion instruction.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0039" num="0038">Hereinafter, an image processing system of an embodiment will be described in detail with reference to the attached drawings. An image processing system <b>100</b> of the embodiment includes, for example, a multifunction peripheral (hereinafter, referred to as &#x201c;MFP&#x201d;) <b>1</b> and a server <b>3</b> as shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and these are connectable to each other via a network <b>200</b>. The MFP <b>1</b> is further connectable to a storage <b>4</b> via a network <b>300</b>. The MFP <b>1</b> is an example of an image processing apparatus.</p><p id="p-0040" num="0039">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the MFP <b>1</b> of this embodiment includes a controller <b>10</b> including a CPU <b>11</b> and a memory <b>12</b>. Further, the MFP <b>1</b> includes a user interface (hereinafter also referred to as &#x201c;user IF&#x201d;) <b>13</b>, a communication interface (hereinafter also referred to as &#x201c;communication IF&#x201d;) <b>14</b>, a print engine <b>15</b>, and a scanner <b>16</b>, and these are electrically connected to the controller <b>10</b>. The CPU <b>11</b> may be an example of a controller.</p><p id="p-0041" num="0040">The CPU <b>11</b> executes various processes according to a program read from the memory <b>12</b> and based on a user's operation. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the memory <b>12</b> stores various programs and various information including an operating system (hereinafter referred to as &#x201c;OS&#x201d;) <b>21</b> and an external function program <b>22</b>. The external function program <b>22</b> is an example of a program. The memory <b>12</b> is also used as a work area when various processes are executed. A buffer included in the CPU <b>11</b> is also an example of the memory.</p><p id="p-0042" num="0041">An example of the memory <b>12</b> is not limited to a ROM, a RAM, an HDD, and so on, built in the MFP <b>1</b>, and may be a storage medium that is read and written by the CPU <b>11</b>. A computer-readable storage medium is a non-transitory medium. In addition to the above examples, the non-transitory medium also includes recording media such as a CD-ROM and a DVD-ROM. The non-transitory medium is also a tangible medium. On the other hand, an electric signal that carries a program downloaded from a server and so on, on the Internet is a computer-readable signal medium which is a kind of a computer-readable medium, but is not included in a non-transitory computer-readable storage medium.</p><p id="p-0043" num="0042">The external function program <b>22</b> is a program that acquires instruction data from an external device such as the server <b>3</b> and realizes the function by processes based on the acquired instruction data. In the external function program <b>22</b>, function URLs <b>221</b> and <b>222</b> for each additional function may be registered (stored), and the function URLs <b>221</b> and <b>222</b> are registered in advance by the designer of the image processing system <b>100</b> and so on. The function URLs <b>221</b> and <b>222</b> are information including access information indicating the transmission source of instruction data that starts execution of each additional function. The details of the external function program <b>22</b> will be described later.</p><p id="p-0044" num="0043">The user interface <b>13</b> is a touch panel, for example. The user interface <b>13</b> includes hardware for displaying a screen for notifying the user of information and hardware for accepting operations by the user. The user interface <b>13</b> may be a set of a display and a button, a key, and so on.</p><p id="p-0045" num="0044">The communication interface <b>14</b> includes a configuration that is connectable to the network <b>200</b> and the network <b>300</b>. The communication interface <b>14</b> includes hardware for communicating with the server <b>3</b> via the network <b>200</b> and hardware for communicating with the storage <b>4</b> via the network <b>300</b>. The communication standard of the communication interfacel<b>4</b> may be Ethernet, Wi-Fi, USB, and so on (&#x201c;Wi-Fi&#x201d; is a registered trademark of the Wi-Fi Alliance). The MFP <b>1</b> may include a plurality of communication interfaces <b>14</b> corresponding to a plurality of communication standards. The network <b>200</b> and the network <b>300</b> may be a local network connected to the MFP <b>1</b> or may be the Internet. Further, the network <b>200</b> and the network <b>300</b> may be the same network.</p><p id="p-0046" num="0045">The print engine <b>15</b> includes a configuration for printing an image based on image data on a print medium such as a sheet. The image forming method of the print engine <b>15</b> may be, for example, an electrophotographic method or an inkjet method. The scanner <b>16</b> includes a configuration for scanning an image of a set document and generating image data. The scanner <b>16</b> may be provided with a document feeder.</p><p id="p-0047" num="0046">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the server <b>3</b> stores one or more instruction data <b>31</b>, <b>32</b>, <b>33</b>, and so on, and has a function of transmitting specified instruction data based on a transmission instruction from the MFP <b>1</b> and so on. The server <b>3</b> is an example of a transmission source of instruction data. Each instruction data stored in the server <b>3</b> is information configured to be analyzed by the external function program <b>22</b> of the MFP <b>1</b>, and is, for example, an xml file prepared by the designer of the image processing system <b>100</b> and so on. The details of instruction data will be described later. The designer and so on of the image processing system <b>100</b> include, for example, a system administrator of a company that has introduced the MFP <b>1</b>, a vendor of the image processing system <b>100</b> including the MFP <b>1</b>, and a designer or a service person of a manufacturer or a dealer of the MFP <b>1</b>.</p><p id="p-0048" num="0047">As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the storage <b>4</b> stores one or more content data, for example. The storage <b>4</b> has a function of handing over content data to the MFP <b>1</b> based on a request from the MFP <b>1</b>. The content data is various image data and documents for printing, and instruction data that specifies a print parameter and a print layout, for example. The instruction data stored in the storage <b>4</b> is information configured to be analyzed by the external function program <b>22</b> of the MFP <b>1</b>, like the instruction data stored in the server <b>3</b>. The instruction data stored in the storage <b>4</b> is, for example, an xml file prepared by the designer of the image processing system <b>100</b> and so on. The storage <b>4</b> may be a part of the apparatus constituting the server <b>3</b>.</p><p id="p-0049" num="0048">Next, the procedure of an additional function process executed by the external function program <b>22</b> of the MFP <b>1</b> based on an instruction of the user who uses the image processing system <b>100</b> will be described with reference to the flowchart of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The additional function process is executed by the CPU <b>11</b> of the MFP <b>1</b> in response to accepting a user's instruction to execute the additional function registered in the MFP <b>1</b> via the user interface <b>13</b>, for example.</p><p id="p-0050" num="0049">The following process basically indicates the process of the CPU <b>11</b> according to the instruction described in a program. That is, the processes such as &#x201c;determination&#x201d;, &#x201c;extraction&#x201d;, &#x201c;selection&#x201d;, &#x201c;calculation&#x201d;, &#x201c;decision&#x201d;, &#x201c;identification&#x201d;, &#x201c;acquisition&#x201d;, &#x201c;reception&#x201d;, and &#x201c;control&#x201d; in the following description represent the processes by the CPU <b>11</b>. The process by the CPU <b>11</b> also includes hardware control using an API of the OS. In this specification, the operation of each program will be described by omitting the description of the OS. That is, in the following description, the description that &#x201c;a program B controls hardware C&#x201d; may mean &#x201c;a program B controls hardware C using the API of the OS&#x201d;. In addition, the process of the CPU <b>11</b> according to the instruction described in the program may be described in abbreviated wording. For example, it may be described as &#x201c;the CPU <b>11</b> performs&#x201d;. Further, the process of the CPU <b>11</b> according to the instruction described in the program may be described by a wording that omits the CPU, such as &#x201c;a program A performs&#x201d;.</p><p id="p-0051" num="0050">Note that &#x201c;acquisition&#x201d; is used as a concept that does not require a request. That is, a process of receiving data without being requested by the CPU <b>11</b> is also included in the concept of &#x201c;the CPU acquires data&#x201d;. The &#x201c;data&#x201d; in this specification is represented by a computer-readable bit string. Data having the same substantial meaning and different formats are treated as the same data. The same applies to &#x201c;information&#x201d; in this specification. Further, &#x201c;request&#x201d; and &#x201c;instruct&#x201d; are concepts indicating that information indicating that a request is being made or information indicating that an instruction is being given is outputted to the counterpart. Further, the information indicating that the request is being made or the information indicating that the instruction is being given is simply described as &#x201c;request&#x201d; or &#x201c;instruction&#x201d;, respectively.</p><p id="p-0052" num="0051">Further, the CPU <b>11</b>'s process of determining whether information A indicates matter B may be conceptually described as &#x201c;determining from information A whether it is matter B&#x201d;. The CPU <b>11</b>'s process of determining whether information A indicates matter B or indicates matter C may be described conceptually as &#x201c;determine from information A whether it is matter B or matter C&#x201d;.</p><p id="p-0053" num="0052">By storing a plurality of instruction data in the server <b>3</b> and allowing the MFP <b>1</b> to access the server <b>3</b>, the designer and so on of the image processing system <b>100</b> including the MFP <b>1</b> and the server <b>3</b> may design the MFP <b>1</b> to execute a series of processes combining various processes. The instruction data may include an instruction to acquire next instruction data. The designer and so on of the image processing system <b>100</b> stores, as the function URLs <b>221</b> and <b>222</b>, in the MFP <b>1</b>, information indicating the transmission source of instruction data that is first acquired by the MFP <b>1</b> when the MFP <b>1</b> executes a series of processes, in association with the name of the series of processes. The function URLs <b>221</b> and <b>222</b> are examples of access information registered in the MFP <b>1</b>, and are access information indicating the transmission source of the initial instruction data corresponding to each additional function.</p><p id="p-0054" num="0053">The MFP <b>1</b> may directly accept a registration instruction of a function URL via, for example, the user interface <b>13</b>, or may accept the registration instruction via a personal computer and so on that is connectable to the MFP <b>1</b>. The user may use a personal computer and so on to register various additional functions in the MFP <b>1</b> by using, for example, an Embedded Web Server provided in the MFP <b>1</b> or an application program dedicated to registration of function URLs. When registering an additional function, the MFP <b>1</b> stores the name of the additional function in association with the function URL indicating the first instruction data in the additional function.</p><p id="p-0055" num="0054">In the additional function process, the CPU <b>11</b> controls the user interface <b>13</b> to display a list of names of the additional functions registered in the MFP <b>1</b> (S<b>101</b>), and accepts the user's selection (S<b>102</b>). The CPU <b>11</b> displays, for example, a list of names of additional functions associated with each function URL, and accepts selection of an additional function. The user of the image processing system <b>100</b> selects an additional function to be executed by the MFP <b>1</b> and instructs to execute the process. In response to determining that the user's selection is not accepted (S<b>102</b>: NO), the CPU <b>11</b> waits until a selection is accepted.</p><p id="p-0056" num="0055">In response to determining that the user's selection and the execution instruction have been accepted (S<b>102</b>: YES), the CPU <b>11</b> reads the function URL corresponding to the selected additional function, accesses the server <b>3</b> based on the function URL, and acquires the instruction data indicated by the function URL from the server <b>3</b> (S<b>103</b>). The CPU <b>11</b> receives a particular xml file which is instruction data from the server <b>3</b>. S<b>103</b> is an example of a reception process. The process of accessing the server <b>3</b> using the function URL registered (stored) in the memory <b>12</b> is also a process of requesting the server <b>3</b> to transmit the instruction data. The CPU <b>11</b> analyzes the acquired instruction data and executes the process instructed by the instruction data (S<b>111</b>).</p><p id="p-0057" num="0056">An example of the instruction data acquired in S<b>103</b> and a procedure of the processes executed by the CPU <b>11</b> in S<b>111</b> will be described. The MFP <b>1</b> of this embodiment executes an input-type process which is a process of acquiring content data, an output-type process which is a process of outputting the content data, and a processing-type process which is a process of processing (changing) the content data, as functions that are executable based on instruction data.</p><p id="p-0058" num="0057">First, the input-type process and the output-type process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>3</b>A and <b>3</b>B</figref> to <figref idref="DRAWINGS">FIGS. <b>6</b>A and <b>6</b>B</figref>. The first line and the last line of the instruction data shown in <figref idref="DRAWINGS">FIGS. <b>3</b>A to <b>6</b>A</figref> are information indicating the kind of a process and are kind tags. A kind tag is an example of kind information. The MFP <b>1</b> of this embodiment supports, for example, &#x3c;Scan&#x3e;, &#x3c;Input&#x3e;, &#x3c;Print&#x3e;, &#x3c;Output&#x3e;, and &#x3c;Process&#x3e; as kind tags. &#x3c;Scan&#x3e; and &#x3c;Input&#x3e; are kind tags indicating the input-type process and are examples of input process information. &#x3c;Print&#x3e; and &#x3c;Output&#x3e; are kind tags indicating the output-type process, and are examples of output process information. &#x3c;Process&#x3e; is a kind tag indicating the processing-type process, and is an example of processing information. The processing-type process will be described later. The tag names such as the kind tags supported by the external function program <b>22</b> are not limited to those exemplified in the present specification. A tag name appropriately designed by the designer of the image processing system <b>100</b> and so on is adopted.</p><p id="p-0059" num="0058">The MFP <b>1</b> of this embodiment stores and reads intermediate content data as resource data in various processes. The input-type instruction data includes information that specifies an input method for acquiring content data and designation of identification information that is given to identify resource data to be stored. When the MFP <b>1</b> performs processes based on the input-type instruction data, the MFP <b>1</b> acquires the content data based on the specified input method, and stores content data in which the specified identification information is associated with the acquired content data in the memory <b>12</b> as resource data.</p><p id="p-0060" num="0059">The output-type instruction data includes information that specifies an output method of the content data and designation of identification information that identifies the resource data to be read. When the MFP <b>1</b> performs a process based on the output-type instruction data, the MFP <b>1</b> reads the resource data associated with the specified identification information from the memory <b>12</b>, and outputs the content data included in the resource data based on the specified output method. In the following, the resource data and the content data included in the resource data may be simply referred to as resource data, without distinguishing both data.</p><p id="p-0061" num="0060">Next, the instruction data in each figure will be specifically described. The instruction data <b>51</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref> is instruction data including a &#x3c;Scan&#x3e; tag, and is an example of the input-type instruction data instructing the MFP <b>1</b> to execute a scan. The instruction data <b>51</b> includes a kind tag <b>511</b> for specifying a scan, setting information <b>512</b> for specifying various scan settings, resource data identification information <b>513</b>, and instruction data information <b>514</b> indicating the next instruction data. The kind tag <b>511</b> for specifying a scan is an example of information for specifying an input method, and is an example of scan instruction information. The identification information <b>513</b> is an example of resource identification information for identifying the resource data to be stored. The instruction data information <b>514</b> is an example of reception instruction information. In this embodiment, the name of the resource data is used as the identification information <b>513</b> and so on.</p><p id="p-0062" num="0061">In a case where the instruction data acquired in S<b>103</b> of the additional function process is instruction data including a &#x3c;Scan&#x3e; tag, for example, instruction data <b>51</b>, the CPU <b>11</b> executes a scan process shown in <figref idref="DRAWINGS">FIG. <b>3</b>B</figref> in S<b>111</b>. In the scan process, the CPU <b>11</b> creates resource data for storage in association with the identification information <b>513</b> (S<b>201</b>). Specifically, the CPU <b>11</b> creates a file with the identification information <b>513</b> as a file name, and opens the created file. In the following, resource data in a file format will also be referred to as a resource data file.</p><p id="p-0063" num="0062">The CPU <b>11</b> acquires scan settings based on the setting information <b>512</b> (S<b>202</b>), controls the scanner <b>16</b> to read the image of the document with the acquired scan settings, and acquires content data for one page (S<b>203</b>). In this case, the content data is specifically image data for one page. The format of the image data is, for example, a JPEG format or a bitmap format. The CPU <b>11</b> writes the acquired content data in the file created in S<b>201</b> (S<b>204</b>). S<b>203</b> and S<b>204</b> are examples of an input process. The storage target in this case is the image data acquired by scanning. The CPU <b>11</b> determines whether the next document exists (S<b>205</b>). In response to determining that the next document exists (S<b>205</b>: YES), the CPU <b>11</b> returns to S<b>203</b> and further performs scanning. In response to determining that the next document does not exist (S<b>205</b>: NO), the CPU <b>11</b> closes the file and ends the scan process.</p><p id="p-0064" num="0063">The instruction data <b>52</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is instruction data including an &#x3c;Input&#x3e; tag, and is an example of the input-type instruction data for causing the MFP <b>1</b> to input content data. The instruction data <b>52</b> includes a kind tag <b>521</b> for specifying an input, path information <b>522</b> indicating a storage source of input target data, resource data identification information <b>523</b>, and instruction data information <b>524</b> indicating the next instruction data. In the instruction data <b>52</b> of <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, the path information <b>522</b> shows that the server &#x201c;www.server-d.com&#x201d; is the storage location of the input target data, and the input target data is a file with the file name of &#x201c;maker logajpg&#x201d;. The instruction data <b>52</b> is an example of instruction data indicating an instruction for inputting content data by downloading. The kind tag <b>521</b> is an example of information for specifying an input method, and is an example of download instruction information indicating download. The path information <b>522</b> is an example of input source information indicating an input source. The identification information <b>523</b> is an example of resource identification information for identifying the resource data to be stored. The instruction data information <b>524</b> is an example of reception instruction information.</p><p id="p-0065" num="0064">In a case where the instruction data acquired in S<b>103</b> of the additional function process is instruction data including an &#x3c;Input&#x3e; tag, for example, the instruction data <b>52</b>, the CPU <b>11</b> executes a resource input process shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref> in S<b>111</b>. In the resource input process, the CPU <b>11</b> creates resource data for storage in association with the identification information <b>523</b> (S<b>211</b>). The CPU <b>11</b> creates and opens a file in the same manner as S<b>201</b>. The CPU <b>11</b> acquires, based on the path information <b>522</b>, the path of the content data to be inputted (S<b>212</b>), and inputs the content data using the acquired path (S<b>213</b>). The CPU <b>11</b> downloads, for example, the specified content data from the storage <b>4</b>.</p><p id="p-0066" num="0065">The CPU <b>11</b> writes the acquired content data to the resource data file created in S<b>211</b> (S<b>214</b>), and ends the resource input process. S<b>213</b> and S<b>214</b> are examples of an input process. The storage target in the resource input process is not limited to image data. For the path information, for example, instruction data or text data used in a processing-type instruction data described later may be also specified. In the resource input process, even if the input target data is instruction data, the CPU <b>11</b> does not analyze or execute the instruction data. For example, an FTP server, a CIFS server, and an HTTP server may be used as the path information of the instruction data including an &#x3c;Input&#x3e; tag. As the path information, the designation of a USB memory mounted on the MFP <b>1</b> or a network storage connected to the MFP <b>1</b> may be accepted, and in that case, the MFP <b>1</b> reads content data from the specified USB memory or the network storage.</p><p id="p-0067" num="0066">The instruction data <b>53</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is instruction data including a &#x3c;Print&#x3e; tag, and is an example of output-type instruction data for causing the MFP <b>1</b> to execute printing. The instruction data <b>53</b> includes a kind tag <b>531</b> for specifying printing, setting information <b>532</b> for specifying various print settings, resource data identification information <b>533</b>, and instruction data information <b>534</b> indicating the next instruction data. The kind tag <b>531</b> that specifies printing is an example of information that specifies an output method. The identification information <b>533</b> is an example of resource identification information for identifying the resource data to be read. The instruction data information <b>534</b> is an example of reception instruction information.</p><p id="p-0068" num="0067">In a case where the instruction data acquired in S<b>103</b> of the additional function process is instruction data including a &#x3c;Print&#x3e; tag, for example, the instruction data <b>53</b>, the CPU <b>11</b> executes a print process shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> in S<b>111</b>. In the print process, the CPU <b>11</b> identifies the resource data file stored in association with the identification information <b>533</b> based on the instruction data <b>53</b>, opens the identified resource data file, and reads the resource data (S<b>221</b>). The CPU <b>11</b> acquires print settings based on the setting information <b>532</b> (S<b>222</b>).</p><p id="p-0069" num="0068">The CPU <b>11</b> analyzes the resource data read in S<b>221</b> and determines whether the resource data is print data (that is, data for printing) (S<b>223</b>). In response to determining that the data is not print data (S<b>223</b>: NO), the CPU <b>11</b> converts the resource data into print data (S<b>224</b>). Specifically, when the resource data is data of a print job format created by the printer driver and so on, the CPU <b>11</b> determines in S<b>223</b> that it is not print data. If the resource data is data of the print job format, in S<b>224</b> the CPU <b>11</b> rasterizes the resource data to convert the same into print data which is image data in a raster format. When the resource data is data obtained by rasterizing data of the print job format, the CPU <b>11</b> determines in S<b>223</b> that the data is print data.</p><p id="p-0070" num="0069">After S<b>224</b>, or in response to determining that the data is print data (S<b>223</b>: YES), the CPU <b>11</b> instructs the print engine <b>15</b> to perform printing (S<b>225</b>), and ends the print process. S<b>225</b> is an example of an output process. The print data is an example of image data of an output target. In S<b>223</b>, the CPU <b>11</b> may determine that the resource data is print data if the resource data is image data of a raster format such as bitmap or JPEG, and may determine that the resource data is not print data if the resource data is data of a format, such as PDF or PS, other than the raster format. The CPU <b>11</b> may cause an external device such as a conversion server to perform the conversion of S<b>224</b>.</p><p id="p-0071" num="0070">The instruction data <b>54</b> shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is instruction data including an &#x3c;Output&#x3e; tag, and is an example of the output-type instruction data for causing the MFP <b>1</b> to output data. The instruction data <b>54</b> includes a kind tag <b>541</b> for specifying an output, resource data identification information <b>542</b>, and setting information <b>543</b> for specifying output destination information and an output protocol. The setting information <b>543</b> is an example of information that specifies an output method. The identification information <b>542</b> is an example of resource identification information for identifying the resource data to be read.</p><p id="p-0072" num="0071">In a case where the instruction data acquired in S<b>103</b> of the additional function process is instruction data including an &#x3c;Output&#x3e; tag, for example, the instruction data <b>54</b>, the CPU <b>11</b> executes a resource output process shown in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref> in S<b>111</b>. In the resource output process, the CPU <b>11</b> identifies the resource data stored in association with the identification information <b>542</b> based on the instruction data <b>54</b> (S<b>231</b>).</p><p id="p-0073" num="0072">The CPU <b>11</b> acquires output destination information and output parameters (S<b>232</b>) based on the setting information <b>543</b>, and transmits resource data in accordance with the specified protocol (S<b>233</b>). S<b>233</b> is an example of an output process. In this case, data of the output target is not necessarily image data. After transmitting all resource data, the CPU <b>11</b> ends the resource output process. In the setting information <b>543</b>, for example, the file name of the file to be outputted may be specified as the output destination. In a case where the file name is specified, the CPU <b>11</b> outputs a file with the specified file name in S<b>233</b>.</p><p id="p-0074" num="0073">In the instruction data including an &#x3c;Output&#x3e; tag, a data transmission destination may be specified as the data output destination. As the data transmission destination, for example, an FTP server, a CIFS server, an HTTP server, an email server, or a SharePoint server may be specified. If data transmission is specified, an appropriate protocol depending on the specified destination may be specified as the output parameter. As the data output destination, a USB memory mounted on the MFP <b>1</b> or a network storage connected to the MFP <b>1</b> may also be specified, and in that case, the MFP <b>1</b> writes the content data to the specified USB memory or the network storage.</p><p id="p-0075" num="0074">The description of the additional function process of <figref idref="DRAWINGS">FIG. <b>2</b></figref> will be continued. After executing various processes in S<b>111</b> based on the instruction data acquired in S<b>103</b>, the CPU <b>11</b> determines whether instruction data of the execution target includes instruction data information indicating the next instruction data (S<b>121</b>). For example, if the instruction data acquired in S<b>103</b> is any one of the instruction data <b>51</b> (<figref idref="DRAWINGS">FIG. <b>3</b>A</figref>), the instruction data <b>52</b> (<figref idref="DRAWINGS">FIG. <b>4</b>A</figref>), and the instruction data <b>53</b> (<figref idref="DRAWINGS">FIG. <b>5</b>A</figref>), the instruction data includes the instruction data information <b>514</b>, <b>524</b>, <b>534</b>. If the instruction data acquired in S<b>103</b> is the instruction data <b>54</b> (<figref idref="DRAWINGS">FIG. <b>6</b>A</figref>), the instruction data information is not included.</p><p id="p-0076" num="0075">In response to determining that the instruction data information is included (S<b>121</b>: YES), the CPU <b>11</b> returns to S<b>103</b> and acquires the next instruction data from the server <b>3</b> based on the instruction data information. S<b>103</b> in this case is an example of a continuation process. The CPU <b>11</b> continuously executes various processes based on the acquired next instruction data. In response to determining that the instruction data of the execution target does not include the instruction data information (S<b>121</b>: NO), the CPU <b>11</b> deletes all resource data created by the additional function process (S<b>122</b>), and ends the additional function process. S<b>122</b> is an example of a first deletion process.</p><p id="p-0077" num="0076">In the MFP <b>1</b> of this embodiment, by combining the input-type instruction data and the output-type instruction data, an additional function of outputting one inputted data to a plurality of output destinations, for example. For example, an additional function may be created and registered in which the instruction data information <b>514</b> of the instruction data <b>51</b> is information indicating the instruction data <b>53</b> as the next instruction data, and the instruction data information <b>534</b> of the instruction data <b>53</b> is information indicating the instruction data <b>54</b> as the next instruction data. When the additional function created in this way is executed, for example, both printing and uploading are executed by using one scan data acquired by scan as the resource data.</p><p id="p-0078" num="0077">The MFP <b>1</b> of this embodiment also supports the processing-type instruction data that performs processing of resource data. For example, as described above, when printing and uploading are performed based on one scan data, the scan data may be data of a format unsuitable for uploading. The MFP <b>1</b> of this embodiment accepts, for example, a conversion instruction of the data format of a resource data file as the processing-type instruction data. By adding the processing-type instruction data, a series of additional functions is designed such that the content data acquired by the input-type instruction data is processed by the processing-type instruction data, and the content data after processing is outputted by the output-type instruction data.</p><p id="p-0079" num="0078">Next, the processing-type process will be described with reference to <figref idref="DRAWINGS">FIGS. <b>7</b>A and <b>7</b>B</figref> to <figref idref="DRAWINGS">FIG. <b>12</b></figref>. The processing-type instruction data is instruction data including a &#x3c;Process&#x3e;tag as a kind tag. In addition to the kind tag, the processing-type instruction data includes information indicating a processing method. The MFP <b>1</b> of this embodiment supports conversion, composition, and replacement as a processing method. Conversion is processing of generating content data in which the format of the original content data is changed. Composition is processing of combining a plurality of content data to generate one content data. Replacement is processing of generating content data in which reserved words in content data preset in the MFP <b>1</b> are replaced with the corresponding text.</p><p id="p-0080" num="0079">The processing-type instruction data includes a designation of first identification information that identifies the resource data to be read, information that specifies the processing method of the content data, and a designation of second identification information that identifies the resource data to be stored. When processes are performed based on the processing-type instruction data, the MFP <b>1</b> reads the resource data associated with the first identification information from the memory <b>12</b>, processes the content data included in the resource data by the specified processing method, and stores, as resource data, the content data in which the second identification information is associated with the content data after processing in the memory <b>12</b>.</p><p id="p-0081" num="0080">The instruction data <b>55</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is the processing-type instruction data and is an example of instruction data whose processing method is conversion. The instruction data <b>55</b> includes a kind tag <b>551</b> indicating processing, method information <b>552</b> indicating a processing method, identification information <b>553</b> indicating resource data before processing, identification information <b>554</b> indicating resource data after processing, format information <b>555</b> indicating the file format of the resource data after processing, and instruction data information <b>556</b> indicating the next instruction data. The method information <b>552</b> is an example of conversion instruction information. The identification information <b>553</b> is an example of first resource identification information, and the identification information <b>554</b> is an example of second resource identification information. The content data of the resource data before processing is data that is acquired by the MFP <b>1</b> by the input-type instruction data executed before the instruction data <b>55</b>, and is stored as a file.</p><p id="p-0082" num="0081">In a case where the instruction data acquired in S<b>103</b> of the additional function process is the processing-type instruction data instructing to perform conversion, for example, the instruction data <b>55</b>, the CPU <b>11</b> executes a conversion process shown in <figref idref="DRAWINGS">FIG. <b>7</b>B</figref> in S<b>111</b>. In the conversion process, the CPU <b>11</b> creates resource data for storage in association with the identification information <b>554</b> (S<b>241</b>). Specifically, the CPU <b>11</b> creates a file with the identification information <b>554</b> as a file name, and opens the created file. The CPU <b>11</b> identifies the resource data file before processing that is stored in association with the identification information <b>553</b>, opens the identified file, and reads the resource data (S<b>242</b>).</p><p id="p-0083" num="0082">The CPU <b>11</b> converts the content data of the resource data read in S<b>242</b> into the format shown in the format information <b>555</b> (S<b>243</b>), writes the same in the resource data file created in S<b>241</b> (S<b>244</b>), and ends the conversion process. Specifically, the CPU <b>11</b> creates temporary data in which the format of the read resource data has been converted, and writes the temporary data in the resource data file for storage. For example, the MFP <b>1</b> converts the content data of the resource data before processing, into a PDF format file by executing the conversion process based on the instruction data <b>55</b>, assigns the identification information <b>554</b> thereto, and stores the content data. The CPU <b>11</b> may delete the resource data file before processing.</p><p id="p-0084" num="0083">The instruction data <b>56</b> and <b>57</b> shown in <figref idref="DRAWINGS">FIGS. <b>8</b>A and <b>8</b>B</figref> are the processing-type instruction data, and are examples of instruction data whose processing method is composition. In the composition instruction data, a plurality of image data of a composition target or layout information may be used as resource data before processing. The layout information is information for specifying the layout for arranging a plurality of image data. The layout information includes information indicating a plurality of image data of the composition target and arrangement information (including page, coordinates, size, angle, transparency) of each image data. In any case, the resource data before processing specified by the composition instruction data is data acquired by the MFP <b>1</b> and stored in the memory <b>12</b> based on the input-type instruction data executed before the execution of the composition instruction data.</p><p id="p-0085" num="0084">In a case where the resource data before processing is a plurality of image data of the composition target, the MFP <b>1</b> performs composition according to a particular method such as a &#x201c;<b>2</b> in 1&#x201d; (2 images on 1 page) arrangement or a simple superposition composition in processes according to the composition instruction data. In a case where the resource data before processing is layout information, the MFP <b>1</b> performs the composition process based on the description of the layout information in the processes according to the composition instruction data.</p><p id="p-0086" num="0085">The instruction data <b>56</b> in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> is an example in which a plurality of image data of the composition target is specified as resource data before processing. The instruction data <b>56</b> in <figref idref="DRAWINGS">FIG. <b>8</b>A</figref> includes a kind tag <b>561</b> indicating processing, method information <b>562</b> indicating a processing method, identification information <b>563</b> indicating resource data before processing, identification information <b>564</b> indicating the resource data after processing, format information <b>565</b> indicating a file format of resource data after processing, and instruction data information <b>566</b> indicating the next instruction data. The method information <b>562</b> is an example of composition instruction information. The identification information <b>563</b> is an example of the first resource identification information, and the identification information <b>564</b> is an example of the second resource identification information.</p><p id="p-0087" num="0086">In a case where the instruction data acquired in S<b>103</b> of the additional function process is the instruction data <b>56</b> instructing to perform composition, the CPU <b>11</b> generates one content data obtained by combining a plurality of read content data according to a predetermined method in S<b>111</b> and stores the generated content data as resource data. In this case, it can be said that the method information <b>562</b> is a layout instruction.</p><p id="p-0088" num="0087">The instruction data <b>57</b> in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref> is an example in which layout information indicating the layout of composition is specified as resource data before processing. The instruction data <b>57</b> of <figref idref="DRAWINGS">FIG. <b>8</b>B</figref> includes a kind tag <b>571</b> indicating processing, method information <b>572</b> indicating a processing method, and identification information <b>573</b> indicating resource data before processing. The identification information <b>573</b> is identification information indicating layout information stored as resource data in the memory <b>12</b> by the resource input process executed in advance. The instruction data <b>57</b> includes identification information <b>574</b> indicating the resource data after processing, format information <b>575</b> indicating the file format of the resource data after processing, and instruction data information <b>576</b> indicating the next instruction data. The method information <b>572</b> is an example of composition instruction information. The identification information <b>573</b> is an example of the first resource identification information, and the identification information <b>574</b> is an example of the second resource identification information.</p><p id="p-0089" num="0088">The layout information indicated by the identification information <b>573</b> is, for example, the resource data inputted by the MFP <b>1</b> by the processes according to instruction data <b>52</b>L shown in <figref idref="DRAWINGS">FIG. <b>9</b>A</figref> and stored in the memory <b>12</b>. By executing the input-type instruction data <b>52</b>L, the MFP <b>1</b> acquires layout information from the server <b>3</b>, and stores, as resource data, the layout information in association with the same identification information as the identification information <b>573</b>.</p><p id="p-0090" num="0089">An example of layout information is shown in <figref idref="DRAWINGS">FIG. <b>9</b>B</figref>. The layout information <b>58</b> shown in <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> is instruction data including a layout instruction. The layout information <b>58</b> is an example of a layout for one page, and includes page information <b>581</b> indicating the size and orientation of the page and a plurality of resource information <b>582</b> and <b>583</b> indicating the identification information and arrangement of the resource data to be laid out on the page. The resource information <b>582</b> and <b>583</b> are examples of resource identification information for identifying resource data of the layout target. The layout information <b>58</b> may include an instruction to arrange a fixed text or image at a particular position in addition to the information of the resource data.</p><p id="p-0091" num="0090">In a case where the instruction data acquired in S<b>103</b> of the additional function process is the processing-type instruction data instructing to perform composition, for example, the instruction data <b>56</b> or the instruction data <b>57</b>, the CPU <b>11</b> executes a composition process shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> in S<b>111</b>. In the composition process, the CPU <b>11</b> creates and opens a resource data file for storage in association with the identification information <b>564</b> or the identification information <b>574</b> (S<b>251</b>). The CPU <b>11</b> identifies the resource data file before processing stored in association with the identification information <b>563</b> or the identification information <b>573</b>, opens the identified file, and reads the resource data (S<b>252</b>). The CPU <b>11</b> determines the kind of the read resource data (S<b>253</b>).</p><p id="p-0092" num="0091">In response to determining that the kind of the identified resource data is image data (S<b>253</b>: image data), the CPU <b>11</b> combines the resource data identified in S<b>252</b> according to a particular method and creates temporary data after composition (S<b>254</b>). The MFP <b>1</b> performs composition by a predetermined method such as a &#x201c;2 in 1&#x201d; arrangement or a simple superposition composition.</p><p id="p-0093" num="0092">In response to determining that the kind of the read resource data is the layout information as shown in <figref idref="DRAWINGS">FIG. <b>9</b>B</figref> (S<b>253</b>: layout information), the CPU <b>11</b> analyzes the layout information (S<b>256</b>). For example, the CPU <b>11</b> identifies the resource data file before processing based on the resource information <b>582</b> and <b>583</b> of the layout information <b>58</b>, opens the identified files, and reads a plurality of image data which are resource data (S<b>257</b>). Based on the designation in the layout information <b>58</b>, the CPU <b>11</b> generates image data in which the images indicated by the plurality of read image data are arranged, as temporary data after composition (S<b>258</b>). After S<b>254</b> or S<b>258</b>, the CPU <b>11</b> writes the temporary data after composition to the resource data file created in S<b>251</b> (S<b>259</b>), and ends the composition process.</p><p id="p-0094" num="0093">For example, the layout information may be written in the composition instruction data, or may be instruction data stored in advance in the memory <b>12</b> of the MFP <b>1</b>, instead of being prepared as resource data inputted from the server <b>3</b> and so on by the input-type instruction data.</p><p id="p-0095" num="0094">In the instruction data <b>56</b> and <b>57</b> instructing to perform composition, the file format of the resource data after processing is specified as the format information <b>565</b> and <b>575</b>. In a case where the specified format information is the PDF format, the CPU <b>11</b> creates a resource data file in the PDF format in S<b>251</b> of the composition process. The PDF format file has a structure including, for each page, a plurality of image data and arrangement information indicating the arrangement of images indicated by each image data.</p><p id="p-0096" num="0095">When a plurality of image data are combined and the image data after composition is outputted in the PDF format, the MFP <b>1</b> may rewrite the arrangement information indicating the layout, without performing image processing such as rasterization of the image data or processing of the rasterized image data. In the example of the instruction data <b>57</b>, the MFP <b>1</b> combines a plurality of image data and arrangement information rewritten based on the layout information <b>58</b> in the format defined by the PDF format, thereby generating a resource data file of the arrangement according to the instruction. The PDF format is an example of a particular image format. By generating a PDF format file as content data of the output target, composition is performed by a simple process, which is an easy-to-use additional function.</p><p id="p-0097" num="0096">The resource data before processing specified by the processing-type instruction data instructing to perform composition may be a combination of layout information and image data of the composition target. In that case, the MFP <b>1</b> reads the image data of the composition target from the specified resource data file and executes the composition according to the description of the layout information.</p><p id="p-0098" num="0097">The instruction data <b>59</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> is the processing-type instruction data and is an example of the instruction data whose processing method is replacement. Replacement is a process of generating text data in which reserved words included in the text data are replaced with the corresponding text. The resource data before processing specified by the replacement instruction data includes text data including reserved words such as a profile <b>60</b> before replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, and the resource data after processing includes text data after replacement such as a profile <b>61</b> after replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref>. The resource data before processing specified by the replacement instruction data is the data acquired by the MFP <b>1</b> and stored in the memory <b>12</b> based on the input-type instruction data executed before the execution of the replacement instruction data.</p><p id="p-0099" num="0098">The instruction data <b>59</b> shown in <figref idref="DRAWINGS">FIG. <b>11</b>A</figref> includes a kind tag <b>591</b> indicating processing, method information <b>592</b> indicating a processing method, identification information <b>593</b> indicating resource data before processing, identification information <b>594</b> indicating resource data after processing, format information <b>595</b> indicating the file format of the resource data after processing, and instruction data information <b>596</b> indicating the next instruction data. The method information <b>592</b> is an example of replacement instruction information. The identification information <b>593</b> is an example of the first resource identification information, and the identification information <b>594</b> is an example of the second resource identification information.</p><p id="p-0100" num="0099">The resource data before processing associated with the identification information <b>593</b> is, for example, the profile <b>60</b> before replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, and is text data including reserved words represented by a character string surrounded by &#x201c;%%&#x201d;. In a case where the resource data before processing is a file containing text data including reserved words and the process based on the instruction data whose processing method is replacement is executed, the MFP <b>1</b> generates text data in which the reserved words have been replaced with the corresponding text according to a predetermined definition and writes the same to the resource data file after processing. The reserved words are an example of reserved information.</p><p id="p-0101" num="0100">The reserved words are registered in the MFP <b>1</b> in advance, and the MFP <b>1</b> acquires the corresponding information from, for example, the OS <b>21</b>. The reserved words include, for example, the user name of the user logged in to the MFP <b>1</b>, the current date and time when this process is executed, the serial number of the MFP <b>1</b>, and the IP address of the MFP <b>1</b>. Some reserved words may be replaced with setting information related to a process already executed by MFP <b>1</b>. Reserved words related to a process include, for example, words about scanning, such as color or monochrome, scan resolution, number of pages for scanning, and includes words regarding printing, such as color or monochrome, print resolution, number of pages for printing. In response to receiving an instruction of replacement of resource data including reserved words related to a process, the MFP <b>1</b> replaces each reserved word based on the setting information used in the process already executed by the additional function that is being executed or used in the latest process.</p><p id="p-0102" num="0101">In a case where the instruction data acquired in S<b>103</b> of the additional function process is the processing-type instruction data instructing to perform the replacement, for example, the instruction data <b>59</b>, the CPU <b>11</b> executes a replacement process shown in <figref idref="DRAWINGS">FIG. <b>12</b></figref> in S<b>111</b>. In the replacement process, the CPU <b>11</b> creates a resource data file for storage in association with the identification information <b>594</b>, and opens the created file (S<b>261</b>). The CPU <b>11</b> identifies the resource data file before processing stored in association with the identification information <b>593</b>, opens the identified file, and reads the resource data (S<b>262</b>). The resource data before processing includes, for example, text data including reserved words such as the profile <b>60</b> before replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>. The CPU <b>11</b> extracts reserved words of the replacement target from the text data before the replacement (S<b>263</b>), and acquires the replacement text corresponding to each reserved word based on, for example, the information of the OS <b>21</b> (S<b>264</b>).</p><p id="p-0103" num="0102">The CPU <b>11</b> replaces the reserved words in the text data before replacement with the text for replacement, creates temporary data after replacement (S<b>265</b>), writes the temporary data to the resource data file for storage (S<b>266</b>), and ends the replacement process. In a case where the text data before replacement is the profile <b>60</b> before replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>, the CPU <b>11</b> creates, for example, the profile <b>61</b> after replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref> as the text data after replacement.</p><p id="p-0104" num="0103">Next, as additional functions that are executable by the MFP <b>1</b> by combining various instruction data, four examples of first to fourth additional functions will be described with reference to the sequence charts.</p><p id="p-0105" num="0104">First, the first additional function will be described with reference to <figref idref="DRAWINGS">FIG. <b>13</b></figref>. The first additional function is an additional function that combines scanning, conversion, and two kinds of output. When executing the first additional function, the user sets a document in the MFP <b>1</b> (A<b>01</b>), selects a function URL indicating the first additional function (A<b>02</b>), and gives an instruction for the execution (A<b>03</b>, S<b>102</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0106" num="0105">The MFP <b>1</b> requests the server <b>3</b> to transmit the instruction data based on the instructed function URL (A<b>11</b>). In the first additional function, the instruction data corresponding to the function URL is the input-type instruction data instructing to perform scanning, and is, for example, the instruction data <b>51</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>. The server <b>3</b> transmits the instruction data <b>51</b> based on the request of the MFP <b>1</b> (A<b>12</b>, S<b>103</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The MFP <b>1</b> executes a scan process based on the received instruction data <b>51</b> (A<b>13</b>, <figref idref="DRAWINGS">FIG. <b>3</b>B</figref>), and stores the scan result as a resource data file (A<b>14</b>).</p><p id="p-0107" num="0106">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data based on the instruction data <b>51</b> (A<b>21</b>). Information indicating the instruction data <b>55</b> shown in <figref idref="DRAWINGS">FIG. <b>7</b>A</figref> is set in the instruction data information <b>514</b> of the instruction data <b>51</b>. The server <b>3</b> transmits the instruction data <b>55</b> based on the request of the MFP <b>1</b> (A<b>22</b>, S<b>103</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The MFP <b>1</b> executes a conversion process based on the received instruction data <b>55</b> (A<b>23</b>, <figref idref="DRAWINGS">FIG. <b>7</b>B</figref>), and stores the resource data file after conversion (A<b>24</b>). The identification information <b>553</b> of the instruction data <b>55</b> is the same as the identification information <b>513</b> of the instruction data <b>51</b>, and the MFP <b>1</b> converts the resource data file stored in A<b>14</b> into a file of the PDF format.</p><p id="p-0108" num="0107">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data based on the instruction data <b>55</b> (A<b>31</b>). Information indicating the instruction data <b>53</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is set in the instruction data information <b>556</b> of the instruction data <b>55</b>. The server <b>3</b> transmits the instruction data <b>53</b> based on the request of the MFP <b>1</b> (A<b>32</b>, S<b>103</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The MFP <b>1</b> executes a print process based on the received instruction data <b>53</b> (A<b>33</b>, <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>). The identification information <b>533</b> of the instruction data <b>53</b> is the same as the identification information <b>554</b> of the instruction data <b>55</b>, and the MFP <b>1</b> prints an image based on the resource data file after conversion stored in A<b>24</b>.</p><p id="p-0109" num="0108">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data based on the instruction data <b>53</b> (A<b>41</b>). Information indicating the instruction data <b>54</b> shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is set in the instruction data information <b>534</b> of the instruction data <b>53</b>. The server <b>3</b> transmits the instruction data <b>54</b> based on the request of the MFP <b>1</b> (A<b>42</b>, S<b>103</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>). The MFP <b>1</b> executes the resource output process based on the received instruction data (A<b>43</b>, <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>). The identification information <b>542</b> of the instruction data <b>54</b> is the same as the identification information <b>554</b> of the instruction data <b>55</b>, and the MFP <b>1</b> transmits the image data of the resource data file after conversion stored in A<b>24</b>.</p><p id="p-0110" num="0109">The instruction data <b>54</b> does not include instruction data information. The MFP <b>1</b> deletes all the resource data files created by the first additional function (A<b>44</b>, S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), and ends the process of the first additional function. In A<b>44</b>, the MFP <b>1</b> deletes, for example, the resource data file stored in A<b>14</b> associated with the identification information <b>513</b> and the resource data file stored in A<b>24</b> associated with the identification information <b>554</b>.</p><p id="p-0111" num="0110">In the first additional function, one of the kind tag <b>531</b> that specifies printing of the instruction data <b>53</b> and the kind tag <b>541</b> that specifies the output of the instruction data <b>54</b> is an example of the first output instruction information, and the other is an example of the second output instruction information. In the first additional function, the execution order of printing and data transmission may be reversed, and the instruction data information <b>556</b> and the instruction data information <b>534</b> may be reversed. In a case where it is possible for the MFP <b>1</b> to print scan data as it is, the identification information <b>533</b> of the instruction data <b>53</b> may be the same as the identification information <b>513</b> of the instruction data <b>51</b>, that is, the resource data used for the print process may be scan data. In the MFP <b>1</b> of this embodiment, similarly to the first additional function, it is possible to design an additional function of transmitting the scan result to two or more locations instead of printing, and an additional function of performing printing and transmission to two or more locations.</p><p id="p-0112" num="0111">Next, the second additional function will be described with reference to <figref idref="DRAWINGS">FIG. <b>14</b></figref>. In the following, description of procedures that are the same as in the first additional function will be simplified. The second additional function is an additional function that combines scanning, composition, and printing. When executing the second additional function, the user sets a document in the MFP <b>1</b> (B<b>01</b>), selects a function URL indicating the second additional function (B<b>02</b>), and gives an instruction for the execution (B<b>03</b>, S<b>102</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0113" num="0112">The MFP <b>1</b> requests the server <b>3</b> to transmit the instruction data based on the instructed function URL (B<b>11</b>), and receives the instruction data from the server <b>3</b> (B<b>12</b>). In the second additional function, the instruction data corresponding to the function URL is the input-type instruction data instructing to perform scanning, similarly to the instruction data <b>51</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b>A</figref>. The MFP <b>1</b> executes a scan process based on the received instruction data (B<b>13</b>), and stores the scan result as a resource data file (B<b>14</b>).</p><p id="p-0114" num="0113">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (B<b>21</b>), and receives the instruction data from the server <b>3</b> (B<b>22</b>). The instruction data received in B<b>22</b> is the input-type instruction data similarly to the instruction data <b>52</b> shown in <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>. The MFP <b>1</b> executes a resource input process based on the received instruction data (B<b>23</b>), and stores the downloaded image data as a resource data file (B<b>24</b>). In B<b>24</b>, the MFP <b>1</b> stores, for example, image data indicating a logo.</p><p id="p-0115" num="0114">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (B<b>31</b>), and receives the instruction data from the server <b>3</b> (B<b>32</b>). The instruction data received in B<b>32</b> is the input-type instruction data. The MFP <b>1</b> executes a resource input process based on the received instruction data (B<b>33</b>), and stores the downloaded layout information as a resource data file (B<b>34</b>). In the layout information stored in B<b>34</b>, the resource data file stored in B<b>14</b> and the resource data file stored in B<b>24</b> are specified as resource data before processing.</p><p id="p-0116" num="0115">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (B<b>41</b>), and receives the instruction data from the server <b>3</b> (B<b>42</b>). The instruction data received in B<b>42</b> is, for example, processing-type instruction data instructing to perform composition using the layout information, similar to the instruction data <b>57</b> shown in <figref idref="DRAWINGS">FIG. <b>8</b>B</figref>. The MFP <b>1</b> executes the composition process (B<b>43</b>) based on the layout information stored in B<b>34</b>, and stores the resource data file after composition (B<b>44</b>). In B<b>44</b>, the MFP <b>1</b> stores, for example, a file containing image data in which the logo acquired in B<b>23</b> is superposed at a particular position on the scan result in B<b>13</b>.</p><p id="p-0117" num="0116">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (B<b>51</b>), and receives the instruction data from the server <b>3</b> (B<b>52</b>). The instruction data received in B<b>52</b> is, for example, the output-type instruction data instructing to perform printing, similar to the instruction data <b>53</b> shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>. The MFP <b>1</b> executes printing based on the resource data file stored in B<b>44</b> (B<b>53</b>). The instruction data received in B<b>52</b> does not include the instruction data information. The MFP <b>1</b> deletes all the resource data files created by the second additional function (B<b>54</b>, S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), and ends the process of the second additional function. In B<b>54</b>, the MFP <b>1</b> deletes all the resource data files stored in, for example, B<b>14</b>, B<b>24</b>, B<b>34</b>, and B<b>44</b>.</p><p id="p-0118" num="0117">In the second additional function, the MFP <b>1</b> stores each resource data file corresponding to the resource information <b>582</b> and <b>583</b> of the layout information <b>58</b> and the layout information <b>58</b> by the input-type instruction data received before the composition instruction data. The set of the instruction data <b>51</b> received in B<b>12</b> and the instruction data <b>52</b> received in B<b>22</b> for storing each resource data file is an example of a set of first input instruction data and second input instruction data. The set of the kind tag <b>511</b> of the instruction data <b>51</b> and the kind tag <b>521</b> of the instruction data <b>52</b> is an example of a set of first input instruction information and second input instruction information. The input-type instruction data for storing the layout information <b>58</b> is an example of third input instruction data. The execution order of the three input-type instruction data may be any order.</p><p id="p-0119" num="0118">After storing each resource data file according to the three input-type instruction data, the MFP <b>1</b> receives the instruction data instructing to perform the composition process and combines the image data included in the resource data files based on the layout information <b>58</b>. As the composition process, the MFP <b>1</b> generates a resource data file in which a plurality of image data is arranged according to the layout instructed in the layout information <b>58</b>, and stores the generated resource data file in association with the identification information specified in the composition instruction data. Each resource data file stored in B<b>14</b> and B<b>24</b> is an example of a set of first resource data and second resource data. The layout information <b>58</b> is an example of layout content data. The resource data file in which the layout information <b>58</b> is stored in association with the identification information is an example of layout resource data. By preparing the layout instruction as the layout information <b>58</b> and receiving the layout information <b>58</b> by the input-type instruction data, it is not necessary to prepare the layout information <b>58</b> in the MFP <b>1</b> in advance, and a common layout is applicable to a plurality of MFPs and so on.</p><p id="p-0120" num="0119">In the second additional function, if the instruction data received in B<b>52</b> is changed to an output-type instruction data other than printing, an additional function is created for outputting the content data in which the image data included in the two resource data files are arranged according to the layout information <b>58</b>.</p><p id="p-0121" num="0120">Next, the third additional function will be described with reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>. The third additional function is an additional function that combines input, replacement, and composition. When executing the third additional function, the user selects a function URL indicating the third additional function (C<b>01</b>) and gives an instruction for the execution (C<b>02</b>, S<b>102</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0122" num="0121">The MFP <b>1</b> requests the server <b>3</b> to transmit the instruction data based on the instructed function URL (C<b>11</b>), and receives the instruction data from the server <b>3</b> (C<b>12</b>). In the third additional function, the instruction data corresponding to the function URL is the input-type instruction data. The MFP <b>1</b> executes the resource input process based on the received instruction data (C<b>13</b>) and stores the inputted data (downloaded data) as a resource data file (C<b>14</b>). In C<b>14</b>, the MFP <b>1</b> stores, for example, image data indicating a particular form.</p><p id="p-0123" num="0122">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (C<b>21</b>), and receives the instruction data from the server <b>3</b> (C<b>22</b>). The instruction data received in C<b>22</b> is the input-type instruction data. The MFP <b>1</b> executes downloading as a resource input process (C<b>23</b>) based on the received instruction data, and stores the downloaded data as a resource data file (C<b>24</b>). The resource data file stored in C<b>24</b> is, for example, layout information <b>62</b> including resource information <b>621</b> and <b>622</b>, as shown in <figref idref="DRAWINGS">FIG. <b>16</b></figref>. The resource information <b>621</b> is information indicating a resource data file stored in C<b>14</b>, and the resource information <b>622</b> is information indicating a text box including a reserved word. The reserved word included in the resource information <b>622</b> is, for example, information indicating the user name of the user currently logged in. The layout information <b>62</b> is an example of layout content data, and the resource information <b>622</b> is an example of text content data.</p><p id="p-0124" num="0123">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (C<b>31</b>), and receives the instruction data from the server <b>3</b> (C<b>32</b>). The instruction data received in C<b>32</b> is the processing-type instruction data indicating replacement. Based on the received instruction data, the MFP <b>1</b> replaces the reserved word of the layout information stored in C<b>24</b> with text (C<b>33</b>), and stores the layout information after replacement (C<b>34</b>).</p><p id="p-0125" num="0124">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (C<b>41</b>), and receives the instruction data from the server <b>3</b> (C<b>42</b>). The instruction data received in C<b>42</b> is the processing-type instruction data instructing to perform composition. Based on the received instruction data, the MFP <b>1</b> combines the text box after replacement included in the layout information stored in C<b>34</b> and the image data stored in C<b>14</b>, and stores the resource data file after composition (C<b>44</b>).</p><p id="p-0126" num="0125">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (C<b>51</b>), and receives the instruction data from the server <b>3</b> (C<b>52</b>). The instruction data received in C<b>52</b> is the output-type instruction data instructing to perform printing. Based on the received instruction data, the MFP <b>1</b> executes printing based on the resource data file stored in C<b>44</b> (C<b>53</b>). The instruction data received in C<b>52</b> does not include the instruction data information. The MFP <b>1</b> deletes all the resource data files created by the third additional function (C<b>54</b>, S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), and ends the process of the third additional function. In C<b>54</b>, the MFP <b>1</b> deletes all the resource data files stored in, for example, C<b>14</b>, C<b>24</b>, C<b>34</b>, and C<b>44</b>.</p><p id="p-0127" num="0126">In the third additional function, the MFP <b>1</b> prints an image in which the login user name is superposed on the downloaded image data by performing replacement and composition using the layout information <b>62</b> incorporating the reserved word. In the third additional function, the input-type instruction data received in C<b>12</b> is an example of the first input instruction data, and the input-type instruction data received in C<b>22</b> is an example of the second input instruction data. The replacement instruction data received in C<b>32</b> and the composition instruction data received in C<b>42</b> are examples of processing instruction data, and the print instruction data received in C<b>52</b> is an example of output instruction data. The output of the resource data after processing is not limited to printing, but may be transmission, or may be both printing and transmission.</p><p id="p-0128" num="0127">Next, the fourth additional function will be described with reference to <figref idref="DRAWINGS">FIG. <b>17</b></figref>. The fourth additional function is an additional function that combines scanning, conversion, replacement, and two kinds of output. When executing the fourth additional function, the user sets a document in the MFP <b>1</b> (D<b>01</b>), selects a function URL indicating the fourth additional function (D<b>02</b>), and gives an instruction for the execution (D<b>03</b>, S<b>102</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>).</p><p id="p-0129" num="0128">The MFP <b>1</b> requests the server <b>3</b> to transmit the instruction data based on the instructed function URL (D<b>11</b>), and receives the instruction data from the server <b>3</b> (D<b>12</b>). In the fourth additional function, the instruction data corresponding to the function URL is the input-type instruction data instructing to perform scanning. The MFP <b>1</b> executes a scan process based on the received instruction data (D<b>13</b>), and stores the scan result as a resource data file (D<b>14</b>).</p><p id="p-0130" num="0129">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (D<b>21</b>), and receives the instruction data from the server <b>3</b> (D<b>22</b>). The instruction data received in D<b>22</b> is the processing-type instruction data instructing to perform the conversion. The MFP <b>1</b> executes a conversion process based on the received instruction data (D<b>23</b>), and stores the resource data file after conversion (D<b>24</b>). In D<b>24</b>, the MFP <b>1</b> stores, for example, a resource data file of the PDF format.</p><p id="p-0131" num="0130">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (D<b>31</b>), and receives the instruction data from the server <b>3</b> (D<b>32</b>). The instruction data received in D<b>32</b> is the output-type instruction data instructing to perform transmission. The MFP <b>1</b> executes the resource output process and transmits the resource data file stored in D<b>24</b> to the specified destination (D<b>33</b>).</p><p id="p-0132" num="0131">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (D<b>41</b>), and receives the instruction data from the server <b>3</b> (D<b>42</b>). The instruction data received in D<b>42</b> is the input-type instruction data instructing to perform the download. The MFP <b>1</b> executes downloading as a resource input process (D<b>43</b>) based on the received instruction data, and stores the downloaded data as a resource data file (D<b>44</b>). The content data downloaded in D<b>43</b> is, for example, the profile <b>60</b> before replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>B</figref>. The profile <b>60</b> before replacement includes, for example, reserved words corresponding to information indicating the user or device that has performed the scan, information indicating the scan settings, and so on.</p><p id="p-0133" num="0132">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (D<b>51</b>), and receives the instruction data from the server <b>3</b> (D<b>52</b>). The instruction data received in D<b>52</b> is the processing-type instruction data instructing to perform the replacement. The MFP <b>1</b> replaces the reserved word included in the profile <b>60</b> before replacement based on the received instruction data (D<b>53</b>), and stores the resource data after replacement (D<b>54</b>). The resource data stored in D<b>54</b> is, for example, the profile <b>61</b> after replacement shown in <figref idref="DRAWINGS">FIG. <b>11</b>C</figref>. The profile <b>61</b> after replacement contains information, as text , on the scan which has been performed by the MFP <b>1</b> in D<b>13</b>. The instruction data instructing to perform replacement includes, for example, format information instructing to perform output in the PDF format.</p><p id="p-0134" num="0133">The MFP <b>1</b> requests the server <b>3</b> to transmit the next instruction data (D<b>61</b>), and receives the instruction data from the server <b>3</b> (D<b>62</b>). The instruction data received in D<b>62</b> is the output-type instruction data instructing to perform transmission. The MFP <b>1</b> transmits the profile <b>61</b> after replacement of the PDF format to the specified destination (D<b>63</b>). The instruction data received in D<b>62</b> does not include the instruction data information. The MFP <b>1</b> deletes all the resource data files created by the fourth additional function (D<b>64</b>, S<b>122</b> in <figref idref="DRAWINGS">FIG. <b>2</b></figref>), and ends the process of the fourth additional function. In D<b>64</b>, the MFP <b>1</b> deletes all the resource data files stored in, for example, D<b>14</b>, D<b>24</b>, D<b>44</b>, and D<b>54</b>.</p><p id="p-0135" num="0134">In the fourth additional function, the MFP <b>1</b> performs scanning and outputs the result thereof, and creates and outputs a profile for collecting the scanning information. In the fourth additional function, the scan instruction data received in D<b>12</b> is an example of the first input instruction data, the conversion instruction data received in D<b>22</b> is an example of the first processing instruction data, and the transmission instruction data received in D<b>32</b> is an example of the first output instruction data. The download instruction data received in D<b>42</b> is an example of the second input instruction data, the replacement instruction data received in D<b>52</b> is an example of the second processing instruction data, and the transmission instruction data received in D<b>62</b> is an example of the second output instruction data. The profile <b>60</b> before replacement downloaded in D<b>43</b> is an example of profile content data, and the resource data file stored in D<b>44</b> is an example of profile resource data.</p><p id="p-0136" num="0135">The transmission in D<b>33</b> may be performed after the download in D<b>43</b> or the replacement in D<b>53</b>, or after the transmission in D<b>63</b>. The output of the scan data and the output of the profile <b>61</b> after replacement may be printing instead of transmission, or may be both transmission and printing. Instead of outputting the profile <b>61</b> after replacement as a file separate from the scan data, the profile <b>61</b> may be transmitted by being added to the scan data. For example, an additional function is designed by which, after converting scan data to the PDF format, the information of the profile <b>61</b> after replacement is embedded in the profile area of the PDF format file.</p><p id="p-0137" num="0136">Another type of the instruction data may include a deletion process of a resource data file. The MFP <b>1</b> may be configured to execute processes based on instruction data including &#x3c;Delete&#x3e; indicating deletion of a resource data file as a kind tag, for example. The instruction data <b>63</b> shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref> is an example of deletion instruction data. The instruction data <b>63</b> includes a kind tag <b>631</b> indicating deletion and identification information <b>632</b> indicating resource data of a deletion target. The kind tag <b>631</b> indicating deletion is an example of deletion information.</p><p id="p-0138" num="0137">In a case where the instruction data acquired in S<b>103</b> of the additional function process is the instruction data <b>63</b> shown in <figref idref="DRAWINGS">FIG. <b>18</b></figref>, the CPU <b>11</b> identifies the resource data file associated with the identification information <b>632</b> stored in S<b>111</b>, and deletes the identified resource data file. S<b>111</b> in this case is an example of the second deletion process.</p><p id="p-0139" num="0138">For example, a problem may occur if the CPU <b>11</b> executes a process of, based on the instruction data, storing a new resource data file associated with the same identification information as the identification information of the resource data file that already exists. Since a resource data file is individually deleted according to the instruction data, an additional function may be designed such that a resource data file is deleted at user's desired timing, and a resource data file associated with the same identification information is used while changing the content data.</p><p id="p-0140" num="0139">As described above in detail, when the MFP <b>1</b> of this embodiment receives an execution instruction of the additional function, the MFP <b>1</b> receives the instruction data based on the access information. The instruction data received by the MFP <b>1</b> includes input-type instruction data and output-type instruction data, and further includes an instruction to receive the next instruction data based on the instruction data information. Since the content data is specified using the identification information of the resource data in the input-type instruction data and the output-type instruction data, the input-type instruction data and the output-type instruction data are prepared separately. Therefore, regarding a series of processes based on the instruction data, the combination of the processes related to the input and the processes related to the output is customized, which increases flexibility in a series of processes that are executable by the instruction data. Since various series of processes are realized, processes requiring customization are realized without updating firmware.</p><p id="p-0141" num="0140">In the MFP <b>1</b> of this embodiment, the processing-type instruction data is prepared and resource data is processed, which enables a series of processes such as performing various types of processing on the inputted resource data and outputting new resource data. As a result, the variations of a series of processes that are executable by the instruction data increase, and processes with high added values are realized. For example, since the composition process is set as the processing-type process, the MFP <b>1</b> uses new content data obtained by combining a plurality of content data as resource data. Since the layout instruction is used in the composition process, an additional function to create resource data of a desired layout is designed to further increase flexibility. Since the layout instruction is prepared as layout information <b>58</b> separate from the instruction data and the layout information <b>58</b> is inputted based on the input-type instruction data, the instruction data of the composition instruction has a simple structure.</p><p id="p-0142" num="0141">After the series of processes of the additional function is completed, the MFP <b>1</b> of this embodiment automatically deletes the resource data stored as the result of executing the series of processes according to the instruction data. In this way, the load on the memory <b>12</b> that stores the resource data is reduced. Further, the MFP <b>1</b> of this embodiment also deletes resource data individually according to the instruction data of the deletion instruction. Thus, the resource data is deleted at any user's desired timing. For example, the resource data may be deleted immediately when it is no longer needed without waiting for the end of the series of processes.</p><p id="p-0143" num="0142">While the invention has been described in conjunction with various example structures outlined above and illustrated in the figures, various alternatives, modifications, variations, improvements, and/or substantial equivalents, whether known or that may be presently unforeseen, may become apparent to those having at least ordinary skill in the art. Accordingly, the example embodiments of the disclosure, as set forth above, are intended to be illustrative of the invention, and not limiting the invention. Various changes may be made without departing from the spirit and scope of the disclosure. Therefore, the disclosure is intended to embrace all known or later developed alternatives, modifications, variations, improvements, and/or substantial equivalents. Some specific examples of potential alternatives, modifications, or variations in the described invention are provided below:</p><p id="p-0144" num="0143">For example, the image processing apparatus is not limited to the MFP <b>1</b>, but may be applied to any apparatus having an image processing function and a communication function via a network, such as a printer, a scanner, a copier, and a fax machine.</p><p id="p-0145" num="0144">In the embodiment, a system configuration including one server <b>3</b> for storing instruction data and one storage <b>4</b> for storing content data is exemplified, but two or more servers or two or more storages may be included. Both the instruction data and the content data may be stored in one server and so on.</p><p id="p-0146" num="0145">In the embodiment, the user selects an additional function of an execution target and gives an execution instruction, but there may be an additional function of which the execution timing is specified in advance. For example, the MFP <b>1</b> may accept the designation of the execution timing when registering an additional function. The execution timing is, for example, a particular time such as every day or every week, every particular time, and when the power of the MFP <b>1</b> is turned on. In a case where an additional function of which the execution timing is specified is registered, the MFP <b>1</b> starts processes from S<b>103</b> of the additional function process shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> when the execution timing is reached, and requests the server <b>3</b> to transmit the instruction data based on the function URL.</p><p id="p-0147" num="0146">In the embodiment, the MFP <b>1</b> stores each resource data in the memory <b>12</b>, but it is not limited to the memory <b>12</b>, and any storage area in which data is written or read from the MFP <b>1</b> may be used. For example, a USB memory mounted on the MFP <b>1</b> or a network storage may be used. That is, the MFP <b>1</b> may store the resource data file in the USB memory or the network storage. In that case, the MFP <b>1</b> stores, for example, the identification information of the resource data and the information indicating the storage location of the resource data file in association with each other.</p><p id="p-0148" num="0147">In the embodiment, the identification information of the resource data is used as the file name of the resource data file as it is. Alternatively, the file name of the resource data file may be a file name including the identification information of the resource data. For example, in S<b>201</b> of the scan process, S<b>211</b> of the resource input process, S<b>241</b> of the conversion process, S<b>251</b> of the composition process, and S<b>261</b> of the replacement process, the MFP <b>1</b> may create a resource data file with a file name including the identification information of the specified resource data. In this case, in S<b>221</b> of the print process, S<b>231</b> of the resource output process, S<b>242</b> of the conversion process, S<b>252</b> of the composition process, and S<b>262</b> of the replacement process, the MFP <b>1</b> identifies, as a resource data file, a file with a file name including the identification information of the resource data.</p><p id="p-0149" num="0148">The MFP <b>1</b> may store the relationship between the identification information of the resource data and the file name of the resource data file, as the correspondence data and so on. For example, in S<b>201</b> of the scan process, S<b>211</b> of the resource input process, S<b>241</b> of the conversion process, S<b>251</b> of the composition process, and S<b>261</b> of the replacement process, the MFP <b>1</b> may store the file name of the created resource data file and the instructed identification information as the correspondence data. In this case, in S<b>221</b> of the print process, S<b>231</b> of the resource output process, S<b>242</b> of the conversion process, S<b>252</b> of the composition process, and S<b>262</b> of the replacement process, the MFP <b>1</b> refers to the correspondence data to identify the resource data file corresponding to the instructed identification information. In this case, when deleting the resource data in S<b>122</b> of the additional function process, the MFP <b>1</b> not only deletes the resource data file, but also deletes the correspondence data or deletes the information related to the resource data file in the correspondence data.</p><p id="p-0150" num="0149">In the embodiment, the instruction data <b>51</b> of the scan instruction is specified by the kind tag &#x3c;Scan&#x3e; different from the kind tag &#x3c;Input&#x3e; of the instruction data <b>52</b> instructing to perform input. Alternatively, the instruction data <b>51</b> may include the same kind tag &#x3c;Input&#x3e; as the instruction data <b>52</b> and may include information indicating scan as the input method. The instruction data <b>53</b> of the print instruction is specified by the kind tag &#x3c;Print&#x3e; different from the kind tag &#x3c;Output&#x3e; of the instruction data <b>54</b> instructing to perform output. Alternatively, the instruction data <b>53</b> may include the same kind tag &#x3c;Output&#x3e; as the instruction data <b>54</b> and may include information indicating printing as the output method.</p><p id="p-0151" num="0150">In the embodiment, the identification information of the resource data is fixed information embedded in each instruction data. Alternatively, the identification information may be a serial number and so on that is automatically assigned by the MFP <b>1</b> at the time of execution. In this case, for example, in the process of creating and storing resource data files such as S<b>201</b> of the scan process, S<b>211</b> of the resource input process, S<b>241</b> of the conversion process, S<b>251</b> of the composition process, and S<b>261</b> of the replacement processing, the MFP <b>1</b> assigns a number and determines the file name of the resource data file, and transmits the determined file name to the server <b>3</b> as identification information. When the server <b>3</b> transmits the instruction data, the server <b>3</b> transmits the instruction data including the file name received from the MFP <b>1</b>.</p><p id="p-0152" num="0151">The MFP <b>1</b> may accept an input of the user who specifies the identification information of the resource data. For example, the instruction data stored in the server <b>3</b> may include display instruction data instructing to perform screen display. For example, a screen for accepting selection of resource data of the download target may be displayed and the identification information of the resource data may be determined based on the user's selection. In this case, the instruction data instructing to store the resource data file may not include the identification information of the resource data, and the MFP <b>1</b> may display the file names of the resource data files stored in the memory <b>12</b> and accept the user's selection.</p><p id="p-0153" num="0152">In the embodiment, the instruction data of the scan instruction and the instruction data of the print instruction include the setting information related to the process, but the scan setting and the print setting may not be included. In a case where the setting information is not included, the MFP <b>1</b> may use a default setting stored in advance in the memory <b>12</b>. Further, in the embodiment, the processing-type instruction data includes the format information indicating the file format of the resource data after processing, but the format information may not be included. In a case where the format information is not included, the MFP <b>1</b> may store the data in the same file format as the resource data before processing, or may store the data in a default file format stored in advance in the memory <b>12</b>.</p><p id="p-0154" num="0153">For example, when the MFP <b>1</b> stores new resource data in association with the same identification information as the identification information of already existing resource data, the MFP <b>1</b> may overwrite the resource data. In that case, the MFP <b>1</b> may not support the kind tag indicating the deletion instruction.</p><p id="p-0155" num="0154">In any of the flowcharts disclosed in the embodiments, the plurality of processes in any of the plurality of steps may be arbitrarily changed in the execution order or executed in parallel as long as the process contents do not conflict with each other.</p><p id="p-0156" num="0155">The processes disclosed in the embodiment may be executed by a single CPU, a plurality of CPUs, hardware such as an ASIC, or a combination thereof. Further, the processes disclosed in the embodiment may be realized in various modes such as a storage medium storing a program for executing the processes, a method, and so on.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An image processing apparatus comprising:<claim-text>a communication interface; and</claim-text><claim-text>a controller configured to:<claim-text>acquire first access information indicating a transmission source of instruction data, the instruction data being data instructing the image processing apparatus to execute a process, the image processing apparatus being configured to execute an input-type process and an output-type process, an input-type instruction data being the instruction data indicating the input-type process, the input-type instruction data being one kind of the instruction data, the input-type instruction data including input process information, the input-type instruction data including input method information and input resource identification information, the input method information indicating an input method, the input resource identification information identifying resource data to be stored, an output-type instruction data being the instruction data indicating the output-type process, the output-type instruction data being one kind of the instruction data, the output-type instruction data including output process information, the output-type instruction data including output method information and output resource identification information, the output method information indicating an output method, the output resource identification information identifying resource data to be read, the instruction data further including reception instruction information instructing the image processing apparatus to receive next instruction data, the reception instruction information being associated with second access information indicating a transmission source of the next instruction data;</claim-text><claim-text>receive, via the communication interface, the instruction data transmitted from the transmission source of the instruction data based on the acquired first access information;</claim-text><claim-text>in response to receiving the input-type instruction data, input content data of a storage target by the input method corresponding to the input method information, the input method information being information included in the received input-type instruction data, and store resource data in which the inputted content data is associated with the input resource identification information included in the received input-type instruction data;</claim-text><claim-text>in response to receiving the output-type instruction data, read the resource data corresponding to the output resource identification information included in the received output-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data, wherein in a case where the content data of an output target is image data, an image indicated by the image data is outputted; and</claim-text><claim-text>in response to receiving the instruction data including the reception instruction information, receive, via the communication interface, the next instruction data from the transmission source of the next instruction data based on the second access information associated with the reception instruction information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The image processing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the controller is configured to:<claim-text>in response to receiving the instruction data not including the reception instruction information, delete the resource data that is stored after starting a first process and before finishing a second process, the first process being a process that is executed based on the instruction data received by acquiring the first access information, the second process being a process that is executed based on the instruction data not including the reception instruction information.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The image processing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instruction data includes, as kind information indicating a kind of the process to be executed by the image processing apparatus, one of the input process information, the output process information, and deletion information indicating deletion, the instruction data including the deletion information including deletion resource identification information for identifying resource data to be deleted; and<claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the instruction data including the deletion information, delete the resource data corresponding to the deletion resource identification information included in the received instruction data.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The image processing apparatus according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the image processing apparatus is configured to further execute a processing-type process, a processing-type instruction data being the instruction data indicating the processing-type process, the processing-type instruction data being one kind of the instruction data, the processing-type instruction data including processing process information indicating the processing-type process, the processing-type instruction data including processing method information, first resource identification information, and second resource identification information, the processing method information indicating a processing method, the first resource identification information identifying resource data to be read, the second resource identification information identifying resource data to be stored; and<claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the processing-type instruction data, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, apply the processing-type process to the read resource data by the processing method corresponding to the processing method information, the processing method information being information included in the received processing-type instruction data, and store new resource data in which the resource data after the processing-type process is associated with the second resource identification information included in the received processing-type instruction data, thereby performing the processing-type process.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the processing-type instruction data includes, as the processing method, composition instruction information indicating composition; and<claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the processing-type instruction data including the composition instruction information, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, generate new content data by combining a plurality of content data including the read resource data, and store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The image processing apparatus according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the controller is configured to:<claim-text>in response to receiving the processing-type instruction data including the composition instruction information, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, acquire a layout instruction indicating a layout of the combined plurality of content data, generate the new content data in which the plurality of content data including the read resource data is arranged in accordance with the layout indicated by the acquired layout instruction, and store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The image processing apparatus according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the input-type instruction data includes, as the input method, download instruction information indicating download, the input-type instruction data including input source information indicating an input source;<claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the input-type instruction data including the download instruction information, receive content data via the communication interface from the input source based on the input source information included in the received input-type instruction data, and store the resource data in which the received content data is associated with the input resource identification information included in the received input-type instruction data, the content data received from the input source including layout content data in which the layout instruction is described;</claim-text><claim-text>in response to receiving the layout content data, store layout resource data in which the received layout content data is associated with the input resource identification information included in the received input-type instruction data, the layout content data received from the input source including layout resource identification information for identifying resource data of a layout target; and</claim-text><claim-text>in response to receiving the processing-type instruction data including the composition instruction information and including identification information of the layout resource data as the first resource identification information, read the layout resource data, read the resource data corresponding to the layout resource identification information included in the layout content data of the read layout resource data, generate the new content data in which the plurality of content data including the read resource data is arranged in accordance with the layout indicated in the layout instruction described in the layout content data of the read layout resource data, and store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The image processing apparatus according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the controller is configured to:<claim-text>in the output-type process, output content data of a particular image format as a file format, the particular image format being a file format including a plurality of content data and arrangement information indicating a layout of the plurality of content data; and</claim-text><claim-text>in response to receiving the processing-type instruction data including the composition instruction information, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, generate the new content data of the particular image format including the plurality of content data and the arrangement information, the plurality of content data including the read resource data, the arrangement information being obtained by converting information indicating the layout of the plurality of content data into information of a format specified by the particular image format, and store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the processing-type instruction data includes conversion instruction information indicating conversion as the processing method;<claim-text>wherein the resource data is stored as a file; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the processing-type instruction data including the conversion instruction information, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, convert a file format of the read resource data, and store the new resource data in which resource data after conversion is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the image processing apparatus is configured to acquire reservation information indicating that a particular text is replaced in accordance with a predetermined definition;<claim-text>wherein the processing-type instruction data includes replacement instruction information indicating replacement as the processing method; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the processing-type instruction data including the replacement instruction information, read the resource data corresponding to the first resource identification information included in the received processing-type instruction data, replace the particular text corresponding to the reservation information included in the content data of the read resource data, and store the new resource data in which content data after replacement is associated with the second resource identification information included in the received processing-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input-type instruction data includes scan instruction information indicating scan as the input method;<claim-text>wherein the processing-type instruction data includes conversion instruction information indicating conversion as the processing method;</claim-text><claim-text>wherein the output-type instruction data includes first output instruction information or second output instruction information as the output method information; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving the input-type instruction data and determining that the received input-type instruction data includes the scan instruction information and includes the reception instruction information, as the input-type process, scan a document, store the resource data in which the content data indicating a scan result is associated with the input resource identification information included in the received input-type instruction data, and receive processing-type instruction data as the next instruction data;</claim-text><claim-text>in response to determining that the received processing-type instruction data includes the conversion instruction information and that the first resource identification information is same as the input resource identification information included in the input-type instruction data and that the received processing-type instruction data includes the reception instruction information, as the processing-type process, read the resource data stored by the input-type process based on the input-type instruction data, convert a file format of the read resource data, store the new resource data in which the resource data after conversion is associated with the second resource identification information included in the received processing-type instruction data, and receive, as the next instruction data, first output instruction data that is the output-type instruction data;</claim-text><claim-text>in response to determining that the received first output instruction data includes the first output instruction information and that the output resource identification information is same as the second resource identification information included in the processing-type instruction data and that the received first output instruction data includes the reception instruction information, as the output-type process, read the resource data stored by the processing-type process based on the processing-type instruction data, output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the first output instruction information, and receive, as the next instruction data, second output instruction data that is the output-type instruction data; and</claim-text><claim-text>in response to determining that the received second output instruction data includes the second output instruction information and that the output resource identification information is same as the second resource identification information included in the processing-type instruction data, as the output-type process, read the resource data stored by the processing-type process based on the processing-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the second output instruction information.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input-type instruction data includes first input instruction information or second input instruction information as the input method information;<claim-text>wherein the processing-type instruction data includes composition instruction information indicating composition as the processing method; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving first input instruction data as the input-type instruction data and determining that the received first input instruction data includes the first input instruction information and the reception instruction information, as the input-type process, input content data by the input method corresponding to the first input instruction information, store the resource data in which the inputted content data is associated with the input resource identification information included in the received first input instruction data, and receive, as the next instruction data, second input instruction data that is the input-type instruction data;</claim-text><claim-text>in response to determining that the received second input instruction data includes the second input instruction information and the reception instruction information, as the input-type process, input content data by the input method corresponding to the second input instruction information, and store the resource data in which the inputted content data is associated with the input resource identification information included in the received second input instruction data, and receive processing-type instruction data as the next instruction data;</claim-text><claim-text>in response to determining that the received processing-type instruction data includes the composition instruction information and the reception instruction information, as the processing-type process, read first resource data and second resource data, the first resource data being the resource data corresponding to the input resource identification information included in the first input instruction data, the second resource data being the resource data corresponding to the input resource identification information included in the second input instruction data, acquire a layout instruction indicating a layout of content data for composition, generate the new content data in which the read first resource data and the second resource data are arranged in accordance with the layout set in the acquired layout instruction, store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data, and receive output-type instruction data as the next instruction data; and</claim-text><claim-text>in response to determining that the output resource identification information in the received output instruction data is same as the second resource identification information included in the processing-type instruction data, as the output-type process, read the resource data stored by the processing-type process based on the processing-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input-type instruction data includes, as the input method, download instruction information indicating download or scan instruction information indicating scan, wherein the input-type instruction data including the download instruction information includes input source information indicating an input source;<claim-text>wherein the processing-type instruction data includes composition instruction information indicating composition as the processing method; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving first input instruction data as the input-type instruction data and determining that the received first input instruction data includes first input instruction information indicating one of the download instruction information and the scan instruction information and determining that the received first input instruction data includes the reception instruction information, as the input-type process, input content data by the input method corresponding to the first input instruction information, and store the resource data in which the inputted content data is associated with the input resource identification information included in the received first input instruction data, and receive, as the next instruction data, second input instruction data that is the input-type instruction data;</claim-text><claim-text>in response to determining that the received second input instruction data includes second input instruction information indicating another one of the download instruction information and the scan instruction information and determining that the received second input instruction data includes the reception instruction information, as the input-type process, input content data by the input method corresponding to the second input instruction information, and store the resource data in which the inputted content data is associated with the input resource identification information included in the received second input instruction data, and receive, as the next instruction data, third input instruction data that is the input-type instruction data;</claim-text><claim-text>in response to determining that the received third input instruction data includes the download instruction information and the reception instruction information, as the input-type process, receive layout content data in which a layout instruction is described, via the communication interface, from the input source indicated by the input source information included in the third input instruction data, and store layout resource data in which the received layout content data is associated with the input resource identification information included in the received third input instruction data, the received layout content data including the input resource identification information included in the first input instruction data and the input resource identification information included in the second input instruction data, and receive processing-type instruction data as the next instruction data;</claim-text><claim-text>in response to determining that the received processing-type instruction data includes the composition instruction information, that the first resource identification information is same as the input resource identification information included in the third input instruction data, and that the received processing-type instruction data includes the reception instruction information, as the processing-type process, read the layout resource data stored by the input-type process based on the third input instruction data, read first resource data and second resource data based on the layout content data of the read layout resource data, the first resource data being the resource data corresponding to the input resource identification information included in the first input instruction data, the second resource data being the resource data corresponding to the input resource identification information included in the second input instruction data, generate the new content data in which the read first resource data and second resource data are arranged in accordance with a layout set in the layout instruction described in the layout content data of the read layout resource data, store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data, and receive output-type instruction data as the next instruction data; and</claim-text><claim-text>in response to determining that the output resource identification information in the received output-type instruction data is same as the second resource identification information included in the processing-type instruction data, as the output-type process, read the resource data stored by the processing-type process based on the processing-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input-type instruction data includes download instruction information indicating download as the input method, wherein the input-type instruction data including the download instruction information includes input source information indicating an input source;<claim-text>wherein the processing-type instruction data includes composition instruction information indicating composition as the processing method; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving first input instruction data as the input-type instruction data and determining that the received first input instruction data includes the download instruction information and the reception instruction information, as the input-type process, receive content data via the communication interface from the input source indicated by the input source information included in the first input instruction data, and store the resource data in which the received content data is associated with the input resource identification information included in the received first input instruction data, and receive, as the next instruction data, second input instruction data that is the input-type instruction data;</claim-text><claim-text>in response to determining that the received second input instruction data includes the download instruction information and the reception instruction information, as the input-type process, receive layout content data in which a layout instruction is described, via the communication interface, from the input source indicated by the input source information included in the second input instruction data, and store layout resource data in which the received layout content data is associated with the input resource identification information included in the received second input instruction data, the layout content data indicating a layout of content data for composition, the layout content data received from the input source including text content data and the input resource identification information included in the first input instruction data, and receive processing-type instruction data as the next instruction data;</claim-text><claim-text>in response to determining that the received processing-type instruction data includes the composition instruction information, that the first resource identification information is same as the input resource identification information included in the second input instruction data and that the received processing-type instruction data includes the reception instruction information, as the processing-type process, read the layout resource data that is stored by the input-type process based on the second input instruction data, read the resource data corresponding to layout resource identification information included in the layout content data of the read layout resource data, generate new content data in which the read resource data and the text content data set in the layout instruction are arranged in accordance with the layout instruction described in the layout content data of the read layout resource data, and store the new resource data in which the generated new content data is associated with the second resource identification information included in the received processing-type instruction data, and receive output-type instruction data as the next instruction data; and</claim-text><claim-text>in response to determining that the output resource identification information in the received output-type instruction data is same as the second resource identification information included in the processing-type instruction data, as the output-type process, read the resource data stored by the processing-type process based on the processing-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The image processing apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input-type instruction data includes, as the input method, scan instruction information indicating scan or download instruction information indicating download, wherein the input-type instruction data including the download instruction information includes input source information indicating an input source;<claim-text>wherein the processing-type instruction data includes, as the processing method, conversion instruction information indicating conversion or replacement instruction information indicating replacement;</claim-text><claim-text>wherein the image processing apparatus is configured to acquire reservation information indicating that a particular text is replaced in accordance with a predetermined definition; and</claim-text><claim-text>wherein the controller is configured to:</claim-text><claim-text>in response to receiving first input instruction data as the input-type instruction data and determining that the received first input instruction data includes the scan instruction information and the reception instruction information, as the input-type process, scan a document, and store the resource data in which the content data indicating a scan result is associated with the input resource identification information included in the received first input instruction data, and receive, as the next instruction data, first processing instruction data that is the processing-type instruction data;</claim-text><claim-text>in response to determining that the received first processing instruction data includes the conversion instruction information, that the first resource identification information is same as the input resource identification information included in the first input instruction data and that the received first processing instruction data includes the reception instruction information, as the processing-type process, read the resource data stored by the input-type process based on the first input instruction data, convert a file format of the read resource data, and store the new resource data in which the resource data after conversion is associated with the second resource identification information included in the received first processing instruction data, and receive, as the next instruction data, first output instruction data that is the output-type instruction data;</claim-text><claim-text>in response to determining that the output resource identification information in the received first output instruction data is same as the second resource identification information included in the first processing instruction data and that the received first output instruction data includes the reception instruction information, as the output-type process, read the resource data stored by the processing-type process based on the first processing instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received first output instruction data, and receive, as the next instruction data, second input instruction data that is the input-type instruction data;</claim-text><claim-text>in response to determining that the received second input instruction data includes the download instruction information and the reception instruction information, as the input-type process, receive profile content data in which a profile is described, via the communication interface, from the input source indicated by the input source information included in the second input instruction data, and store profile resource data in which the received profile content data is associated with the input resource identification information included in the received second input instruction data, the received profile content data including the reservation information corresponding to a scan setting as the profile, and receive, as the next instruction data, second processing instruction data that is the processing-type instruction data;</claim-text><claim-text>in response to determining that the received second processing instruction data includes the replacement instruction information, that the first resource identification information is same as the input resource identification information included in the second input instruction data and that the received second processing instruction data includes the reception instruction information, as the processing-type process, read the profile resource data that is stored by the input-type process based on the second input instruction data, replace the particular text that is the reservation information included in the profile content data of the read profile resource data, and store the new resource data in which content data after replacement is associated with the second resource identification information included in the received second processing instruction data, and receive, as the next instruction data, second output instruction data that is the output-type instruction data; and</claim-text><claim-text>in response to determining that the output resource identification information in the received second output instruction data is same as the second resource identification information included in the second processing instruction data, as the output-type process, read the resource data stored by the processing-type process based on the second processing instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received second output instruction data.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. An image processing system comprising an image processing apparatus and a server,<claim-text>the image processing apparatus configured to:<claim-text>acquire first access information indicating a transmission source of instruction data, the instruction data being data instructing the image processing apparatus to execute a process, the image processing apparatus being configured to execute an input-type process and an output-type process, an input-type instruction data being the instruction data indicating the input-type process, the input-type instruction data being one kind of the instruction data, the input-type instruction data including input process information, the input-type instruction data including input method information and input resource identification information, the input method information indicating an input method, the input resource identification information identifying resource data to be stored, an output-type instruction data being the instruction data indicating the output-type process, the output-type instruction data being one kind of the instruction data, the output-type instruction data including output process information, the output-type instruction data including output method information and output resource identification information, the output method information indicating an output method, the output resource identification information identifying resource data to be read, the instruction data further including reception instruction information instructing the image processing apparatus to receive next instruction data, the reception instruction information being associated with second access information indicating a transmission source of the next instruction data; and</claim-text><claim-text>based on the first access information, transmit, to the server, a request for transmitting the instruction data;</claim-text></claim-text><claim-text>the server configured to:<claim-text>in response to receiving the request for transmitting the instruction data, transmit the instruction data to the image processing apparatus;</claim-text></claim-text><claim-text>the image processing apparatus configured to:<claim-text>receive the instruction data transmitted from the server;</claim-text><claim-text>in response to receiving the input-type instruction data from the server, input content data of a storage target by the input method corresponding to the input method information, the input method information being information included in the received input-type instruction data, and store resource data in which the inputted content data is associated with the input resource identification information included in the received input-type instruction data;</claim-text><claim-text>in response to receiving the output-type instruction data from the server, read the resource data corresponding to the output resource identification information included in the received output-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data, wherein in a case where the content data of an output target is image data, an image indicated by the image data is outputted; and</claim-text><claim-text>in response to receiving the instruction data including the reception instruction information from the server, receive the next instruction data from the transmission source of the next instruction data based on the second access information associated with the reception instruction information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. A non-transitory computer-readable storage medium storing a set of program instructions for an image processing apparatus, the set of program instructions, when executed by a controller of the image processing apparatus, causing the image processing apparatus to:<claim-text>acquire first access information indicating a transmission source of instruction data, the instruction data being data instructing the image processing apparatus to execute a process, the image processing apparatus being configured to execute an input-type process and an output-type process, an input-type instruction data being the instruction data indicating the input-type process, the input-type instruction data being one kind of the instruction data, the input-type instruction data including input process information, the input-type instruction data including input method information and input resource identification information, the input method information indicating an input method, the input resource identification information identifying resource data to be stored, an output-type instruction data being the instruction data indicating the output-type process, the output-type instruction data being one kind of the instruction data, the output-type instruction data including output process information, the output-type instruction data including output method information and output resource identification information, the output method information indicating an output method, the output resource identification information identifying resource data to be read, the instruction data further including reception instruction information instructing the image processing apparatus to receive next instruction data, the reception instruction information being associated with second access information indicating a transmission source of the next instruction data;</claim-text><claim-text>receive, via a communication interface of the image processing apparatus, the instruction data transmitted from the transmission source of the instruction data based on the acquired first access information;</claim-text><claim-text>in response to receiving the input-type instruction data, input content data of a storage target by the input method corresponding to the input method information, the input method information being information included in the received input-type instruction data, and store resource data in which the inputted content data is associated with the input resource identification information included in the received input-type instruction data;</claim-text><claim-text>in response to receiving the output-type instruction data, read the resource data corresponding to the output resource identification information included in the received output-type instruction data, and output the content data associated with the output resource identification information of the read resource data by the output method corresponding to the output method information, the output method information being information included in the received output-type instruction data, wherein in a case where the content data of an output target is image data, an image indicated by the image data is outputted; and</claim-text><claim-text>in response to receiving the instruction data including the reception instruction information, receive, via the communication interface, the next instruction data from the transmission source of the next instruction data based on the second access information associated with the reception instruction information.</claim-text></claim-text></claim></claims></us-patent-application>