<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004311A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004311</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17546999</doc-number><date>20211209</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>JP</country><doc-number>2021-109919</doc-number><date>20210701</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>06</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>14</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0622</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0673</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>3</main-group><subgroup>0646</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>12</main-group><subgroup>1408</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>2212</main-group><subgroup>1052</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">MEMORY SYSTEM AND STORAGE SYSTEM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Kioxia Corporation</orgname><address><city>Tokyo</city><country>JP</country></address></addressbook><residence><country>JP</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Kobayashi</last-name><first-name>Hirotomo</first-name><address><city>Yokosuka Kanagawa</city><country>JP</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">According to one embodiment, a memory system includes a nonvolatile memory and a controller. The controller manages first account information to be used for authentication of a first account and second account information to be used for authentication of a second account. The controller receives third account information from a host device. When the third account information matches the first account information, the controller permits access to at least a partial storage area of the nonvolatile memory based on a request from the host device and transmits first data that includes the second account information to a first memory system.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="166.62mm" wi="156.04mm" file="US20230004311A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="231.56mm" wi="123.19mm" orientation="landscape" file="US20230004311A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="251.97mm" wi="159.68mm" orientation="landscape" file="US20230004311A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="158.92mm" wi="64.43mm" orientation="landscape" file="US20230004311A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="224.37mm" wi="154.86mm" orientation="landscape" file="US20230004311A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="158.92mm" wi="64.26mm" orientation="landscape" file="US20230004311A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.52mm" wi="104.90mm" orientation="landscape" file="US20230004311A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="249.17mm" wi="158.67mm" orientation="landscape" file="US20230004311A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="235.54mm" wi="161.97mm" file="US20230004311A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="253.41mm" wi="158.24mm" orientation="landscape" file="US20230004311A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="236.05mm" wi="161.97mm" file="US20230004311A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="253.41mm" wi="159.26mm" orientation="landscape" file="US20230004311A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="236.56mm" wi="102.95mm" orientation="landscape" file="US20230004311A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="236.56mm" wi="159.94mm" orientation="landscape" file="US20230004311A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="226.82mm" wi="104.31mm" orientation="landscape" file="US20230004311A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="235.03mm" wi="159.94mm" orientation="landscape" file="US20230004311A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="187.37mm" wi="158.07mm" file="US20230004311A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="192.19mm" wi="158.16mm" file="US20230004311A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="253.32mm" wi="158.07mm" file="US20230004311A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="187.20mm" wi="158.16mm" file="US20230004311A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="251.54mm" wi="155.70mm" file="US20230004311A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="250.61mm" wi="159.43mm" file="US20230004311A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="212.09mm" wi="158.07mm" file="US20230004311A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="201.51mm" wi="158.16mm" file="US20230004311A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="225.81mm" wi="160.78mm" file="US20230004311A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="162.22mm" wi="158.16mm" file="US20230004311A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="241.55mm" wi="111.59mm" orientation="landscape" file="US20230004311A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="236.47mm" wi="107.19mm" orientation="landscape" file="US20230004311A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="236.47mm" wi="108.88mm" orientation="landscape" file="US20230004311A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="222.59mm" wi="100.50mm" orientation="landscape" file="US20230004311A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This application is based upon and claims the benefit of priority from Japanese Patent Application No. 2021-109919, filed Jul. 1, 2021, the entire contents of which are incorporated herein by reference.</p><heading id="h-0002" level="1">FIELD</heading><p id="p-0003" num="0002">Embodiments described herein relate generally to a technique for controlling a memory system that includes a nonvolatile memory, a storage system, and an information processing system.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">In recent years, memory systems including a nonvolatile memory are widely used. As one of such memory systems, a solid state drive (SSD) including a NAND flash memory is known. The SSD is used as a main storage for various computing devices.</p><p id="p-0005" num="0004">In order to prevent data leakage, a memory system sometimes has a self-encrypting function of automatically encrypting data at the time of writing. The memory system having the self-encryption function may be referred to as a self-encrypting drive (SED).</p><p id="p-0006" num="0005">One of the security standards to which the SED should conform is Trusted Computing Group (TCG) standard. TCG standard defines, for example, data encryption and access control for each partial area of storage.</p><p id="p-0007" num="0006">Further, the memory system may include not only a host interface (host I/F) for connection to a host but also a network interface (network I/F) for connection to a network.</p><p id="p-0008" num="0007">For example, when the memory system is an SED, a user needs to manage account information used for authentication of an account for accessing the SED. Therefore, when using multiple SEDs on a network from a client device, the user needs to manage multiple pieces of account information in order to access each of the SEDs. It is troublesome for the user to manage the multiple pieces of account information.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an example of a configuration of an information processing system according to an embodiment.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating an example of a configuration of a client device and a first-type memory system of the information processing system according to the embodiment.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a view illustrating an example of a configuration of an account management table used in the first-type memory system according to the embodiment.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example of a configuration of a second-type memory system of the information processing system according to the embodiment.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a view illustrating an example of a configuration of an account management table used in the second-type memory system according to the embodiment.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a view illustrating an example of a flow of account information in the information processing system according to the embodiment.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a view illustrating an example of an account issuance operation in the information processing system according to the embodiment.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a view illustrating examples of the account management table before and after new account information is registered in the second-type memory system according to the embodiment.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a view illustrating examples of the account management table before and after new account information is registered in the first-type memory system according to the embodiment.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a view illustrating an example of an account change operation in the information processing system according to the embodiment.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a view illustrating an example in which the account management table is updated according to an account change in the second-type memory system according to the embodiment.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a view illustrating an example in which the account management table is updated according to an account change in the first-type memory system according to the embodiment.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>13</b></figref> is a view illustrating an example of an access application operation in the information processing system according to the embodiment.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>14</b></figref> is a view illustrating an example of a flow of data in a case where user data is read in the information processing system according to the embodiment.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>15</b></figref> is a view illustrating an example of a read operation in the information processing system according to the embodiment.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>16</b></figref> is a view illustrating an example of a flow of data in a case where user data is written in the information processing system according to the embodiment.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>17</b></figref> is a view illustrating an example of a write operation in the information processing system according to the embodiment.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flowchart illustrating an example of the procedure of an account issuance request process executed in the first-type memory system according to the embodiment.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart illustrating an example of the procedure of a first authentication process executed in the first-type memory system according to the embodiment.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flowchart illustrating an example of the procedure of an account issuance process executed in the second-type memory system according to the embodiment.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a flowchart illustrating an example of the procedure of an account information registration process executed in the first-type memory system according to the embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a flowchart illustrating an example of the procedure of an account change request process executed in the first-type memory system according to the embodiment.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a flowchart illustrating an example of the procedure of an account change process executed in the second-type memory system according to the embodiment.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart illustrating an example of the procedure of a second authentication process executed in the second-type memory system according to the embodiment.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a flowchart illustrating an example of the procedure of an access application process executed in the first-type memory system according to the embodiment.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a flowchart illustrating an example of the procedure of an access control process executed in the second-type memory system according to the embodiment.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a flowchart illustrating an example of the procedure of an access permission confirmation process executed in the first-type memory system according to the embodiment.</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is a view illustrating another example of the flow of account information in the information processing system according to the embodiment.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is a view illustrating another example of the flow of data in the case where the user data is read in the information processing system according to the embodiment.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is a view illustrating another example of the flow of data in the case where the user data is written in the information processing system according to the embodiment.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is a block diagram illustrating a configuration of an information processing system according to a comparative example.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0040" num="0039">Various embodiments will be described hereinafter with reference to the accompanying drawings.</p><p id="p-0041" num="0040">In general, according to one embodiment, a memory system includes a nonvolatile memory and a controller. The controller communicates with a first memory system via a first interface that conforms to a first standard. The controller communicates with a host device via a second interface that conforms to a second standard different from the first standard. The controller manages first account information to be used for authentication of a first account and second account information to be used for authentication of a second account. The controller receives third account information from the host device. When the third account information matches the first account information, the controller permits access to at least a partial storage area of the nonvolatile memory based on a request from the host device and transmits first data that includes the second account information to the first memory system.</p><p id="p-0042" num="0041">First, an example of a configuration an information processing system <b>1</b> according to an embodiment will be described with reference to <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The information processing system <b>1</b> includes a client device <b>2</b> (hereinafter, referred to as a client <b>2</b>) and a storage system. The storage system includes multiple memory systems <b>3</b>. The information processing system <b>1</b> may include multiple clients <b>2</b>. The client <b>2</b> and the memory systems <b>3</b> are connectable to each other via a network <b>7</b>.</p><p id="p-0043" num="0042">The client <b>2</b> is an information processing device used by a user. The client <b>2</b> is realized as, for example, a personal computer. The client <b>2</b> functions as a host for one of the memory systems <b>3</b>.</p><p id="p-0044" num="0043">Each of the memory systems <b>3</b> is a semiconductor storage device configured to write data to a nonvolatile memory, such as a NAND flash memory, and read data from the nonvolatile memory. Each of the memory systems <b>3</b> is also referred to as a storage device.</p><p id="p-0045" num="0044">The memory systems <b>3</b> are realized as, for example, solid state drives (SSDs) each including a NAND flash memory. Hereinafter, a case where the memory systems <b>3</b> are realized as SSDs will be mainly explained, but the memory systems <b>3</b> may be realized as hard disk drives (HDDs).</p><p id="p-0046" num="0045">Each of the memory systems <b>3</b> has a self-encryption function of automatically encrypting data at the time of writing in order to prevent data leakage. That is, the memory systems <b>3</b> are self-encrypting drives (SEDs) each having the self-encryption function. The memory systems <b>3</b> conform to, for example, Trusted Computing Group (TCG) standard, and have the self-encryption function defined by TCG standard. TCG standard defines, for example, data encryption and access control for each partial area of storage.</p><p id="p-0047" num="0046">Each of the memory systems <b>3</b> is capable of operating as one of two types of memory systems.</p><p id="p-0048" num="0047">The first-type memory system <b>3</b> is a memory system connectable to the client <b>2</b> via a host interface (host I/F) and connectable to the second-type memory system <b>3</b> via a network interface (network I/F).</p><p id="p-0049" num="0048">The second-type memory system <b>3</b> is a memory system connectable to at least one of the client <b>2</b> and the first-type memory system <b>3</b> via the network I/F.</p><p id="p-0050" num="0049">Hereinafter, the memory system <b>3</b> operating as the first type is referred to as a user SSD <b>31</b>. Further, the memory system <b>3</b> operating as the second type is referred to as a network SSD <b>32</b>.</p><p id="p-0051" num="0050">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the information processing system <b>1</b> includes at least one user SSD <b>31</b>. The information processing system <b>1</b> may include multiple user SSDs <b>31</b>. Further, the information processing system <b>1</b> includes n network SSDs <b>32</b>. Here, n is an integer of one or more. The n network SSDs <b>32</b> include, for example, a first SSD <b>32</b>-<b>1</b>, a second SSD <b>32</b>-<b>2</b>, . . . , and an nth SSD <b>32</b>-<i>n</i>. Hereinafter, one of the n network SSDs <b>32</b> may be referred to as a network SSD <b>32</b>.</p><p id="p-0052" num="0051">The user SSD <b>31</b> and the n network SSDs <b>32</b> may be used as storages of the client <b>2</b>.</p><p id="p-0053" num="0052">The user SSD <b>31</b> is, for example, an SSD owned by one user who uses the client <b>2</b>. The user SSD <b>31</b> may be provided inside the client <b>2</b> or may be connected to the client <b>2</b> via a slot provided in the client <b>2</b> or a cable. The user SSD <b>31</b> may be accessed from the connected client <b>2</b>.</p><p id="p-0054" num="0053">An interface for connecting the client <b>2</b> and the user SSD <b>31</b> conforms to standards such as small computer system interface (SCSI), serial attached SCSI (SAS), AT attachment (ATA), serial ATA (SATA), PCI Express (PCIe) (registered trademark), NVM Express (NVMe) (registered trademark), or universal serial bus (USB).</p><p id="p-0055" num="0054">The network SSD <b>32</b> is an SSD that may be used by multiple users including the user who uses the client <b>2</b>. That is, the network SSD <b>32</b> may be accessed from multiple client devices including the client <b>2</b> through the network <b>7</b>.</p><p id="p-0056" num="0055">An interface for connecting the client <b>2</b> and the network SSD <b>32</b> conforms to standards such as Ethernet, Fibre channel, Infiniband, NVMe, or NVMe over Fabrics (NVMe-oF).</p><p id="p-0057" num="0056">When an account for accessing the user SSD <b>31</b> is successfully authenticated, the user SSD <b>31</b> permits the account to access the user SSD <b>31</b>. Similarly, when an account for accessing the network SSD <b>32</b> is successfully authenticated, the network SSD <b>32</b> permits the account to access the network SSD <b>32</b>.</p><p id="p-0058" num="0057">For example, the accounts are authenticated using account information input by the user using the client <b>2</b>. In this case, the user needs to manage multiple pieces of account information that correspond to multiple SSDs to be used (for example, the user SSD <b>31</b> and the n network SSDs <b>32</b>), respectively.</p><p id="p-0059" num="0058">In a case where the number of SSDs used by the user is large, it is troublesome for the user to manage a large number of pieces of account information. Further, in a case where the user forgets the account information, there is a possibility that the user is no longer accessible to data stored in the SSD. Further, in a case where the account information is known to a third party, there is a possibility that data stored in the SSD is leaked or tampered with.</p><p id="p-0060" num="0059">Thus, the information processing system <b>1</b> of the present embodiment is configured to enable the user to manage account information easily.</p><p id="p-0061" num="0060">Specifically, the user SSD <b>31</b> manages first account information to be used for authentication of a first account, and second account information to be used for authentication of a second account. The user SSD <b>31</b> receives third account information input by the user from the client <b>2</b> and then authenticates the first account. When the first account is successfully authenticated, that is, when the third account information matches the first account information, the user SSD <b>31</b> permits access to the user SSD <b>31</b> (more specifically, at least a partial storage area of its NAND flash memory) based on a request from the client <b>2</b>, and transmits data including the managed second account information to the network SSD <b>32</b>.</p><p id="p-0062" num="0061">The network SSD <b>32</b> receives the data including the second account information transmitted from the user SSD <b>31</b>, and then authenticates the second account. The network SSD <b>32</b> manages fourth account information to be used for authentication of the second account. When the second account is successfully authenticated, that is, when the second account information matches the fourth account information, the network SSD <b>32</b> permits access to the network SSD <b>32</b> (more specifically, at least a partial storage area of its NAND flash memory).</p><p id="p-0063" num="0062">In this manner, when the first account is successfully authenticated, the user SSD <b>31</b> permits access to the user SSD <b>31</b> and transmits the managed second account information of the network SSD <b>32</b> to the network SSD <b>32</b>. Therefore, the user does not need to manage the second account information. That is, the user can access the user SSD <b>31</b> and the network SSD <b>32</b> only by managing the account information of the user SSD <b>31</b>. Therefore, it is possible to enable the user to manage the account information easily.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating an example of a configuration of the client <b>2</b> and the user SSD <b>31</b>.</p><p id="p-0065" num="0064">(Client)</p><p id="p-0066" num="0065">The client <b>2</b> includes, for example, a central processing unit (CPU) <b>21</b>, a random access memory (RAM) <b>22</b>, a read-only memory (ROM) <b>23</b>, a network I/F <b>24</b>, and a storage interface (storage I/F) <b>25</b>. The RAM <b>22</b> is, for example, a static random access memory (SRAM). The ROM <b>23</b> is, for example, a NOR flash memory.</p><p id="p-0067" num="0066">The CPU <b>21</b> is a processor that controls operations of various components of the client <b>2</b>. The CPU <b>21</b> executes various programs loaded from the ROM <b>23</b> to the RAM <b>22</b>, for example. These programs include a basic input/output system (BIOS), an operating system (OS), and various application programs. The BIOS is a program for hardware control.</p><p id="p-0068" num="0067">The network I/F <b>24</b> controls communication through the network <b>7</b>. The network I/F <b>24</b> is realized as, for example, a circuit. The network I/F <b>24</b> includes, for example, a transmission unit that transmits signal and a reception unit that receives signal. The network I/F <b>24</b> performs communication through the network <b>7</b> using, for example, combinations of an Internet protocol address (IP address) and a media access control address (MAC address) that are assigned to the client <b>2</b>, the user SSD <b>31</b> and the network SSD <b>32</b>, respectively.</p><p id="p-0069" num="0068">The storage I/F <b>25</b> controls communication with the user SSD <b>31</b>. The storage I/F <b>25</b> is realized as a circuit, for example.</p><p id="p-0070" num="0069">(User SSD)</p><p id="p-0071" num="0070">The user SSD <b>31</b> includes, for example, a controller <b>11</b>, a DRAM <b>12</b> and a NAND flash memory <b>13</b>. The controller <b>11</b> may be realized with a circuit such as a system-on-a-chip (SoC). The controller <b>11</b> may include an SRAM. Alternatively, the DRAM <b>12</b> may be provided inside the controller <b>11</b>.</p><p id="p-0072" num="0071">The DRAM <b>12</b> includes, for example, storage areas for a firmware (FW) <b>121</b> and an account management interface (account management I/F) <b>122</b>, and a cache area of a logical-to-physical address conversion table <b>123</b>. The storage area of the DRAM <b>12</b> may be allocated as buffer areas used as a read buffer and a write buffer.</p><p id="p-0073" num="0072">The FW <b>121</b> is a program for controlling an operation of the controller <b>11</b>. The FW <b>121</b> is loaded from the NAND flash memory <b>13</b> to the DRAM <b>12</b>, for example.</p><p id="p-0074" num="0073">The account management I/F <b>122</b> is a software interface that manages an account for accessing the user SSD <b>31</b> and an account for accessing the network SSD <b>32</b>. The account management I/F <b>122</b> includes a program including instructions for enabling a CPU <b>112</b> of the controller <b>11</b> to execute a process for managing an account. The account management I/F <b>122</b> may be included in the FW <b>121</b>. The account management I/F <b>122</b> is loaded from the NAND flash memory <b>13</b> to the DRAM <b>12</b>, for example.</p><p id="p-0075" num="0074">The logical-to-physical address conversion table <b>123</b> contains information for managing mapping between each logical address and each physical address of the NAND flash memory <b>13</b>.</p><p id="p-0076" num="0075">The logical address is used by the client <b>2</b> for addressing the user SSD <b>31</b> and the network SSD <b>32</b>. The logical address is, for example, a logical block address (LBA).</p><p id="p-0077" num="0076">The NAND flash memory <b>13</b> includes multiple blocks. Each of the blocks includes multiple pages. The blocks each function as a minimum unit of a data erase operation. The block may also be referred to as an erase block or a physical block. Each of the pages includes memory cells connected to a single word line. The pages each function as a unit of a data write operation and a data read operation. Note that a word line may function as a unit of a data write operation and a data read operation.</p><p id="p-0078" num="0077">The tolerable maximum number of program/erase cycles (maximum number of P/E cycles) for each of the blocks is limited. One P/E cycle of a block includes a data erase operation to erase data stored in all memory cells in the block and a data write operation to write data in each page of the block.</p><p id="p-0079" num="0078">The controller <b>11</b> functions as a memory controller configured to control the NAND flash memory <b>13</b>.</p><p id="p-0080" num="0079">The controller <b>11</b> may function as a flash translation layer (FTL) configured to execute data management and block management of the NAND flash memory <b>13</b>. The data management executed by the FTL includes (1) management of mapping data indicative of relationship between each logical address and each physical address of the NAND flash memory <b>13</b>, and (2) process to hide a difference between read/write operations executed in units of page and erase operations executed in units of block. The block management includes management of defective block, wear leveling, and garbage collection (GC).</p><p id="p-0081" num="0080">Management of mapping between each logical address and each physical address is executed using the logical-to-physical address conversion table <b>123</b>. The controller <b>11</b> uses the logical-to-physical address conversion table <b>123</b> to manage the mapping between each logical address and each physical address with a certain management size. A physical address corresponding to a logical address indicates a physical memory location in the NAND flash memory <b>13</b> to which data of the logical address is written. The logical-to-physical address conversion table <b>123</b> may be loaded from the NAND flash memory <b>13</b> to the DRAM <b>12</b> when the user SSD <b>31</b> boots up.</p><p id="p-0082" num="0081">Data write into one page is executable only once in a single P/E cycle. Thus, the controller <b>11</b> writes updated data corresponding to a logical address not to an original physical memory location in which previous data corresponding to the logical address is stored but to a different physical memory location. Then, the controller <b>11</b> updates the logical-to-physical address conversion table <b>123</b> to associate the logical address with the different physical memory location than the original physical memory location and to invalidate the previous data.</p><p id="p-0083" num="0082">Data to which the logical-to-physical address conversion table <b>123</b> refers (that is, data associated with a logical address) will be referred to as valid data. Furthermore, data not associated with any logical address will be referred to as invalid data. The valid data is data to possibly be read by the client <b>2</b> later. The invalid data is data not to be read by the client <b>2</b> anymore.</p><p id="p-0084" num="0083">The controller <b>11</b> manages at least one storage area obtained by logically dividing the storage area of the NAND flash memory <b>13</b>. The storage area of the NAND flash memory <b>13</b> is allocated as, for example, a system area <b>131</b> and a user area <b>132</b>.</p><p id="p-0085" num="0084">In the system area <b>131</b>, for example, an account management table <b>41</b>, a secret key <b>421</b>, a public key <b>422</b>, and data encryption key (DEK) information <b>43</b> are stored.</p><p id="p-0086" num="0085">The account management table <b>41</b> manages account information that is used for authentication of an account for accessing the user SSD <b>31</b> and account information that is used for authentication of an account for accessing the network SSD <b>32</b>. The account information includes, for example, a login identification (ID) and a login password. The login ID is identification information used for authentication of the corresponding account. The login password is a password used for authentication of the corresponding account.</p><p id="p-0087" num="0086">Hereinafter, the account information used for authentication of the account for accessing the user SSD <b>31</b> is also referred to as account information for accessing the user SSD <b>31</b>. The account information used for authentication of the account for accessing the network SSD <b>32</b> is also referred to as account information for accessing the network SSD <b>32</b>.</p><p id="p-0088" num="0087">The account information for accessing the user SSD <b>31</b> is information for verifying the validation of account information that is input by the user using the client <b>2</b>.</p><p id="p-0089" num="0088">The account information for accessing the network SSD <b>32</b> is information to be transmitted to the network SSD <b>32</b> to request authentication of an account. That is, the account information for accessing the network SSD <b>32</b> is information whose validation is verified by the network SSD <b>32</b>.</p><p id="p-0090" num="0089">An example of a specific configuration of the account management table <b>41</b> will be described later with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0091" num="0090">The secret key <b>421</b> and the public key <b>422</b> are a pair of keys managed in the user SSD <b>31</b>. The secret key <b>421</b> and the public key <b>422</b> are also referred to as a master key pair of the user SSD <b>31</b>. The secret key <b>421</b> is kept confidential inside the user SSD <b>31</b>. The public key <b>422</b> is published to the outside of the user SSD <b>31</b>. The public key <b>422</b> is published with a certificate from a certificate authority (CA), for example. The certificate from the CA proves the validity of the public key <b>422</b>. In a case where data is encrypted with the secret key <b>421</b>, the encrypted data is decrypted only with the public key <b>422</b>. Further, in a case where data is encrypted with the public key <b>422</b>, the encrypted data is decrypted only with the secret key <b>421</b>. The secret key <b>421</b> and the public key <b>422</b> are used, for example, for encryption and decryption of data managed in the account management table <b>41</b> (for example, account information).</p><p id="p-0092" num="0091">The DEK information <b>43</b> includes information about a DEK. The DEK is used for encryption of data to be written into the NAND flash memory <b>13</b> and decryption of data read from the NAND flash memory <b>13</b>. Note that the DEK is not used for encryption and decryption of data managed in the account management table <b>41</b>. The DEK information <b>43</b> may include, for example, one or more DEKs that are associated with one or more accounts for accessing the NAND flash memory <b>13</b>, respectively. The DEK information <b>43</b> may include an encrypted DEK obtained by encrypting a DEK. The encrypted DEK is obtained, for example, by encrypting the DEK with a key encryption key (KEK) that is generated using the account information for accessing the user SSD <b>31</b>.</p><p id="p-0093" num="0092">The secret key <b>421</b> and the public key <b>422</b> (master key pair), and a DEK are, for example, management information associated with an account of a certain user.</p><p id="p-0094" num="0093">The account management table <b>41</b>, the secret key <b>421</b>, the public key <b>422</b>, and the DEK information <b>43</b> may be loaded from the NAND flash memory <b>13</b> to the DRAM <b>12</b>, for example, when the user SSD <b>31</b> boots up.</p><p id="p-0095" num="0094">The user area <b>132</b> is an area where access by the user is controlled using the account management table <b>41</b>. For example, at least a partial storage area of the user area <b>132</b> is associated with each of one or more accounts for accessing the user SSD <b>31</b>. When an account is successfully authenticated, access to the associated storage area is permitted.</p><p id="p-0096" num="0095">The controller <b>11</b> may include a host I/F <b>111</b>, the CPU <b>112</b>, a NAND interface (NAND I/F) <b>113</b>, a DRAM interface (DRAM I/F) <b>114</b>, a network I/F <b>115</b>, and an encryption circuit <b>116</b>. The host I/F <b>111</b>, the CPU <b>112</b>, the NAND I/F <b>113</b>, the DRAM I/F <b>114</b>, the network I/F <b>115</b>, and the encryption circuit <b>116</b> may be connected via a bus <b>110</b>.</p><p id="p-0097" num="0096">The host I/F <b>111</b> functions as a circuit that receives various commands, for example, input/output (I/O) commands, control commands and TCG commands from the client <b>2</b>. The I/O commands may include a write command and a read command. The control commands may include an unmap command (trim command) and a format command. The format command is a command for unmapping all the logical addresses in the user SSD <b>31</b> entirely. Further, the TCG commands may include commands for requesting the user SSD <b>31</b> to perform authentication, a change of setting related to access to the NAND flash memory <b>13</b>, and the like.</p><p id="p-0098" num="0097">Further, the host I/F <b>111</b> functions as a circuit that transmits a response, data, and the like to the client <b>2</b> in accordance with a received command.</p><p id="p-0099" num="0098">The NAND I/F <b>113</b> electrically connects the controller <b>11</b> and the NAND flash memory <b>13</b>. The NAND I/F <b>113</b> supports an interface standard such as toggle double data rate (DDR) and an open NAND flash interface (ONFI).</p><p id="p-0100" num="0099">The NAND I/F <b>113</b> functions as a NAND control circuit configured to control the NAND flash memory <b>13</b>. The NAND I/F <b>113</b> may be connected to memory chips in the NAND flash memory <b>13</b> via multiple channels. By operating the memory chips in parallel, it is possible to broaden an access bandwidth between the controller <b>11</b> and the NAND flash memory <b>13</b>.</p><p id="p-0101" num="0100">The DRAM I/F <b>114</b> functions as a DRAM control circuit configured to control access to the DRAM <b>12</b>. The storage area of the DRAM <b>12</b> is allocated to areas for storing the FW <b>121</b>, the account management I/F <b>122</b>, and the logical-to-physical address conversion table <b>123</b>, and a buffer area used as a read/write buffer.</p><p id="p-0102" num="0101">The network I/F <b>115</b> functions as a communication control circuit configured to control communication through the network <b>7</b>. The network I/F <b>115</b> includes, for example, a transmission unit that transmits signal and a reception unit that receives signal. The network I/F <b>115</b> performs communication through the network <b>7</b> using, for example, combinations of an IP address and a MAC address that are assigned to the client <b>2</b>, the user SSD <b>31</b>, and the network SSD <b>32</b>, respectively.</p><p id="p-0103" num="0102">The encryption circuit <b>116</b> performs encryption and decryption of user data. The encryption circuit <b>116</b> encrypts user data that is to be written into the NAND flash memory <b>13</b> via the NAND I/F <b>113</b>. The encryption circuit <b>116</b> decrypts user data that has read from the NAND flash memory <b>13</b> via the NAND I/F <b>113</b>. The encryption circuit <b>116</b> uses, for example, a DEK set by the CPU <b>112</b> for the encryption and decryption.</p><p id="p-0104" num="0103">The CPU <b>112</b> is a processor configured to control the respective units of the controller <b>11</b>. The CPU <b>112</b> executes various programs loaded from the NAND flash memory <b>13</b> to the DRAM <b>12</b>. These programs include the FW <b>121</b> and the account management I/F <b>122</b>. The operation of the CPU <b>112</b> is controlled by the FW <b>121</b> and the account management I/F <b>122</b> executed by the CPU <b>112</b>.</p><p id="p-0105" num="0104">The FW <b>121</b> is a program including instructions for enabling the CPU <b>112</b> to execute various processes. The FW <b>121</b> includes, for example, instructions for enabling the CPU <b>112</b> to execute command processes to process various commands from the client <b>2</b>.</p><p id="p-0106" num="0105">Processes realized by the CPU <b>112</b> executing the account management I/F <b>122</b> include, for example, a process of authenticating an account, a process of requesting new issuance of an account, a process of requesting a change of an account, and a process of applying for access.</p><p id="p-0107" num="0106">The process of authenticating an account is a process of verifying the validation of the account information (for example, a login ID and a login password) for accessing the user SSD <b>31</b> when the account information is received from the client <b>2</b>.</p><p id="p-0108" num="0107">The process of requesting new issuance of an account is a process of requesting the network SSD <b>32</b> to issue an account for accessing the network SSD <b>32</b>.</p><p id="p-0109" num="0108">The process of requesting a change of an account is a process of requesting the network SSD <b>32</b> to change account information used for authentication of an account issued by the network SSD <b>32</b>. The change of the account information is, for example, a change of at least one of a login ID and a login password.</p><p id="p-0110" num="0109">The process of applying for access is a process of applying for access to the network SSD <b>32</b> using an account issued by the network SSD <b>32</b>.</p><p id="p-0111" num="0110">The function of the respective units in the controller <b>11</b> may be realized by a dedicated hardware in the controller <b>11</b>, may be realized by the CPU <b>112</b> executing the FW <b>121</b> and the account management I/F <b>122</b>, or may be realized by a combination thereof.</p><p id="p-0112" num="0111">The CPU <b>112</b> functions as, for example, a key pair generation module <b>112</b>A, an encryption/decryption module <b>112</b>B, a signature generation/verification module <b>112</b>C, a random number generation module <b>112</b>D, an account processing module <b>112</b>E, a command processing module <b>112</b>F, a read processing module <b>112</b>G, and a write processing module <b>112</b>H. The CPU <b>112</b> functions as the command processing module <b>112</b>F, the read processing module <b>112</b>G, and the write processing module <b>112</b>H by executing the FW <b>121</b>, for example. The CPU <b>112</b> functions as the key pair generation module <b>112</b>A, the encryption/decryption module <b>112</b>B, the signature generation/verification module <b>112</b>C, the random number generation module <b>112</b>D, and the account processing module <b>112</b>E by executing the account management I/F <b>122</b>, for example.</p><p id="p-0113" num="0112">The key pair generation module <b>112</b>A generates the secret key <b>421</b> and the public key <b>422</b>. For example, the key pair generation module <b>112</b>A generates the secret key <b>421</b> and the public key <b>422</b> after the shipment of the user SSD <b>31</b> before the user starts practical use of the user SSD <b>31</b>. The key pair generation module <b>112</b>A stores the generated secret key <b>421</b> and public key <b>422</b> in the system area <b>131</b>.</p><p id="p-0114" num="0113">Specific operations of the encryption/decryption module <b>112</b>B, the signature generation/verification module <b>112</b>C, the random number generation module <b>112</b>D, and the account processing module <b>112</b>E will be described later with reference to <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>13</b></figref>. Specific operations of the command processing module <b>112</b>F, the read processing module <b>112</b>G, and the write processing module <b>112</b>H will be described later with reference to <figref idref="DRAWINGS">FIGS. <b>15</b> and <b>17</b></figref>.</p><p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. <b>3</b></figref> illustrates an example of a configuration of the account management table <b>41</b> used in the user SSD <b>31</b>. The account management table <b>41</b> may manage multiple accounts for accessing multiple SSDs, respectively. The multiple accounts may include an account for accessing the user SSD <b>31</b> and an account for accessing the network SSD <b>32</b>. The account for accessing the user SSD <b>31</b> is an account to be authenticated by the user SSD <b>31</b>. The account for accessing the network SSD <b>32</b> is an account to be authenticated by the network SSD <b>32</b>.</p><p id="p-0116" num="0115">The account management table <b>41</b> includes entries that correspond to accounts, respectively. Each of the entries includes, for example, an SSD identification information field, a login ID field, a login password field, and a public key field.</p><p id="p-0117" num="0116">In an entry corresponding to an account, the SSD identification information field indicates identification information of an SSD associated with the account. The SSD associated with the account is an SSD that should perform authentication of the account. The identification information of the SSD is information capable of identifying one SSD of the information processing system <b>1</b>. For example, a MAC address assigned to the SSD is used as the identification information of the SSD.</p><p id="p-0118" num="0117">The login ID field indicates data obtained by encrypting identification information (login ID) to be used for authentication of the corresponding account. For example, a random number is used as the login ID. Further, a character string generated on the basis of a specific naming convention may be used as the login ID. The data set in the login ID field is, for example, a login ID encrypted with a public key of an SSD which should perform authentication of the corresponding account. The data set in the login ID field is, for example, the login ID encrypted with the public key <b>422</b> of the user SSD <b>31</b>. Alternatively, the data set in the login ID field may be the login ID encrypted with a specific encryption key managed in the user SSD <b>31</b>.</p><p id="p-0119" num="0118">The login password field indicates a password (login password) to be used for authentication of the corresponding account. For example, a random number is used as the login password. The data set in the login password field is, for example, a login password encrypted with a public key of an SSD which should perform authentication of the corresponding account. The data set in the login password field is, for example, the login password encrypted with the public key <b>422</b> of the user SSD <b>31</b>. Alternatively, the data set in the login password field may be the login password encrypted with a specific encryption key managed in the user SSD <b>31</b>.</p><p id="p-0120" num="0119">The public key field indicates a public key published by an SSD that is associated with the corresponding account. That is, the public key field indicates the public key published by the SSD which should perform authentication of the corresponding account.</p><p id="p-0121" num="0120">Specifically, for example, in a case where the identification information of the user SSD <b>31</b> (&#x201c;User's SSD-1&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is set in the SSD identification information field, the public key <b>422</b> published by the user SSD <b>31</b> is set in the public key field.</p><p id="p-0122" num="0121">Further, for example, in a case where the identification information of the first SSD <b>32</b>-<b>1</b> (&#x201c;SSD-A&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is set in the SSD identification information field, the public key <b>462</b> published by the first SSD <b>32</b>-<b>1</b> is set in the public key field.</p><p id="p-0123" num="0122">Further, for example, in a case where the identification information of the second SSD <b>32</b>-<b>2</b> (&#x201c;SSD-B&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>) is set in the SSD identification information field, the public key <b>462</b> published by the second SSD <b>32</b>-<b>2</b> is set in the public key field.</p><p id="p-0124" num="0123">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a login ID &#x201c;user-admin&#x201d;, a login password &#x201c;user-admin-password&#x201d;, and a public key &#x201c;111111111 . . . &#x201d; are associated with an account that is associated with the user SSD <b>31</b> whose SSD identification information is &#x201c;User's SSD-1&#x201d;.</p><p id="p-0125" num="0124">A login ID &#x201c;ssd-a-user-25&#x201d;, a login password &#x201c;ssd-a-user-25-password&#x201d;, and a public key &#x201c;AAAAAAAAA . . . &#x201d; are associated with an account that is associated with the first SSD <b>32</b>-<b>1</b> whose SSD identification information is &#x201c;SSD-A&#x201d;.</p><p id="p-0126" num="0125">A login ID &#x201c;ssd-b-user-125&#x201d;, a login password &#x201c;ssd-b-user-125-password&#x201d;, and a public key &#x201c;BBBBBBBBB . . . &#x201d; are associated with an account that is associated with the second SSD <b>32</b>-<b>2</b> whose SSD identification information is &#x201c;SSD-B&#x201d;.</p><p id="p-0127" num="0126">(Network SSD)</p><p id="p-0128" num="0127"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example of a configuration of the network SSD <b>32</b>.</p><p id="p-0129" num="0128">The network SSD <b>32</b> includes, for example, a controller <b>15</b>, a DRAM <b>16</b>, and a NAND flash memory <b>17</b>. The controller <b>15</b> may be realized with a circuit such as an SoC. The controller <b>15</b> may include an SRAM. Alternatively, the DRAM <b>16</b> may be provided inside the controller <b>15</b>.</p><p id="p-0130" num="0129">The DRAM <b>16</b> includes, for example, storage areas of a FW <b>161</b> and an account management I/F <b>162</b>, and a cache area of a logical-to-physical address conversion table <b>163</b>. The storage area of the DRAM <b>16</b> may be allocated as buffer areas used as a read buffer and a write buffer.</p><p id="p-0131" num="0130">The FW <b>161</b> is a program for controlling an operation of the controller <b>15</b>. The FW <b>161</b> is loaded from the NAND flash memory <b>17</b> to the DRAM <b>16</b>, for example.</p><p id="p-0132" num="0131">The account management I/F <b>162</b> is a software interface that manages an account for accessing the network SSD <b>32</b>. The account management I/F <b>162</b> includes a program including instructions for enabling a CPU <b>152</b> of the controller <b>15</b> to execute a process for managing an account. The account management I/F <b>162</b> may be included in the FW <b>161</b>. The account management I/F <b>162</b> is loaded from the NAND flash memory <b>17</b> to the DRAM <b>16</b>, for example.</p><p id="p-0133" num="0132">The logical-to-physical address conversion table <b>163</b> contains information for managing mapping between each logical address and each physical address of the NAND flash memory <b>17</b>.</p><p id="p-0134" num="0133">The configuration of the NAND flash memory <b>17</b> is similar to the configuration of the NAND flash memory <b>13</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0135" num="0134">The controller <b>15</b> functions as a memory controller configured to control the NAND flash memory <b>17</b>. The control of the NAND flash memory <b>17</b> by the controller <b>15</b> is similar to the control of the NAND flash memory <b>13</b> by the controller <b>11</b> described above with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0136" num="0135">The controller <b>15</b> manages at least one storage area obtained by logically dividing the storage area of the NAND flash memory <b>17</b>. The storage area of the NAND flash memory <b>17</b> is allocated as, for example, a system area <b>171</b> and a user area <b>172</b>.</p><p id="p-0137" num="0136">In the system area <b>171</b>, for example, an account management table <b>45</b>, a secret key <b>461</b>, a public key <b>462</b>, and DEK information <b>47</b> are stored.</p><p id="p-0138" num="0137">The account management table <b>45</b> manages account information that is used for authentication of an account for accessing the network SSD <b>32</b> (i.e., account information for accessing the network SSD <b>32</b>).</p><p id="p-0139" num="0138">The account information for accessing the network SSD <b>32</b> is information for verifying the validation of account information received from the user SSD <b>31</b> when the user SSD <b>31</b> requests authentication of an account.</p><p id="p-0140" num="0139">Note that the account information for accessing the network SSD <b>32</b> may include information for verifying the validation of account information input by the user using the client <b>2</b>. For example, when the client <b>2</b> is connected to the network SSD <b>32</b> via a host I/F <b>151</b> of the controller <b>15</b>, the account information for accessing the network SSD <b>32</b> includes information for verifying the validation of the account information input by the user using the client <b>2</b>.</p><p id="p-0141" num="0140">An example of a specific configuration of the account management table <b>45</b> will be described later with reference to <figref idref="DRAWINGS">FIG. <b>5</b></figref>.</p><p id="p-0142" num="0141">The secret key <b>461</b> and the public key <b>462</b> are a pair of keys managed in the network SSD <b>32</b>. The secret key <b>461</b> and the public key <b>462</b> are also referred to as a master key pair of the network SSD <b>32</b>. The secret key <b>461</b> is kept confidential inside the network SSD <b>32</b>. The public key <b>462</b> is published to the outside of the network SSD <b>32</b>. The public key <b>462</b> is published with a certificate from a CA, for example. The certificate from the CA proves the validity of the public key <b>462</b>. In a case where data is encrypted with the secret key <b>461</b>, the encrypted data is decrypted only with the public key <b>462</b>. Further, in a case where data is encrypted with the public key <b>462</b>, the encrypted data is decrypted only with the secret key <b>461</b>. The secret key <b>461</b> and the public key <b>462</b> are used, for example, for encryption and decryption of data managed in the account management table <b>45</b>.</p><p id="p-0143" num="0142">The DEK information <b>47</b> includes information about a DEK. The DEK is used for encryption of data to be written into the NAND flash memory <b>17</b> and decryption of data read from the NAND flash memory <b>17</b>. Note that the DEK is not used for encryption and decryption of data managed in the account management table <b>45</b>. The DEK information <b>47</b> may include, for example, one or more DEKs that are associated with one or more accounts for accessing the network SSD <b>32</b> (more specifically, the user area <b>172</b> of the NAND flash memory <b>17</b>), respectively. The DEK information <b>47</b> may include an encrypted DEK obtained by encrypting a DEK. The encrypted DEK is obtained, for example, by encrypting the DEK with a KEK that is generated using the account information for accessing the network SSD <b>32</b>.</p><p id="p-0144" num="0143">The secret key <b>461</b> and the public key <b>462</b> (master key pair), and a DEK are, for example, management information associated with an account of a specific user.</p><p id="p-0145" num="0144">The account management table <b>45</b>, the secret key <b>461</b>, the public key <b>462</b>, and the DEK information <b>47</b> may be loaded from the NAND flash memory <b>17</b> to the DRAM <b>16</b>, for example, when the network SSD <b>32</b> boots up.</p><p id="p-0146" num="0145">The user area <b>172</b> is an area where access by the user is controlled using the account management table <b>45</b>. For example, at least a partial storage area of the user area <b>172</b> is associated with each of one or more accounts for accessing the network SSD <b>32</b>. When an account is successfully authenticated, access to the associated storage area is permitted.</p><p id="p-0147" num="0146">The controller <b>15</b> may include the host I/F <b>151</b>, the CPU <b>152</b>, a NAND I/F <b>153</b>, a DRAM I/F <b>154</b>, a network I/F <b>155</b>, and an encryption circuit <b>156</b>. The host I/F <b>151</b>, the CPU <b>152</b>, the NAND I/F <b>153</b>, the DRAM I/F <b>154</b>, the network I/F <b>155</b>, and the encryption circuit <b>156</b> may be connected via a bus <b>150</b>. The host I/F <b>151</b>, the CPU <b>152</b>, the NAND I/F <b>153</b>, the DRAM I/F <b>154</b>, the network I/F <b>155</b>, and the encryption circuit <b>156</b> have the same configuration and function as the host I/F <b>111</b>, the CPU <b>112</b>, the NAND I/F <b>113</b>, the DRAM I/F <b>114</b>, the network I/F <b>115</b>, and the encryption circuit <b>116</b> in the user SSD <b>31</b>, respectively, that are described above with reference to <figref idref="DRAWINGS">FIG. <b>2</b></figref>. Hereinafter, differences from the user SSD <b>31</b> will be mainly described.</p><p id="p-0148" num="0147">The CPU <b>152</b> is a processor configured to control the respective units of the controller <b>15</b>. The CPU <b>152</b> executes various programs loaded from the NAND flash memory <b>17</b> to the DRAM <b>16</b>. These programs include the FW <b>161</b> and the account management I/F <b>162</b>. The operation of the CPU <b>152</b> is controlled by the FW <b>161</b> and the account management I/F <b>162</b> executed by the CPU <b>152</b>.</p><p id="p-0149" num="0148">The FW <b>161</b> is a program including instructions for enabling the CPU <b>152</b> to execute various processes. The FW <b>161</b> includes, for example, instructions for enabling the CPU <b>152</b> to execute command processes to process various commands from the client <b>2</b> or the user SSD <b>31</b>.</p><p id="p-0150" num="0149">Processes realized by the CPU <b>152</b> executing the account management I/F <b>162</b> include, for example, a process of authenticating an account, a process of newly issuing an account, a process of changing an account, and a process of controlling access.</p><p id="p-0151" num="0150">The process of authenticating an account is a process of verifying the validation of the account information for accessing the network SSD <b>32</b> when the account information is received from the user SSD <b>31</b>.</p><p id="p-0152" num="0151">The process of newly issuing an account is a process of issuing an account for accessing the network SSD <b>32</b>.</p><p id="p-0153" num="0152">The process of changing an account is a process of changing account information to be used for authentication of an issued account. The change of the account information is, for example, a change of at least one of a login ID and a login password.</p><p id="p-0154" num="0153">The process of controlling access is a process of verifying the validation of account information received together with an access application and permitting access to the network SSD <b>32</b> when the validation is confirmed.</p><p id="p-0155" num="0154">The function of the respective units in the controller <b>15</b> may be realized by a dedicated hardware in the controller <b>15</b>, may be realized by the CPU <b>152</b> executing the FW <b>161</b> and the account management I/F <b>162</b>, or may be realized by a combination thereof.</p><p id="p-0156" num="0155">The CPU <b>152</b> functions as, for example, a key pair generation module <b>152</b>A, an encryption/decryption module <b>152</b>B, a signature generation/verification module <b>152</b>C, a random number generation module <b>152</b>D, an account processing module <b>152</b>E, a command processing module <b>152</b>F, a read processing module <b>152</b>G, and a write processing module <b>152</b>H. The CPU <b>152</b> functions as the command processing module <b>152</b>F, the read processing module <b>152</b>G, and the write processing module <b>152</b>H by executing the FW <b>161</b>, for example. The CPU <b>152</b> functions as the key pair generation module <b>152</b>A, the encryption/decryption module <b>152</b>B, the signature generation/verification module <b>152</b>C, the random number generation module <b>152</b>D, and the account processing module <b>152</b>E by executing the account management I/F <b>162</b>, for example.</p><p id="p-0157" num="0156">The key pair generation module <b>152</b>A generates the secret key <b>461</b> and the public key <b>462</b>. For example, the key pair generation module <b>152</b>A generates the secret key <b>461</b> and the public key <b>462</b> after the shipment of the network SSD <b>32</b> before the user starts practical use of the network SSD <b>32</b>. The key pair generation module <b>152</b>A stores the generated secret key <b>461</b> and public key <b>462</b> in the system area <b>171</b>.</p><p id="p-0158" num="0157">Specific operations of the encryption/decryption module <b>152</b>B, the signature generation/verification module <b>152</b>C, the random number generation module <b>152</b>D, and the account processing module <b>152</b>E will be described later with reference to <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>13</b></figref>. Specific operations of the command processing module <b>152</b>F, the read processing module <b>152</b>G, and the write processing module <b>152</b>H will be described later with reference to <figref idref="DRAWINGS">FIGS. <b>15</b> and <b>17</b></figref>.</p><p id="p-0159" num="0158"><figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates an example of a configuration of the account management table <b>45</b> used in the network SSD <b>32</b>. Hereinafter, a case where the network SSD <b>32</b> is the first SSD <b>32</b>-<b>1</b> will be explained for easy understanding. Note that the account management tables <b>45</b> that are used by the second SSD <b>32</b>-<b>2</b>, . . . , and the nth SSD <b>32</b>-<i>n</i>, respectively, have the same configuration as the account management table <b>45</b> of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0160" num="0159">The account management table <b>45</b> of the first SSD <b>32</b>-<b>1</b> may manage multiple accounts for accessing the first SSD <b>32</b>-<b>1</b>. The multiple accounts are accounts issued by the first SSD <b>32</b>-<b>1</b>. The multiple accounts may include, for example, an account for accessing the first SSD <b>32</b>-<b>1</b> from the client <b>2</b> that is connected to the first SSD <b>32</b>-<b>1</b>, and an account for accessing the first SSD <b>32</b>-<b>1</b> from the user SSD <b>31</b>.</p><p id="p-0161" num="0160">The account management table <b>45</b> includes entries that correspond to accounts, respectively. Each of the entries includes, for example, an SSD identification information field, a login ID field, a login password field, and a public key field.</p><p id="p-0162" num="0161">In an entry corresponding to an account, the SSD identification information field indicates identification information of an SSD associated with the account. The SSD associated with the account is either the first SSD <b>32</b>-<b>1</b> or an SSD that requests the first SSD <b>32</b>-<b>1</b> to authenticate the account. The SSD that requests the first SSD <b>32</b>-<b>1</b> to authenticate the account is, for example, the user SSD <b>31</b>.</p><p id="p-0163" num="0162">The login ID field indicates data obtained by encrypting identification information (login ID) to be used for authentication of the corresponding account. For example, a random number is used as the login ID. Further, a character string generated on the basis of a specific naming convention may be used as the login ID. The data set in the login ID field is, for example, the login ID encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. Alternatively, the data set in the login ID field may be the login ID encrypted with a specific encryption key managed in the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0164" num="0163">The login password field indicates a password (login password) to be used for authentication of the corresponding account. For example, a random number is used as the login password. The data set in the login password field is, for example, the login password encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. Alternatively, the data set in the login password field may be the login password encrypted with a specific encryption key managed in the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0165" num="0164">The public key field indicates a public key published by an SSD that is associated with a corresponding account.</p><p id="p-0166" num="0165">Specifically, for example, in a case where the identification information of the first SSD <b>32</b>-<b>1</b> (&#x201c;SSD-A&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>) is set in the SSD identification information field, the public key <b>462</b> published by the first SSD <b>32</b>-<b>1</b> is set in the public key field.</p><p id="p-0167" num="0166">Further, for example, in a case where the identification information of the user SSD <b>31</b> (&#x201c;User's SSD-1&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>) is set in the SSD identification information field, the public key <b>422</b> published by the user SSD <b>31</b> is set in the public key field.</p><p id="p-0168" num="0167">Further, for example, in a case where the identification information of another user SSD <b>31</b> (&#x201c;User's SSD-2&#x201d; in the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>) is set in the SSD identification information field, the public key <b>422</b> published by said another user SSD <b>31</b> is set in the public key field.</p><p id="p-0169" num="0168">In the example illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref>, a login ID &#x201c;admin&#x201d;, a login password &#x201c;ad-pwd&#x201d;, and a public key &#x201c;AAAAAAAAAA . . . &#x201d; are associated with an account that is associated with the first SSD <b>32</b>-<b>1</b> whose SSD identification information is &#x201c;SSD-A&#x201d;.</p><p id="p-0170" num="0169">A login ID &#x201c;ssd-a-user-25&#x201d;, a login password &#x201c;ssd-a-user-25-password&#x201d;, and a public key &#x201c;111111111 . . . &#x201d; are associated with an account that is associated with the user SSD <b>31</b> whose SSD identification information is &#x201c;User's SSD-1&#x201d;.</p><p id="p-0171" num="0170">A login ID &#x201c;ssd-a-user-100&#x201d;, a login password &#x201c;ssd-a-user-100-password&#x201d;, and a public key &#x201c;222222222 . . . &#x201d; are associated with an account that is associated with the user SSD <b>31</b> whose SSD identification information is &#x201c;User's SSD-2&#x201d;.</p><p id="p-0172" num="0171">Next, transfer of account information in the information processing system <b>1</b> will be described.</p><p id="p-0173" num="0172"><figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates an example of a flow of account information in the information processing system <b>1</b>. Here, a case where the user SSD <b>31</b> is connected to the client <b>2</b> via the host I/F <b>111</b> and is connected to the network <b>7</b> via the network I/F <b>115</b> will be explained.</p><p id="p-0174" num="0173">The user inputs account information to be used for authentication of an account for accessing the user SSD <b>31</b> by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>6</b></figref>).</p><p id="p-0175" num="0174">The client <b>2</b> transmits the account information input by the user to the user SSD <b>31</b> ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>6</b></figref>). The account information is transmitted from the client <b>2</b> to the user SSD <b>31</b> in plain text.</p><p id="p-0176" num="0175">Further, the user SSD <b>31</b> and the network SSD <b>32</b> transfer account information to be used for authentication of an account for accessing the network SSD <b>32</b> through the network <b>7</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>6</b></figref>). The user SSD <b>31</b> and the network SSD <b>32</b> encrypt the account information and transfer the encrypted account information. The encrypted account information used for authentication of the account for accessing the network SSD <b>32</b> is referred to as encrypted account information of the network SSD <b>32</b>.</p><p id="p-0177" num="0176">Specifically, for example, when an account has been newly issued, the network SSD <b>32</b> transmits encrypted account information of the network SSD <b>32</b> to the user SSD <b>31</b> through the network <b>7</b>. Further, for example, when requesting authentication of an account, the user SSD <b>31</b> transmits encrypted account information of the network SSD <b>32</b> to the network SSD <b>32</b> through the network <b>7</b>.</p><p id="p-0178" num="0177">In this manner, the account information for accessing the user SSD <b>31</b> is transmitted from the client <b>2</b> to the user SSD <b>31</b> in plain text. On the other hand, the account information for accessing the network SSD <b>32</b> is encrypted and transmitted through the network <b>7</b>. Since the account information transferred through the network <b>7</b> is encrypted, it is possible to prevent leakage and tampering of the account information.</p><p id="p-0179" num="0178">The transfer of the account information through the network <b>7</b> is performed in, for example, an operation for newly issuing an account for accessing the network SSD <b>32</b>, an operation for changing an account for accessing the network SSD <b>32</b>, and an operation for applying for access to the network SSD <b>32</b>.</p><p id="p-0180" num="0179">The operation for newly issuing an account for accessing the network SSD <b>32</b> is also referred to as an account issuance operation. The operation for changing an account for accessing the network SSD <b>32</b> is also referred to as an account change operation. The operation for applying for access to the network SSD <b>32</b> is also referred to as an access application operation. Examples of the account issuance operation, the account change operation, and the access application operation will be described below.</p><p id="p-0181" num="0180">(Account Issuance Operation)</p><p id="p-0182" num="0181">An example of the account issuance operation in the information processing system <b>1</b> will be described with reference to <figref idref="DRAWINGS">FIGS. <b>7</b> to <b>9</b></figref>. Here, as an example, a case where an account for accessing the first SSD <b>32</b>-<b>1</b> is issued to the user SSD <b>31</b> will be described.</p><p id="p-0183" num="0182"><figref idref="DRAWINGS">FIG. <b>7</b></figref> illustrates the example of the account issuance operation in the information processing system <b>1</b>.</p><p id="p-0184" num="0183">First, the client <b>2</b> transmits account information that is input according to the user's operation, to the user SSD <b>31</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). The account information input according to the user's operation is referred to as input account information. As described above with reference to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the input account information is sent in plain text. The input account information is used for authentication of an account (hereinafter, referred to as a first account) for accessing the user SSD <b>31</b>. Note that, for example, the user performs an operation of requesting new issuance of an account for accessing the first SSD <b>32</b>-<b>1</b> together with the operation of inputting the account information. The client <b>2</b> may transmit, to the user SSD <b>31</b>, a request for newly issuing the account for accessing the first SSD <b>32</b>-<b>1</b> together with the input account information.</p><p id="p-0185" num="0184">In the user SSD <b>31</b>, the account processing module <b>112</b>E receives the input account information that is transmitted from the client <b>2</b>, via the host I/F <b>111</b>. The account processing module <b>112</b>E verifies the validation of the input account information, using the account management table <b>41</b>.</p><p id="p-0186" num="0185">More specifically, the account processing module <b>112</b>E identifies an entry in the account management table <b>41</b> in which identification information of the user SSD <b>31</b> is set in the SSD identification information field. The identified entry is an entry corresponding to the first account for accessing the user SSD <b>31</b>. The account processing module <b>112</b>E acquires account information from the identified entry ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). As described above with reference to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, this account information is encrypted with the public key <b>422</b> of the user SSD <b>31</b>. The acquired encrypted account information is referred to as encrypted first registration account information. The encrypted first registration account information includes, for example, an encrypted login ID and an encrypted login password.</p><p id="p-0187" num="0186">The account processing module <b>112</b>E sends the encrypted first registration account information to the encryption/decryption module <b>112</b>B ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0188" num="0187">The encryption/decryption module <b>112</b>B decrypts the encrypted first registration account information, using the secret key <b>421</b> of the user SSD <b>31</b>, thereby acquiring first registration account information. Then, the encryption/decryption module <b>112</b>B sends the first registration account information to the account processing module <b>112</b>E ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0189" num="0188">The account processing module <b>112</b>E verifies the validation of the input account information, using the first registration account information. When the input account information matches the first registration account information, the account processing module <b>112</b>E determines that the validation of the input account information is confirmed. When the input account information is different from the first registration account information, the account processing module <b>112</b>E determines that the validation of the input account information is not confirmed.</p><p id="p-0190" num="0189">A case where the account information includes a login ID and a login password will be described more specifically. The login ID included in the input account information is referred to as an input login ID. The login password included in the input account information is referred to as an input login password. The login ID included in the first registration account information is referred to as a first registration login ID. The login password included in the first registration account information is referred to as a first registration login password.</p><p id="p-0191" num="0190">When the input login ID matches the first registration login ID, and the input login password matches the first registration login password, the account processing module <b>112</b>E determines that the validation of the input account information is confirmed. Further, when the input login ID is different from the first registration login ID, or when the input login password is different from the first registration login password, the account processing module <b>112</b>E determines that the validation of the input account information is not confirmed.</p><p id="p-0192" num="0191">When the validation of the input account information is not confirmed, the account processing module <b>112</b>E notifies the client <b>2</b> of failure of the authentication of the first account for accessing the user SSD <b>31</b> via the host I/F <b>111</b>.</p><p id="p-0193" num="0192">When the validation of the input account information is confirmed, the account processing module <b>112</b>E notifies the command processing module <b>112</b>F that the access to the user SSD <b>31</b> with the first account that corresponds to the input account information is permitted ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0194" num="0193">This notification enables the command processing module <b>112</b>F to receive an access command to the user SSD <b>31</b> with the first account. The access command is, for example, a read command or a write command. The access command may be another command that requests access to the NAND flash memory <b>13</b>, such as an unmap command, a format command, or a verify command.</p><p id="p-0195" num="0194">Note that, for example, at least a partial storage area of the user area <b>132</b> of the NAND flash memory <b>13</b> is associated with the first account. Permitting access to the user SSD <b>31</b> with an account means permitting access to the at least partial storage area of the user area <b>132</b> associated with the account.</p><p id="p-0196" num="0195">More specifically, the account processing module <b>112</b>E sets a DEK that is associated with the first account with which access has been permitted, in the encryption circuit <b>116</b> by using the DEK information <b>43</b>. The set DEK is used for encryption of data to be written into the user area <b>132</b> and decryption of data read from the user area <b>132</b>.</p><p id="p-0197" num="0196">Further, when the validation of the input account information is confirmed, the account processing module <b>112</b>E receives a request for newly issuing an account for accessing the first SSD <b>32</b>-<b>1</b> from the client <b>2</b> ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0198" num="0197">The account processing module <b>112</b>E generates data (hereinafter, referred to as first data) including the identification information of the user SSD <b>31</b> and an account new issuance request command in accordance with the received request. The account processing module <b>112</b>E sends the first data to the signature generation/verification module <b>112</b>C ((<b>7</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0199" num="0198">The signature generation/verification module <b>112</b>C generates signature data for the first data (hereinafter, referred to as first signature data). The first signature data is data for guaranteeing the authenticity of the first data. The signature generation/verification module <b>112</b>C transmits the first signature data to the account processing module <b>112</b>E ((<b>8</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0200" num="0199">Here, an operation example in which the signature generation/verification module <b>112</b>C generates signature data will be described. Data as a target for which signature data needs to be generated is referred to as target data.</p><p id="p-0201" num="0200">First, the signature generation/verification module <b>112</b>C calculates a hash value of the target data using a specific hash function. The specific hash function is, for example, a hash function defined in advance in the information processing system <b>1</b>. The signature generation/verification module <b>112</b>C encrypts the calculated hash value with the secret key <b>421</b> of the user SSD <b>31</b>. The encrypted hash value is used as signature data for the target data.</p><p id="p-0202" num="0201">With such an operation, the signature generation/verification module <b>112</b>C generates the first signature data for the first data.</p><p id="p-0203" num="0202">The account processing module <b>112</b>E transmits the first data and the first signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> ((<b>9</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0204" num="0203">In the first SSD <b>32</b>-<b>1</b>, the signature generation/verification module <b>152</b>C receives the first data and the first signature data that are transmitted from the user SSD <b>31</b>, via the network I/F <b>155</b>. The signature generation/verification module <b>152</b>C verifies the authenticity of the first data, using the first signature data.</p><p id="p-0205" num="0204">Here, an operation example in which the signature generation/verification module <b>152</b>C verifies the authenticity of data will be described. Data whose authenticity needs to be verified using signature data is referred to as target data.</p><p id="p-0206" num="0205">First, the signature generation/verification module <b>152</b>C calculates a hash value of the target data (hereinafter, referred to as a first hash value) using a specific hash function. The signature generation/verification module <b>152</b>C decrypts the signature data with the public key of an SSD that has generated the signature data, thereby acquiring a hash value (hereinafter, referred to as a second hash value). When the first hash value matches the second hash value, the signature generation/verification module <b>152</b>C determines that the authenticity of the target data is confirmed. When the first hash value is different from the second hash value, the signature generation/verification module <b>152</b>C determines that the authenticity of the target data is not confirmed.</p><p id="p-0207" num="0206">With such an operation, the signature generation/verification module <b>152</b>C verifies the authenticity of the first data, using the first signature data.</p><p id="p-0208" num="0207">Note that the signature generation/verification module <b>152</b>C may generate signature data for target data by using the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> similarly to the operation performed by the signature generation/verification module <b>112</b>C of the user SSD <b>31</b> described above. Further, the signature generation/verification module <b>112</b>C may verify the authenticity of target data by using signature data similarly to the operation performed by the signature generation/verification module <b>152</b>C.</p><p id="p-0209" num="0208">When the authenticity of the first data is not confirmed, the signature generation/verification module <b>152</b>C notifies the user SSD <b>31</b> of an error via the network I/F <b>155</b>, for example.</p><p id="p-0210" num="0209">When the authenticity of the first data is confirmed, the signature generation/verification module <b>152</b>C sends the first data to the account processing module <b>152</b>E ((<b>10</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0211" num="0210">The account processing module <b>152</b>E acquires the identification information of the user SSD <b>31</b> and the account new issuance request command from the first data. The account processing module <b>152</b>E works with the random number generation module <b>152</b>D, the encryption/decryption module <b>152</b>B, and the signature generation/verification module <b>152</b>C to newly issue an account (hereinafter, referred to as a second account) for accessing the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> on the basis of the acquired account new issuance request command.</p><p id="p-0212" num="0211">Specifically, the account processing module <b>152</b>E requests the random number generation module <b>152</b>D to generate a random number ((<b>11</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). The random number is used for the account information of the second account. More specifically, the account processing module <b>152</b>E requests the random number generation module <b>152</b>D to generate a random number to be used as a login password of the second account. The account processing module <b>152</b>E may further request the random number generation module <b>152</b>D to generate a random number to be used as a login ID of the second account.</p><p id="p-0213" num="0212">Alternatively, the account processing module <b>152</b>E may generate a character string based on a specific naming convention as the login ID. Hereinafter, it is assumed that the account processing module <b>152</b>E requests the random number generation module <b>152</b>D to generate a random number to be used as the login ID and generate a random number to be used as the login password.</p><p id="p-0214" num="0213">The random number generation module <b>152</b>D generates a random number to be used as the login ID and a random number to be used as the login password in accordance with the request from the account processing module <b>152</b>E. The random number generation module <b>152</b>D sends the generated two random numbers to the account processing module <b>152</b>E ((<b>12</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0215" num="0214">The account processing module <b>152</b>E generates the account information of the second account using the generated two random numbers. The generated account information is referred to as new account information. The new account information includes the random number as the login ID and the random number as the login password. The account processing module <b>152</b>E sends the new account information to the encryption/decryption module <b>152</b>B ((<b>13</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0216" num="0215">The encryption/decryption module <b>152</b>B encrypts the new account information with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. That is, the encryption/decryption module <b>152</b>B encrypts the login ID and the login password included in the new account information, using the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The encryption/decryption module <b>152</b>B sends the encrypted new account information to the account processing module <b>152</b>E ((<b>14</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0217" num="0216">The account processing module <b>152</b>E registers the new account information that is encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>, in the account management table <b>45</b> ((<b>15</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). The encrypted new account information includes the encrypted login ID and the encrypted login password.</p><p id="p-0218" num="0217">More specifically, the account processing module <b>152</b>E identifies an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field in the account management table <b>45</b> by using the identification information of the user SSD <b>31</b> that is acquired from the first data. The account processing module <b>152</b>E sets the encrypted login ID in the login ID field of the identified entry. Further, the account processing module <b>152</b>E sets the encrypted login password in the login password field of the identified entry.</p><p id="p-0219" num="0218"><figref idref="DRAWINGS">FIG. <b>8</b></figref> illustrates examples of the account management table <b>45</b> before and after encrypted new account information is registered by the account processing module <b>152</b>E. More specifically, <figref idref="DRAWINGS">FIG. <b>8</b>(A)</figref> illustrates an example of the account management table <b>45</b> before the encrypted new account information is registered. <figref idref="DRAWINGS">FIG. <b>8</b>(B)</figref> illustrates an example of the account management table <b>45</b> after the encrypted new account information is registered.</p><p id="p-0220" num="0219">As illustrated in <figref idref="DRAWINGS">FIG. <b>8</b>(A)</figref>, the account management table <b>45</b> includes an entry <b>451</b> that corresponds to an account associated with the user SSD <b>31</b>. In the entry <b>451</b>, the identification information of the user SSD <b>31</b> (&#x201c;User's SSD-1&#x201d; in <figref idref="DRAWINGS">FIG. <b>8</b>(A)</figref>) is set in the SSD identification information field. The public key <b>422</b> of the user SSD <b>31</b> (&#x201c;111111111 . . . &#x201d; in <figref idref="DRAWINGS">FIG. <b>8</b>(A)</figref>) is set in the public key field.</p><p id="p-0221" num="0220">For example, the account processing module <b>152</b>E receives the identification information and public key <b>422</b> of the user SSD <b>31</b> from the user SSD <b>31</b> before performing an operation of newly issuing an account to the user SSD <b>31</b>. The identification information and public key <b>422</b> of the user SSD <b>31</b> are transferred from the user SSD <b>31</b> to the first SSD <b>32</b>-<b>1</b> with, for example, encrypted communication using Secure Socket Layer (SSL)/Transport Layer Security (TLS).</p><p id="p-0222" num="0221">The account processing module <b>152</b>E generates the entry <b>451</b> using the received identification information and public key <b>422</b> of the user SSD <b>31</b>. The account processing module <b>152</b>E adds the generated entry <b>451</b> to the account management table <b>45</b>.</p><p id="p-0223" num="0222">As a result, as illustrated in <figref idref="DRAWINGS">FIG. <b>8</b>(A)</figref>, the entry <b>451</b>, in which values are set in the SSD identification information field and the public key field, and values are not set in the login ID field and the login password field, is added to the account management table <b>45</b>.</p><p id="p-0224" num="0223">The account processing module <b>152</b>E registers the encrypted new account information in the entry <b>451</b>.</p><p id="p-0225" num="0224">The account management table <b>45</b> of <figref idref="DRAWINGS">FIG. <b>8</b>(B)</figref> illustrates the entry <b>451</b> after the encrypted new account information is registered. In the entry <b>451</b>, the encrypted login ID (&#x201c;ssd-a-user-25&#x201d; in <figref idref="DRAWINGS">FIG. <b>8</b>(B)</figref>) is set in the login ID field. The encrypted login password (&#x201c;ssd-a-user-25-password&#x201d; in <figref idref="DRAWINGS">FIG. <b>8</b>(B)</figref>) is set in the login password field.</p><p id="p-0226" num="0225">The description will continue by returning to <figref idref="DRAWINGS">FIG. <b>7</b></figref>. The account processing module <b>152</b>E generates data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and a notification (new issuance completion notification) indicating that new issuance of an account is completed. The data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and the new issuance completion notification is referred to as second data.</p><p id="p-0227" num="0226">The encryption/decryption module <b>152</b>B encrypts the new account information with the public key <b>422</b> of the user SSD <b>31</b>. The new account information encrypted with the public key <b>422</b> of the user SSD <b>31</b> is referred to as third data. The encryption/decryption module <b>152</b>B sends the third data to the account processing module <b>152</b>E ((<b>16</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0228" num="0227">The account processing module <b>152</b>E sends the second data and the third data to the signature generation/verification module <b>152</b>C ((<b>17</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0229" num="0228">The signature generation/verification module <b>152</b>C generates signature data (hereinafter, referred to as second signature data) for the second data and the third data. The signature generation/verification module <b>152</b>C transmits the generated second signature data to the account processing module <b>152</b>E ((<b>18</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0230" num="0229">The account processing module <b>152</b>E transmits the second data, the third data, and the second signature data to the user SSD <b>31</b> via the network I/F <b>155</b> ((<b>19</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0231" num="0230">In the user SSD <b>31</b>, the signature generation/verification module <b>112</b>C receives the second data, the third data, and the second signature data transmitted from the first SSD <b>32</b>-<b>1</b>, via the network I/F <b>115</b>. The signature generation/verification module <b>112</b>C verifies the authenticity of the second data and the third data, using the second signature data.</p><p id="p-0232" num="0231">When the authenticity of the second data and the third data is not confirmed, the signature generation/verification module <b>112</b>C notifies the client <b>2</b> of an error via the host I/F <b>111</b>, for example. Alternatively, the signature generation/verification module <b>112</b>C may request the first SSD <b>32</b>-<b>1</b> to retransmit the data via the network I/F <b>115</b>.</p><p id="p-0233" num="0232">When the authenticity of the second data and the third data is confirmed, the signature generation/verification module <b>112</b>C sends the second data and the third data to the account processing module <b>112</b>E ((<b>20</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0234" num="0233">The account processing module <b>112</b>E acquires the identification information of the first SSD <b>32</b>-<b>1</b> and the new issuance completion notification from the second data. The account processing module <b>112</b>E sends the third data to the encryption/decryption module <b>112</b>B on the basis of the acquired new issuance completion notification ((<b>21</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). The third data includes the new account information encrypted with the public key <b>422</b> of the user SSD <b>31</b>.</p><p id="p-0235" num="0234">The encryption/decryption module <b>112</b>B decrypts the third data with the secret key <b>421</b> of the user SSD <b>31</b>, thereby acquiring the new account information. The encryption/decryption module <b>112</b>B encrypts the new account information with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. That is, the encryption/decryption module <b>112</b>B encrypts the login ID and the login password included in the new account information, using the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. Note that the encryption/decryption module <b>112</b>B may encrypt the new account information with the public key <b>422</b> of the user SSD <b>31</b>. The encryption/decryption module <b>112</b>B sends the encrypted new account information to the account processing module <b>112</b>E ((<b>22</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>).</p><p id="p-0236" num="0235">The account processing module <b>112</b>E registers the encrypted new account information in the account management table <b>41</b> ((<b>23</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>). Specifically, the account processing module <b>112</b>E identifies an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field in the account management table <b>41</b> by using the identification information of the first SSD <b>32</b>-<b>1</b> that is acquired from the second data. The account processing module <b>112</b>E sets the encrypted login ID in the login ID field of the identified entry. Further, the account processing module <b>112</b>E sets the encrypted login password in the login password field of the identified entry.</p><p id="p-0237" num="0236"><figref idref="DRAWINGS">FIG. <b>9</b></figref> illustrates examples of the account management table <b>41</b> before and after encrypted new account information is registered by the account processing module <b>112</b>E. More specifically, <figref idref="DRAWINGS">FIG. <b>9</b>(A)</figref> illustrates an example of the account management table <b>41</b> before the encrypted new account information is registered. <figref idref="DRAWINGS">FIG. <b>9</b>(B)</figref> illustrates an example of the account management table <b>41</b> after the encrypted new account information is registered.</p><p id="p-0238" num="0237">As illustrated in <figref idref="DRAWINGS">FIG. <b>9</b>(A)</figref>, the account management table <b>41</b> includes an entry <b>411</b> that corresponds to an account associated with the first SSD <b>32</b>-<b>1</b>. In the entry <b>411</b>, the identification information of the first SSD <b>32</b>-<b>1</b> (&#x201c;SSD-A&#x201d; in <figref idref="DRAWINGS">FIG. <b>9</b>(A)</figref>) is set in the SSD identification information field. The public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (&#x201c;AAAAAAAAA . . . &#x201d; in <figref idref="DRAWINGS">FIG. <b>9</b>(A)</figref>) is set in the public key field.</p><p id="p-0239" num="0238">For example, the account processing module <b>112</b>E receives the identification information and public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> from the first SSD <b>32</b>-<b>1</b> before performing an operation of requesting the first SSD <b>32</b>-<b>1</b> to newly issue an account. The identification information and public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> are transmitted from the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> with encrypted communication using SSL/TLS, for example.</p><p id="p-0240" num="0239">The account processing module <b>112</b>E generates the entry <b>411</b> using the received identification information and public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The account processing module <b>112</b>E adds the generated entry <b>411</b> to the account management table <b>41</b>.</p><p id="p-0241" num="0240">As a result, as illustrated in <figref idref="DRAWINGS">FIG. <b>9</b>(A)</figref>, the entry <b>411</b>, in which values are set in the SSD identification information field and the public key field, and values are not set in the login ID field and the login password field, is added to the account management table <b>41</b>.</p><p id="p-0242" num="0241">The account processing module <b>112</b>E registers the encrypted new account information in the entry <b>411</b>.</p><p id="p-0243" num="0242">The account management table <b>41</b> of <figref idref="DRAWINGS">FIG. <b>9</b>(B)</figref> illustrates the entry <b>411</b> after the encrypted new account information is registered. In the entry <b>411</b>, an encrypted login ID (&#x201c;ssd-a-user-25&#x201d; in <figref idref="DRAWINGS">FIG. <b>9</b>(B)</figref>) is set in the login ID field. An encrypted login password (&#x201c;ssd-a-user-25-password&#x201d; in <figref idref="DRAWINGS">FIG. <b>9</b>(B)</figref>) is set in the login password field.</p><p id="p-0244" num="0243">Note that the account processing module <b>112</b>E may register the new account information that is encrypted with the public key <b>422</b> of the user SSD <b>31</b>, in the account management table <b>41</b>.</p><p id="p-0245" num="0244">Through the account issuance operation as described above, the first SSD <b>32</b>-<b>1</b> can register the new account information for accessing the first SSD <b>32</b>-<b>1</b> in the account management table <b>45</b>. Then, the user SSD <b>31</b> can register the new account information in the account management table <b>41</b>.</p><p id="p-0246" num="0245">More specifically, when the first account for accessing the user SSD <b>31</b> from the client <b>2</b> is successfully authenticated, the user SSD <b>31</b> transmits the first data and the first signature data to the first SSD <b>32</b>-<b>1</b>. The first data includes the account new issuance request command.</p><p id="p-0247" num="0246">When the authenticity of the first data is confirmed using the first signature data, the first SSD <b>32</b>-<b>1</b> registers the encrypted new account information in the account management table <b>45</b>. Then, the first SSD <b>32</b>-<b>1</b> transmits the second data, the third data, and the second signature data to the user SSD <b>31</b>. The second data includes the notification indicating that the new issuance of the account is completed. The third data includes the encrypted new account information.</p><p id="p-0248" num="0247">When the authenticity of the second data and the third data is confirmed using the second signature data, the user SSD <b>31</b> registers the encrypted new account information in the account management table <b>41</b>.</p><p id="p-0249" num="0248">As a result, the user SSD <b>31</b> can request the first SSD <b>32</b>-<b>1</b> to authenticate the second account for accessing the first SSD <b>32</b>-<b>1</b> by using the encrypted new account information registered in the account management table <b>41</b>. Further, the first SSD <b>32</b>-<b>1</b> can perform authentication of the second account for accessing the first SSD <b>32</b>-<b>1</b> by using the encrypted new account information registered in the account management table <b>45</b>.</p><p id="p-0250" num="0249">As described above, the new account information transmitted from the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> is encrypted. Further, the account information stored in each of the account management tables <b>41</b> and <b>45</b> is also encrypted. As a result, it is possible to prevent leakage of the account information in plain text.</p><p id="p-0251" num="0250">(Account Change Operation)</p><p id="p-0252" num="0251">With reference to <figref idref="DRAWINGS">FIGS. <b>10</b> to <b>12</b></figref>, an example of the account change operation in the information processing system <b>1</b> will be described. Here, as an example, a case where an account for accessing the first SSD <b>32</b>-<b>1</b>, which is associated with the user SSD <b>31</b>, is changed will be described.</p><p id="p-0253" num="0252"><figref idref="DRAWINGS">FIG. <b>10</b></figref> illustrates the example of the account change operation in the information processing system <b>1</b>. Operations from (<b>1</b>) to (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref> are similar to the operations from (<b>1</b>) to (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. That is, the account processing module <b>112</b>E and the encryption/decryption module <b>112</b>B of the user SSD <b>31</b> verify the validation of the account information input on the client <b>2</b> (input account information), using the account management table <b>41</b>. Note that, for example, the user performs an operation of requesting a change of the second account for accessing the first SSD <b>32</b>-<b>1</b> together with an operation of inputting the account information. The client <b>2</b> may transmit, to the user SSD <b>31</b>, the request for changing the second account for accessing the first SSD <b>32</b>-<b>1</b> together with the input account information.</p><p id="p-0254" num="0253">When the validation of the input account information is not confirmed, the account processing module <b>112</b>E notifies the client <b>2</b> of failure of authentication of the first account for accessing the user SSD <b>31</b> via the host I/F <b>111</b>.</p><p id="p-0255" num="0254">When the validation of the input account information is confirmed, the account processing module <b>112</b>E notifies the command processing module <b>112</b>F that the access to the user SSD <b>31</b> with the first account that corresponds to the input account information is permitted ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). This notification enables the command processing module <b>112</b>F to receive an access command to the user SSD <b>31</b> with the first account.</p><p id="p-0256" num="0255">Further, when the validation of the input account information is confirmed, the account processing module <b>112</b>E receives, from the client <b>2</b>, the request for changing the second account for accessing the first SSD <b>32</b>-<b>1</b> ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The account processing module <b>112</b>E generates data that includes the identification information of the user SSD <b>31</b> and an account change request command (hereinafter, referred to as fourth data) in accordance with the received request.</p><p id="p-0257" num="0256">Then, the account processing module <b>112</b>E acquires the encrypted account information of the second account from the account management table <b>41</b> ((<b>7</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The encrypted account information of the second account is referred to as fifth data.</p><p id="p-0258" num="0257">More specifically, the account processing module <b>112</b>E identifies an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field in the account management table <b>41</b>. The account processing module <b>112</b>E acquires an encrypted login ID from the login ID field of the identified entry. The account processing module <b>112</b>E acquires an encrypted login password from the login password field of the identified entry. These login ID and login password are also referred to as account information before the change.</p><p id="p-0259" num="0258">Next, the account processing module <b>112</b>E requests the random number generation module <b>112</b>D to generate a random number ((<b>8</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The random number is used for changed account information of the second account. More specifically, the account processing module <b>112</b>E requests the random number generation module <b>112</b>D to generate a random number to be used as a changed login password. The account processing module <b>112</b>E may further request the random number generation module <b>112</b>D to generate a random number to be used as a changed login ID. Alternatively, the account processing module <b>112</b>E may generate a character string based on a specific naming convention as the login ID.</p><p id="p-0260" num="0259">The account information (the login ID and login password) before the change is information that was generated by the first SSD <b>32</b>-<b>1</b>, and is not information determined by the user. Therefore, here, it is assumed a case where the user desires to change the account information before the change, which was generated by the first SSD <b>32</b>-<b>1</b>, to account information (login ID and login password) determined by the user SSD <b>31</b>. Hereinafter, it is assumed that the account processing module <b>112</b>E requests the random number generation module <b>112</b>D to generate a random number to be used as the changed login ID and generate a random number to be used as the changed login password.</p><p id="p-0261" num="0260">The random number generation module <b>112</b>D generates a random number to be used as the changed login ID and a random number to be used as the changed login password in accordance with the request from the account processing module <b>112</b>E. The random number generation module <b>112</b>D sends the generated two random numbers to the account processing module <b>112</b>E ((<b>9</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0262" num="0261">The account processing module <b>112</b>E generates the changed account information using the generated two random numbers. The changed account information includes the random number as the changed login ID and the random number as the changed login password. The account processing module <b>112</b>E sends the changed account information to the encryption/decryption module <b>112</b>B ((<b>10</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0263" num="0262">The encryption/decryption module <b>112</b>B encrypts the changed account information with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. That is, the encryption/decryption module <b>112</b>B encrypts the changed login ID and the changed login password, using the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The encrypted changed account information is referred to as sixth data. The encryption/decryption module <b>112</b>B sends the sixth data to the account processing module <b>112</b>E ((<b>11</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0264" num="0263">The account processing module <b>112</b>E sends the fourth data, the fifth data, and the sixth data to the signature generation/verification module <b>112</b>C ((<b>12</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0265" num="0264">The signature generation/verification module <b>112</b>C generates signature data for the fourth data, the fifth data, and the sixth data (hereinafter, referred to as third signature data) by using the secret key <b>421</b> of the user SSD <b>31</b>. The signature generation/verification module <b>112</b>C transmits the generated third signature data to the account processing module <b>112</b>E ((<b>13</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0266" num="0265">The account processing module <b>112</b>E transmits the fourth data, the fifth data, the sixth data, and the third signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> ((<b>14</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0267" num="0266">In the first SSD <b>32</b>-<b>1</b>, the signature generation/verification module <b>152</b>C receives the fourth data, the fifth data, the sixth data, and the third signature data that are transmitted from the user SSD <b>31</b>, via the network I/F <b>155</b>. The signature generation/verification module <b>152</b>C verifies the authenticity of the fourth data, the fifth data, and the sixth data, using the third signature data.</p><p id="p-0268" num="0267">When the authenticity of the fourth data, the fifth data, and the sixth data is not confirmed, the signature generation/verification module <b>152</b>C notifies the user SSD <b>31</b> of an error via the network I/F <b>155</b>, for example. Alternatively, the signature generation/verification module <b>152</b>C may request the user SSD <b>31</b> to retransmit the data.</p><p id="p-0269" num="0268">When the authenticity of the fourth data, the fifth data, and the sixth data is confirmed, the signature generation/verification module <b>152</b>C sends the fourth data, the fifth data, and the sixth data to the account processing module <b>152</b>E ((<b>15</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0270" num="0269">The account processing module <b>152</b>E acquires the identification information of the user SSD <b>31</b> and the account change request command from the fourth data. The account processing module <b>152</b>E sends the fifth data to the encryption/decryption module <b>152</b>B in accordance with the acquired account change request command ((<b>16</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The fifth data includes the account information before the change encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0271" num="0270">The encryption/decryption module <b>152</b>B decrypts the fifth data with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring the account information before the change. The encryption/decryption module <b>152</b>B sends the account information before the change to the account processing module <b>152</b>E ((<b>17</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0272" num="0271">The account processing module <b>152</b>E verifies the validation of the account information before the change, using the account management table <b>45</b>.</p><p id="p-0273" num="0272">More specifically, the account processing module <b>152</b>E identifies an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field in the account management table <b>45</b>. The identified entry is an entry that corresponds to the second account for accessing the first SSD <b>32</b>-<b>1</b>, which is associated with the user SSD <b>31</b>.</p><p id="p-0274" num="0273">The account processing module <b>152</b>E acquires the account information encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> from the identified entry ((<b>18</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The acquired encrypted account information is referred to as encrypted second registration account information. The encrypted second registration account information includes, for example, an encrypted login ID and an encrypted login password.</p><p id="p-0275" num="0274">The account processing module <b>152</b>E sends the encrypted second registration account information to the encryption/decryption module <b>152</b>B ((<b>19</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0276" num="0275">The encryption/decryption module <b>152</b>B decrypts the encrypted second registration account information with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring second registration account information. Then, the encryption/decryption module <b>152</b>B sends the second registration account information to the account processing module <b>152</b>E ((<b>20</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0277" num="0276">The account processing module <b>152</b>E verifies the validation of the account information before the change, using the second registration account information. When the account information before the change matches the second registration account information, the account processing module <b>152</b>E determines that the validation of the account information before the change is confirmed. When the account information before the change is different from the second registration account information, the account processing module <b>152</b>E determines that the validation of the account information before the change is not confirmed.</p><p id="p-0278" num="0277">A case where the account information includes a login ID and a login password will be described more specifically. The login ID included in the account information before the change is referred to as a login ID before the change. The login password included in the account information before the change is referred to as a login password before the change. The login ID included in the second registration account information is referred to as a second registration login ID. The login password included in the second registration account information is referred to as a second registration login password.</p><p id="p-0279" num="0278">When the login ID before the change matches the second registration login ID, and the login password before the change matches the second registration login password, the account processing module <b>152</b>E determines that the validation of the account information before the change is confirmed. Further, when the login ID before the change is different from the second registration login ID, or when the login password before the change is different from the second registration login password, the account processing module <b>152</b>E determines that the validation of the account information before the change is not confirmed.</p><p id="p-0280" num="0279">When the validation of the account information before the change is not confirmed, the account processing module <b>152</b>E notifies the user SSD <b>31</b> of failure of the authentication of the second account that is associated with the user SSD <b>31</b> via the network I/F <b>155</b>.</p><p id="p-0281" num="0280">When the validation of the account information before the change is confirmed, the account processing module <b>152</b>E registers the sixth data in the account management table <b>45</b> ((<b>21</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). That is, the account processing module <b>152</b>E replaces the account information before the change registered in the account management table <b>45</b> with the changed account information. The sixth data includes the changed login ID and login password encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0282" num="0281">Specifically, the account processing module <b>152</b>E identifies an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field in the account management table <b>45</b> by using the identification information of the user SSD <b>31</b> acquired from the fourth data.</p><p id="p-0283" num="0282">In the identified entry, the account processing module <b>152</b>E replaces the encrypted login ID before the change in the login ID field with the encrypted changed login ID in the sixth data. In the identified entry, the account processing module <b>152</b>E replaces the encrypted login password before the change in the login password field with the encrypted changed login password in the sixth data.</p><p id="p-0284" num="0283"><figref idref="DRAWINGS">FIG. <b>11</b></figref> illustrates examples of the account management table <b>45</b> before and after the encrypted changed account information is registered by the account processing module <b>152</b>E. More specifically, <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref> illustrates an example of the account management table <b>45</b> before the encrypted changed account information is registered. <figref idref="DRAWINGS">FIG. <b>11</b>(B)</figref> illustrates an example of the account management table <b>45</b> after the encrypted changed account information is registered.</p><p id="p-0285" num="0284">As illustrated in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>, the account management table <b>45</b> includes the entry <b>451</b> that corresponds to the account for accessing the first SSD <b>32</b>-<b>1</b>, which is associated with the user SSD <b>31</b>. In the entry <b>451</b>, the identification information of the user SSD <b>31</b> (&#x201c;User's SSD-1&#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>) is set in the SSD identification information field. The encrypted login ID (&#x201c;ssd-a-user-25&#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>) is set in the login ID field. The encrypted login password (&#x201c;ssd-a-user-25-password&#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>) is set in the login password field. The public key <b>422</b> (&#x201c;111111111 . . . &#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>) of the user SSD <b>31</b> is set in the public key field.</p><p id="p-0286" num="0285">As described above, as illustrated in <figref idref="DRAWINGS">FIG. <b>11</b>(A)</figref>, the encrypted login ID and login password before the change are registered in the entry <b>451</b> of the account management table <b>45</b>.</p><p id="p-0287" num="0286">The account processing module <b>152</b>E registers the encrypted changed account information in the entry <b>451</b>.</p><p id="p-0288" num="0287">The account management table <b>45</b> of <figref idref="DRAWINGS">FIG. <b>11</b>(B)</figref> illustrates the entry <b>451</b> after the encrypted changed account information is registered. In the entry <b>451</b>, the encrypted changed login ID (&#x201c;ssd-a-user-25-2&#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(B)</figref>) is set in the login ID field. The encrypted changed login password (&#x201c;ssd-a-user-25-password-2&#x201d; in <figref idref="DRAWINGS">FIG. <b>11</b>(B)</figref>) is set in the login password field.</p><p id="p-0289" num="0288">The description will continue by returning to <figref idref="DRAWINGS">FIG. <b>10</b></figref>. After the encrypted changed account information is registered in the account management table <b>45</b>, the account processing module <b>152</b>E generates data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and a notification (change completion notification) indicating that the change of an account is completed. The data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and the change completion notification is referred to as seventh data. Further, the account processing module <b>152</b>E sends the sixth data to the encryption/decryption module <b>152</b>B ((<b>22</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0290" num="0289">The encryption/decryption module <b>152</b>B decrypts the sixth data with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring the changed account information. That is, the encryption/decryption module <b>152</b>B decrypts the changed account information that is encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>, using the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring the changed account information. The encryption/decryption module <b>152</b>B encrypts the changed account information with the public key <b>422</b> of the user SSD <b>31</b>. The changed account information encrypted with the public key <b>422</b> of the user SSD <b>31</b> is also referred to as eighth data. The encryption/decryption module <b>152</b>B sends the eighth data to the account processing module <b>152</b>E ((<b>23</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0291" num="0290">The account processing module <b>152</b>E sends the seventh data and the eighth data to the signature generation/verification module <b>152</b>C ((<b>24</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0292" num="0291">The signature generation/verification module <b>152</b>C generates signature data (hereinafter, referred to as fourth signature data) for the seventh data and the eighth data. The signature generation/verification module <b>152</b>C transmits the generated fourth signature data to the account processing module <b>152</b>E ((<b>25</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0293" num="0292">The account processing module <b>152</b>E transmits the seventh data, the eighth data, and the fourth signature data to the user SSD <b>31</b> via the network I/F <b>155</b> ((<b>26</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0294" num="0293">In the user SSD <b>31</b>, the signature generation/verification module <b>112</b>C receives the seventh data, the eighth data, and the fourth signature data transmitted from the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b>. The signature generation/verification module <b>112</b>C verifies the authenticity of the seventh data and the eighth data, using the fourth signature data.</p><p id="p-0295" num="0294">When the authenticity of the seventh data and the eighth data is not confirmed, the signature generation/verification module <b>112</b>C notifies the client <b>2</b> of an error via the host I/F <b>111</b>, for example. Alternatively, the signature generation/verification module <b>112</b>C may request the first SSD <b>32</b>-<b>1</b> to retransmit the data via the network I/F <b>115</b>.</p><p id="p-0296" num="0295">When the authenticity of the seventh data and the eighth data is confirmed, the signature generation/verification module <b>112</b>C sends the seventh data and the eighth data to the account processing module <b>112</b>E ((<b>27</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0297" num="0296">The account processing module <b>112</b>E acquires the identification information of the first SSD <b>32</b>-<b>1</b> and the change completion notification from the seventh data. The account processing module <b>112</b>E sends the eighth data to the encryption/decryption module <b>112</b>B in accordance with the acquired change completion notification ((<b>28</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). The eighth data includes the changed account information encrypted with the public key <b>422</b> of the user SSD <b>31</b>.</p><p id="p-0298" num="0297">The encryption/decryption module <b>112</b>B decrypts the eighth data with the secret key <b>421</b> of the user SSD <b>31</b>, thereby acquiring the changed account information. The encryption/decryption module <b>112</b>B encrypts the changed account information with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. That is, the encryption/decryption module <b>112</b>B encrypts the login ID and the login password included in the changed account information. Note that the encryption/decryption module <b>112</b>B may encrypt the changed account information with the public key <b>422</b> of the user SSD <b>31</b>. Then, the encryption/decryption module <b>112</b>B sends the encrypted changed account information to the account processing module <b>112</b>E ((<b>29</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>).</p><p id="p-0299" num="0298">The account processing module <b>112</b>E registers the encrypted changed account information in the account management table <b>41</b> ((<b>30</b>) in <figref idref="DRAWINGS">FIG. <b>10</b></figref>). That is, the account processing module <b>112</b>E replaces the account information before the change registered in the account management table <b>41</b> with the encrypted changed account information.</p><p id="p-0300" num="0299">More specifically, the account processing module <b>112</b>E identifies an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field in the account management table <b>41</b> by using the identification information of the first SSD <b>32</b>-<b>1</b> acquired from the seventh data.</p><p id="p-0301" num="0300">In the identified entry, the account processing module <b>112</b>E replaces the encrypted login ID before the change set in the login ID field with the encrypted changed login ID. In the identified entry, the account processing module <b>112</b>E replaces the encrypted login password before the change set in the login password field with the encrypted changed login password.</p><p id="p-0302" num="0301"><figref idref="DRAWINGS">FIG. <b>12</b></figref> illustrates examples of the account management table <b>41</b> before and after the encrypted changed account information is registered by the account processing module <b>112</b>E. More specifically, <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref> illustrates an example of the account management table <b>41</b> before the encrypted changed account information is registered. <figref idref="DRAWINGS">FIG. <b>12</b>(B)</figref> illustrates an example of the account management table <b>41</b> after the encrypted changed account information is registered.</p><p id="p-0303" num="0302">As illustrated in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>, the account management table <b>41</b> includes the entry <b>411</b> corresponding to the account for accessing the first SSD <b>32</b>-<b>1</b>. In the entry <b>411</b>, the identification information of the first SSD <b>32</b>-<b>1</b> (&#x201c;SSD-A&#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>) is set in the SSD identification information field. The encrypted login ID (&#x201c;ssd-a-user-25&#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>) is set in the login ID field. The encrypted login password (&#x201c;ssd-a-user-25-password&#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>) is set in the login password field. The public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (&#x201c;AAAAAAAAA . . . &#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>) is set in the public key field.</p><p id="p-0304" num="0303">As described above, as illustrated in <figref idref="DRAWINGS">FIG. <b>12</b>(A)</figref>, the encrypted login ID and login password before the change are registered in the entry <b>411</b> of the account management table <b>41</b>.</p><p id="p-0305" num="0304">The account processing module <b>112</b>E registers the encrypted changed account information in the entry <b>411</b>.</p><p id="p-0306" num="0305">The account management table <b>45</b> of <figref idref="DRAWINGS">FIG. <b>12</b>(B)</figref> illustrates the entry <b>411</b> after the encrypted changed account information is registered. In the entry <b>411</b>, the encrypted changed login ID (&#x201c;ssd-a-user-25-2&#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(B)</figref>) is set in the login ID field. The encrypted changed login password (&#x201c;ssd-a-user-25-password-2&#x201d; in <figref idref="DRAWINGS">FIG. <b>12</b>(B)</figref>) is set in the login password field.</p><p id="p-0307" num="0306">Note that the account processing module <b>112</b>E may register the changed account information that is encrypted with the public key <b>422</b> of the user SSD <b>31</b>, in the account management table <b>41</b>.</p><p id="p-0308" num="0307">Through the account change operation as described above, the user SSD <b>31</b> and the first SSD <b>32</b>-<b>1</b> can change the account information for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0309" num="0308">More specifically, when the first account for accessing the user SSD <b>31</b> from the client <b>2</b> is successfully authenticated, the user SSD <b>31</b> transmits the fourth data, the fifth data, the sixth data, and the third signature data to the first SSD <b>32</b>-<b>1</b>. The fourth data includes the account change request command. The fifth data includes the encrypted account information before the change. The sixth data includes the encrypted changed account information.</p><p id="p-0310" num="0309">When the authenticity of the fourth data, the fifth data, and the sixth data is confirmed using the third signature data and the second account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated using the account information before the change, the first SSD <b>32</b>-<b>1</b> registers the encrypted changed account information in the account management table <b>45</b>. Then, the first SSD <b>32</b>-<b>1</b> transmits the seventh data, the eighth data, and the fourth signature data to the user SSD <b>31</b>. The seventh data includes the notification indicating that the change of the account is completed. The eighth data includes the encrypted changed account information.</p><p id="p-0311" num="0310">When the authenticity of the seventh data and the eighth data is confirmed using the fourth signature data, the user SSD <b>31</b> registers the encrypted changed account information in the account management table <b>41</b>.</p><p id="p-0312" num="0311">As a result, the user SSD <b>31</b> can request the first SSD <b>32</b>-<b>1</b> to authenticate the second account for accessing the first SSD <b>32</b>-<b>1</b> by using the encrypted changed account information registered in the account management table <b>41</b>. Further, the first SSD <b>32</b>-<b>1</b> can perform authentication of the second account for accessing the first SSD <b>32</b>-<b>1</b> by using the encrypted changed account information registered in the account management table <b>45</b>.</p><p id="p-0313" num="0312">As described above, the account information before the change and the changed account information that are transmitted from the user SSD <b>31</b> to the first SSD <b>32</b>-<b>1</b> are encrypted, and the changed account information that is transmitted from the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> is encrypted. Further, the account information stored in each of the account management tables <b>41</b> and <b>45</b> is also encrypted. As a result, it is possible to prevent leakage of the account information in plain text.</p><p id="p-0314" num="0313">(Access Application Operation)</p><p id="p-0315" num="0314"><figref idref="DRAWINGS">FIG. <b>13</b></figref> illustrates an example of the access application operation in the information processing system <b>1</b>. The account management table <b>41</b> of the user SSD <b>31</b> includes account information used for authentication of the first account for accessing the user SSD <b>31</b>. The account management table <b>41</b> of the user SSD <b>31</b> also includes the account information used for authentication of the second account for accessing the first SSD <b>32</b>-<b>1</b>. The account information used for authentication of the second account is registered in the account management table <b>41</b> by the above-described account issuance operation or the account change operation.</p><p id="p-0316" num="0315">The account management table <b>45</b> of the first SSD <b>32</b>-<b>1</b> includes the account information used for authentication of the second account for accessing the first SSD <b>32</b>-<b>1</b>. The account information used for authentication of the second account is registered in the account management table <b>45</b> by the above-described account issuance operation or the account change operation.</p><p id="p-0317" num="0316">Operations from (<b>1</b>) to (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref> are similar to the operations from (<b>1</b>) to (<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>7</b></figref>. That is, the account processing module <b>112</b>E and the encryption/decryption module <b>112</b>B of the user SSD <b>31</b> verify the validation of the account information input on the client <b>2</b> (input account information), using the account management table <b>41</b>. Note that, for example, the user performs an operation of requesting an access application for the first SSD <b>32</b>-<b>1</b> together with an operation of inputting the account information. The client <b>2</b> may transmit, to the user SSD <b>31</b>, an access application request for the first SSD <b>32</b>-<b>1</b> together with the input account information.</p><p id="p-0318" num="0317">When the validation of the input account information is not confirmed, the account processing module <b>112</b>E notifies the client <b>2</b> of failure of authentication of the first account for accessing the user SSD <b>31</b> via the host I/F <b>111</b>.</p><p id="p-0319" num="0318">When the validation of the input account information is confirmed, the account processing module <b>112</b>E notifies the command processing module <b>112</b>F that the access to the user SSD <b>31</b> with the first account that corresponds to the input account information is permitted ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). This notification enables the command processing module <b>112</b>F to receive an access command to the user SSD <b>31</b> with the first account.</p><p id="p-0320" num="0319">When the validation of the input account information is confirmed, the account processing module <b>112</b>E receives the access application request for the first SSD <b>32</b>-<b>1</b> from the client <b>2</b> ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). The account processing module <b>112</b>E generates data (hereinafter, referred to as ninth data) that includes the identification information of the user SSD <b>31</b> and an access application command in accordance with the received request.</p><p id="p-0321" num="0320">Then, the account processing module <b>112</b>E acquires the encrypted account information of the second account for accessing the first SSD <b>32</b>-<b>1</b> from the account management table <b>41</b> ((<b>7</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). The encrypted account information of the second account for accessing the first SSD <b>32</b>-<b>1</b> is referred to as tenth data.</p><p id="p-0322" num="0321">More specifically, the account processing module <b>112</b>E identifies an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field in the account management table <b>41</b>. The account processing module <b>112</b>E acquires an encrypted login ID from the login ID field of the identified entry. The account processing module <b>112</b>E acquires an encrypted login password from the login password field of the identified entry. These encrypted login ID and encrypted login password constitute the tenth data.</p><p id="p-0323" num="0322">The account processing module <b>112</b>E sends the ninth data and the tenth data to the signature generation/verification module <b>112</b>C ((<b>8</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0324" num="0323">The signature generation/verification module <b>112</b>C generates signature data (hereinafter, referred to as fifth signature data) for the ninth data and the tenth data by using the secret key <b>421</b> of the user SSD <b>31</b>. The signature generation/verification module <b>112</b>C transmits the generated fifth signature data to the account processing module <b>112</b>E ((<b>9</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0325" num="0324">The account processing module <b>112</b>E transmits the ninth data, the tenth data, and the fifth signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> ((<b>10</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0326" num="0325">In the first SSD <b>32</b>-<b>1</b>, the signature generation/verification module <b>152</b>C receives the ninth data, the tenth data, and the fifth signature data that are transmitted from the user SSD <b>31</b>, via the network I/F <b>155</b>. The signature generation/verification module <b>152</b>C verifies the authenticity of the ninth data and the tenth data, using the fifth signature data.</p><p id="p-0327" num="0326">When the authenticity of the ninth data and the tenth data is not confirmed, the signature generation/verification module <b>152</b>C notifies the user SSD <b>31</b> of an error via the network I/F <b>155</b>, for example. Alternatively, the signature generation/verification module <b>152</b>C may request the user SSD <b>31</b> to retransmit the data.</p><p id="p-0328" num="0327">In a case where the authenticity of the ninth data and the tenth data is confirmed, the signature generation/verification module <b>152</b>C sends the ninth data and the tenth data to the account processing module <b>152</b>E ((<b>11</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0329" num="0328">The account processing module <b>152</b>E acquires the identification information of the user SSD <b>31</b> and the access application command from the ninth data. The account processing module <b>152</b>E sends the tenth data to the encryption/decryption module <b>152</b>B in accordance with the acquired access application command ((<b>12</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). The tenth data includes the account information encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0330" num="0329">The encryption/decryption module <b>152</b>B decrypts the tenth data with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring the account information. The acquired account information is also referred to as received account information. The encryption/decryption module <b>152</b>B sends the received account information to the account processing module <b>152</b>E ((<b>13</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0331" num="0330">The account processing module <b>152</b>E verifies the validation of the received account information, using the account management table <b>45</b>.</p><p id="p-0332" num="0331">More specifically, the account processing module <b>152</b>E identifies an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field in the account management table <b>45</b>. The identified entry is an entry that corresponds to the account for accessing the first SSD <b>32</b>-<b>1</b>, which is associated with the user SSD <b>31</b>.</p><p id="p-0333" num="0332">The account processing module <b>152</b>E acquires the account information encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (that is, encrypted second registration account information) from the identified entry ((<b>14</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). The account processing module <b>152</b>E sends the encrypted second registration account information to the encryption/decryption module <b>152</b>B ((<b>15</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0334" num="0333">The encryption/decryption module <b>152</b>B decrypts the encrypted second registration account information with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring the second registration account information. Then, the encryption/decryption module <b>152</b>B sends the second registration account information to the account processing module <b>152</b>E ((<b>16</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0335" num="0334">The account processing module <b>152</b>E verifies the validation of the received account information by using the second registration account information. When the received account information matches the second registration account information, the account processing module <b>152</b>E determines that the validation of the received account information is confirmed. When the received account information is different from the second registration account information, the account processing module <b>152</b>E determines that the validation of the received account information is not confirmed.</p><p id="p-0336" num="0335">A case where the account information includes a login ID and a login password will be described more specifically. A login ID included in the received account information is referred to as a received login ID. A login password included in the received account information is referred to as a received login password. Further, the second registration account information includes a second registration login ID and a second registration login password.</p><p id="p-0337" num="0336">When the received login ID matches the second registration login ID, and the received login password matches the second registration login password, the account processing module <b>152</b>E determines that the validation of the received account information is confirmed. Further, when the received login ID is different from the second registration login ID, or when the received login password is different from the second registration login password, the account processing module <b>152</b>E determines that the validation of the received account information is not confirmed.</p><p id="p-0338" num="0337">When the validation of the received account information is not confirmed, the account processing module <b>152</b>E notifies the user SSD <b>31</b> of failure of authentication of the second account for accessing the first SSD <b>32</b>-<b>1</b>, via the network I/F <b>155</b>.</p><p id="p-0339" num="0338">When the validation of the received account information is confirmed, the account processing module <b>152</b>E notifies the command processing module <b>152</b>F that the access to the first SSD <b>32</b>-<b>1</b> with the second account that corresponds to the received account information is permitted ((<b>17</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). This notification enables the command processing module <b>152</b>F to receive an access command to the first SSD <b>32</b>-<b>1</b> with the second account.</p><p id="p-0340" num="0339">For example, at least a partial storage area of the user area <b>172</b> of the NAND flash memory <b>17</b> is associated with the second account. Permitting access to the first SSD <b>32</b>-<b>1</b> using an account means permitting access to the at least partial storage area of the user area <b>172</b> associated with the account.</p><p id="p-0341" num="0340">More specifically, when the validation of the received account information is confirmed, the account processing module <b>152</b>E generates data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and a notification (access permission notification) indicating that access to the first SSD <b>32</b>-<b>1</b> is permitted. The data that includes the identification information of the first SSD <b>32</b>-<b>1</b> and the access permission notification is referred to as eleventh data.</p><p id="p-0342" num="0341">The account processing module <b>152</b>E sends the eleventh data to the signature generation/verification module <b>152</b>C ((<b>18</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). Further, the account processing module <b>152</b>E sets a DEK that is associated with an account with which the access has been permitted, in the encryption circuit <b>156</b> by using the DEK information <b>47</b>. The set DEK is used for encryption of data to be written into the user area <b>172</b> and decryption of data read from the user area <b>172</b>.</p><p id="p-0343" num="0342">The signature generation/verification module <b>152</b>C generates signature data for the eleventh data (hereinafter, referred to as sixth signature data). The signature generation/verification module <b>152</b>C transmits the generated sixth signature data to the account processing module <b>152</b>E ((<b>19</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0344" num="0343">The account processing module <b>152</b>E transmits the eleventh data and the sixth signature data to the user SSD <b>31</b> via the network I/F <b>155</b> ((<b>20</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0345" num="0344">In the user SSD <b>31</b>, the signature generation/verification module <b>112</b>C receives the eleventh data and the sixth signature data that are transmitted from the first SSD <b>32</b>-<b>1</b>, via the network I/F <b>115</b>. The signature generation/verification module <b>112</b>C verifies the authenticity of the eleventh data by using the sixth signature data.</p><p id="p-0346" num="0345">When the authenticity of the eleventh data is not confirmed, the signature generation/verification module <b>112</b>C notifies the client <b>2</b> of an error via the host I/F <b>111</b>, for example. Alternatively, the signature generation/verification module <b>112</b>C may request the first SSD <b>32</b>-<b>1</b> to retransmit the data, via the network I/F <b>115</b>.</p><p id="p-0347" num="0346">When the authenticity of the eleventh data is confirmed, the signature generation/verification module <b>112</b>C sends the eleventh data to the account processing module <b>112</b>E ((<b>21</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>).</p><p id="p-0348" num="0347">The account processing module <b>112</b>E acquires the identification information of the first SSD <b>32</b>-<b>1</b> and the access permission notification from the eleventh data. The account processing module <b>112</b>E notifies the command processing module <b>112</b>F that the access to the first SSD <b>32</b>-<b>1</b> is permitted on the basis of the access permission notification ((<b>22</b>) in <figref idref="DRAWINGS">FIG. <b>13</b></figref>). As a result, the command processing module <b>112</b>F can access the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0349" num="0348">Specifically, the command processing module <b>112</b>F may transmit, for example, a write command and user data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b>. The write command is a command for writing the user data into the user area <b>172</b> in the NAND flash memory <b>17</b> of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0350" num="0349">Further, the command processing module <b>112</b>F may transmit, for example, a read command to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b>. The read command is a command for reading user data from the user area <b>172</b>.</p><p id="p-0351" num="0350">Through the access application operation as described above, the user SSD <b>31</b> and the first SSD <b>32</b>-<b>1</b> can control the access to the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0352" num="0351">More specifically, when the first account for accessing the user SSD <b>31</b> is successfully authenticated, the user SSD <b>31</b> permits the first account to access at least a partial storage area of the NAND flash memory <b>13</b>, and transmits the ninth data, the tenth data, and the fifth signature data to the first SSD <b>32</b>-<b>1</b>. The ninth data includes the access application command. The tenth data includes the encrypted account information.</p><p id="p-0353" num="0352">When the authenticity of the ninth data and the tenth data is confirmed using the fifth signature data, and the second account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated using the tenth data, the first SSD <b>32</b>-<b>1</b> permits the second account to access at least a partial storage area of the NAND flash memory <b>17</b>. Then, the first SSD <b>32</b>-<b>1</b> transmits the eleventh data and the sixth signature data to the user SSD <b>31</b>. The eleventh data includes the access permission notification.</p><p id="p-0354" num="0353">When the authenticity of the eleventh data is confirmed using the sixth signature data, the user SSD <b>31</b> can access the at least partial storage area of the NAND flash memory <b>17</b> with the second account.</p><p id="p-0355" num="0354">As described above, the account information transmitted from the user SSD <b>31</b> to the first SSD <b>32</b>-<b>1</b> is encrypted. Further, the account information stored in each of the account management tables <b>41</b> and <b>45</b> is also encrypted. As a result, it is possible to prevent leakage of the account information in plain text.</p><p id="p-0356" num="0355">For example, the user may carry the user SSD <b>31</b> and connect the user SSD <b>31</b> to any client <b>2</b>. The user inputs account information to be used for authentication of the first account for accessing the user SSD <b>31</b> on the client <b>2</b> to which the user SSD <b>31</b> is connected, thereby enabling to access not only at least a partial storage area of the NAND flash memory <b>13</b> with the first account but also at least a partial storage area of the NAND flash memory <b>17</b> with the second account.</p><p id="p-0357" num="0356">That is, the user can easily access the user SSD <b>31</b> and the first SSD <b>32</b>-<b>1</b> from the client <b>2</b> only by managing the account information of the first account. Therefore, it is possible to enable the user to manage the account information easily.</p><p id="p-0358" num="0357">Next, transmission of user data in the information processing system <b>1</b> will be described. Here, a case where the user SSD <b>31</b> is connected to the client <b>2</b> via the host I/F <b>111</b> and is connected to the network <b>7</b> via the network I/F <b>115</b> will be explained. The network SSD <b>32</b> is connected to the network <b>7</b> via the network I/F <b>155</b>.</p><p id="p-0359" num="0358">Further, it is assumed that an account for accessing the user SSD <b>31</b> is successfully authenticated and access to the user SSD <b>31</b> (more specifically, at least a partial storage area of the NAND flash memory <b>13</b>) is permitted, and then an account for accessing the network SSD <b>32</b> is successfully authenticated and access to the network SSD <b>32</b> (more specifically, at least a partial storage area of the NAND flash memory <b>17</b>) is permitted.</p><p id="p-0360" num="0359">(Reading of User Data)</p><p id="p-0361" num="0360"><figref idref="DRAWINGS">FIG. <b>14</b></figref> illustrates an example of a flow of data in a case where user data is read from the user SSD <b>31</b> or the network SSD <b>32</b> in the information processing system <b>1</b>.</p><p id="p-0362" num="0361">The user requests reading of user data by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>). In accordance with this request, the client <b>2</b> transmits the identification information of an SSD and a read command to the user SSD <b>31</b> ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>). The identification information of the SSD indicates an SSD in which user data to be read is stored (e.g., the user SSD <b>31</b> or the network SSD <b>32</b>). The read command includes information that is capable of identifying the user data to be read. The information that is capable of identifying the user data to be read is, for example, an LBA.</p><p id="p-0363" num="0362">For example, the client <b>2</b> manages a relationship between the SSD in which the user data to be read is stored and the information that is capable of identifying the user data to be read.</p><p id="p-0364" num="0363">The user SSD <b>31</b> receives the identification information of the SSD and the read command transmitted from the client <b>2</b>. When the received identification information of the SSD is identification to the identification information of the user SSD <b>31</b>, the user SSD <b>31</b> reads the user data from the NAND flash memory <b>13</b> in accordance with the received read command. Then, the user SSD <b>31</b> transmits the read user data to the client <b>2</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>).</p><p id="p-0365" num="0364">On the other hand, when the received identification information of the SSD is identification to the identification information of the network SSD <b>32</b>, the user SSD <b>31</b> transmits the received identification information of the SSD and the read command to the network SSD <b>32</b> through the network <b>7</b> ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>).</p><p id="p-0366" num="0365">The network SSD <b>32</b> receives the identification information of the SSD and the read command transmitted from the user SSD <b>31</b>. When the received identification information of the SSD is same as the identification information of the network SSD <b>32</b>, the network SSD <b>32</b> reads the user data from the NAND flash memory <b>17</b> in accordance with the read command. Then, the network SSD <b>32</b> transmits the read user data to the user SSD <b>31</b> through the network <b>7</b> ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>).</p><p id="p-0367" num="0366">The user SSD <b>31</b> receives the user data transmitted from the network SSD <b>32</b>. Then, the user SSD <b>31</b> transmits the received user data to the client <b>2</b> ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>14</b></figref>).</p><p id="p-0368" num="0367">In this manner, the client <b>2</b> can read user data not only from the NAND flash memory <b>13</b> of the user SSD <b>31</b> but also from the NAND flash memory <b>17</b> of the network SSD <b>32</b>.</p><p id="p-0369" num="0368">With reference to <figref idref="DRAWINGS">FIG. <b>15</b></figref>, an example of a read operation in the information processing system <b>1</b> will be specifically described. Here, as an example, a case where the client <b>2</b> reads user data from the NAND flash memory <b>13</b> of the user SSD <b>31</b> and a case where the client <b>2</b> reads user data from the NAND flash memory <b>17</b> of the first SSD <b>32</b>-<b>1</b> will be described.</p><p id="p-0370" num="0369">First, in accordance with an operation performed by the user to request reading of user data, the client <b>2</b> transmits the identification information of an SSD and a read command that correspond to the request, to the user SSD <b>31</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0371" num="0370">In the user SSD <b>31</b>, the command processing module <b>112</b>F receives the identification information of the SSD and the read command transmitted from the client <b>2</b>. The command processing module <b>112</b>F determines whether the received identification information of the SSD is same as the identification information of the user SSD <b>31</b>.</p><p id="p-0372" num="0371">When the received identification information of the SSD is same as the identification information of the user SSD <b>31</b>, the command processing module <b>112</b>F sends the received read command to the read processing module <b>112</b>G ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0373" num="0372">The read processing module <b>112</b>G identifies a physical address that corresponds to an LBA designated in the read command by using the logical-to-physical address conversion table <b>123</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). Then, the read processing module <b>112</b>G instructs the NAND flash memory <b>13</b> to read data from the identified physical address, via the NAND I/F <b>113</b> ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). The NAND flash memory <b>13</b> reads encrypted data from the identified physical address and sends the read encrypted data to the encryption circuit <b>116</b> ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0374" num="0373">The encryption circuit <b>116</b> decrypts the encrypted data with a set DEK, thereby obtaining user data. The encryption circuit <b>116</b> sends the user data to the read processing module <b>112</b>G ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). The read processing module <b>112</b>G transmits the user data to the client <b>2</b> via the host I/F <b>111</b> ((<b>7</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0375" num="0374">On the other hand, when the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>, the command processing module <b>112</b>F transmits the received identification information of the SSD and the read command to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> ((<b>8</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0376" num="0375">In the first SSD <b>32</b>-<b>1</b>, the command processing module <b>152</b>F receives the identification information of the SSD and the read command transmitted from the user SSD <b>31</b>. The command processing module <b>152</b>F determines whether the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0377" num="0376">When the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>, the command processing module <b>152</b>F sends the received read command to the read processing module <b>152</b>G ((<b>9</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0378" num="0377">The read processing module <b>152</b>G identifies a physical address that corresponds to an LBA designated in the read command by using the logical-to-physical address conversion table <b>163</b> ((<b>10</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). Then, the read processing module <b>152</b>G instructs the NAND flash memory <b>17</b> to read data from the identified physical address, via the memory I/F <b>153</b> ((<b>11</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). The NAND flash memory <b>17</b> reads encrypted data from the identified physical address and sends the read encrypted data to the encryption circuit <b>156</b> ((<b>12</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0379" num="0378">The encryption circuit <b>156</b> decrypts the encrypted data with a set DEK, thereby obtaining user data. The encryption circuit <b>156</b> sends the user data to the read processing module <b>152</b>G ((<b>13</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>). The read processing module <b>152</b>G transmits the user data to the user SSD <b>31</b> via the network I/F <b>155</b> ((<b>14</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0380" num="0379">In the user SSD <b>31</b>, the command processing module <b>112</b>F receives the user data transmitted from the first SSD <b>32</b>-<b>1</b>. The command processing module <b>112</b>F transmits the received user data to the client <b>2</b> ((<b>15</b>) in <figref idref="DRAWINGS">FIG. <b>15</b></figref>).</p><p id="p-0381" num="0380">Through the read operation described as above, the client <b>2</b> can read user data not only from the user SSD <b>31</b> directly connected to the client <b>2</b> but also from the first SSD <b>32</b>-<b>1</b> connected to the user SSD <b>31</b> through the network <b>7</b>.</p><p id="p-0382" num="0381">(Writing of User Data)</p><p id="p-0383" num="0382"><figref idref="DRAWINGS">FIG. <b>16</b></figref> illustrates an example of a flow of data in a case where user data is written to the user SSD <b>31</b> or the network SSD <b>32</b> in the information processing system <b>1</b>.</p><p id="p-0384" num="0383">The user requests writing of user data by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>16</b></figref>). In accordance with this request, the client <b>2</b> transmits the identification information of an SSD, a write command, and the user data to the user SSD <b>31</b> ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>16</b></figref>). The identification information of the SSD indicates an SSD (the user SSD <b>31</b> or the network SSD <b>32</b>) into which the user data is to be written. The write command includes, for example, an LBA associated with the user data. The client <b>2</b> determines, for example, the SSD and the LBA into which the user data is to be written.</p><p id="p-0385" num="0384">The user SSD <b>31</b> receives the identification information of the SSD, the write command, and the user data that are transmitted from the client <b>2</b>. When the received identification information of the SSD is same as the identification information of the user SSD <b>31</b>, the user SSD <b>31</b> writes the user data into the NAND flash memory <b>13</b> in accordance with the write command.</p><p id="p-0386" num="0385">On the other hand, when the received identification information of the SSD is same as the identification information of the network SSD <b>32</b>, the user SSD <b>31</b> transmits the received identification information of the SSD, the write command, and the user data to the network SSD <b>32</b> through the network <b>7</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>16</b></figref>).</p><p id="p-0387" num="0386">The network SSD <b>32</b> receives the identification information of the SSD, the write command, and the user data transmitted from the user SSD <b>31</b>. When the received identification information of the SSD is same as the identification information of the network SSD <b>32</b>, the network SSD <b>32</b> writes the user data into the NAND flash memory <b>17</b> in accordance with the write command.</p><p id="p-0388" num="0387">In this manner, the client <b>2</b> can write user data not only into the NAND flash memory <b>13</b> of the user SSD <b>31</b> but also into the NAND flash memory <b>17</b> of the network SSD <b>32</b>.</p><p id="p-0389" num="0388">With reference to <figref idref="DRAWINGS">FIG. <b>17</b></figref>, an example of a write operation in the information processing system <b>1</b> will be specifically described. Here, as an example, a case where the client <b>2</b> writes user data into the NAND flash memory <b>13</b> of the user SSD <b>31</b> and a case where the client <b>2</b> writes user data into the NAND flash memory <b>17</b> of the first SSD <b>32</b>-<b>1</b> will be described.</p><p id="p-0390" num="0389">First, in accordance with an operation performed by the user to request writing of user data, the client <b>2</b> transmits the identification information of an SSD, a write command, and the user data that correspond to the request, to the user SSD <b>31</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0391" num="0390">In the user SSD <b>31</b>, the command processing module <b>112</b>F receives the identification information of the SSD, the write command, and the user data transmitted from the client <b>2</b>. The command processing module <b>112</b>F determines whether the received identification information of the SSD is same as the identification information of the user SSD <b>31</b>.</p><p id="p-0392" num="0391">When the received identification information of the SSD is same as the identification information of the user SSD <b>31</b>, the command processing module <b>112</b>F sends the received write command and user data to the write processing module <b>112</b>H ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>). The write processing module <b>112</b>H sends the user data to the encryption circuit <b>116</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0393" num="0392">The encryption circuit <b>116</b> encrypts the user data with a set DEK. As a result, the encrypted data is obtained. The encryption circuit <b>116</b> sends the encrypted data to the NAND flash memory <b>13</b> via the NAND I/F <b>113</b> ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0394" num="0393">The write processing module <b>112</b>H instructs the NAND flash memory <b>13</b> to write the encrypted data via the NAND I/F <b>113</b> ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>). As a result, the encrypted data is written into the NAND flash memory <b>13</b> (more particularly, at least a partial storage area of the user area <b>132</b> associated with the account being used). Then, the write processing module <b>112</b>H updates the logical-to-physical address conversion table <b>123</b> so as to indicate a correspondence between a physical address in which the encrypted data has been written and an LBA ((<b>6</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0395" num="0394">On the other hand, when the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>, the command processing module <b>112</b>F transmits the received identification information of the SSD, write command, and user data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> ((<b>7</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0396" num="0395">In the first SSD <b>32</b>-<b>1</b>, the command processing module <b>152</b>F receives the identification information of the SSD, the write command, and the user data transmitted from the user SSD <b>31</b>. The command processing module <b>152</b>F determines whether the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0397" num="0396">When the received identification information of the SSD is same as the identification information of the first SSD <b>32</b>-<b>1</b>, the command processing module <b>152</b>F sends the received write command and user data to the write processing module <b>152</b>H ((<b>8</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>). The write processing module <b>152</b>H sends the user data to the encryption circuit <b>156</b> ((<b>9</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0398" num="0397">The encryption circuit <b>156</b> encrypts the user data using a set DEK. As a result, the encrypted data is obtained. The encryption circuit <b>156</b> sends the encrypted data to the NAND flash memory <b>17</b> via the NAND I/F <b>153</b> ((<b>10</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0399" num="0398">The write processing module <b>152</b>H instructs the NAND flash memory <b>17</b> to write the encrypted data via the NAND I/F <b>153</b> ((<b>11</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>). As a result, the encrypted data is written into the NAND flash memory <b>17</b> (more particularly, at least a partial storage area of the user area <b>172</b> associated with the account being used). Then, the write processing module <b>152</b>H updates the logical-to-physical address conversion table <b>163</b> so as to indicate a correspondence between a physical address in which the encrypted data has been written and an LBA ((<b>12</b>) in <figref idref="DRAWINGS">FIG. <b>17</b></figref>).</p><p id="p-0400" num="0399">Through the write operation described above, the client <b>2</b> can write user data not only to the user SSD <b>31</b> directly connected to the client <b>2</b> but also to the first SSD <b>32</b>-<b>1</b> connected to the user SSD <b>31</b> through the network <b>7</b>.</p><p id="p-0401" num="0400">Next, with reference to flowcharts in <figref idref="DRAWINGS">FIGS. <b>18</b> to <b>27</b></figref>, processes executed in the user SSD <b>31</b> and in the network SSD <b>32</b> will be described. A case where the network SSD <b>32</b> is the first SSD <b>32</b>-<b>1</b> will be explained for easy understanding. Processes executed in the other network SSDs <b>32</b> (for example, the second SSD <b>32</b>-<b>2</b> or the nth SSD <b>32</b>-<i>n</i>) are realized by replacing the first SSD <b>32</b>-<b>1</b> described in <figref idref="DRAWINGS">FIGS. <b>18</b> to <b>27</b></figref> with the other network SSDs <b>32</b>.</p><p id="p-0402" num="0401">(Account Issuance Request Process)</p><p id="p-0403" num="0402"><figref idref="DRAWINGS">FIG. <b>18</b></figref> is a flowchart illustrating an example of the procedure of an account issuance request process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The account issuance request process is a process for requesting the first SSD <b>32</b>-<b>1</b> to newly issue an account for accessing the first SSD <b>32</b>-<b>1</b>. For example, when receiving, from the client <b>2</b>, a login ID and a login password for accessing the user SSD <b>31</b> and a request for issuing an account for accessing the first SSD <b>32</b>-<b>1</b>, the CPU <b>112</b> executes the account issuance request process. The login ID (input login ID) received from the client <b>2</b> is a login ID input by the user on the client <b>2</b>. The login password (input login password) received from the client <b>2</b> is a login password input by the user on the client <b>2</b>.</p><p id="p-0404" num="0403">First, the CPU <b>112</b> executes a first authentication process using the input login ID and the input login password (step S<b>101</b>). The first authentication process is a process of verifying the validation of the input login ID and the input login password in order to authenticate an account for accessing the user SSD <b>31</b>.</p><p id="p-0405" num="0404">More specifically, in the first authentication process, it is determined whether the input login ID matches the login ID to the user SSD <b>31</b> registered in the account management table <b>41</b> (first registration login ID) and the input login password matches the login password to the user SSD <b>31</b> registered in the account management table <b>41</b> (first registration login password).</p><p id="p-0406" num="0405">When the input login ID matches the first registration login ID and the input login password matches the first registration login password, the CPU <b>112</b> obtains an authentication result indicating that the account for accessing the user SSD <b>31</b> is successfully authenticated. When the input login ID is different from the first registration login ID or when the input login password is different from the first registration login password, the CPU <b>112</b> obtains an authentication result indicating that the authentication of the account for accessing the user SSD <b>31</b> has failed. An example of the specific procedure of the first authentication process will be described later with reference to <figref idref="DRAWINGS">FIG. <b>19</b></figref>.</p><p id="p-0407" num="0406">The CPU <b>112</b> determines whether the account for accessing the user SSD <b>31</b> is successfully authenticated on the basis of the authentication result of the first authentication process (step S<b>102</b>).</p><p id="p-0408" num="0407">When the authentication of the account for accessing the user SSD <b>31</b> has failed (no in step S<b>102</b>), the CPU <b>112</b> notifies the client <b>2</b> of the authentication failure via the host I/F <b>111</b> (step S<b>103</b>), and ends the account issuance request process.</p><p id="p-0409" num="0408">When the account for accessing the user SSD <b>31</b> is successfully authenticated (yes in step S<b>102</b>), the CPU <b>112</b> receives the request for issuing an account for accessing the first SSD <b>32</b>-<b>1</b> (step S<b>104</b>).</p><p id="p-0410" num="0409">In accordance with the received issuance request, the CPU <b>112</b> generates data (first data) that includes the identification information of the user SSD <b>31</b> and an account new issuance request command (step S<b>105</b>).</p><p id="p-0411" num="0410">The CPU <b>112</b> generates signature data (first signature data) for the first data by using the secret key <b>421</b> of the user SSD <b>31</b> (step S<b>106</b>).</p><p id="p-0412" num="0411">The CPU <b>112</b> transmits the first data and the first signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> (step S<b>107</b>), and ends the account issuance request process.</p><p id="p-0413" num="0412">Through the account issuance request process described as above, when the account for accessing the user SSD <b>31</b> is successfully authenticated, the CPU <b>112</b> can request the first SSD <b>32</b>-<b>1</b> to issue an account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0414" num="0413">More specifically, the CPU <b>112</b> can transmit the first data for requesting issuance of an account for accessing the first SSD <b>32</b>-<b>1</b> and the first signature data for guaranteeing the authenticity of the first data, to the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0415" num="0414">(First Authentication Process)</p><p id="p-0416" num="0415"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is a flowchart illustrating an example of the procedure of the first authentication process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The first authentication process is a process of verifying the validation of a login ID (input login ID) and a login password (input login password) received from the client <b>2</b> in order to authenticate an account for accessing the user SSD <b>31</b>. The first authentication process corresponds to step S<b>101</b> of the account issuance request process described above with reference to <figref idref="DRAWINGS">FIG. <b>18</b></figref>.</p><p id="p-0417" num="0416">First, the CPU <b>112</b> identifies an entry (hereinafter, referred to as a first entry) in the account management table <b>41</b> that corresponds to an account associated with the user SSD <b>31</b> (step S<b>201</b>). The first entry is an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field. The first entry includes a login ID and a login password that are encrypted with the public key <b>422</b> of the user SSD <b>31</b>.</p><p id="p-0418" num="0417">The CPU <b>112</b> decrypts the encrypted login ID (first registration login ID) and login password (first registration login password) in the first entry with the secret key <b>421</b> of the user SSD <b>31</b> (step S<b>202</b>).</p><p id="p-0419" num="0418">Next, the CPU <b>112</b> determines whether the input login ID matches the first registration login ID (step S<b>203</b>).</p><p id="p-0420" num="0419">When the input login ID is different from the first registration login ID (no in step S<b>203</b>), the CPU <b>112</b> generates the authentication result indicating that the authentication of the account for accessing the user SSD <b>31</b> has failed (step S<b>205</b>), and ends the first authentication process.</p><p id="p-0421" num="0420">When the input login ID matches the first registration login ID (yes in step S<b>203</b>), the CPU <b>112</b> determines whether the input login password matches the first registration login password (step S<b>204</b>).</p><p id="p-0422" num="0421">When the input login password is different from the first registration login password (no in step S<b>204</b>), the CPU <b>112</b> generates the authentication result indicating that the authentication of the account for accessing the user SSD <b>31</b> has failed (step S<b>205</b>), and ends the first authentication process.</p><p id="p-0423" num="0422">When the input login password matches the first registration login password (yes in step S<b>204</b>), the CPU <b>112</b> generates the authentication result indicating that the account for accessing the user SSD <b>31</b> is successfully authenticated (step S<b>206</b>), and ends the first authentication process.</p><p id="p-0424" num="0423">Through the first authentication process described as above, the CPU <b>112</b> verifies the validation of the input login ID and the input login password, and generates the authentication result indicating the success or failure of authentication of the account for accessing the user SSD <b>31</b>.</p><p id="p-0425" num="0424">(Account Issuance Process)</p><p id="p-0426" num="0425"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is a flowchart illustrating an example of the procedure of an account issuance process executed by the CPU <b>152</b> of the first SSD <b>32</b>-<b>1</b>. The account issuance process is a process for newly issuing an account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0427" num="0426">First, the CPU <b>152</b> receives the first data and the first signature data from the user SSD <b>31</b> (step S<b>301</b>). The first data includes the identification information of the user SSD <b>31</b> and an account new issuance request command. The first signature data is signature data for the first data.</p><p id="p-0428" num="0427">The CPU <b>152</b> verifies the authenticity of the first data by using the first signature data and the public key <b>422</b> of the user SSD <b>31</b> (step S<b>302</b>).</p><p id="p-0429" num="0428">Specifically, the CPU <b>152</b> calculates a hash value of the first data (hereinafter, referred to as a first hash value) by using a specific hash function.</p><p id="p-0430" num="0429">Further, the CPU <b>152</b> identifies an entry in the account management table <b>45</b> that corresponds to an account associated with the user SSD <b>31</b>. The entry that corresponds to the account associated with the user SSD <b>31</b> is an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field. The CPU <b>152</b> acquires the public key <b>422</b> of the user SSD <b>31</b> from the identified entry. Then, the CPU <b>152</b> decrypts the first signature data with the public key <b>422</b> of the user SSD <b>31</b>, thereby acquiring a hash value (hereinafter, referred to as a second hash value).</p><p id="p-0431" num="0430">When the first hash value matches the second hash value, the CPU <b>152</b> determines that the authenticity of the first data is confirmed. When the first hash value is different from the second hash value, the CPU <b>152</b> determines that the authenticity of the first data is not confirmed.</p><p id="p-0432" num="0431">The CPU <b>152</b> determines whether the authenticity of the first data is confirmed on the basis of a verification result of the authenticity of the first data (step S<b>303</b>).</p><p id="p-0433" num="0432">When the authenticity of the first data is not confirmed (no in step S<b>303</b>), the CPU <b>152</b> notifies the user SSD <b>31</b> of an error indicating that the authenticity of the first data is not confirmed via the network I/F <b>155</b> (step S<b>304</b>), and ends the account issuance process.</p><p id="p-0434" num="0433">When the authenticity of the first data is confirmed (yes in step S<b>303</b>), the CPU <b>152</b> acquires the identification information of the user SSD <b>31</b> and the account new issuance request command from the first data (step S<b>305</b>).</p><p id="p-0435" num="0434">In accordance with the acquired account new issuance request command, the CPU <b>152</b> generates a login ID and a login password of an account for accessing the first SSD <b>32</b>-<b>1</b> (step S<b>306</b>).</p><p id="p-0436" num="0435">The CPU <b>152</b> encrypts the generated login ID and login password with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>307</b>).</p><p id="p-0437" num="0436">The CPU <b>152</b> updates the account management table <b>45</b> by using the encrypted login ID and login password (step S<b>308</b>). Specifically, the CPU <b>152</b> identifies an entry in the account management table <b>45</b> that corresponds to the account associated with the user SSD <b>31</b>. The CPU <b>152</b> sets the encrypted login ID in the login ID field of the identified entry. Further, the CPU <b>152</b> sets the encrypted login password in the login password field of the identified entry.</p><p id="p-0438" num="0437">Next, the CPU <b>152</b> generates data (second data) that includes the identification information of the first SSD <b>32</b>-<b>1</b> and a new issuance completion notification (step S<b>309</b>).</p><p id="p-0439" num="0438">The CPU <b>152</b> encrypts the login ID and the login password generated in step S<b>306</b> with the public key <b>422</b> of the user SSD <b>31</b>, thereby acquiring encrypted data (third data) (step S<b>310</b>).</p><p id="p-0440" num="0439">The CPU <b>152</b> generates signature data (second signature data) for the second data and the third data by using the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>311</b>). Specifically, the CPU <b>152</b> calculates a hash value of the second data and the third data, using a specific hash function. Then, the CPU <b>152</b> encrypts the calculated hash value with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b>, thereby generating the second signature data.</p><p id="p-0441" num="0440">The CPU <b>152</b> transmits the second data, the third data, and the second signature data to the user SSD <b>31</b> via the network I/F <b>155</b> (step S<b>312</b>), and ends the account issuance process.</p><p id="p-0442" num="0441">Through the account issuance process described as above, when the authenticity of the first data is confirmed, the CPU <b>152</b> can newly issue the account for accessing the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b>.</p><p id="p-0443" num="0442">More specifically, the CPU <b>152</b> can transmit the login ID and the login password of the account for accessing the first SSD <b>32</b>-<b>1</b>, to the user SSD <b>31</b>. The CPU <b>152</b> can register the login ID and the login password of the account for accessing the first SSD <b>32</b>-<b>1</b> in the account management table <b>45</b>.</p><p id="p-0444" num="0443">The login ID and the login password transmitted from the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> are encrypted with the public key <b>422</b> of the user SSD <b>31</b>. The login ID and the login password registered in the account management table <b>45</b> are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>, for example. Such encryption can prevent leakage of the login IDs and the login passwords.</p><p id="p-0445" num="0444">(Account Information Registration Process)</p><p id="p-0446" num="0445"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a flowchart illustrating an example of the procedure of an account information registration process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The account information registration process is a process for registering information of an account newly issued by the first SSD <b>32</b>-<b>1</b> to the account management table <b>41</b> in the user SSD <b>31</b>.</p><p id="p-0447" num="0446">First, the CPU <b>112</b> receives the second data, third data, and second signature data from the first SSD <b>32</b>-<b>1</b> (step S<b>401</b>). The second data includes the identification information of the first SSD <b>32</b>-<b>1</b> and a new issuance completion notification. The third data includes a login ID and a login password that are encrypted with the public key <b>422</b> of the user SSD <b>31</b>. The second signature data is signature data for the second data and the third data.</p><p id="p-0448" num="0447">The CPU <b>112</b> verifies the authenticity of the second data and the third data by using the second signature data and the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>402</b>).</p><p id="p-0449" num="0448">Specifically, the CPU <b>152</b> calculates a hash value (hereinafter, referred to as a third hash value) of the second data and the third data by using a specific hash function.</p><p id="p-0450" num="0449">Further, the CPU <b>112</b> identifies an entry in the account management table <b>41</b> that corresponds to an account associated with the first SSD <b>32</b>-<b>1</b>. The entry that corresponds to the account associated with the first SSD <b>32</b>-<b>1</b> is, for example, an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field. The CPU <b>112</b> acquires the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> from the identified entry. Then, the CPU <b>112</b> decrypts the second signature data with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>, thereby acquiring a hash value (hereinafter, referred to as a fourth hash value).</p><p id="p-0451" num="0450">When the third hash value matches the fourth hash value, the CPU <b>112</b> determines that the authenticity of the second data and the third data is confirmed. When the third hash value is different from the fourth hash value, the CPU <b>112</b> determines that the authenticity of the second data and the third data is not confirmed.</p><p id="p-0452" num="0451">The CPU <b>112</b> determines whether the authenticity of the second data and the third data is confirmed on the basis of a verification result of the authenticity of the second data and the third data (step S<b>403</b>).</p><p id="p-0453" num="0452">When the authenticity of the second data and the third data is not confirmed (no in step S<b>403</b>), the CPU <b>112</b> notifies the client <b>2</b> of an error indicating that the account for accessing the first SSD <b>32</b>-<b>1</b> is not properly issued, via the host I/F <b>111</b> (step S<b>404</b>), and ends the account information registration process.</p><p id="p-0454" num="0453">When the authenticity of the second data and the third data is confirmed (yes in step S<b>403</b>), the CPU <b>112</b> decrypts the third data with the secret key <b>421</b> of the user SSD <b>31</b>, thereby acquiring the login ID and the login password of the account for accessing the first SSD <b>32</b>-<b>1</b> (step S<b>405</b>).</p><p id="p-0455" num="0454">The CPU <b>112</b> encrypts the acquired login ID and login password with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>406</b>). The CPU <b>112</b> may encrypt the acquired login ID and login password with the public key <b>422</b> of the user SSD <b>31</b>.</p><p id="p-0456" num="0455">The CPU <b>112</b> updates the account management table <b>41</b> by using the encrypted login ID and login password (step S<b>407</b>), and ends the account information registration process. Specifically, the CPU <b>112</b> identifies an entry in the account management table <b>41</b> that corresponds to the account associated with the first SSD <b>32</b>-<b>1</b>. The CPU <b>112</b> sets the encrypted login ID in the login ID field of the identified entry. Further, the CPU <b>112</b> sets the encrypted login password in the login password field of the identified entry.</p><p id="p-0457" num="0456">Through the account information registration process described as above, when the authenticity of the second data and the third data is confirmed, the CPU <b>112</b> can register information about the newly issued account for accessing the first SSD <b>32</b>-<b>1</b> to the account management table <b>41</b>.</p><p id="p-0458" num="0457">More specifically, the CPU <b>112</b> can register the login ID and the login password of the account for accessing the first SSD <b>32</b>-<b>1</b> to the account management table <b>41</b>. The registered login ID and login password are encrypted with, for example, the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> or the public key <b>422</b> of the user SSD <b>31</b>. The encryption can prevent the leakage of the login IDs and the login passwords.</p><p id="p-0459" num="0458">(Account Change Request Process)</p><p id="p-0460" num="0459"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is a flowchart illustrating an example of the procedure of an account change request process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The account change request process is a process for requesting the first SSD <b>32</b>-<b>1</b> to change an account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0461" num="0460">The procedures of steps S<b>501</b> and S<b>502</b> of <figref idref="DRAWINGS">FIG. <b>22</b></figref> are similar to the procedures of steps S<b>101</b> and S<b>102</b> in the account issuance request process described above with reference to <figref idref="DRAWINGS">FIG. <b>18</b></figref>. That is, the CPU <b>112</b> determines whether an account for accessing the user SSD <b>31</b> is successfully authenticated by using the account management table <b>41</b> and a login ID and a login password input by the user on the client <b>2</b>.</p><p id="p-0462" num="0461">When the authentication of the account for accessing the user SSD <b>31</b> has failed (no in step S<b>502</b>), the CPU <b>112</b> notifies the client <b>2</b> of the authentication failure via the host I/F <b>111</b> (step S<b>503</b>), and ends the account change request process.</p><p id="p-0463" num="0462">When the account for accessing the user SSD <b>31</b> is successfully authenticated (yes in step S<b>502</b>), the CPU <b>112</b> receives a request for changing the account for accessing the first SSD <b>32</b>-<b>1</b>, from the client <b>2</b> (step S<b>504</b>).</p><p id="p-0464" num="0463">In accordance with the received change request, the CPU <b>112</b> generates data (fourth data) that includes the identification information of the user SSD <b>31</b> and an account change request command (step S<b>505</b>).</p><p id="p-0465" num="0464">Next, the CPU <b>112</b> identifies an entry (hereinafter, referred to as a second entry) in the account management table <b>41</b> that corresponds to the account associated with the first SSD <b>32</b>-<b>1</b> (step S<b>506</b>). The second entry is an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field.</p><p id="p-0466" num="0465">The CPU <b>112</b> acquires the login ID and the login password before the change (fifth data), which are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>, from the second entry (step S<b>507</b>).</p><p id="p-0467" num="0466">The CPU <b>112</b> generates changed login ID and login password (step S<b>508</b>). For example, the CPU <b>112</b> generates two random numbers and uses the two random numbers as the changed login ID and login password, respectively.</p><p id="p-0468" num="0467">The CPU <b>112</b> encrypts the changed login ID and login password with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>509</b>). The CPU <b>112</b> acquires the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> from the second entry.</p><p id="p-0469" num="0468">Then, the CPU <b>112</b> updates the second entry by using the encrypted changed login ID and login password (sixth data) (step S<b>510</b>). Specifically, the CPU <b>112</b> replaces the encrypted login ID before the change set in the login ID field of the second entry with the encrypted changed login ID. The CPU <b>112</b> replaces the encrypted login password before the change set in the login password field of the second entry with the encrypted changed login password.</p><p id="p-0470" num="0469">Next, the CPU <b>112</b> generates signature data (third signature data) for the fourth data, the fifth data, and the sixth data by using the secret key <b>421</b> of the user SSD <b>31</b> (step S<b>511</b>).</p><p id="p-0471" num="0470">Then, the CPU <b>112</b> transmits the fourth data, the fifth data, the sixth data, and the third signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> (step S<b>512</b>), and ends the account change request process.</p><p id="p-0472" num="0471">Through the account change request process described as above, when the account for accessing the user SSD <b>31</b> is successfully authenticated, the CPU <b>112</b> can request the first SSD <b>32</b>-<b>1</b> to change the account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0473" num="0472">More specifically, the CPU <b>112</b> can transmit, to the first SSD <b>32</b>-<b>1</b>, the fourth data for requesting the change of the account for accessing the first SSD <b>32</b>-<b>1</b>, the fifth data including the encrypted login ID and login password before the change, the sixth data including the encrypted changed login ID and login password, and the third signature data for guaranteeing the authenticity of the fourth data, the fifth data, and the sixth data.</p><p id="p-0474" num="0473">The login ID and login password before the change and the changed login ID and login password that are transmitted from the user SSD <b>31</b> to the first SSD <b>32</b>-<b>1</b> are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The encryption can prevent the leakage of the login IDs and the login passwords.</p><p id="p-0475" num="0474">(Account Change Process)</p><p id="p-0476" num="0475"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is a flowchart illustrating an example of the procedure of an account change process executed by the CPU <b>152</b> of the first SSD <b>32</b>-<b>1</b>. The account change process is a process for changing an issued account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0477" num="0476">First, the CPU <b>152</b> receives the fourth data, the fifth data, the sixth data, and the third signature data from the user SSD <b>31</b> (step S<b>601</b>). The fourth data includes the identification information of the user SSD <b>31</b> and the account change request command. The fifth data includes the login ID and login password before the change that are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The sixth data includes the changed login ID and login password that are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The third signature data is signature data for the fourth data, the fifth data, and the sixth data.</p><p id="p-0478" num="0477">The CPU <b>152</b> verifies the authenticity of the fourth data, the fifth data, and the sixth data by using the third signature data and the public key <b>422</b> of the user SSD <b>31</b> (step S<b>602</b>).</p><p id="p-0479" num="0478">The CPU <b>152</b> determines whether the authenticity of the fourth data, the fifth data, and the sixth data is confirmed on the basis of a verification result of the authenticity of the fourth data, the fifth data, and the sixth data (step S<b>603</b>).</p><p id="p-0480" num="0479">When the authenticity of the fourth data, the fifth data, and the sixth data is not confirmed (no in step S<b>603</b>), the CPU <b>152</b> notifies the user SSD <b>31</b> of an error indicating that the authenticity of the fourth data, the fifth data, and the sixth data is not confirmed via the network I/F <b>155</b> (step S<b>604</b>), and ends the account change process.</p><p id="p-0481" num="0480">When the authenticity of the fourth data, the fifth data, and the sixth data is confirmed (yes in step S<b>603</b>), the CPU <b>152</b> acquires the identification information of the user SSD <b>31</b> and the account change request command from the fourth data (step S<b>605</b>).</p><p id="p-0482" num="0481">In accordance with the acquired account change request command, the CPU <b>152</b> executes a second authentication process using the fifth data (step S<b>606</b>). The second authentication process is a process of verifying the validation of the login ID and the login password included in data (here, the fifth data) in order to authenticate the account for accessing the first SSD <b>32</b>-<b>1</b>. The specific procedure of the second authentication process will be described later with reference to <figref idref="DRAWINGS">FIG. <b>24</b></figref>.</p><p id="p-0483" num="0482">The CPU <b>152</b> determines whether the account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated on the basis of an authentication result of the second authentication process (step S<b>607</b>).</p><p id="p-0484" num="0483">When the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> has failed (no in step S<b>607</b>), the CPU <b>152</b> notifies the user SSD <b>31</b> of the authentication failure via the network I/F <b>155</b> (step S<b>608</b>), and ends the account change process.</p><p id="p-0485" num="0484">When the account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated (yes in step S<b>607</b>), the CPU <b>152</b> acquires the encrypted changed login ID and login password from the sixth data (step S<b>609</b>).</p><p id="p-0486" num="0485">The CPU <b>152</b> updates the account management table <b>45</b> by using the encrypted changed login ID and login password (step S<b>610</b>). Specifically, in an entry in the account management table <b>45</b> that corresponds to the user SSD <b>31</b>, the CPU <b>152</b> sets the encrypted changed login ID in the login ID field and sets the encrypted changed login password in the login password field.</p><p id="p-0487" num="0486">Then, the CPU <b>152</b> decrypts the encrypted changed login ID and login password with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>611</b>).</p><p id="p-0488" num="0487">Next, the CPU <b>152</b> generates data (seventh data) that includes the identification information of the first SSD <b>32</b>-<b>1</b> and a change completion notification (step S<b>612</b>).</p><p id="p-0489" num="0488">The CPU <b>152</b> encrypts the changed login ID and login password, which have been decrypted in step S<b>611</b>, with the public key <b>422</b> of the user SSD <b>31</b>, thereby acquiring encrypted data (eighth data) (step S<b>613</b>).</p><p id="p-0490" num="0489">The CPU <b>152</b> generates signature data (fourth signature data) for the seventh data and the eighth data by using the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>614</b>).</p><p id="p-0491" num="0490">Then, the CPU <b>152</b> transmits the seventh data, the eighth data, and the fourth signature data to the user SSD <b>31</b> via the network I/F <b>155</b> (step S<b>615</b>), and ends the account change process.</p><p id="p-0492" num="0491">Through the account change process described as above, the CPU <b>152</b> can change the account for accessing the first SSD <b>32</b>-<b>1</b> when the authenticity of the fourth data, the fifth data, and the sixth data is confirmed and the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> using the fifth data has succeeded.</p><p id="p-0493" num="0492">More specifically, the CPU <b>152</b> can change the login ID and the login password of the account for accessing the first SSD <b>32</b>-<b>1</b> registered in the account management table <b>45</b> to the changed login ID and login password in the sixth data. Further, the CPU <b>152</b> can transmit, to the user SSD <b>31</b>, the seventh data including the change completion notification, the eighth data including the encrypted changed login ID and login password, and the fourth signature data for guaranteeing the authenticity of the seventh data and the eighth data.</p><p id="p-0494" num="0493">The changed login ID and login password transmitted from the first SSD <b>32</b>-<b>1</b> to the user SSD <b>31</b> are encrypted with the public key <b>422</b> of the user SSD <b>31</b>. The encryption can prevent the leakage of the login ID and the login password.</p><p id="p-0495" num="0494">(Second Authentication Process)</p><p id="p-0496" num="0495"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is a flowchart illustrating an example of the procedure of the second authentication process executed by the CPU <b>152</b> of the first SSD <b>32</b>-<b>1</b>. The second authentication process is a process of verifying the validation of a login ID and a login password that are obtained from data received from the user SSD <b>31</b> in order to authenticate an account for accessing the first SSD <b>32</b>-<b>1</b>. The data received from the user SSD <b>31</b> (fifth data) includes the login ID (received login ID) and the login password (received login password) that are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The second authentication process corresponds to step S<b>606</b> of the second authentication process described above with reference to <figref idref="DRAWINGS">FIG. <b>23</b></figref>.</p><p id="p-0497" num="0496">First, the CPU <b>152</b> decrypts the encrypted received login ID and received login password in the data received from the user SSD <b>31</b>, with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>701</b>). With this decryption, the received login ID and the received login password are obtained.</p><p id="p-0498" num="0497">The CPU <b>152</b> identifies an entry (hereinafter, referred to as a third entry) in the account management table <b>45</b> that corresponds to an account associated with the user SSD <b>31</b> (step S<b>702</b>). The third entry is an entry in which the identification information of the user SSD <b>31</b> is set in the SSD identification information field.</p><p id="p-0499" num="0498">The CPU <b>152</b> decrypts the encrypted login ID and login password in the third entry, with the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>703</b>). The login ID obtained by the decryption in step S<b>703</b> is referred to as the second registration login ID. The login password obtained by the decryption in step S<b>703</b> is referred to as the second registration login password.</p><p id="p-0500" num="0499">Next, the CPU <b>152</b> determines whether the received login ID matches the second registration login ID (step S<b>704</b>).</p><p id="p-0501" num="0500">When the received login ID is different from the second registration login ID (no in step S<b>704</b>), the CPU <b>152</b> generates an authentication result indicating that the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> has failed (step S<b>706</b>), and ends the second authentication process.</p><p id="p-0502" num="0501">When the received login ID matches the second registration login ID (yes in step S<b>704</b>), the CPU <b>152</b> determines whether the received login password matches the second registration login password (step S<b>705</b>).</p><p id="p-0503" num="0502">When the received login password is different from the second registration login password (no in step S<b>705</b>), the CPU <b>152</b> generates the authentication result indicating that the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> has failed (step S<b>706</b>), and ends the second authentication process.</p><p id="p-0504" num="0503">When the received login password matches the second registration login password (yes in step S<b>705</b>), the CPU <b>152</b> generates an authentication result indicating that the account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated (step S<b>707</b>), and ends the second authentication process.</p><p id="p-0505" num="0504">Through the second authentication process described as above, the CPU <b>152</b> verifies the validation of the received login ID and the received login password, and can generate the authentication result indicative of the success or failure of authentication of the account for accessing the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0506" num="0505">(Access Application Process)</p><p id="p-0507" num="0506"><figref idref="DRAWINGS">FIG. <b>25</b></figref> is a flowchart illustrating an example of the procedure of an access application process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The access application process is a process for applying to the first SSD <b>32</b>-<b>1</b> for access to the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0508" num="0507">The procedures of steps S<b>801</b> and S<b>802</b> of <figref idref="DRAWINGS">FIG. <b>25</b></figref> are similar to the procedures of steps S<b>101</b> and S<b>102</b> in the account issuance request process described above with reference to <figref idref="DRAWINGS">FIG. <b>18</b></figref>. That is, the CPU <b>112</b> determines whether an account for accessing the user SSD <b>31</b> is successfully authenticated by using the account management table <b>41</b> and a login ID and a login password input by the user on the client <b>2</b>.</p><p id="p-0509" num="0508">When the authentication of the account for accessing the user SSD <b>31</b> has failed (no in step S<b>802</b>), the CPU <b>112</b> notifies the client <b>2</b> of the authentication failure via the host I/F <b>111</b> (step S<b>803</b>), and ends the access application process.</p><p id="p-0510" num="0509">When the account for accessing the user SSD <b>31</b> is successfully authenticated (yes in step S<b>802</b>), the CPU <b>112</b> receives the access application request for the first SSD <b>32</b>-<b>1</b> from the client <b>2</b> (step S<b>804</b>).</p><p id="p-0511" num="0510">In accordance with the received access application request, the CPU <b>112</b> generates data (ninth data) that includes the identification information of the user SSD <b>31</b> and the access application command (step S<b>805</b>).</p><p id="p-0512" num="0511">Next, the CPU <b>112</b> identifies an entry (hereinafter, referred to as a fourth entry) in the account management table <b>41</b> that corresponds to the account associated with the first SSD <b>32</b>-<b>1</b> (step S<b>806</b>). The fourth entry is an entry in which the identification information of the first SSD <b>32</b>-<b>1</b> is set in the SSD identification information field.</p><p id="p-0513" num="0512">The CPU <b>112</b> acquires the encrypted login ID and login password (tenth data) from the fourth entry (step S<b>807</b>).</p><p id="p-0514" num="0513">The CPU <b>112</b> generates signature data (fifth signature data) for the ninth data and the tenth data by using the secret key <b>421</b> of the user SSD <b>31</b> (step S<b>808</b>).</p><p id="p-0515" num="0514">Then, the CPU <b>112</b> transmits the ninth data, the tenth data, and the fifth signature data to the first SSD <b>32</b>-<b>1</b> via the network I/F <b>115</b> (step S<b>809</b>), and ends the access application process.</p><p id="p-0516" num="0515">Through the access application process described as above, the CPU <b>112</b> can apply for access to the first SSD <b>32</b>-<b>1</b> when the account for accessing the user SSD <b>31</b> is successfully authenticated.</p><p id="p-0517" num="0516">More specifically, the CPU <b>112</b> can transmit, to the first SSD <b>32</b>-<b>1</b>, the ninth data for applying for access to the first SSD <b>32</b>-<b>1</b>, the tenth data that corresponds to the account for accessing the first SSD <b>32</b>-<b>1</b> and includes the encrypted login ID and login password, and the fifth signature data for guaranteeing the authenticity of the ninth data and the tenth data.</p><p id="p-0518" num="0517">The login ID and the login password transmitted from the user SSD <b>31</b> to the first SSD <b>32</b>-<b>1</b> are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The encryption can prevent the leakage of the login ID and the login password.</p><p id="p-0519" num="0518">(Access Control Process)</p><p id="p-0520" num="0519"><figref idref="DRAWINGS">FIG. <b>26</b></figref> is a flowchart illustrating an example of the procedure of an access control process executed by the CPU <b>152</b> of the first SSD <b>32</b>-<b>1</b>. The access control process is a process for controlling access to the first SSD <b>32</b>-<b>1</b>.</p><p id="p-0521" num="0520">First, the CPU <b>152</b> receives the ninth data, the tenth data, and the fifth signature data from the user SSD <b>31</b> (step S<b>901</b>). The ninth data includes the identification information of the user SSD <b>31</b> and the access application command. The tenth data includes the login ID and login password that are encrypted with the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b>. The fifth signature data is signature data for the ninth data and the tenth data.</p><p id="p-0522" num="0521">The CPU <b>152</b> verifies the authenticity of the ninth data and the tenth data by using the fifth signature data and the public key <b>422</b> of the user SSD <b>31</b> (step S<b>902</b>).</p><p id="p-0523" num="0522">The CPU <b>152</b> determines whether the authenticity of the ninth data and the tenth data is confirmed on the basis of a verification result of the authenticity of the ninth data and the tenth data (step S<b>903</b>).</p><p id="p-0524" num="0523">When the authenticity of the ninth data and the tenth data is not confirmed (no in step S<b>903</b>), the CPU <b>152</b> notifies the user SSD <b>31</b> of an error indicating that the authenticity of the ninth data and the tenth data is not confirmed via the network I/F <b>155</b> (step S<b>904</b>), and ends the access control process.</p><p id="p-0525" num="0524">When the authenticity of the ninth data and the tenth data is confirmed (yes in step S<b>903</b>), the CPU <b>152</b> acquires the identification information of the user SSD <b>31</b> and the access application command from the ninth data (step S<b>905</b>).</p><p id="p-0526" num="0525">In accordance with the acquired access application command, the CPU <b>152</b> executes the second authentication process using the tenth data (step S<b>906</b>). The specific procedures of the second authentication process have been described as above with reference to <figref idref="DRAWINGS">FIG. <b>24</b></figref>.</p><p id="p-0527" num="0526">The CPU <b>152</b> determines whether the account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated on the basis of an authentication result of the second authentication process (step S<b>907</b>).</p><p id="p-0528" num="0527">When the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> has failed (no in step S<b>907</b>), the CPU <b>152</b> notifies the user SSD <b>31</b> of the authentication failure via the network I/F <b>155</b> (step S<b>908</b>), and ends the access control process.</p><p id="p-0529" num="0528">When the account for accessing the first SSD <b>32</b>-<b>1</b> is successfully authenticated (yes in step S<b>907</b>), the CPU <b>152</b> generates data (eleventh data) that includes the identification information of the first SSD <b>32</b>-<b>1</b> and the access permission notification (step S<b>909</b>).</p><p id="p-0530" num="0529">The CPU <b>152</b> generates signature data (sixth signature data) for the eleventh data by using the secret key <b>461</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>910</b>).</p><p id="p-0531" num="0530">Then, the CPU <b>152</b> transmits the eleventh data and the sixth signature data to the user SSD <b>31</b> via the network I/F <b>155</b> (step S<b>911</b>), and ends the access control process.</p><p id="p-0532" num="0531">Through the access control process described as above, when the authenticity of the ninth data and the tenth data is confirmed and the authentication of the account for accessing the first SSD <b>32</b>-<b>1</b> using the tenth data has succeeded, the CPU <b>152</b> can permit the user SSD <b>31</b> to access the first SSD <b>32</b>-<b>1</b>. More specifically, the CPU <b>152</b> can transmit the eleventh data including the access permission notification and the sixth signature data corresponding to the eleventh data, to the user SSD <b>31</b>.</p><p id="p-0533" num="0532">(Access Permission Confirmation Process)</p><p id="p-0534" num="0533"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is a flowchart illustrating an example of the procedure of an access permission confirmation process executed by the CPU <b>112</b> of the user SSD <b>31</b>. The access permission confirmation process is a process for confirming that access to the first SSD <b>32</b>-<b>1</b> is permitted.</p><p id="p-0535" num="0534">First, the CPU <b>112</b> receives the eleventh data and the sixth signature data from the first SSD <b>32</b>-<b>1</b> (step S<b>1001</b>). The eleventh data includes the identification information of the first SSD <b>32</b>-<b>1</b> and the access permission notification. The sixth signature data is signature data for the eleventh data.</p><p id="p-0536" num="0535">The CPU <b>112</b> verifies the authenticity of the eleventh data by using the sixth signature data and the public key <b>462</b> of the first SSD <b>32</b>-<b>1</b> (step S<b>1002</b>).</p><p id="p-0537" num="0536">The CPU <b>112</b> determines whether the authenticity of the eleventh data is confirmed on the basis of a verification result of the authenticity of the eleventh data (step S<b>1003</b>).</p><p id="p-0538" num="0537">When the authenticity of the eleventh data is not confirmed (no in step S<b>1003</b>), the CPU <b>112</b> notifies the client <b>2</b> of an error indicating that the permission of the access to the first SSD <b>32</b>-<b>1</b> has not been obtained, via the host I/F <b>111</b> (step S<b>1004</b>), and ends the access permission confirmation process.</p><p id="p-0539" num="0538">When the authenticity of the eleventh data is confirmed (yes in step S<b>1003</b>), the CPU <b>112</b> acquires the identification information of the first SSD <b>32</b>-<b>1</b> and the access permission notification from the eleventh data (step S<b>1005</b>).</p><p id="p-0540" num="0539">The CPU <b>112</b> starts the access to the first SSD <b>32</b>-<b>1</b> in accordance with the acquired access permission notification (step S<b>1006</b>), and ends the access permission confirmation process.</p><p id="p-0541" num="0540">According to the access permission confirmation process as described above, the CPU <b>112</b> can start the access to the first SSD <b>32</b>-<b>1</b> when the authenticity of the eleventh data is confirmed. Specifically, the CPU <b>112</b> can transmit, for example, a write command and user data to be written into the first SSD <b>32</b>-<b>1</b> after the access permission notification is acquired. Further, the CPU <b>112</b> can transmit, for example, a read command to the first SSD <b>32</b>-<b>1</b> after the access permission notification is acquired.</p><heading id="h-0006" level="1">Modification Example</heading><p id="p-0542" num="0541">With reference to <figref idref="DRAWINGS">FIGS. <b>28</b> to <b>30</b></figref>, a modification example of the information processing system <b>1</b> will be described. In the information processing system <b>1</b> according to the modification example, the user SSD <b>31</b> is connected to the client <b>2</b> via the host I/F <b>111</b> but is not connected to the network <b>7</b>. The client <b>2</b> is connected to the network <b>7</b> via the network I/F <b>24</b>. Further, the network SSD <b>32</b> is connected to the network <b>7</b> via the network I/F <b>155</b>. Therefore, the client <b>2</b> and the network SSD <b>32</b> is capable of communicating with each other through the network <b>7</b>.</p><p id="p-0543" num="0542"><figref idref="DRAWINGS">FIG. <b>28</b></figref> illustrates an example of a flow of account information in the information processing system <b>1</b> according to the modification example.</p><p id="p-0544" num="0543">A user inputs account information to be used for authentication of an account for accessing the user SSD <b>31</b> by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>28</b></figref>). The client <b>2</b> transmits the account information input by the user to the user SSD <b>31</b> ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>28</b></figref>). The account information in plain text is transmitted from the client <b>2</b> to the user SSD <b>31</b>.</p><p id="p-0545" num="0544">The client <b>2</b> and the user SSD <b>31</b> transfer encrypted account information to be used for authentication of an account for accessing the network SSD <b>32</b> (that is, encrypted account information of the network SSD <b>32</b>) ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>28</b></figref>). Further, the client <b>2</b> and the network SSD <b>32</b> transfer the encrypted account information of the network SSD <b>32</b> through the network <b>7</b> ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>28</b></figref>).</p><p id="p-0546" num="0545">In the information processing system <b>1</b> of the modification example, the client <b>2</b> has a function of relaying the encrypted account information of the network SSD <b>32</b> transferred between the user SSD <b>31</b> and the network SSD <b>32</b>. That is, the client <b>2</b> has a function of transmitting the encrypted account information of the network SSD <b>32</b> that is received from the user SSD <b>31</b>, to the network SSD <b>32</b> through the network <b>7</b>. Further, the client <b>2</b> has a function of transmitting the encrypted account information of the network SSD <b>32</b> that is received from the network SSD <b>32</b> through the network <b>7</b>, to the user SSD <b>31</b>.</p><p id="p-0547" num="0546">More specifically, for example, when newly having issued an account, the network SSD <b>32</b> transmits encrypted account information of the network SSD <b>32</b> to the client <b>2</b> through the network <b>7</b>. The client <b>2</b> receives the encrypted account information from the network SSD <b>32</b>. Then, the client <b>2</b> transmits the received encrypted account information to the user SSD <b>31</b>. In this manner, the network SSD <b>32</b> transmits the encrypted account information to the user SSD <b>31</b> via the client <b>2</b>. In other words, the user SSD <b>31</b> receives the encrypted account information from the network SSD <b>32</b> via the client <b>2</b>.</p><p id="p-0548" num="0547">Further, for example, when requesting authentication of the account for accessing the network SSD <b>32</b>, the user SSD <b>31</b> transmits the encrypted account information of the network SSD <b>32</b> to the client <b>2</b>. The client <b>2</b> receives the encrypted account information from the user SSD <b>31</b>. Then, the client <b>2</b> transmits the received encrypted account information to the network SSD <b>32</b> through the network <b>7</b>. In this manner, the user SSD <b>31</b> transmits the encrypted account information to the network SSD <b>32</b> via the client <b>2</b>. In other words, the network SSD <b>32</b> receives the encrypted account information from the user SSD <b>31</b> via the client <b>2</b>.</p><p id="p-0549" num="0548">As described above, the account information for accessing the user SSD <b>31</b> is transmitted from the client <b>2</b> to the user SSD <b>31</b> in plain text. On the other hand, the account information for accessing the network SSD <b>32</b> is encrypted and transferred through the network <b>7</b>. Since the account information transferred through the network <b>7</b> is encrypted, it is possible to prevent leakage and tampering of the account information.</p><p id="p-0550" num="0549">Next, with reference to <figref idref="DRAWINGS">FIGS. <b>29</b> and <b>30</b></figref>, transfer of user data in the information processing system <b>1</b> according to the modification example will be described. Here, it is assumed that the account for accessing the user SSD <b>31</b> is successfully authenticated and access to the user SSD <b>31</b> (more specifically, the user area <b>132</b> of the NAND flash memory <b>13</b>) is permitted, and then the account for accessing the network SSD <b>32</b> is successfully authenticated and access to the network SSD <b>32</b> (more specifically, the user area <b>172</b> of the NAND flash memory <b>17</b>) is permitted.</p><p id="p-0551" num="0550">(Reading of User Data)</p><p id="p-0552" num="0551"><figref idref="DRAWINGS">FIG. <b>29</b></figref> illustrates an example of a flow of data in a case where user data is read from the user SSD <b>31</b> or the network SSD <b>32</b> in the information processing system <b>1</b> according to the modification example.</p><p id="p-0553" num="0552">The user requests reading of user data by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>29</b></figref>). When an SSD in which the user data to be read is stored is the user SSD <b>31</b>, the client <b>2</b> transmits a read command to the user SSD <b>31</b> in accordance with this request ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>29</b></figref>).</p><p id="p-0554" num="0553">The user SSD <b>31</b> receives the read command transmitted from the client <b>2</b>. The user SSD <b>31</b> reads the user data from the NAND flash memory <b>13</b> in accordance with the received read command. Then, the user SSD <b>31</b> transmits the read user data to the client <b>2</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>29</b></figref>).</p><p id="p-0555" num="0554">On the other hand, when an SSD in which the user data to be read is stored is the network SSD <b>32</b>, the client <b>2</b> transmits a read command to the network SSD <b>32</b> through the network <b>7</b> ((<b>4</b>) in <figref idref="DRAWINGS">FIG. <b>29</b></figref>).</p><p id="p-0556" num="0555">The network SSD <b>32</b> receives the read command transmitted from the client <b>2</b>. The network SSD <b>32</b> reads the user data from the NAND flash memory <b>17</b> in accordance with the received read command. Then, the network SSD <b>32</b> transmits the read user data to the client <b>2</b> through the network <b>7</b> ((<b>5</b>) in <figref idref="DRAWINGS">FIG. <b>29</b></figref>).</p><p id="p-0557" num="0556">In this manner, the client <b>2</b> can read user data not only from the NAND flash memory <b>13</b> of the user SSD <b>31</b> but also from the NAND flash memory <b>17</b> of the network SSD <b>32</b>.</p><p id="p-0558" num="0557">(Writing of User Data)</p><p id="p-0559" num="0558"><figref idref="DRAWINGS">FIG. <b>30</b></figref> illustrates an example of a flow of data in a case where user data is written into the user SSD <b>31</b> or the network SSD <b>32</b> in the information processing system <b>1</b> according to the modification example.</p><p id="p-0560" num="0559">The user requests writing of user data by an operation using the client <b>2</b> ((<b>1</b>) in <figref idref="DRAWINGS">FIG. <b>30</b></figref>). In accordance with this request, when an SSD into which the user data is to be written is the user SSD <b>31</b>, the client <b>2</b> transmits a write command and the user data to the user SSD <b>31</b> ((<b>2</b>) in <figref idref="DRAWINGS">FIG. <b>30</b></figref>).</p><p id="p-0561" num="0560">The user SSD <b>31</b> receives the write command and the user data transmitted from the client <b>2</b>. The user SSD <b>31</b> writes the user data into the NAND flash memory <b>13</b> in accordance with the write command.</p><p id="p-0562" num="0561">On the other hand, when an SSD into which the user data is to be written is the network SSD <b>32</b>, the client <b>2</b> transmits a write command and the user data to the network SSD <b>32</b> through the network <b>7</b> ((<b>3</b>) in <figref idref="DRAWINGS">FIG. <b>30</b></figref>).</p><p id="p-0563" num="0562">The network SSD <b>32</b> receives the write command and the user data transmitted from the client <b>2</b>. The network SSD <b>32</b> writes the user data into the NAND flash memory <b>17</b> in accordance with the write command.</p><p id="p-0564" num="0563">In this manner, the client <b>2</b> can write user data not only into the NAND flash memory <b>13</b> of the user SSD <b>31</b> but also into the NAND flash memory <b>17</b> of the network SSD <b>32</b>.</p><heading id="h-0007" level="1">Comparative Example</heading><p id="p-0565" num="0564">With reference to <figref idref="DRAWINGS">FIG. <b>31</b></figref>, a configuration of an information processing system <b>9</b> according to a comparative example will be described. The information processing system <b>9</b> includes a client device <b>91</b> (hereinafter, referred to as a client <b>91</b>), multiple servers <b>94</b>A and <b>94</b>B, and multiple SSDs <b>92</b>, <b>95</b>A and <b>95</b>B. The client <b>91</b> and the multiple servers <b>94</b>A and <b>94</b>B are connectable to each other via a network <b>93</b>. The SSD <b>92</b> is connected to the client <b>91</b> via a host I/F. The SSD <b>95</b>A is connected to the server <b>94</b>A via a host I/F. The SSD <b>95</b>B is connected to the server <b>94</b>B via a host I/F.</p><p id="p-0566" num="0565">When the client <b>91</b> accesses the SSD <b>95</b>A, the server <b>94</b>A performs authentication of an account for accessing the server <b>94</b>A and authentication of an account for accessing the SSD <b>95</b>A. Therefore, a user who uses the client <b>91</b> needs to manage account information for accessing the server <b>94</b>A and account information for accessing the SSD <b>95</b>A.</p><p id="p-0567" num="0566">Further, when the client <b>91</b> accesses the SSD <b>95</b>B, the server <b>94</b>B performs authentication of an account for accessing the server <b>94</b>B and authentication of an account for accessing the SSD <b>95</b>B. Therefore, the user who uses the client <b>91</b> needs to manage account information for accessing the server <b>94</b>B and account information for accessing the SSD <b>95</b>B.</p><p id="p-0568" num="0567">In this manner, in the information processing system <b>9</b> of the comparative example, the number of pieces of account information that needs to be managed by the user increases as the number of SSDs to be accessed increases. It is troublesome for the user to manage a large number of pieces of account information. Further, in a case where the user forgets the account information, there is a possibility that the user is no longer accessible to data stored in the SSD. Further, in a case where the account information is known to a third party, there is a possibility that data stored in the SSD is leaked or tampered with.</p><p id="p-0569" num="0568">In the information processing system <b>1</b> according to the embodiment, however, the user SSD <b>31</b> manages the first account information to be used for authentication of the first account and the second account information to be used for authentication of the second account. The user SSD <b>31</b> receives the third account information from the client <b>2</b> and then authenticates the first account. When the first account is successfully authenticated, that is, when the third account information matches the first account information, the user SSD <b>31</b> permits access to at least a partial storage area of the NAND flash memory <b>13</b> in the user SSD <b>31</b> based on a request from the client <b>2</b>, and transmits data including the managed second account information to the network SSD <b>32</b>.</p><p id="p-0570" num="0569">The network SSD <b>32</b> receives the data including the second account information transmitted from the user SSD <b>31</b>, and then authenticates the second account. The network SSD <b>32</b> manages the fourth account information to be used for authentication of the second account. When the second account is successfully authenticated, that is, when the second account information matches the fourth account information, the network SSD <b>32</b> permits access to at least a partial storage area of the NAND flash memory <b>17</b> in the network SSD <b>32</b>.</p><p id="p-0571" num="0570">In this manner, since the user SSD <b>31</b> transmits the managed second account information of the network SSD <b>32</b> to the network SSD <b>32</b> when the first account is successfully authenticated, the user does not need to manage the second account information. That is, the user can access the user SSD <b>31</b> and the network SSD <b>32</b> only by managing the account information for accessing the user SSD <b>31</b>.</p><p id="p-0572" num="0571">Therefore, the information processing system <b>1</b> of the embodiment can enable the user to manage the account information easily as compared with the information processing system <b>9</b> of the comparative example.</p><p id="p-0573" num="0572">As described above, according to the present embodiment, it is possible to enable the user to manage the account information easily.</p><p id="p-0574" num="0573">In the user SSD <b>31</b>, the controller <b>11</b> communicates with the network SSD <b>32</b> via a first interface (for example, the network I/F <b>115</b>) that conforms to a first standard, and communicates with the client <b>2</b> via a second interface (for example, the host I/F <b>111</b>) that conforms to a second standard different from the first standard. The controller <b>11</b> manages first account information to be used for authentication of a first account and second account information to be used for authentication of a second account. The controller <b>11</b> receives third account information from the client <b>2</b>. When the third account information matches the first account information, the controller <b>11</b> permits access to at least a partial storage area (for example, the user area <b>132</b>) of the NAND flash memory <b>13</b> based on a request from the client <b>2</b> and transmits first data that includes the second account information to the network SSD <b>32</b>.</p><p id="p-0575" num="0574">In the network SSD <b>32</b>, the controller <b>15</b> communicates with the user SSD <b>31</b> via the first interface (for example, the network I/F <b>155</b>) that conforms to the first standard. The controller <b>15</b> manages fourth account information to be used for authentication of the second account. The controller <b>15</b> receives the first data transmitted from the user SSD <b>31</b>. When the second account information included in the first data matches the fourth account information, the controller <b>15</b> permits access to at least a partial storage area of the NAND flash memory <b>17</b>.</p><p id="p-0576" num="0575">In this manner, when the third account information matches the first account information, the user SSD <b>31</b> permits access to at least a partial storage area of the NAND flash memory <b>13</b> based on the request from the client <b>2</b> and transmits the first data that includes the second account information to the network SSD <b>32</b>. Then, the network SSD <b>32</b> permits access to at least a partial storage area of the NAND flash memory <b>17</b> when the second account information matches the fourth account information. That is, not only access to at least a partial storage area of the NAND flash memory <b>13</b> but also access to at least a partial storage area of the NAND flash memory <b>17</b> is permitted when the third account information matches the first account information.</p><p id="p-0577" num="0576">In this manner, it is sufficient for the user who uses the client <b>2</b> to manage only the third account information to be used for authentication of the first account for accessing the user SSD <b>31</b> in order to access the user SSD <b>31</b> and the network SSD <b>32</b>. Therefore, it is possible to enable the user to manage the account information easily.</p><p id="p-0578" num="0577">Each of various functions described in the embodiment may be realized by a circuit (e.g., processing circuit). An exemplary processing circuit may be a programmed processor such as a central processing unit (CPU). The processor executes computer programs (instructions) stored in a memory thereby performs the described functions. The processor may be a microprocessor including an electric circuit. An exemplary processing circuit may be a digital signal processor (DSP), an application specific integrated circuit (ASIC), a microcontroller, a controller, or other electric circuit components. The components other than the CPU described according to the embodiment may be realized in a processing circuit.</p><p id="p-0579" num="0578">While certain embodiments have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the inventions. Indeed, the novel embodiments described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the embodiments described herein may be made without departing from the spirit of the inventions. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the inventions.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A memory system comprising:<claim-text>a nonvolatile memory; and</claim-text><claim-text>a controller configured to:<claim-text>communicate with a first memory system via a first interface that conforms to a first standard;</claim-text><claim-text>communicate with a host device via a second interface that conforms to a second standard different from the first standard;</claim-text><claim-text>manage first account information to be used for authentication of a first account and second account information to be used for authentication of a second account;</claim-text><claim-text>receive third account information from the host device; and</claim-text><claim-text>when the third account information matches the first account information, permit access to at least a partial storage area of the nonvolatile memory based on a request from the host device and transmit first data that includes the second account information to the first memory system.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is further configured to<claim-text>when access to at least a partial storage area of a first nonvolatile memory in the first memory system is permitted using the first data,<claim-text>transmit, to the first memory system, data to be written into the first nonvolatile memory, or</claim-text><claim-text>receive, from the first memory system, data read from the first nonvolatile memory.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>store the second account information which is encrypted, in the nonvolatile memory, and</claim-text><claim-text>when the third account information matches the first account information, transmit the first data and signature data for the first data to the first memory system, the first data including the encrypted second account information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>when the third account information matches the first account information, transmit second data for requesting issuance of the second account to the first memory system;</claim-text><claim-text>receive third data including the second account information from the first memory system; and</claim-text><claim-text>store the second account information included in the third data, in the nonvolatile memory.</claim-text></claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The memory system according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>transmit signature data for the second data to the first memory system;</claim-text><claim-text>receive the third data including the second account information which is encrypted, from the first memory system; and</claim-text><claim-text>store the encrypted second account information in the nonvolatile memory.</claim-text></claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>when the third account information matches the first account information, transmit, to the first memory system, fourth data for requesting a change of the second account, fifth data including the second account information, and sixth data including fourth account information to be newly used for authentication of the second account;</claim-text><claim-text>receive seventh data including the fourth account information from the first memory system; and</claim-text><claim-text>replace the second account information stored in the nonvolatile memory with the fourth account information included in the seventh data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The memory system according to <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>store the second account information which is encrypted, in the nonvolatile memory;</claim-text><claim-text>when the third account information matches the first account information, transmit, to the first memory system, the fourth data, the fifth data including the encrypted second account information, and the sixth data including the fourth account information which is encrypted;</claim-text><claim-text>receive the seventh data including the encrypted fourth account information from the first memory system; and</claim-text><claim-text>replace the encrypted second account information stored in the nonvolatile memory with the encrypted fourth account information, using the seventh data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is configured to<claim-text>transmit the first data to the first memory system without passing through the host device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The memory system according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein<claim-text>the controller is configured to<claim-text>transmit the first data to the first memory system via the host device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A memory system comprising:<claim-text>a nonvolatile memory; and</claim-text><claim-text>a controller configured to:<claim-text>communicate with a first memory system via a first interface that conforms to a first standard;</claim-text><claim-text>manage first account information to be used for authentication of a first account;</claim-text><claim-text>receive first data that includes second account information from the first memory system; and</claim-text><claim-text>permit access to at least a partial storage area of the nonvolatile memory when the second account information included in the first data matches the first account information.</claim-text></claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The memory system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the controller is further configured to<claim-text>when the access to the at least partial storage area of the nonvolatile memory is permitted,<claim-text>write data received from the first memory system into the nonvolatile memory, or</claim-text><claim-text>transmit data read from the nonvolatile memory to the first memory system.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The memory system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>store the first account information which is encrypted, in the nonvolatile memory;</claim-text><claim-text>receive first signature data for the first data;</claim-text><claim-text>when authenticity of the first data is confirmed using the first signature data, decrypt the second account information that is encrypted and is included in the first data and decrypt the encrypted first account information; and</claim-text><claim-text>when the decrypted second account information matches the decrypted first account information, permit the access to the at least partial storage area of the nonvolatile memory.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The memory system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>receive second data for requesting issuance of the first account from the first memory system; and</claim-text><claim-text>transmit third data including the first account information to the first memory system in accordance with the second data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The memory system according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>receive second signature data for the second data from the first memory system; and</claim-text><claim-text>when authenticity of the second data is confirmed using the second signature data, transmit the third data including the first account information which is encrypted and third signature data for the third data to the first memory system in accordance with the second data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The memory system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>receive, from the first memory system, fourth data for requesting a change of the first account, fifth data including the second account information, and sixth data including third account information to be newly used for authentication of the first account; and</claim-text><claim-text>when the second account information matches the first account information, transmit seventh data including the third account information to the first memory system in accordance with the fourth data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The memory system according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein<claim-text>the controller is further configured to<claim-text>store the first account information which is encrypted, in the nonvolatile memory;</claim-text><claim-text>receive, from the first memory system, the fourth data, the fifth data including the second account information which is encrypted, the sixth data including the third account information which is encrypted, and fourth signature data for the fourth data, the fifth data and the sixth data;</claim-text><claim-text>when authenticity of the fourth data, the fifth data and the sixth data is confirmed using the fourth signature data, decrypt the encrypted second account information included in the fifth data and decrypt the encrypted first account information; and</claim-text><claim-text>when the decrypted second account information matches the decrypted first account information, transmit the seventh data including the third account information which is encrypted and fifth signature data for the seventh data to the first memory system in accordance with the fourth data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The memory system according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein<claim-text>the controller is further configured to:<claim-text>communicate with a client device via a second interface that conforms to a second standard different from the first standard; and</claim-text><claim-text>receive the first data from the first memory system via the client device.</claim-text></claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. A storage system comprising a first memory system and a second memory system,<claim-text>the first memory system including:<claim-text>a first nonvolatile memory; and</claim-text><claim-text>a first controller configured to:<claim-text>manage first account information to be used for authentication of a first account and second account information to be used for authentication of a second account;</claim-text><claim-text>receive third account information from a host device; and</claim-text><claim-text>when the third account information matches the first account information, permit access to at least a partial storage area of the first nonvolatile memory based on a request from the host device and transmit first data including the second account information to the second memory system,</claim-text></claim-text></claim-text><claim-text>the second memory system including:<claim-text>a second nonvolatile memory; and</claim-text><claim-text>a second controller configured to:<claim-text>manage fourth account information to be used for authentication of the second account;</claim-text><claim-text>receive the first data that is transmitted from the first memory system; and</claim-text><claim-text>when the second account information included in the first data matches the fourth account information, permit access to at least a partial storage area of the second nonvolatile memory.</claim-text></claim-text></claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The storage system according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein<claim-text>when the access to the at least partial storage area of the second nonvolatile memory in the second memory system is permitted,<claim-text>the first controller transmits, to the second memory system, first write data to be written into the second nonvolatile memory, and,</claim-text><claim-text>the second controller writes the first write data received from the first memory system into the second nonvolatile memory.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The storage system according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein<claim-text>when the access to the at least partial storage area of the second nonvolatile memory in the second memory system is permitted,<claim-text>the second controller transmits first read data read from the second nonvolatile memory to the first memory system, and,</claim-text><claim-text>the first controller receives, from the second memory system, the first read data read from the second nonvolatile memory.</claim-text></claim-text></claim-text></claim></claims></us-patent-application>