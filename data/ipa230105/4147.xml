<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004148A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004148</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17781392</doc-number><date>20201208</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="regional"><country>EP</country><doc-number>19216144.6</doc-number><date>20191213</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>418</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>B</subclass><main-group>23</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>41885</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>19</main-group><subgroup>4185</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>23</main-group><subgroup>0297</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>B</subclass><main-group>2219</main-group><subgroup>33099</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD FOR MONITORING AND/OR CONTROLLING ONE OR MORE CHEMICAL PLANT(S)</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>BASF SE</orgname><address><city>Ludwigshafen</city><country>DE</country></address></addressbook><residence><country>DE</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Walzenbach</last-name><first-name>Alexander</first-name><address><city>Ludwigshafen</city><country>DE</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Jaeger</last-name><first-name>Marco Klaus</first-name><address><city>Ludwigshafen</city><country>DE</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Buck</last-name><first-name>Jan</first-name><address><city>Ludwigshafen</city><country>DE</country></address></addressbook></inventor></inventors></us-parties><pct-or-regional-filing-data><document-id><country>WO</country><doc-number>PCT/EP2020/085130</doc-number><date>20201208</date></document-id><us-371c12-date><date>20220601</date></us-371c12-date></pct-or-regional-filing-data></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Disclosed is a method for monitoring and/or controlling a chemical plant (<b>12</b>) with multiple assets via a distributed computing system (<b>10</b>) with more than two deployment layers (<b>14, 16, 30,</b> <b>32, 34</b>), wherein the deployment layers (<b>14, 16, 30, 32, 34</b>) comprise at least two of a first processing layer (<b>14</b>), a second processing layer (<b>16, 32, 34</b>) and an external processing layer (<b>30</b>), the method comprising the steps of: providing (<b>60</b>) a containerized application (<b>48,</b> <b>50</b>) including an asset or plant template specifying input data, output data and an asset or plant model, deploying (<b>62</b>) the containerized application (<b>48, 50</b>) to execute on at least one of the deployment layers (<b>14, 16, 30, 32, 34</b>), wherein the deployment layer (<b>14, 16, 30, 32,</b> <b>34</b>) is assigned based on the input data, a load indicator, or a system layer tag, and executing the containerized application (<b>46, 52, 54</b>) on the assigned deployment layer(s) (<b>14, 16, 30, 32, 34</b>) to generate output data for controlling and/or monitoring the chemical plant (<b>12</b>), providing (<b>66</b>) the generated output data for controlling and/or monitoring the chemical plant (<b>12</b>).</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="212.77mm" wi="146.30mm" file="US20230004148A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="209.72mm" wi="154.18mm" file="US20230004148A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="215.56mm" wi="153.42mm" file="US20230004148A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="225.81mm" wi="149.35mm" file="US20230004148A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="116.92mm" wi="179.58mm" file="US20230004148A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="207.18mm" wi="127.00mm" file="US20230004148A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="184.83mm" wi="144.53mm" file="US20230004148A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="208.96mm" wi="126.41mm" file="US20230004148A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="226.06mm" wi="156.80mm" file="US20230004148A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The disclosure relates to a method for monitoring and/or controlling a chemical plant with multiple assets via a distributed computing system with multiple deployment layers.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Chemical production is a highly sensitive production environment particularly with respect to safety. Chemical plants typically include multiple assets to produce the chemical product. Multiple sensors are distributed in such plants for monitoring and control purposes and collect masses of data. As such chemical production is a data heavy environment. However, to date the gain from such data to increase production efficiency in one or multiple chemical plants has not been fully leveraged.</p><p id="p-0004" num="0003">Applying new technologies in cloud computing and big data analytics is hence of great interest. Unlike other manufacturing industries, however, process industry is subject to very high safety standards. For this reason, computing infrastructures are typically siloed with highly restrictive access to monitoring and control systems. Owing to such safety standards, latency and availability considerations contravene a simple migration of to date embedded control systems to e.g. a cloud computing system. Bridging the gap between highly proprietary industrial manufacturing systems and cloud technologies is one of the major challenges.</p><p id="p-0005" num="0004">WO2016065493 discloses a client device and a system for data acquisition and pre-processing of process-related mass data from at least one CNC machine or an industrial robot and for transmitting said process-related data to at least one data recipient, e.g. a cloud-based server is described. The client device comprises at least one first data communication interface to at least one controller of the CNC machine or industrial robot, for continuously recording hard-realtime process-related data via at least one realtime data channel, and for recording non-realtime process-related data via at least one non-realtime data channel. The client device further comprises at least one data processing unit data-mapping at least the recorded non-realtime data to the recorded hard-realtime data to aggregate a contextualized set of process-related data. Moreover, the client device comprises at least one second data interface for transmitting the contextualized set of process-related data to the data recipient and for further data communication with the data recipient.</p><p id="p-0006" num="0005">WO2019138120 discloses a method for improving a chemical production process. A plurality of derivative chemical products are produced through a derivative chemical production process based on at least some derivative process parameters at a respective chemical production facility, which chemical production facilities each comprises a separate respective facility intranet. At least some respective derivative process parameters are measured from the derivative chemical production process by a respective production sensor computer system within each facility intranet. A process model for simulating the derivative chemical production process is recorded in a process model management computer system outside the facility intranets.</p><p id="p-0007" num="0006">US20160320768A1 discloses an example network environment for monitoring plant processes with system computers operating as a root-cause analyzer. The system computers communicate with the data server to access collected data for measurable process variables from a historian database. The data server is communicatively coupled to a distributed control system (DCS) in turn communicating collected data to the data server over communications network.</p><p id="p-0008" num="0007">The object of the present invention relates to a highly scalable and flexible method for monitoring and/or controlling chemical plants in process industry, which adheres to the high safety standards and allows for enhanced monitoring or controlling.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0009" num="0008">A method for monitoring and/or controlling a chemical plant with multiple assets via a distributed computing system with more than two deployment layers is proposed. The deployment layers comprise at least two of a first processing layer, a second processing layer and an external processing layer. The method comprises the steps of:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0009">providing a containerized application including an asset or plant template specifying input data, output data and an asset or plant model,</li>        <li id="ul0002-0002" num="0010">deploying the containerized application to execute on at least one of the deployment layers, wherein the assignment of the deployment layer depends on the input data, a load indicator, or a system layer tag, and executing the containerized application on the respective deployment layer to generate output data for controlling and/or monitoring the chemical plant,</li>        <li id="ul0002-0003" num="0011">providing the generated output data for controlling and/or monitoring the chemical plant.</li>    </ul>    </li></ul></p><p id="p-0010" num="0012">A system for monitoring and/or controlling a chemical plant with multiple assets with more than two deployment layers is proposed, wherein the deployment layers comprise at least two of a first processing layer, a second processing layer and an external processing layer, the system being configured to:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0013">provide a containerized application including an asset or plant template specifying input data, output data and an asset or plant model,</li>        <li id="ul0004-0002" num="0014">deploy the containerized application to execute on at least one of the deployment layers, wherein the deployment layer is assigned based on the input data, a load indicator, or a system layer tag, and executing the containerized application on the assigned deployment layer(s) to generate output data for controlling and/or monitoring the chemical plant,</li>        <li id="ul0004-0003" num="0015">provide the generated output data for controlling and/or monitoring the chemical plant.</li>    </ul>    </li></ul></p><p id="p-0011" num="0016">The present invention further relates to a distributed computer program or computer program product with computer-readable instructions that, when executed on one or more processor(s), cause the processor(s) to perform the methods for monitoring and/or controlling one or more chemical plant(s) as described herein. The invention further relates to a computer readable non-volatile or non-transitory storage medium with computer-readable instructions that, when executed on one or more a processor(s), cause the processor(s) to perform the methods for monitoring and/or controlling one or more chemical plant(s) as described herein.</p><p id="p-0012" num="0017">The proposed method allows for highly efficient application handling in a distributed computing system controlling and/or monitoring chemical plants. By introducing different process and storage layers, the mass data transfer, orchestration and execution of applications can be distributed over different layers allowing for flexible application handling. Moreover, the concept of three system layers allows for highly available and secure monitoring and/or controlling, since the second processing and the external management layer are redundant. In other words, more critical tasks may be assigned to on premise computing resources not relying on an external network, while less critical tasks may be assigned to external computing resources. An additional advantage is that based on the context the method enables an automation for the deployment of applications and the automatic identification of needs for retro-fit of additional sensors or IOT sensors.</p><p id="p-0013" num="0018">Additionally, the proposed method can accommodate multiple chemical plants via the second processing layer or the external processing layer. Hence the method enables a highly scalable application orchestration for more reliable and enhanced monitoring and/or controlling of chemical plants. In particular, orchestration of containerized application in a diverse application landscape can be organized to adhere to the specific needs of process industry. For instance, the deployment of containerized applications ingesting input data can be streamlined for multiple assets even in multiple plants. Additionally, depending on the specific data required by the containerized application and the computing resources required to run such applications, the appropriate processing layer may be chosen, thus adhering to high availability standards in chemical plants. For instance, computationally heavy applications ingesting plant specific may be executed on the second processing layer, while process applications ingesting asset or process specific data and requiring low latency may be executed on the first processing layer. Further criteria when to orchestrate on which deployment layer may be defined.</p><p id="p-0014" num="0019">The following description relates to the system, the method, the computer program, the computer readable storage medium lined out above. In particular the systems, the input units, the computer programs and the computer readable storage media are configured to perform the method steps as set out above and further described below.</p><p id="p-0015" num="0020">In the context of the present invention chemical plant refers to any manufacturing facility based on chemical processes, e.g. transforming a feedstock to a product using chemical processes. In contrast to discrete manufacturing, chemical manufacturing is based on continuous or batch processes. As such monitoring and/or controlling of chemical plants is time dependent and hence based on large time series data sets. A chemical plant may include more than 1.000 sensors producing measurement data points every couple of seconds. Such dimensions result in multiple terabytes of data to be handled in a system for controlling and/or monitoring chemical plants. A small-scale chemical plant may include a couple of thousand sensors producing data points every 1 to 10 s. For comparison a large-scale chemical plant may include a couple of ten-thousand sensors, e.g. 10.000 to 30.000, producing data points every 1 to 10 s. Contextualizing such data results in the handling of multiple hundred gigabytes to multiple terabytes.</p><p id="p-0016" num="0021">Chemical plants may produce a product via one or more chemical processes transforming the feedstock via one or more intermediate products to the product. Preferably a chemical plant provides an encapsulated facility producing a product, that may be used as feedstock for the next steps in the value chain. Chemical plants may be large-scale plants like oil and gas facilities, gas cleaning plants, carbon dioxide capture facilities, liquefied natural gas (LNG) plants, oil refineries, petro-chemical facilities or chemical facilities. Upstream chemical plants in petro-chemicals process production for example include a steamcracker starting with naphtha being processed to ethylene and propylene. These upstream products may then be provided to further chemical plants to derive downstream products such as polyethylene or polypropylene, which may again serve as feedstock for chemical plants deriving further downstream products. Chemical plants may be used to manufacture discrete products. In one example one chemical plant may be used to manufacture precursors for polyurethane foam. Such precursors may be provided to a second chemical plant for the manufacture of discrete products, such as an isolation plate comprising polyurethane foam.</p><p id="p-0017" num="0022">The value chain production via various intermediate products to an end product can be decentralized in various locations or integrated in a Verbund site or a chemical park. Such Verbund sites or chemical parks comprise a network of interconnected chemical plants, where products manufactured in one plant can serve as a feedstock for another plant.</p><p id="p-0018" num="0023">Chemical plants may include multiple assets, such as heat exchangers, reactors, pumps, pipes, distillation or absorption columns to name a few of them. In chemical plants some assets may be critical. Critical assets are those, which when disrupted critically impact plant operation. This can lead to manufacturing processes being compromised. Reduced product quality or even manufacturing stops may the result. In the worst-case scenario fire, explosion or toxic gas release may be the result of such disruption. Hence such critical assets may require more rigorous monitoring and/or controlling then other assets depending on the chemical processes and the chemicals involved. To monitor and/or control chemical processes and assets multiple actors and sensors may be embedded in the chemical plant. Such actors or sensors may provide process or asset specific data relating to e.g. the state of an individual asset, the state of an individual actor, the composition of a chemical, or the state of a chemical process. In particular, process or asset specific data include one or more of the following data categories:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0024">process operation data, such as composition of a feedstock or an intermediate product,</li>        <li id="ul0006-0002" num="0025">process monitoring data, such as flow, material temperature,</li>        <li id="ul0006-0003" num="0026">asset operation data, such as current, voltage, and</li>        <li id="ul0006-0004" num="0027">asset monitoring data, such as asset temperature, asset pressure, vibrations.</li>    </ul>    </li></ul></p><p id="p-0019" num="0028">In the context of the present disclosure assets may include any component of the chemical plant, such as equipment, instrumentation, machine, process or process component. Hence, an asset model may relate to a machine, equipment, instrumentation, process or process component model.</p><p id="p-0020" num="0029">Process or asset specific data refers to data relating to a specific asset or process and contextualized with respect to such specific asset or process. Process or asset specific data may be contextualized only with respect to individual assets and processes. Process or asset specific data may include measurement value, data quality measure, time, measurement unit, asset identifier for specific assets or process identifier for a specific process sections or stages. Such process or asset specific data may be collected on the lowest processing layer or the first processing layer and contextualized with respect to specific assets or processes in a single plant. Such contextualization may relate to context available on the first processing layer. Such context may relate to a single plant.</p><p id="p-0021" num="0030">Plant specific data refers to process or asset specific data that is contextualized with respect to one or more plant(s). Such plant specific data may be collected on the second processing layer and contextualized with respect to multiple plants. Specifically, contextualization may relate to context available on the second processing layer. Via contextualization context such as plant identifier, plant type, reliability indicator, or alarm limits for the plant may be added to process or asset specific data points. In a further step technical asset structure of one or more plant(s), a Verbund site or a chemical park, other asset management structure (e.g. asset network), or application context (e.g. model identifier, third party exchange) may be added. Such overarching context can originate from functional locations or digital twins, such as digital piping and instrumentation diagrams, 3D models or scans with xyz coordinates of the plant assets. Additionally or alternatively local scans from mobile devices linked to e.g. piping and instrumentation diagrams may be used for contextualization.</p><p id="p-0022" num="0031">In particular, plant specific data relating to interfaces between chemical plants in a manufacturing chain may be provided on the second processing layer or the external processing layer. Thus, monitoring and/or controlling, e.g. via anomaly detection, setpoint steering and optimization in chains across multiple plants, can be enhanced. For monitoring and/or controlling the chain across multiple plants process applications with online in/out data profiles may be used. Such data and process applications may be transferred between plants. Combined with mass and energy balances that can be monitored, such process applications may optimize the full chain across chemical plants rather than individual plants in the chain</p><p id="p-0023" num="0032">The process of contextualization refers to linking data points available in one or more storage unit(s). Such unit(s) may be persistent or non-volatile storage. Data points may relate to measurement values or context information. Storage unit(s) may be part of the first processing layer, the second processing layer, the external processing layer or distributed across two or more of those layers. The linking may be generated dynamically or statically. E.g. pre-defined or dynamically generated scripts may generate dynamic or static links between information data points in one processing layer or across processing layers. Links may be established by generating a new data object including the linked data itself and storing such new data object in a new instance. Any data point stored may be actively deleted, if a copy is stored elsewhere. Any data point thus copied from one storage unit to a new data object in the same or another storage unit may be deleted to reduce storage space. Additionally, or alternatively links may be established by generating a meta data object with embedded links to address or access respective data points in distributed storage unit(s). Any data point thus addressable or accessible through the meta data object may remain in its original storage unit. Linking such information to form a new data object may still be performed e.g. on the external processing layer. For the retrieval of data either data objects are accessed directly or meta data objects are used to address or access the data distributed in one or more storage unit(s). Any operations on such data such as applications may either access such data directly, may access a non-persistent image of such data, e.g. from cache memory, or a persistent copy of the data.</p><p id="p-0024" num="0033">In the present context a containerized application refers to a process application which may be executed in an encapsulated runtime environment independent of a host's operating system. The application may hence be viewed to run in a sandbox. The containerized application may be based on a container image containing the application. The container image may include software components, e.g. hierarchical tree of software components, required to execute the respective application in an encapsulated runtime environment. Such containerized application may be stored in a registry of or associated with the second processing layer or the external processing layer.</p><p id="p-0025" num="0034">To deploy a containerized application an orchestration application associated with the second processing layer or the external processing layer may manage execution of the containerized application. Such management may include general runtime environment configurations such as storage or network to run the containerized application. Such management may further include a host assignment defining a central master node or a distribution among one or more computing node(s) to execute the application on the first processing layer, the second processing layer or the external management layer. In particular such assignment of computing resources depends on the input data, the load indicator, or the system layer tag.</p><p id="p-0026" num="0035">The input data may include real time data from sensors, such as wireless monitoring devices or IoT devices, non-real time data, or output data of deployed containers or executed applications. Such data may relate to machinery, such as machinery type or sensor data measured with respect to the machinery, chemicals, such as chemicals type or sensor data measured with respect to chemical components processed in the chemical plant, processes, such as chemical process type or sensor data measured with respect to the chemical processes performed in the chemical plant, and/or plant, such as plant type or sensor data measured with respect to the chemical plant, e.g. environmental measurement data.</p><p id="p-0027" num="0036">The asset or plant model may include a data-driven or a kinetic model providing e.g. a health status, an operation forecast, an event forecast or an event trigger. The asset or plant model may be based on a mere data-driven model, a hybrid model combining data-driven and kinetic models or a mere kinetic model. The asset or plant model may further be based on a scenario matrix mapping input data, e.g. sensor data, to specific events. The asset model may reflect the physical behavior of a single or multiple asset(s). The plant model may reflect the physical behavior of parts of one or more plant(s), a full plant or multiple plants.</p><p id="p-0028" num="0037">The output data may include key performance indicators relating to the asset, the plant, the input data, an asset model performance or a plant model performance. Asset model performance or a plant model performance may be embedded in the asset or plant model hosted by the containerized application. Any generated output data of the method may be used in a one or more further containerized applications as input data. This way chains of containerized applications may be realized to build a system of system coverage and use the generated output data for controlling and/or monitoring one or multiple chemical plants. Such chemical plant may be parallel manufacturing plant or plants connected along the value chain.</p><p id="p-0029" num="0038">The containerized application may include one or more operations to ingest input data, provide the input data to respective asset or plant models to generate output data and to provide the generated output data for controlling and/or monitoring the chemical plant. Such output data may be passed to a persistent instance after execution of the application. In particular such output data may be passed to a controlling instance, e.g. on the first processing layer of the chemical plant. Additionally or alternatively such output data may be passed to a monitoring instance on the first processing layer, the second processing layer or the external processing layer. The output data may be passed to e.g. a client application for display to an operator or a further containerized application for execution.</p><p id="p-0030" num="0039">In one aspect the second processing layer includes larger storage and computing resources than the first processing layer. Alternatively or additionally the external processing layer may include larger storage and computing resources than the second processing layer. Such stacked resource structure aids to bridge the gap between embedded control systems of chemical plants and available cloud technologies. In particular, embedded control systems of chemical plants are limited in storage and processing capabilities. Extending such resources allows for enhanced monitoring and/or control.</p><p id="p-0031" num="0040">The first and the second processing layer may be hosted, situated, configured in or inside a secure network. The first processing layer may be communicatively coupled to the second processing layer. The first processing layer may include at least one core process system associated with the chemical plant or a single chemical plant. Preferably the first processing layer is configured to control and/or monitor chemical processes and assets on the asset level in individual plants. Hence the first processing layer monitors and/or controls the chemical plant on the lowest level. Further preferred the first processing layer is configured to monitor and control critical assets. Critical assets refer to those assets, which when disrupted critically impact plant operation. This can lead to manufacturing processes being compromised. Reduced product quality or even manufacturing stops may the result. In the worst-case scenario fire, explosion or toxic gas release may be the result of such disruption. Hence such critical assets may require more rigorous monitoring and/or controlling then other assets depending on the chemical processes and the chemicals involved.</p><p id="p-0032" num="0041">Additionally or alternatively the second processing layer may be configured to provide data to an external network e.g. via an interface to an external network. The second processing layer may be communicatively coupled to an external processing layer via an external network. Adding stacked processing layers in or inside the secure network allows to comply with high safety standards in chemical industry. In particular such architecture allows the method of being performed fully independent of the external management layer enabling an island mode for one or more chemical plants. Here an island mode refers to monitoring and/or controlling of chemical plants without access to an external network.</p><p id="p-0033" num="0042">In a further aspect the first processing layer is configured to provide asset or process specific data and the second processing layer is configured to provide plant specific data. The second processing layer may be configured to contextualize asset or process specific data. This way the performance of the first processing layer is not affected. Since typical core process systems of the first processing layer particularly in older plants do not have the required computing power, adding a further system with higher performance even enables contextualization. Additionally the second processing layer allows for data contextualization on a plant level rather than an asset level. Data contextualization in the present context relates to adding context information to asset or process specific data or to reducing the data size by pre-processing asset or process specific data. Adding context may include adding further information tag(s) to the asset or process specific data. Pre-processing may include filtering, aggregating, normalizing, averaging, or inference of asset or process specific data.</p><p id="p-0034" num="0043">In one aspect the first processing layer is associated with one or a single chemical plant. The first processing layer may be a core process system including one or more processing devices and storage devices. Such layer may include one or more distributed processing and storage devices forming a programable logic controller (PLC) system or decentralized control system (DCS) with control loops distributed throughout the chemical plant. Preferably the first processing layer is configured to control and/or monitor chemical processes and assets on the asset level. Hence the first processing layer monitors and/or controls the chemical plant on the lowest level. Furthermore, the first processing layer may be configured to monitor and control critical assets. Additionally or alternatively, the first processing layer is configured to provide process or asset specific data to the second processing layer. Such data may be provided directly or indirectly to the second processing layer.</p><p id="p-0035" num="0044">In a further aspect the second processing layer is associated with more than one chemical plant. The second processing layer may include a process management system with one or more processing and storage devices. Preferred the second processing layer or the process management system is configured to manage data transfer to and/or from the first processing layer. Further preferred the second processing layer or the process management system is configured to host and/or orchestrate process applications. Such process applications may monitor and/or control one or more chemical plant(s) or one or more asset(s). The process management system may be associated with one or more chemical plants. In other words, the process management system may be communicatively coupled to multiple first processing layers associated with one or more chemical plant(s).</p><p id="p-0036" num="0045">In a further aspect the second processing layer may comprise an intermediate processing system and a process management system. Here the intermediate processing system may be communicatively coupled to the first processing layer, preferably the core process system, and the process management system may be communicatively coupled to the intermediate layer. Preferably the first processing layer and the process management system are coupled or communicatively coupled via the intermediate processing system. The intermediate processing system may be configured to collect process or asset specific data provided by the first processing layer. The process management system may be configured to provide plant specific data of one or more chemical plant(s) to the interface to the external network. The intermediate processing system may be associated with one or more chemical plants. In other words, the intermediate processing system may be communicatively coupled to first processing layer of one chemical plant or to multiple first processing layers of multiple plants. The process management system may be communicatively coupled to one or multiple intermediate processing systems. Adding the intermediate processing level to the second processing layer adds a further security layer. It fully detangles the virulent first processing layer from any external network access. Additionally, the intermediate level allows for more enhanced data handling by reducing data transfer rates to the external processing layer via pre-processing and enhancing data quality by contextualization. The intermediate processing system and process management system may comprise one or more processing and storage devices.</p><p id="p-0037" num="0046">In a further aspect the secure network is a segregated network including more than two security zones separated by firewalls. Such firewalls may be network or host-based virtual or physical firewalls. The firewall may be hardware- or software-based to control incoming and outgoing network traffic. Here predetermined rules in the sense of a white listing may define allowed traffic via access management or other configuration settings. Depending on the firewall configuration the security zones may adhere to different security standards.</p><p id="p-0038" num="0047">In a further aspect the first processing layer is hosted, situated or configured in or inside a first security zone via a first firewall and the second processing layer is hosted, situated or configured in or inside a second security zone via a second firewall. To securely protect the first processing layer, the first security level may adhere to a higher security standard than the second security level. Security levels may adhere to a common industry standard such as lined out in Namur documentation IEC 62443. The second processing layer may provide further segregation via security zones. For example, the intermediate processing system may be hosted, situated or configured in or inside a third security zone via a third firewall and the process management system may be configured in the second security zone via the second firewall. The third and second security zones may be staggered in terms of security standard as well. For instance the third may adhere to a security standard higher than the second. This allows for higher security standards on the lower security zone of the first processing layer and lower security standards on higher security zones of the second processing layer. In one embodiment the first processing layer is inside a first security zone, the process management system is inside the second security zone and the intermediate processing system is inside a third security zone.</p><p id="p-0039" num="0048">The second processing layer may be configured to contextualize process or asset specific data. This way the performance of the first processing layer is not affected. Since typical core process systems in older plants do not have the required computing power, adding a further system with higher performance even enables contextualization. Additionally the second processing layer and in particular the intermediate processing system allows for data contextualization on a plant level rather than an asset level. Data contextualization in the present context relates to adding context information to process or asset specific data or to reducing the data size by pre-processing process or asset specific data. Adding context may include adding further information tag(s) to the process or asset specific data. Pre-processing may include filtering, aggregating, normalizing, averaging, or inference of process or asset specific data.</p><p id="p-0040" num="0049">In further aspect unidirectional or bidirectional communication, e.g. data transfer or data access, may be realized for data streams between different processing layers. In other words the system may be configured to allow for unidirectional or bidirectional communication, e.g. data transfer or data access between different processing layers. One data stream may include process or asset specific data from the first processing layer being passed to and contextualized via the second processing layer and communicated to the external processing layer. Contextualization may be performed on the second processing layer, the external processing layer or both. In other words, the second processing layer, the external processing layer or both may be configured to contextualize process or asset specific data or plant specific data. Furthermore, depending on criticality of the process or asset specific data or the plant specific data such data may be assigned for unidirectional or bidirectional communication. In other words, the system may be configured to assign unidirectional or bidirectional communication to process or asset specific data or the plant specific data depending on criticality of the process or asset specific data or the plant specific data. E.g. data communication from the second or external processing layers to critical assets may be prohibited by realizing a diode type communication channel. Such communication may only allow for unidirectional communication from the critical asset to the processing layers but not vice versa.</p><p id="p-0041" num="0050">In further aspect data streams may be assigned critical or non-critical data. In other words, the system may be configured to assign critical or non-critical data tags. Critical data refers to data that is critical to operate the chemical plant, such as short-term data, from which operation points of the chemical plant are derived. Such critical data may cover a short term horizon of, e.g. hours or days up one or more week(s), which is required to operate the plant in its optimal state. Non-critical data refers to data that is not critical to operate the chemical plant, such as mid- to long-term data for monitoring the chemical plant based on mid- to long-term behavior. Such non-critical data may cover a mid- to long-term time horizon, e.g. multiple weeks or months up to one or more year(s), which is required to monitor and/or control asset(s) or plant(s) e.g. over a time span. Such data may also be referred to as cold, warm and hot data, wherein the hot data corresponds to critical data, the warm data corresponds to mid-term non-critical data and cold data corresponds to long-term non-critical data.</p><p id="p-0042" num="0051">In a further aspect data contextualization is staggered across system layers, processing layers or processing systems included in such processing layers with each layer mapping context information available in the respective layer. In other words, the system may be configured to stagger data contextualization across system layers, processing layers or processing systems included in such processing layers with each layer mapping context information available in the respective layer. Staggering may include contextualization of asset or process specific data on different levels adding context information on single plant level and/or on multi plant level. In the layered system architecture context information available in one layer may be mapped to data provided by the lower layer or processing system. Here lower means closer to the chemical plant data access. For example, the process or asset specific data provided by the first processing layer may include context information on the asset level. In other words, the first processing layer may be configured to provide the process or asset specific data including context information on the asset level. Such context information may relate to real time information such as a measurement value, measurement quality, product quality, batch related data, or measurement time. Context information on asset level may further relate to asset specific information such as an asset identifier, intralogistics or measurement unit identifier. The intermediate system and the process management system may be configured to add further context information to or to contextualize such process or asset specific data. Such context information may relate to the plant level rather than the asset level. Context information for instance relates to plant context such as plant identifier, plant type, reliability indicator, alarm limits, or application context such as model identifier, third party exchange identifier, confidentiality identifier. This way the data quality can be enhanced to maximize context and with that data management and the resulting monitoring and/or controlling capabilities via process applications.</p><p id="p-0043" num="0052">In a further aspect the intermediate processing system is configured to contextualize data by mapping the heterogeneous process or asset specific data to a homogeneous data format on plant level. In this context heterogeneous refers to data that relates to the asset level or multiple assets individually, while homogeneous data refers to data that relates to a combination or equal types of assets in a plant. The intermediate processing system may be configured to provide such plant specific data to the process management system. The process management system may further be configured to contextualize the plant specific data provided by the intermediate processing system preferably on multi plant level. Such contextualization may include adding context information on a multiple plant level or on a site level such as multi plant or site context including technical asset structure of one or multiple plant(s) or asset management information such as asset network. Additionally or alternatively such contextualization may include adding application context such as model identifier, third party exchange identifier or a confidentiality identifier.</p><p id="p-0044" num="0053">Additionally or alternatively, the first processing layer may be configured to provide asset or process specific data to the second processing layer. Such data may be provided directly or indirectly to the second processing layer. The second processing layer may be associated with one or more plant(s). The second processing layer may include a process management system and optionally an intermediate processing layer. The first processing layer may include plant-specific core process systems. The core process system(s) may be communicatively coupled to the process management system optionally via the intermediate processing layer. The second processing layer, in particular the process management system, and the external processing layer may be configured to contextualize, store or aggregate data from one or more chemical plant(s) and/or to orchestrate process models for one or more chemical plant(s).</p><p id="p-0045" num="0054">In a further aspect the intermediate processing system is configured to contextualize data by mapping the heterogeneous process or asset specific data to a homogeneous data format on plant level. In this context heterogeneous refers to data that relates to the asset level or multiple assets individually, while homogeneous data refers to data that relates to a combination or equal types of assets in a plant. The intermediate processing system may be configured to provide such plant specific data to the process management system. The process management system may further be configured to contextualize the plant specific data provided by the intermediate processing system preferably on multi plant level. Such contextualization may include adding context information on a multiple plant level or on a site level such as multi plant or site context including technical asset structure of one or multiple plant(s) or asset management information such as asset network. Additionally or alternatively such contextualization may include adding application context such as model identifier, third party exchange identifier or a confidentiality identifier.</p><p id="p-0046" num="0055">The second processing layer, preferably the process management system, may be communicatively coupled to an external processing layer via an external network. The second processing layer, preferably the process management system, may be configured to manage data transfer to and/or from the external processing layer in real time or on demand. The second processing layer, preferably the process management system, may for instance be configured to provide plant specific data to the interface to the external network based on an identifier added by way of contextualization. Such identifier may be a confidentiality identifier based on which such data is not provided to the interface to the external network.</p><p id="p-0047" num="0056">The external processing layer may be a computing or cloud environment providing virtualized computing resources, like data storage and computing power. The external processing layer may provide a private, hybrid, public, community or multi cloud environment. Cloud environments are advantageous, since they provide on demand storage and computing power. Additionally, in cases where multiple chemical plants operated by different parties are to be monitored and/or controlled, data or process applications affecting the chemical plants may be shared in such cloud environment.</p><p id="p-0048" num="0057">In a further aspect the second processing layer, preferably the process management system, is configured to provide plant specific data from one or more chemical plant(s) to the external processing layer. The second processing layer, preferably the process management system, may be further configured to delete at least parts of the data transferred to the external processing layer. The external processing layer may be configured to store historical data from one or more chemical plant(s). The external processing layer may be configured to aggregate, store or contextualize plant specific data from more than one chemical plant and/or to store historical data from more than one chemical plant. Here aggregation means the grouping of data via an aggregate function like a sum, an average or a mode. Aggregation hence relates to a function that reduces dimension or storage space. This way data storage can be externalized, and the required on-premise storage capacities can be reduced plus history transfer is made redundant. Furthermore, owing to the flexible computing and storage resources of the external processing layer and the fact that the data is available in the external processing layer, process applications can be built, trained, tested, or modified in the external processing layer.</p><p id="p-0049" num="0058">In a further aspect the second processing layer, preferably the process management system, is configured to manage data transfer to and/or from the external processing layer in real-time or on demand. Real-time transfer may be buffered depending on network and computing loads on the interface to the external network. On demand transfer may be triggered in a predefined or dynamic manner. Preferred the data transfer to the external processing layer is managed in real-time and the transfer from the external processing layer is managed on demand.</p><p id="p-0050" num="0059">In a further aspect the second processing layer, preferably the process management system, is configured to store or to manage access to historical data, real-time data and planning data. In a further aspect the second processing layer, preferably the process management system, is configured to store or to manage access to historical data for a first time window and the external processing layer is configured to store historical data for a second time window, wherein the first time window is shorter than the second time window. Here the first time window may correspond to a critical time window allowing the system to monitor and/or control the chemical plant in island mode without external network connection. The first time window may be viewed as a hot window, for which historical data is required to safely control and/or monitor the chemical plant. The first time window or hot window may be determined based on storage capacity of the second processing layer, preferably the process management system, or preferably by the process applications and the historical data required to execute on the process applications in island mode without external network connection. This way availability of the system for monitoring and/or controlling is always guaranteed.</p><p id="p-0051" num="0060">In a further aspect deployment is managed by an orchestration application that manages deployment of containerized applications based on the input data, the load indicator, or the system layer tag. Additionally or alternatively the orchestration application is hosted by the second processing layer and/or the external processing layer. In a further aspect the orchestration application hosted by the second processing layer on execution manages critical containerized applications. Additionally or alternatively the orchestration application hosted by the external processing layer on execution manages non-critical containerized applications. Such management on execution may be assigned statically or dynamically. In a dynamic scenario, the second processing layer may host a back-up of critical containerized applications, and the orchestration application hosted by the second processing system may access such back-up, if external net-work connectivity is disrupted. Here critical containerized applications refer to those containerized applications monitoring an/or controlling critical assets. Such applications are hence required, if the monitoring and/or controlling needs to run in island mode.</p><p id="p-0052" num="0061">In a further aspect the management of critical containerized applications is assigned to the second processing layer based on a history criterion reflecting a time window of available historical data on the first or second processing layer. The second processing layer may be configured to store historical aggregated data for a first time window and the external processing layer may be configured to store historical aggregated data for a second time window, wherein the first time window is shorter than the first time window. In a preferred embodiment the first time window is chosen such that critical containerized applications may be executed on the first or second processing layer. In a further aspect the containerized application is deployed to execute on the second processing layer or the external management layer depending on a history criterion reflecting a time window of available historical data. In such embodiments the application may be executed in the level such data is available. Hence no further data transfer between processing layers is required reducing communication and processing loads. In combination with the contextualization concept staggered across layers processing of plant specific data on the first processing layer would introduce redundant data transfers, once from the first processing layer to the second for contextualization and back to the first processing layer for application execution.</p><p id="p-0053" num="0062">Deployment may depend on the input data. In a further aspect the assignment of deployment layer depends on a data availability indicator, a criticality indicator or a latency indicator.</p><p id="p-0054" num="0063">The data availability indicator may relate to the input data ingested by the containerized application. Based on such indicator execution may be assigned to deployment layers where the data is directly available or stored. For instance the first processing layer may be configured to provide asset or process specific data and the second processing layer may be configured to provide plant specific data. A containerized application ingesting asset or process specific data may be deployed on the first processing layer. Similarly a containerized application ingesting plant specific data may be deployed on the second processing layer. Applications may be executed   in the processing layer that hosts the data to avoid redundant data transfers and reduce loads.</p><p id="p-0055" num="0064">The criticality indicator may be a static or a dynamic indicator. In case of a static indicator criticality of an asset, an asset group or a plant may be pre-defined. In case of a dynamic indicator criticality indicator may be assigned dynamically depending on the output data of previous applications runs or other application runs. For instance, the criticality indicator may be determined based on key performance parameters of an asset such as its health status. If the health status of an asset becomes critical over time, the criticality criterion may be changed, and the containerized application may as a result of such change be run in a different deployment layer allowing for reduced latency on e.g. data transfer. In an example the containerized application ingests asset or process specific data of a specific asset and the criticality indicator signifies to be fulfilled, if execution is assigned to the second processing layer rather than the first processing layer. If the health status of the specific asset changes and closer monitoring e.g. at higher frequency may be required, the criticality indicator may be reset signifying the criticality indicator not being fulfilled, if execution is assigned to the second processing layer. In such case the application may be assigned to the first processing layer.</p><p id="p-0056" num="0065">The latency indicator may be a static or a dynamic indicator. In case of a static indicator latency requirements of an asset, an asset group, part of a plant or a plant may be pre-defined. In case of a dynamic indicator latency requirements may be assigned dynamically dependent on signatures of the input data. Such signatures may relate to a frequency of change in real-time measurement data as e.g. derived from historical real-time measurement data. In an example a monitoring signal of a pump may show higher frequencies than a monitoring signal of a heat exchanger. In such a case the containerized application monitoring the pump may be deployed on the asset level either directly on the pump controller or on the core process system of the respective plant. For e.g. the pump the respective containerized application may be deployed in a processing layer as close to the pump as possible to reduce latency. The latency criterion may hence signify the time criticality of the containerized application.</p><p id="p-0057" num="0066">The load indicator may be based on processing and/or network loads of the respective deployment layers. Additionally or alternatively applications may be executed on the deployment layer that provides sufficient computing and storage resources to reduce the processing load on other processing layers and ensure critical application execution is not impacted. In such cases the input data may be transferred to the respective deployment layer. This is particularly advantageous for applications requiring high computing load or less time critical and hence allowing for data transfer latency.</p><p id="p-0058" num="0067">In a further aspect the deployment may depend on a system layer tag that is associated with the containerized application. The system layer tag may be a configuration in the orchestration application, that e.g. deploys, executes and monitors the containerized application. In such case the containerized application may include an application identifier, which the orchestration application may use for identification on deployment. This way the deployment may be &#x201c;hard wired&#x201d; to ensure critical applications are executed in the right layer. Such deployment scheme may be particularly relevant to containerized applications monitoring and/or controlling critical assets. In this context critical assets are those, which when disrupted critically impact plant operation. Here the plant specific data refers to contextualized asset or process specific data.</p><p id="p-0059" num="0068">In a further aspect the containerized application is deployed to multiple assets or plants of the same type. Assets of the same type may relate to assets with similar functionalities, from the same supplier and/or with similar characteristics, e.g. performance characteristics. Plants of the same type may relate to plants producing the similar intermediate or end product, having a similar physical asset structure or based on similar chemical processes. Here similar means comparable in the sense that the behavior of the assets or plant show behavior that does not deviate by more than an error tolerance or can be modelled by a single model. Preferably the containerized application is associated with an asset or plant identifier. Such identifier may be a configuration setting of the orchestration application or the containerized application. The plant or asset identifier may be one dimensional signifying one plant or asset type or multi-dimensional signifying multiple plants or assets, for which the containerized application is to be executed. In particular if the first processing layer is with different processing units plant or even asset or process specific such asset identifier allows to address assets associated with different processing units at the same time allowing for highly efficient deployment of containerized applications.</p><p id="p-0060" num="0069">In a further aspect the containerized application is modified based on the input data and the output data of containerized applications executed for multiple assets or plants of the same type. This may be done regularly at per-defined times or dynamically. By aggregating such data the containerized application and particularly plant or asset models may be validated or improved in accuracy. This way the models can be adapted to reflect the behavior of physical plants or assets. This is particularly important for maintenance cycle or life cycle, since the physical plants or assets may shift their behavior depending on the stage during such cycles. Such shifts may be compensated automated and self-optimized by the proposed system.</p><p id="p-0061" num="0070">In a further aspect the containerized application is monitored based on a confidence level of the input data, the asset model or the plant model. The containerized application may provide such confidence levels as output data. Respective operations may be embedded into the containerized application via the asset or plant models or via separate models. A confidence level on the input data may be generated by analyzing e.g. patterns in real-time measurement data. A confidence on the asset or plant model may be generated as part of the execution of the model operation based on input data.</p><p id="p-0062" num="0071">In a further aspect an event signal is triggered, if the confidence level falls below a confidence a threshold, e.g. if confidence is below 70%, 80% or 90%. Such event signal may indicate a failure of an asset or an operation of the application. If an anomalous pattern is detected on the input data and the respective confidence level falls below a threshold application execution may be stopped and a failure signal may be passed to a controlling instance, e.g. on the first processing layer of the chemical plant. Additionally or alternatively such failure signal may be passed to a monitoring instance, e.g. on the first or second processing layer or to a client application e.g. for display to an operator. This way sensor failures and the need to retro-fit may be detected.</p><p id="p-0063" num="0072">In a further aspect modification of the asset or plant model is triggered, if the confidence level exceeds a threshold. Modification may be triggered automatically. Such modification may include hardware or software modifications. Modifications for instance include re-training of the asset or plant model based on historical data, adaption of the input data channel, adaption of the scenario matrix or triggering an event signal to maintain a hardware such as an Internet of Things (IoT) device.</p><p id="p-0064" num="0073">In a further aspect the modification of the asset or plant model is performed on the second processing layer, particularly the process management system, or the external processing layer. Since such modifications do not interfere with the containerized application in the first place, it may be computed on the external processing layer reducing processing loads on monitoring and/or controlling on more critical processing layers, such as the first and second processing layers.</p><p id="p-0065" num="0074">In a further aspect an external containerized application from a third-party environment is provided and deployed to execute on the external processing layer. Applications from third-party environment means any application that was not created in the proprietary system of first processing layer, second processing layer and external processing layer. This way the risk of third party containerized applications infecting the monitoring and/or control system of chemical plants is reduced.</p><p id="p-0066" num="0075">In a further aspect creation of a new containerized application is performed in the external processing layer. E.g. asset or plant models may be trained on the external processing layer. Preferably the external processing layer is configured to store aggregated data for more than one chemical plant. The second processing layer may be configured to provide aggregated data from one or more chemical plant(s) to the external processing layer. The second processing layer may be configured to transfer aggregated data to the external processing layer in real-time or on demand. The second processing layer may be configured to delete at least parts of the data transferred to the external processing layer.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0067" num="0076">Example embodiments of the present disclosure are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only particular embodiments of the present disclosure and are therefore not to be considered limiting of its scope. The technical teaching may encompass other equally effective embodiments.</p><p id="p-0068" num="0077"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a first schematic representation of the system for monitoring and/or controlling one or more chemical plant(s).</p><p id="p-0069" num="0078"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a second schematic representation of the system for monitoring and/or controlling one or more chemical plant(s).</p><p id="p-0070" num="0079"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a third schematic representation of the system for monitoring and/or controlling one or more chemical plant(s).</p><p id="p-0071" num="0080"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a schematic representation of the data contextualization concept in systems like those shown in <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref>.</p><p id="p-0072" num="0081"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a flowchart in a schematic representation of the method for monitoring and/or controlling one or more chemical plant(s).</p><p id="p-0073" num="0082"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a schematic representation of systems for monitoring and/or controlling one or more chemical plant(s) via containerized applications.</p><p id="p-0074" num="0083"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a flowchart in a schematic representation of the method for monitoring and/or controlling a chemical plant with multiple assets.</p><p id="p-0075" num="0084"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a schematic representation of the system for monitoring and/or controlling more than one chemical plants in different secure networks, which are configured for data and application transfer.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0076" num="0085">In petrochemicals process industrial production typically starts with upstream products, which are used to derive further downstream products. To date the value chain production via various intermediate products to an end product is highly restrictive and based on siloed infrastructure. This hampers introduction of new technologies such as IoT, cloud computing and big data analytics.</p><p id="p-0077" num="0086">Unlike other manufacturing industries, process industry is subject to very high standards in particular with regard to availability and security. For this reason, computing infrastructures are typically unidirectional and siloed with highly restrictive access to monitoring and control systems of chemical plants.</p><p id="p-0078" num="0087">In general chemical production plants are embedded in an enterprise architecture in a siloed way with different levels to make a functional separation between operational technology and information technology solutions.</p><p id="p-0079" num="0088">Level 0 relates to the physical processes and defines the actual physical processes in the plant. Level 1 relates to intelligent devices for sensing and manipulating the physical processes, e.g. via process sensors, analyzers, actuators and related instrumentation. Level 2 relates to control systems for supervising, monitoring and controlling the physical processes. Real-time controls and software; DCS, human-machine interface (HMI); supervisory and data acquisition (SCADA) software are typical components. Level 3 relates to manufacturing operations systems for managing production work flow to produce the desired products. Batch management; manufacturing execution/operations management systems (MES/MOMS); laboratory, maintenance and plant performance management systems, data historians and related middleware are typical components. Time frames for controlling and monitoring may be shifts, hours, minutes, seconds. Level 4 relates to business logistics systems for managing the business-related activities of the manufacturing operation. ERP is the primary system and establishes the basic plant production schedule, material use, shipping and inventory levels. Time frame may be months, weeks, days, shifts.</p><p id="p-0080" num="0089">Additionally, such structures adhere to strict one-way communication protocols allowing for no data flow into level 2 or below. Not covered in such architectures is the company or enterprise-external internet. The model remains, however, an essential concept within the realm of Cyber Security. Within this context, the challenge is to leverage the benefits of Cloud computing and Big Data, while still guaranteeing the established advantages of existing architectures: i.e. the high availability and reliability of the lower levels system (Level 1 and Level 2), that control the chemical plant, as well as the cyber security.</p><p id="p-0081" num="0090">The technical teaching presented here allows for enhancing monitoring and/or control changing this framework in a systematic way, to introduce new capabilities that are compatible with existing architectures. The present disclosure specifically relates to a highly scalable, flexible and available computing infrastructure for process industry, which at the same time adheres to the high security standards.</p><p id="p-0082" num="0091"><figref idref="DRAWINGS">FIG. <b>1</b></figref> shows a first schematic representation of the system <b>10</b> for monitoring and/or controlling chemical plants <b>12</b>.</p><p id="p-0083" num="0092">The system <b>10</b> comprises two processing layers including the first processing layer in the form of a core process system <b>14</b> associated with each of the chemical plants <b>12</b> and the second processing layer <b>16</b>, e.g. in the form of a process management system, associated with two chemical plants <b>12</b>. The core process system <b>14</b> is communicatively coupled to the second processing layer <b>16</b> allowing for unidirectional or bidirectional data transfer. The core process system <b>14</b> comprises a decentralized set of processing units associated with assets of the chemical plant <b>12</b>.</p><p id="p-0084" num="0093">The core process system <b>14</b> and the second processing layer <b>16</b> are configured in the secure network <b>18</b>, <b>20</b>, which in the schematic representation includes two security zones. The first security zone is situated on the core process system <b>14</b> level, where the first firewall <b>18</b> controls incoming and outgoing network traffic to and from the core process system <b>14</b>. The second security zone is situated on the second processing layer <b>16</b>, where the second firewall <b>20</b> controls incoming and outgoing network traffic to and from the second processing layer <b>16</b>. Such segregated network architecture allows to shield vulnerable plant operations from cyberattacks.</p><p id="p-0085" num="0094">The core process system <b>14</b> provides process or asset or process specific data <b>22</b> of the chemical plant <b>12</b> to the second processing layer <b>16</b>. The second processing layer <b>16</b> is configured to contextualize the process or asset or process specific data of the chemical plants <b>12</b>. The second processing layer <b>16</b> is further configured to provide plant specific data <b>24</b> of the chemical plants <b>12</b> to the interface <b>26</b> to the external network. Here the plant specific data may refer to contextualized process or asset or process specific data.</p><p id="p-0086" num="0095">Process or asset or process specific data may include value, quality, time, measurement unit, asset identifier. Via contextualization further context such as plant identifier, plant type, reliability indicator, or alarm limits for the plant may be added. In a further step technical asset structure of one or multiple plant(s) or a site and other asset management (e.g. asset network), plus application context (e.g. model identifier, third party exchange) may be added.</p><p id="p-0087" num="0096">The second processing layer <b>16</b> is communicatively coupled to an external processing layer <b>30</b> via interface <b>26</b> to the external network. The external processing layer <b>30</b> may be a computing or cloud environment providing virtualized computing resources, like data storage and computing power. The second processing layer <b>16</b> is configured to provide plant specific data <b>24</b> from one or more chemical plants <b>12</b> to the external processing layer <b>30</b>. Such data may be provided in real time or on demand. The second processing layer <b>16</b> is configured to manage data transfer to and/or from the external processing layer in real-time or on demand. The second processing layer <b>16</b> may for instance provide plant specific data <b>24</b> to the interface <b>26</b> to the external network based on an identifier added by way of contextualization. Such identifier may be a confidentiality identifier based on which such data is not provided to the interface <b>26</b> to the external network. The second processing layer <b>16</b> may be further configured to delete at least parts of the data transferred to the external processing layer <b>30</b>.</p><p id="p-0088" num="0097">The external processing layer <b>30</b> is configured to aggregate plant specific data from more than one chemical plant and/or to store historical data from more than one chemical plant. This way data storage can be externalized, and the required on-premise storage capacities can be reduced plus history transfer is made redundant. Additionally, such storage concept allows to store historical data on the second processing layer <b>16</b> for a hot window, which is a critical time window allowing the system <b>10</b> to monitor and/or control the chemical plant in island mode without external network connection. This way availability of the system <b>10</b> for monitoring and/or controlling is always guaranteed.</p><p id="p-0089" num="0098">The second processing layer <b>16</b> and the external processing layer <b>30</b> are configured to host and/or orchestrate process applications. In particular the second processing layer <b>16</b> may host and/or orchestrate process applications relating to core plant operations and the external processing layer <b>30</b> may be configured to host and/or orchestrate process applications relating to non-core plant operations.</p><p id="p-0090" num="0099">Furthermore, the second processing layer <b>16</b> and the external processing layer <b>30</b> may be configured to exchange data with 3rd party management systems, e.g. via integration of 3rd party external processing layer, to orchestrate data visualization, to orchestrate computing process workflows, to orchestrate data calculations, to orchestrate APIs to access data, to orchestrate metadata of data storage, transfer and calculation, to provide interactive plant data working environment for users, e.g. operators and to verify and improve data quality.</p><p id="p-0091" num="0100"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows a second schematic representation of the system <b>10</b> for monitoring and/or controlling one or more chemical plant(s) <b>12</b>.</p><p id="p-0092" num="0101">The system <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref> is similar to the system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. However, the system of <figref idref="DRAWINGS">FIG. <b>2</b></figref> has a second processing layer with a process management system <b>32</b> and an intermediate processing system <b>34</b>. The intermediate processing systems <b>34</b>.<b>1</b>, <b>34</b>.<b>2</b> is configured in a security zone of the secure network via firewall <b>40</b>.</p><p id="p-0093" num="0102">The intermediate processing systems <b>34</b>.<b>1</b>, <b>34</b>.<b>2</b> may be configured to ingest process or asset or process specific data <b>22</b> from individual or multiple chemical plants <b>12</b>. Such data is contextualized on a plant level in intermediate processing system <b>34</b>.<b>1</b>, <b>34</b>.<b>2</b> and plant specific data <b>38</b> may be provided to the process management system <b>32</b>, where further contextualization e.g. across plant levels on Verbund or site level may be performed. In this setup the data contextualization is staggered across the different system <b>10</b> layers with each layer <b>14</b>, <b>34</b>, <b>32</b> mapping context information available in the respective layer <b>14</b>, <b>34</b>, <b>32</b>.</p><p id="p-0094" num="0103"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows a third schematic representation of the system <b>10</b> for monitoring and/or controlling one or more chemical plant(s) <b>12</b>.</p><p id="p-0095" num="0104">The system <b>10</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> is similar to the systems shown in <figref idref="DRAWINGS">FIGS. <b>1</b> and <b>2</b></figref>. However, the system of <figref idref="DRAWINGS">FIG. <b>3</b></figref> includes monitoring devices <b>44</b>, which are communicatively coupled to the process management system <b>32</b> or the external processing layer <b>30</b>. The monitoring device <b>36</b> may be configured to transfer monitoring data to process management system <b>32</b> or the external processing layer <b>30</b>. The process management system <b>32</b> or the external processing layer <b>30</b> may be configured to manage multiple monitoring devices <b>44</b>. Since such IoT devices are not considered reliable, monitoring data provided by the monitoring device <b>44</b> may be tagged unidirectional, and any control loop relating to the chemical plant <b>12</b> may include a filter for such tag. Thus, such data will not be used for any control of the chemical plant <b>12</b>.</p><p id="p-0096" num="0105"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows a schematic representation of the data contextualization concept in systems <b>10</b> like those shown in <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref>.</p><p id="p-0097" num="0106">The systems <b>10</b> of <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref> include two internal processing layers <b>14</b>, <b>16</b>, <b>32</b>, <b>34</b> and the external processing layer <b>30</b>. The first processing layer <b>14</b> may be a decentralized control system for supervising, monitoring and controlling the physical processes in the chemical plant <b>12</b>. The first processing layer <b>14</b> may be configured to provide process or asset or process specific data. The second processing layer <b>16</b>, <b>32</b>, <b>34</b> may include the intermediate processing system <b>34</b> and the process management system <b>32</b>. The intermediate processing system <b>34</b> may be configured as an edge computing layer. Such layer may be associated to Level <b>3</b> for individual plants. The intermediate processing system <b>34</b> may be configured for<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0107">collecting process or asset or process specific data,</li>        <li id="ul0008-0002" num="0108">interaction with basic automation systems from Level 2,</li>        <li id="ul0008-0003" num="0109">initial contextualization (bottom-up approach), wherein context is added based on what is known on Level 2 and Level 1 and within the decentralized edge device,</li>    </ul>    </li></ul></p><p id="p-0098" num="0110">The process management system <b>32</b> may be configured as centralized edge computing layer. Such layer may be associated to Level <b>4</b> for multiple plants. The process management system <b>32</b> may be configured for:<ul id="ul0009" list-style="none">    <li id="ul0009-0001" num="0000">    <ul id="ul0010" list-style="none">        <li id="ul0010-0001" num="0111">integration of data from different decentralized edge devices including the intermediate processing system <b>34</b> or monitoring devices <b>44</b>,</li>        <li id="ul0010-0002" num="0112">further contextualization (bottom-up approach), wherein additional context is added based on preprocessed context in the decentralized within the decentralized edge devices.</li>    </ul>    </li></ul></p><p id="p-0099" num="0113">The external processing layer <b>30</b> may be configured as centralized cloud computing platform. Such platform may be associated with Level <b>5</b> for multiple plants. The external processing layer <b>30</b> may be configured as manufacturing data workspace with full data integration across multiple plants including manufacturing data history transport &#x26; streaming, collection of all data from all edge components. This way the full contextualization of all lower level context may be integrated in the on the external processing layer <b>30</b> for multiple plants. Thus, the external processing layer <b>30</b> may be further configured to<ul id="ul0011" list-style="none">    <li id="ul0011-0001" num="0000">    <ul id="ul0012" list-style="none">        <li id="ul0012-0001" num="0114">run cloud-native apps,</li>        <li id="ul0012-0002" num="0115">connect with external PaaS and SaaS tenants,</li>        <li id="ul0012-0003" num="0116">integrate machine learning with manufacturing data &#x26; processes, train-test-deploy, visualize data, access apps, orchestrate.</li>    </ul>    </li></ul></p><p id="p-0100" num="0117">By way of system architecture, a bottom-up contextualization concept may be realized. Such concept is shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref>. In the bottom-up concept all information that is available on the lower-levels may already be added to the data as attributes, such that lower level context is not lost. Here the first processing layer <b>14</b> as the lowest context level may include measurement values <b>11</b>, which are contextualized with respect to the item <b>13</b> the measurement was conducted with. The intermediate processing system <b>34</b> may further contextualize by adding further tags <b>15</b> relating to the individual chemical plant <b>12</b>. The process management system <b>32</b> may further contextualize by adding tags <b>17</b> relating to multiple chemical plants <b>12</b> and/or business information. The external processing layer <b>30</b> may further contextualize by adding tags <b>19</b> relating to multiple plants and/or external context information, e.g. from third parties.</p><p id="p-0101" num="0118">The contextualization concept may cover at least two fundamental types of context. One type may be the functional location within the production environment comprising multiple chemical plants. This may cover information about what and where this data point represents inside the production environment. Examples are the connection with a functional location, an attribute with respect to which physical asset the data is collected, etc. This context may be beneficially used for later applications, since it explains which data is available for which plants and assets.</p><p id="p-0102" num="0119">Another type may be confidentiality categorization. Such tag may be added on the lowest level possible and this information may be propagated to further processing layers. Such tag may be added automatically or manually. With technical measures e.g. via a filter embedded into the firewalls, it may be prohibited automatically, that &#x201c;strictly confidential&#x201d; data is integrated all the way up to the external processing layer <b>30</b>. Sharing of data with externals will lead to an automatic notification that &#x201c;confidential data&#x201d; is being shared. An automatic contractual check may be implemented to see whether this data can be shared with this external.</p><p id="p-0103" num="0120">Overall the contextualization concept realized in such way allows for highly efficient data usage in process applications deployed on any layer of the system.</p><p id="p-0104" num="0121"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows a flowchart in a schematic representation of the method for monitoring and/or controlling one or more chemical plant(s).</p><p id="p-0105" num="0122">Preferably the method is performed on a distributed computing system as shown in <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref> comprising a first processing layer <b>14</b> associated with the chemical plant <b>12</b> and communicatively coupled to a second processing layer <b>16</b>, <b>32</b>, <b>34</b>. The method may perform all steps as described in the context of <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>4</b></figref>, including any steps relating to contextualization, data handling, process application management and monitoring device management.</p><p id="p-0106" num="0123">In a first step, <b>61</b>, process or asset or process specific data of the chemical plant <b>12</b> is provided via the first processing layer <b>14</b> to the second processing layer <b>16</b>, <b>32</b>, <b>34</b>.</p><p id="p-0107" num="0124">In a second step <b>63</b>, process or asset or process specific data is contextualized via the second processing layer <b>16</b>, <b>32</b>, <b>34</b> to generate plant specific data.</p><p id="p-0108" num="0125">In a third step, <b>65</b>, plant specific data of one or more chemical plant(s) <b>12</b> is provided via the second processing layer <b>16</b>, <b>32</b>, <b>34</b> to the interface <b>26</b> to the external network.</p><p id="p-0109" num="0126">In a fourth step, <b>67</b>, one or more chemical plant(s) are monitored and/or controlled via the second processing layer <b>16</b>, <b>32</b>, <b>34</b> or the first processing layer <b>14</b> based on the process or asset or process specific data or the plant specific data. Monitoring and/or controlling of the one or more chemical plant(s) <b>12</b> may be conducted via the second processing layer <b>16</b>, <b>32</b>, <b>34</b> or the external processing layer <b>30</b> based on the plant specific data. Additionally, monitoring and/or controlling may be conducted via the first processing layer <b>14</b> based on the process or asset or process specific data. Such monitoring and/or controlling may be performed through process applications ingesting respective data and providing monitoring and/or controlling output as further lined out in <figref idref="DRAWINGS">FIGS. <b>6</b> to <b>8</b></figref>.</p><p id="p-0110" num="0127"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows a schematic representation of the distributed computing system for monitoring and/or controlling one or more chemical plant(s) with multiple assets via a distributed computing system <b>10</b> with more than two deployment layers <b>14</b>, <b>16</b>, <b>30</b>.</p><p id="p-0111" num="0128">The schematic of <figref idref="DRAWINGS">FIG. <b>6</b></figref> represents containerized application orchestration in different deployment layers <b>14</b>, <b>16</b>, <b>30</b>. The system <b>10</b> includes an external processing system <b>30</b>, a second processing layer <b>16</b> and a first processing layer <b>14</b>. Here the second processing layer <b>16</b> may include larger storage and computing resources than the first processing layer <b>14</b>, and/or the external processing layer <b>30</b> may include larger storage and computing resources than the second processing layer <b>16</b>. The system's <b>10</b> architecture and functionalities may adhere to the architectures and functionalities described with respect to <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref>. In particular the first and the second processing layer <b>14</b>, <b>16</b> may be configured in a secure network <b>20</b>, <b>40</b>, <b>18</b>. The first processing layer <b>14</b> may be communicatively coupled to the second processing layer <b>16</b> and the second processing layer <b>16</b> may be communicatively coupled to the external processing layer <b>30</b> via an external network <b>24</b>.</p><p id="p-0112" num="0129">The orchestration applications <b>56</b>, <b>58</b> may be hosted by the external processing layer <b>30</b> and the second processing layer <b>16</b>, <b>32</b>, <b>34</b> respectively. Hence containerized applications or container images <b>48</b>, <b>50</b> may be stored in a registry of the external processing layer <b>30</b> and the second processing layer <b>16</b>, <b>32</b>, <b>34</b> respectively. The containerized applications <b>48</b>, <b>50</b> for execution may include one or more operations to ingest input data, to provide the input data to respective asset or plant model(s) generating output data and to provide the generated output data for controlling and/or monitoring the chemical plant <b>12</b>. This way the external processing layer <b>30</b> and the second processing layer <b>16</b>, <b>32</b>, <b>34</b> act as facilitating layers reducing the computing and storage resources required on the first processing layer <b>14</b> on the asset level.</p><p id="p-0113" num="0130"><figref idref="DRAWINGS">FIG. <b>7</b></figref> shows a flowchart in a schematic representation of the method for monitoring and/or controlling a chemical plant <b>12</b> with multiple assets via a distributed computing system <b>10</b> as it may be performed in the systems <b>10</b> shown in <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>4</b></figref>.</p><p id="p-0114" num="0131">In a first step <b>60</b>, the containerized application <b>48</b>, <b>50</b> including an asset or plant template specifying input data, output data and an asset or plant model is provided. The containerized application <b>48</b>. <b>50</b> may be created on the external processing layer <b>30</b> or may be modified on the second processing layer <b>30</b>. An external containerized application from a third party environment may be provided.</p><p id="p-0115" num="0132">In a second step <b>62</b>, the containerized application <b>48</b>, <b>50</b> is deployed to execute on at least one of the deployment layers <b>30</b>, <b>32</b>, <b>16</b>, <b>34</b>, <b>14</b> wherein the deployment layer <b>30</b>, <b>32</b>, <b>16</b>, <b>34</b>, <b>14</b> is assigned based on the input data, a load indicator, or a system layer tag, and the containerized application <b>48</b>, <b>50</b> may be executed on the assigned deployment layer(s) <b>30</b>, <b>32</b>, <b>16</b>, <b>34</b>, <b>14</b> to generate output data for controlling and/or monitoring the chemical plant <b>12</b>. Deployment may be managed by an orchestration application <b>56</b>, <b>50</b> that manages deployment of containerized applications <b>48</b>, <b>50</b> based on the input data, the load indicator, or the system layer tag. The orchestration application may be hosted by the second processing layer <b>16</b>, <b>23</b>, <b>34</b> and/or the external processing layer <b>30</b>. The orchestration application <b>56</b>, <b>58</b> hosted by the second processing layer <b>16</b>, <b>32</b>, <b>34</b> manages critical containerized applications <b>48</b>, <b>50</b>, wherein the orchestration application <b>56</b>, <b>58</b> hosted by the external processing layer <b>30</b> may manage non-critical containerized applications <b>48</b>, <b>50</b>. The assignment of the deployment layer <b>30</b>, <b>32</b>, <b>34</b>, <b>16</b>, <b>14</b> may be based on input data depends on a data availability indicator, a criticality indicator or a latency indicator. A containerized application from a third party environment may be deployed to execute on the external processing layer <b>30</b>.</p><p id="p-0116" num="0133">The orchestration applications <b>56</b>, <b>58</b> may be hosted by the external processing layer <b>30</b> and the second processing layer <b>16</b> respectively. The orchestration applications <b>56</b>, <b>58</b> may deploy containerized applications <b>48</b>, <b>50</b> on any deployment layer <b>30</b>, <b>16</b>, <b>14</b>. The containerized applications <b>48</b>, <b>50</b> may then be executed on respective deployment layer <b>30</b>, <b>16</b>, <b>14</b> by running the process applications <b>46</b>, <b>52</b>, <b>54</b> in a sandbox-type environment. The deployment layer <b>30</b>, <b>16</b>, <b>14</b> may be assigned based on the input data, the load indicator, or the system layer tag. For instance, management of critical containerized applications <b>50</b> may be assigned to the second processing layer <b>16</b> optionally based on a history criterion reflecting a time window of available historical data on the first or second processing layer <b>16</b>. Advantageously the containerized applications <b>48</b>, <b>50</b> may be deployed to multiple assets or plants of the same type. Furthermore, the containerized applications <b>50</b>, <b>48</b> may be modified based on the input data and the output data provided by containerized applications <b>46</b>, <b>52</b>, <b>54</b> executed for multiple assets or plants of the same type.</p><p id="p-0117" num="0134">In a third step <b>64</b> the containerized application <b>48</b>, <b>50</b> may be monitored based on a confidence level of the input data, the asset model or the plant model during or after each execution. Based on the resulting confidence level an event signal or modification of the asset or plant model may be triggered. Such Trigger may be set, if the confidence level exceeds a threshold. Such threshold may be pre-defined or dynamic. If a trigger is set, the modification of the asset or plant model may be performed e.g. on the second processing layer <b>16</b>, <b>32</b>, <b>34</b> or the external processing layer <b>30</b>.</p><p id="p-0118" num="0135">In a fourth step <b>66</b> the generated output data is provided for controlling and/or monitoring the chemical plant <b>12</b>. Such output data may be passed to a persistent instance after execution of the containerized application <b>48</b>, <b>50</b>. In particular such output data may be passed to a controlling instance, e.g. on the first processing layer <b>14</b> of the chemical plant <b>12</b>. Additionally or alternatively such output data may be passed to a monitoring instance on the first processing layer <b>14</b>, the second processing layer <b>16</b>, <b>32</b>, <b>34</b> or the external processing layer <b>30</b>. The output data may be passed to e.g. a client application for display to an operator or a further containerized application <b>48</b>, <b>50</b> for execution.</p><p id="p-0119" num="0136"><figref idref="DRAWINGS">FIG. <b>8</b></figref> shows a schematic representation of systems <b>10</b>.<b>2</b>, <b>10</b>.<b>2</b> for monitoring and/or controlling more than one chemical plants <b>12</b>.<b>1</b>, <b>12</b>.<b>2</b> in different secure networks <b>20</b>.<b>1</b>, <b>20</b>.<b>2</b>, which are configured for data and process application transfer. <figref idref="DRAWINGS">FIG. <b>8</b></figref> shows systems <b>10</b> of <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>3</b></figref> including first and second processing layers <b>14</b>, <b>16</b>, <b>32</b>, <b>34</b> and the external processing layer <b>30</b> as examples. Any other system architecture may be similarly suited for process application and data transfer. Both systems are associated with separate secure networks <b>20</b>.<b>1</b>, <b>20</b>.<b>2</b> and communicatively coupled to an external network <b>24</b>.<b>1</b>, <b>24</b>.<b>2</b> via interfaces <b>26</b>.<b>1</b>, <b>26</b>.<b>2</b>.</p><p id="p-0120" num="0137">The systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b> are configured to exchange process or asset or process specific data or the process application based on the transfer tag. By adding the transfer tag on the earliest level possible, i.e. where the data or the application is generated or first enters the system, the transfer tag becomes an inherent part of any data point or application as soon as the tag is added and follows the data or application on its path through the system <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>. Such transfer tag enables seamless, but secure integration of external data sources or external applications as well as transfer of data or application to external resources.</p><p id="p-0121" num="0138">In one case shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref> an application <b>48</b> is exchanged between the systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>. In this example the containerized application <b>48</b> is transferred via the external processing layer <b>30</b>.<b>1</b>, <b>30</b>.<b>2</b> communicatively coupled to the two systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>. Here the external processing layer <b>30</b>.<b>1</b> is communicatively coupled to system <b>10</b>.<b>1</b> and the external processing layer <b>30</b>.<b>2</b> is communicatively coupled to system <b>10</b>.<b>2</b>. The exchange of the containerized application <b>48</b> is performed indirectly through the external processing layers <b>30</b>.<b>1</b>, <b>30</b>.<b>2</b>. The containerized application is tagged with a transfer tag including two transfer settings relating to confidentiality settings and/or third-party transfer settings. This way the transfer may be prohibited based a compliance check on the external processing layer <b>30</b>.<b>2</b>, e.g. if a transfer with respective third-party identifier is not associated with third party identifier stored in a database of allowed third party transfers for the process application <b>48</b>. Similarly process or asset or process specific data may be transferred <b>72</b> between the systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>. Any transfer between the systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b> may then be followed by further transfers from the external processing layer <b>30</b>.<b>1</b>, <b>30</b>.<b>2</b> to the respective system <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>.</p><p id="p-0122" num="0139">Additionally, such transfer based on a transfer tag may be conducted directly between the systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b> between processing layers <b>32</b>, <b>16</b> associated with the secure networks <b>20</b>.<b>1</b>, <b>20</b>.<b>1</b>. Such transfers based on transfer tag may be realized via a secure connection <b>74</b> between such layers <b>16</b>, <b>23</b>, such as a VPN connection. Any transfer between the systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b> may then be followed by further transfers between system components inside the secure networks <b>20</b>.<b>1</b>, <b>20</b>.<b>2</b> or to the external processing layer <b>30</b>.<b>1</b>, <b>30</b>.<b>2</b> of the respective system <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b>. By attaching the transfer tag to any data point and process application, containerized or not, allows to securely handle third-party transfers between systems <b>10</b>.<b>1</b>, <b>10</b>.<b>2</b> in separate secure networks <b>20</b>.<b>1</b>, <b>20</b>.<b>1</b>.</p><p id="p-0123" num="0140">Any of the components described herein used for implementing the methods described herein may be in a form of a distributed computer system having one or more processing devices capable of executing computer instructions. Components of the computer system may be communicatively coupled (e.g., networked) to other machines in a local area network, a secure network, an intranet, an extranet, or the Internet. Components of the computer system may operate as a peer machines in a peer-to-peer (or distributed) network environment. Parts of the computer system may be a virtualized cloud computing environment, edge gate ways, web appliances, servers, network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, it is to be understood that the terms &#x201c;computer system,&#x201d; &#x201c;machine,&#x201d; &#x201c;electronic circuitry,&#x201d; and the like are not necessarily limited to a single component, and shall be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.</p><p id="p-0124" num="0141">Some or all of the components of such a computer system may be utilized by or illustrative of any of the components of the system <b>10</b>. In some embodiments, one or more of these components may be distributed among multiple devices or may be consolidated into fewer devices than illustrated. Furthermore, some components may refer to physical components realized in hardware and others may refer to virtual components realized in software on remote hardware.</p><p id="p-0125" num="0142">Any processing layer may include a general-purpose processing device such as a microprocessor, microcontroller, central processing unit, or the like. More particularly, the processing layers may include a CISC (Complex Instruction Set Computing) microprocessor, RISC (Reduced Instruction Set Computing) microprocessor, VLIW (Very Long Instruction Word) microprocessor, or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing layer may also include one or more special-purpose processing devices such as an ASIC (Application-Specific Integrated Circuit), an FPGA (Field Programmable Gate Array), a CPLD (Complex Programmable Logic Device), a DSP (Digital Signal Processor), a network processor, or the like. The methods, systems and devices described herein may be implemented as software in a DSP, in a micro-controller, or in any other side-processor or as hardware circuit within an ASIC, CPLD, or FPGA. It is to be understood that the term &#x201c;processing layer&#x201d; may also refer to one or more processing devices, such as a distributed system of processing devices located across multiple computer systems (e.g., cloud computing), and is not limited to a single device unless otherwise specified.</p><p id="p-0126" num="0143">Any processing layer may include suitable data storage device like a computer-readable storage medium on which is stored one or more sets of instructions (e.g., software) embodying any one or more of the methodologies or functions described herein. The instructions may also reside, completely or at least partially, within the main memory and/or within the processor during execution thereof by the computer system, main memory, and processing device, which may constitute computer-readable storage media. The instructions may further be transmitted or received over a network via a network interface device.</p><p id="p-0127" num="0144">A computer program for implementing one or more of the embodiments described herein may be stored and/or distributed on a suitable medium, such as an optical storage medium or a solid state medium supplied together with or as part of other hardware, but may also be distributed in other forms, such as via the internet or other wired or wireless telecommunication systems. However, the computer program may also be presented over a network like the World Wide Web and can be downloaded into the working memory of a data processor from such a network.</p><p id="p-0128" num="0145">The terms &#x201c;computer-readable storage medium,&#x201d; &#x201c;machine-readable storage medium,&#x201d; and the like should be taken to include a single medium or multiple medium (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions. The terms &#x201c;computer-readable storage medium,&#x201d; &#x201c;machine-readable storage medium,&#x201d; and the like shall also be taken to include any transitory or non-transitory medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure. The term &#x201c;computer-readable storage medium&#x201d; shall accordingly be taken to include, but not be limited to, solid-state memories, optical media, and magnetic media.</p><p id="p-0129" num="0146">Some portions of the detailed description may have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is herein, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.</p><p id="p-0130" num="0147">It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the preceding discussion, it is appreciated that throughout the description, discussions utilizing terms such as &#x201c;receiving,&#x201d; &#x201c;retrieving,&#x201d; &#x201c;transmitting,&#x201d; &#x201c;computing,&#x201d; &#x201c;generating,&#x201d; &#x201c;adding,&#x201d; &#x201c;subtracting,&#x201d; &#x201c;multiplying,&#x201d; &#x201c;dividing,&#x201d; &#x201c;selecting,&#x201d; &#x201c;optimizing,&#x201d; &#x201c;calibrating,&#x201d; &#x201c;detecting,&#x201d; &#x201c;storing,&#x201d; &#x201c;performing,&#x201d; &#x201c;analyzing,&#x201d; &#x201c;determining,&#x201d; &#x201c;enabling,&#x201d; &#x201c;identifying,&#x201d; &#x201c;modifying,&#x201d; &#x201c;transforming,&#x201d; &#x201c;applying,&#x201d; &#x201c;extracting,&#x201d; and the like, refer to the actions and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (e.g., electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.</p><p id="p-0131" num="0148">It has to be noted that embodiments of the invention are described with reference to different subject matters. In particular, some embodiments are described with reference to method type claims whereas other embodiments are described with reference to the system type claims.</p><p id="p-0132" num="0149">However, a person skilled in the art will gather from the above and the following description that, unless otherwise notified, in addition to any combination of features belonging to one type of subject matter also any combination between features relating to different subject matters is considered to be disclosed with this application. However, all features can be combined providing synergetic effects that are more than the simple summation of the features.</p><p id="p-0133" num="0150">While the invention has been illustrated and described in detail in the drawings and foregoing description, such illustration and description are to be considered illustrative or example and not restrictive; the invention is not limited to the disclosed embodiments. Other variations to the disclosed embodiments can be understood and effected by those skilled in the art and practicing the claimed invention, from a study of the drawings, the disclosure, and the appended claims. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present disclosure.</p><p id="p-0134" num="0151">In the claims, the word &#x201c;comprising&#x201d; does not exclude other elements or steps, and the indefinite article &#x201c;a&#x201d; or &#x201c;an&#x201d; does not exclude a plurality. A single processor or controller or other unit may fulfil the functions of several items recited in the claims. The mere fact that certain measures are recited in mutually different dependent claims does not indicate that a combination of these measures cannot be used to advantage. Any reference signs in the claims should not be construed as limiting the scope.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for monitoring and/or controlling a chemical plant (<b>12</b>) with multiple assets via a distributed computing system (<b>10</b>) with more than two deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>), wherein the deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) comprise at least two of a first processing layer (<b>14</b>), a second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) and an external processing layer (<b>30</b>), the method comprising:<claim-text>providing (<b>60</b>) a containerized application (<b>48</b>, <b>50</b>) including an asset or plant template specifying input data, output data and an asset or plant model,</claim-text><claim-text>deploying (<b>62</b>) the containerized application (<b>48</b>, <b>50</b>) to execute on at least one of the deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>), wherein the deployment layer (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) is assigned based on the input data, a load indicator, or a system layer tag, and executing the containerized application (<b>46</b>, <b>52</b>, <b>54</b>) on the assigned deployment layer(s) (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) to generate output data for controlling and/or monitoring the chemical plant (<b>12</b>),</claim-text><claim-text>providing (<b>66</b>) the generated output data for controlling and/or monitoring the chemical plant (<b>12</b>).</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) includes larger storage and computing resources than the first processing layer (<b>14</b>), and/or the external processing layer (<b>30</b>) includes larger storage and computing resources than the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>).</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first and the second processing layer (<b>14</b>, <b>16</b>, <b>32</b>, <b>34</b>) are configured inside a secure network (<b>20</b>), wherein the first processing layer (<b>14</b>) is communicatively coupled to the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) and the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) is communicatively coupled to the external processing layer (<b>30</b>) via an external network.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the containerized application (<b>48</b>, <b>50</b>) for execution includes one or more operations to ingest input data, to provide the input data to respective asset or plant model(s) generating output data and to provide the generated output data for controlling and/or monitoring the chemical plant (<b>12</b>).</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein deployment is managed by an orchestration application (<b>56</b>, <b>58</b>) that manages deployment of containerized applications (<b>48</b>, <b>50</b>) based on the input data, the load indicator, or the system layer tag.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the orchestration application (<b>56</b>, <b>58</b>) is hosted by the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) and/or the external processing layer (<b>30</b>).</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the orchestration application (<b>58</b>) hosted by the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) manages critical containerized applications (<b>48</b>, <b>50</b>), wherein the orchestration application (<b>56</b>) hosted by the external processing layer (<b>30</b>) manages non-critical containerized applications (<b>48</b>, <b>50</b>).</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the management of critical containerized applications (<b>56</b>, <b>58</b>) is assigned to the second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) based on a history criterion reflecting a time window of available historical data in the first or second processing layer (<b>14</b>, <b>16</b>, <b>32</b>, <b>34</b>).</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the assignment of the deployment layer (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) based on input data depends on a data availability indicator, a criticality indicator or a latency indicator.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the containerized application is deployed to multiple assets or plants of the same type.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the containerized application (<b>48</b>, <b>50</b>) is modified based on the input data and the output data provided by containerized applications (<b>48</b>, <b>50</b>) executed for multiple assets or plants (<b>12</b>) of the same type.</claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the containerized application (<b>48</b>, <b>50</b>) is monitored based on a confidence level of the input data, the asset model or the plant model</claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein an event signal or a modification of the asset or plant model is triggered, if the confidence level falls below a confidence threshold.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the modification of the asset or plant model is performed on the second processing layer (<b>15</b>, <b>32</b>, <b>34</b>) or the external processing layer (<b>30</b>).</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein an external containerized application from a third-party environment is provided and, deployed to execute on the external processing layer (<b>30</b>).</claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. A system (<b>10</b>) for monitoring and/or controlling a chemical plant (<b>12</b>) with multiple assets with more than two deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>), wherein the deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) comprise at least two of a first processing layer (<b>14</b>), a second processing layer (<b>16</b>, <b>32</b>, <b>34</b>) and an external processing layer (<b>30</b>), the system (<b>10</b>) being configured to:<claim-text>provide (<b>60</b>) a containerized application (<b>48</b>, <b>50</b>) including an asset or plant template specifying input data, output data and an asset or plant model,</claim-text><claim-text>deploy (<b>62</b>) the containerized application (<b>48</b>, <b>50</b>) to execute on at least one of the deployment layers (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>), wherein the deployment layer (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) is assigned based on the input data, a load indicator, or a system layer tag, and executing the containerized application (<b>46</b>, <b>52</b>, <b>54</b>) on the assigned deployment layer(s) (<b>14</b>, <b>16</b>, <b>30</b>, <b>32</b>, <b>34</b>) to generate output data for controlling and/or monitoring the chemical plant (<b>12</b>),</claim-text><claim-text>provide (<b>66</b>) the generated output data for controlling and/or monitoring the chemical plant (<b>12</b>).</claim-text></claim-text></claim></claims></us-patent-application>