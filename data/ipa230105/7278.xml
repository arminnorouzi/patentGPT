<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230007279A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230007279</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17942679</doc-number><date>20220912</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>147</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>593</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>80</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>186</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>105</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>132</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>147</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>176</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>593</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>70</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20141101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>N</subclass><main-group>19</main-group><subgroup>80</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">COLOUR COMPONENT PREDICTION METHOD, ENCODER, AND DECODER</invention-title><us-related-documents><continuation><relation><parent-doc><document-id><country>US</country><doc-number>17454612</doc-number><date>20211111</date></document-id><parent-grant-document><document-id><country>US</country><doc-number>11477465</doc-number></document-id></parent-grant-document></parent-doc><child-doc><document-id><country>US</country><doc-number>17942679</doc-number></document-id></child-doc></relation></continuation><continuation><relation><parent-doc><document-id><country>US</country><doc-number>PCT/CN2019/126710</doc-number><date>20191219</date></document-id><parent-status>PENDING</parent-status></parent-doc><child-doc><document-id><country>US</country><doc-number>17454612</doc-number></document-id></child-doc></relation></continuation></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>GUANGDONG OPPO MOBILE TELECOMMUNICATIONS CORP., LTD.</orgname><address><city>Dongguan</city><country>CN</country></address></addressbook><residence><country>CN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>WAN</last-name><first-name>Shuai</first-name><address><city>Dongguan</city><country>CN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>MA</last-name><first-name>Yanzhuo</first-name><address><city>Dongguan</city><country>CN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>HUO</last-name><first-name>Junyan</first-name><address><city>Dongguan</city><country>CN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>WANG</last-name><first-name>Haixin</first-name><address><city>Dongguan</city><country>CN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>YANG</last-name><first-name>Fuzheng</first-name><address><city>Dongguan</city><country>CN</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">A method for colour component prediction, applied to an encoder and includes: determining a neighbouring reference sample set of a current block, wherein the neighbouring reference sample set comprises at least one reference sample; determining a preset parameter value corresponding to the current block, including: determining a bitdepth value corresponding to a to-be-predicted colour component of the current block; and performing a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value. The method further includes: determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value; and performing colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="79.93mm" wi="132.59mm" file="US20230007279A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="226.57mm" wi="146.64mm" orientation="landscape" file="US20230007279A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="224.45mm" wi="126.66mm" orientation="landscape" file="US20230007279A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="93.47mm" wi="134.62mm" file="US20230007279A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="165.69mm" wi="82.89mm" file="US20230007279A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="199.31mm" wi="138.43mm" file="US20230007279A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="158.07mm" wi="140.29mm" file="US20230007279A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="54.44mm" wi="140.21mm" file="US20230007279A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="55.03mm" wi="140.29mm" file="US20230007279A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="67.06mm" wi="119.80mm" file="US20230007279A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="54.86mm" wi="140.29mm" file="US20230007279A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="67.06mm" wi="119.80mm" file="US20230007279A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading><p id="p-0002" num="0001">This is a continuation of U.S. application Ser. No. 17/454,612, filed on Nov. 11, 2021 and entitled &#x201c;COLOUR COMPONENT PREDICTION METHOD, ENCODER, DECODER, AND STORAGE MEDIUM&#x201d;, which is a continuation of International Application No. PCT/CN2019/126710, filed on Dec. 19, 2019, and entitled &#x201c;IMAGE COMPONENT PREDICTION METHOD, ENCODER, DECODER, AND STORAGE MEDIUM&#x201d;, the disclosure of the applications is hereby incorporated by reference in their entireties.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">TECHNICAL FIELD</heading><p id="p-0003" num="0002">Embodiments of the present disclosure relate to the technical field of picture processing, and particularly to a method for colour component prediction, an encoder, a decoder, and a storage medium.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">As people's requirements for video display quality increase, new video applications such as high-definition and ultra-high-definition video have emerged. H.265/High Efficiency Video Coding (HEVC) has been unable to meet the needs of rapid development of the video applications. The Joint Video Exploration Team (JVET) proposed a next-generation video coding standard H.266 or Versatile Video Coding (VVC), and its corresponding test model is a VVC reference software test platform, i.e., a VVC Test Model (VTM).</p><p id="p-0005" num="0004">In the H.266/VVC, a Matrix-based Intra Prediction (MIP) technology has been accepted at present. According to the technology, for the difference in types of intra luma blocks, different numbers of MIP modes are added in an intra luma prediction process. In an MIP process, a derivation process is also related to the types of luma blocks, which makes the derivation process relatively complicated, is not conducive to parallel processing, and on the contrary, increases the complexity.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a composition block diagram of a video coding system according to an embodiment of the present disclosure.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a composition block diagram of a video decoding system according to an embodiment of the present disclosure.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a flowchart of a method for colour component prediction according to an embodiment of the present disclosure.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b>A</figref> is a structure diagram of positions of reference samples according to an embodiment of the present disclosure.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>4</b>B</figref> is a structure diagram of down-sampling processing of reference samples according to an embodiment of the present disclosure.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> is a structure diagram of buffer filling according to the related technical solution.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> is a structure diagram of another buffer filling according to the related technical solution.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> is a structure diagram of buffer filling according to an embodiment of the present disclosure.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>6</b>A</figref> is a structure diagram of determination of input samples according to the related technical solution.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>6</b>B</figref> is another structure diagram of determination of input samples according to an embodiment of the present disclosure.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a flowchart of another method for colour component prediction according to an embodiment of the present disclosure.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a structure diagram of generation of a predicted value according to an embodiment of the present disclosure.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a composition structure diagram of an encoder according to an embodiment of the present disclosure.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a specific hardware structure diagram of an encoder according to an embodiment of the present disclosure.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a composition structure diagram of a decoder according to an embodiment of the present disclosure.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>12</b></figref> is a specific hardware structure diagram of a decoder according to an embodiment of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0022" num="0021">In order to make the characteristics and technical contents of the embodiments of the present disclosure understood in more detail, implementation of the embodiments of the present disclosure will be described below in combination with the drawings in detail. The appended drawings are only adopted for description as references and not intended to limit the embodiments of the present disclosure.</p><p id="p-0023" num="0022">In a video picture, a first colour component, a second colour component, and a third colour component are usually adopted to represent a Coding Block (CB). The three colour components are a luma component, a blue chroma component, and a red chroma component respectively. Specifically, the luma component is usually represented by sign Y, the blue chroma component is usually represented by sign Cb or U, and the red chroma component is usually represented by sign Cr or V. Therefore, the video picture may be represented in a YCbCr format, or may be represented in a YUV format.</p><p id="p-0024" num="0023">In the embodiments of the present disclosure, the first colour component may be the luma component, the second colour component may be the blue chroma component, and the third colour component may be the red chroma component. However, no specific limits are made in the embodiments of the present disclosure.</p><p id="p-0025" num="0024">In the MIP technology, input data predicted by MIP may include a reference sample in a previous line and in a left column of a current block, an MIP mode (which may be represented as modeled) applied to the current block, information of a width and a height of the current block, and whether it needs to be transposed, and the like; output data predicted by MIP may include a predicted value of the current block. The MIP process may specifically include four steps: configuring an MIP core parameter, acquiring a reference sample, constructing input samples, and generating a predicted value. After the four steps, the predicted value of the current block may be obtained.</p><p id="p-0026" num="0025">However in the MIP process, for the step of constructing an input sample, since the step needs to have a strong correlation with the type of luma blocks (which may be represented by mipSizeId), that is, for different types of luma blocks, different input sample derivation methods will be adopted to obtain an input sample matrix, making the derivation process complicated, especially for the case where the type of luma blocks (mipSizeId) is equal to 0 or 1, the derivation methods of p[0] and p[x] in the input sample matrix are different, which is not conducive to parallel processing. In addition, for the difference of the types of luma blocks, different numbers of MIP modes are added in the intra luma prediction process, determination of the type of luma blocks needs to be performed when luma prediction is performed for each MIP mode, and the complexity is also increased.</p><p id="p-0027" num="0026">The embodiments of the present disclosure provide a method for colour component prediction. A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample; the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set; an input sample matrix is determined by means of a first preset calculation model based on the input reference sample set; and colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block. Thus, in the solutions of the embodiments of the present disclosure, judgment of the type of current block is omitted, which reduces the time complexity, and facilitates hardware implementation, in addition, the input sample matrix may be determined based on the input reference sample set and the first preset calculation model, while the derivation process of the input samples for matrix multiplication is also simplified, so that the derivation process of the input sample matrix is unified, and the solutions of the embodiments of the present disclosure no longer depend on the type of the current block and can also realize parallel processing, thereby reducing the calculation complexity.</p><p id="p-0028" num="0027">Embodiments of the present disclosure provide a method for colour component prediction, an encoder, a decoder, and a storage medium, which may simplify the derivation process of input samples for matrix multiplication, and further can reduce the time complexity.</p><p id="p-0029" num="0028">The technical solutions of the embodiments of the present disclosure may be implemented as follows.</p><p id="p-0030" num="0029">According to a first aspect, the embodiments of the present disclosure provide a method for colour component prediction, which may be applied to an encoder and include the following operations.</p><p id="p-0031" num="0030">A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0032" num="0031">The neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set.</p><p id="p-0033" num="0032">An input sample matrix is determined by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0034" num="0033">Colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0035" num="0034">According to a second aspect, the embodiments of the present disclosure provide a method for colour component prediction, which may be applied to a decoder and include the following operations.</p><p id="p-0036" num="0035">A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0037" num="0036">The neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set.</p><p id="p-0038" num="0037">An input sample matrix is determined by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0039" num="0038">Colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0040" num="0039">According to a third aspect, the embodiments of the present disclosure provide an encoder, which may include a first determination unit, a first buffer unit, and a first prediction unit.</p><p id="p-0041" num="0040">The first determination unit is configured to determine a neighbouring reference sample set of a current block, and determine a preset parameter value corresponding to the current block, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0042" num="0041">The first buffer unit is configured to buffer the neighbouring reference sample set and the preset parameter value to construct an input reference sample set.</p><p id="p-0043" num="0042">The first determination unit is further configured to determine an input sample matrix by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0044" num="0043">The first prediction unit is configured to perform colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0045" num="0044">According to a fourth aspect, the embodiments of the present disclosure provide an encoder, which may include a first memory and a first processor.</p><p id="p-0046" num="0045">The first memory may be configured to store a computer program capable of running in the first processor.</p><p id="p-0047" num="0046">The first processor may be configured to run the computer program to execute the method as described in the first aspect.</p><p id="p-0048" num="0047">According to a fifth aspect, the embodiments of the present disclosure provide a decoder, which may include a second determination unit, a second buffer unit, and a second prediction unit.</p><p id="p-0049" num="0048">The second determination unit is configured to determine a neighbouring reference sample set of a current block, and determine a preset parameter value corresponding to the current block, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0050" num="0049">The second buffer unit is configured to buffer the neighbouring reference sample set and the preset parameter value to construct an input reference sample set.</p><p id="p-0051" num="0050">The second determination unit is further configured to determine an input sample matrix by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0052" num="0051">The second prediction unit is configured to perform colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0053" num="0052">According to a sixth aspect, the embodiments of the present disclosure provide a decoder, which may include a second memory and a second processor.</p><p id="p-0054" num="0053">The second memory may be configured to store a computer program capable of running in the second processor.</p><p id="p-0055" num="0054">The second processor may be configured to run the computer program to execute the method as described in the second aspect.</p><p id="p-0056" num="0055">According to a seventh aspect, the embodiments of the present disclosure provide a computer storage medium, which may store a colour component prediction program. The colour component prediction program may be executed by a first processor to implement the method as described in the first aspect, or by a second processor to implement the method as described in the second aspect.</p><p id="p-0057" num="0056">The embodiments of the present disclosure provide a method for colour component prediction, an encoder, a decoder, and a storage medium. A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined; the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set; an input sample matrix is determined by means of a first preset calculation model according to the reference sample set; and colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block. Thus, in the solutions of the embodiments of the present disclosure, judgment of the type of current block is omitted, the time complexity is reduced, and hardware implementation is facilitated. In addition, the input sample matrix may be determined based on the input reference sample set and the first preset calculation model, while the derivation process of the input samples for matrix multiplication is also simplified, so that the derivation process of the input sample matrix is unified, and the solutions of the embodiments of the present disclosure no longer depend on the type of current block and can realize parallel processing, thereby reducing the calculation complexity.</p><p id="p-0058" num="0057">Each embodiment of the present disclosure will be described below in combination with the drawings in detail.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a composition block diagram of a video coding system according to an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the video coding system <b>100</b> includes a transform and quantization unit <b>101</b>, an intra estimation unit <b>102</b>, an intra prediction unit <b>103</b>, a motion compensation unit <b>104</b>, a motion estimation unit <b>105</b>, an inverse transform and inverse quantization unit <b>106</b>, a filter control analysis unit <b>107</b>, a filter unit <b>108</b>, a coding unit <b>109</b>, a decoded picture buffer unit <b>110</b>, etc. The filter unit <b>108</b> may implement deblocking filtering and Sample Adaptive Offset (SAO) filtering. The coding unit <b>109</b> may implement header information coding and Context-based Adaptive Binary Arithmetic Coding (CABAC). For an input original video signal, a video coding block may be obtained by division of a Coding Tree Unit (CTU), and then residual sample information obtained by intra or inter prediction is processed through the transform and quantization unit <b>101</b> to transform the video coding block, including transforming the residual information from a sample domain to a transform domain and quantizing an obtained transform coefficient to further reduce a bit rate. The intra estimation unit <b>102</b> and the intra prediction unit <b>103</b> are configured to perform intra prediction on the video coding block. Exactly, the intra estimation unit <b>102</b> and the intra prediction unit <b>103</b> are configured to determine an intra prediction mode to be adopted to code the video coding block. The motion compensation unit <b>104</b> and the motion estimation unit <b>105</b> are configured to execute intra prediction coding on the received video coding block relative to one or more blocks in one or more reference frames to provide time prediction information. Motion estimation executed by the motion estimation unit <b>105</b> is a process of generating a motion vector. A motion of the video coding block may be estimated according to the motion vector, and then the motion compensation unit <b>104</b> executes motion compensation based on the motion vector determined by the motion estimation unit <b>105</b>. After the intra prediction mode is determined, the intra prediction unit <b>103</b> is further configured to provide selected intra predicted data to the coding unit <b>109</b>, and the motion estimation unit <b>105</b> also sends calculated motion vector data to the coding unit <b>109</b>. In addition, the inverse transform and inverse quantization unit <b>106</b> is configured to reconstruct the video coding block, namely a residual block is reconstructed in the sample domain, an artifact with a blocking effect in the reconstructed residual block is removed through the filter control analysis unit <b>107</b> and the filter unit <b>108</b>, and then the reconstructed residual block is added to a predictive block in a frame of the decoded picture buffer unit <b>110</b> to generate a reconstructed video coding block. The coding unit <b>109</b> is configured to code various coding parameters and quantized transform coefficients. In a CABAC-based coding algorithm, a context may be based on neighbouring coding blocks and configured to code information indicating the determined intra prediction mode to output a bitstream of the video signal. The decoded picture buffer unit <b>110</b> is configured to store the reconstructed video coding block as a prediction reference. As video pictures are coded, new reconstructed video coding blocks may be continuously generated, and all these reconstructed video coding blocks may be stored in the decoded picture buffer unit <b>110</b>.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a composition structure diagram of a video decoding system according to an embodiment of the present disclosure. As shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the video decoding system <b>200</b> includes a decoding unit <b>201</b>, an inverse transform and inverse quantization unit <b>202</b>, an intra prediction unit <b>203</b>, a motion compensation unit <b>204</b>, a filter unit <b>205</b>, a decoded picture buffer unit <b>206</b>, etc. The decoding unit <b>201</b> may implement header information decoding and CABAC decoding. The filter unit <b>205</b> may implement deblocking filtering and SAO filtering. After coding processing shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is performed on an input video signal, a bitstream of the video signal is output. The bitstream is input to the video decoding system <b>200</b>, and passes through the decoding unit <b>201</b> at first to obtain a decoded transform coefficient. A residual block is generated in a sample domain by processing of the inverse transform and inverse quantization unit <b>202</b> for the transform coefficient. The intra prediction unit <b>203</b> may be configured to generate predicted data of a current video decoding block based on a determined intra prediction mode and data of a previous decoded block from a present frame or picture. The motion compensation unit <b>204</b> is configured to analyze a motion vector and another associated syntactic element to determine prediction information for the video decoding block and generate a predictive block of the video decoding block that is currently decoded by use of the prediction information. The residual block from the inverse transform and inverse quantization unit <b>202</b> and the corresponding predictive block generated by the intra prediction unit <b>203</b> or the motion compensation unit <b>204</b> are summed to form a decoded video block. An artifact with a blocking effect in the decoded video signal may be removed through the filter unit <b>205</b> to improve the video quality. Then, the decoded video block is stored in the decoded picture buffer unit <b>206</b>. The decoded picture buffer unit <b>206</b> is configured to store a reference picture for subsequent intra prediction or motion compensation, and is further configured to output a video signal, thus, the recovered original video signal is obtained.</p><p id="p-0061" num="0060">The method for colour component prediction in the embodiment of the present disclosure is mainly applied to the intra prediction unit <b>103</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the intra prediction unit <b>203</b> shown in <figref idref="DRAWINGS">FIG. <b>2</b></figref>. That is, the method for colour component prediction of the embodiments of the present disclosure may be applied to not only a video coding system but also a video decoding system, and may even be applied to the video coding system and the video decoding system at the same time. No specific limits are made in the embodiments of the present disclosure. It is also to be noted that, when the method for colour component prediction is applied to the intra prediction unit <b>103</b>, the &#x201c;current block&#x201d; specifically refers to a current CB in intra prediction, and when the method for colour component prediction is applied to the intra prediction unit <b>203</b>, the &#x201c;current block&#x201d; specifically refers to a current decoding block in intra prediction.</p><p id="p-0062" num="0061">Based on the application scenario example in <figref idref="DRAWINGS">FIG. <b>1</b></figref> or <figref idref="DRAWINGS">FIG. <b>2</b></figref> above, referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, a flowchart of a method for colour component prediction according to an embodiment of the present disclosure is shown. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the method may include the following operations.</p><p id="p-0063" num="0062">In S<b>301</b>, a neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0064" num="0063">It is to be noted that a video picture may be divided into multiple picture blocks, and each current to-be-coded picture block may be called a coding block. Here, each coding block may include a first colour component, a second colour component, and a third colour component. The current block is a coding block of which the first colour component, the second colour component, or the third colour component is currently to be predicted in the video picture.</p><p id="p-0065" num="0064">Assuming that the current block performs first colour component prediction, and a first colour component is a luma component, that is, a to-be-predicted colour component is the luma component, then the current block may also be called a luma block; or assuming that the current block performs second colour component prediction, and the second colour component is a chroma component, that is, a to-be-predicted colour component is the chroma component, then the current block may also be called a chroma block.</p><p id="p-0066" num="0065">It is also to be noted that for the current block, when a left neighbouring region, a bottom-left neighbouring region, a top neighbouring region, and a top-right neighbouring region are all effective regions, the neighbouring reference sample set may be obtained by filtering reference samples in the left neighbouring region and the top neighbouring region of the current block, may be obtained by filtering reference samples in left neighbouring region and the bottom-left neighbouring region of the current block, and may also be obtained by filtering reference samples in the top neighbouring region and the right neighbouring region of the current block, which is not specifically limited in the embodiment of the present disclosure.</p><p id="p-0067" num="0066">In some embodiments, for S<b>301</b>, the operation that a neighbouring reference sample set of a current block is determined may include the following operations.</p><p id="p-0068" num="0067">A reference sample neighbouring to at least one side of the current block is acquired, the at least one side of the current block including at least one of a top side, a top-right side, a left side, or a bottom-left side.</p><p id="p-0069" num="0068">The neighbouring reference sample set of the current block is determined according to the acquired reference sample.</p><p id="p-0070" num="0069">Here, the at least one side of the current block may be the top side (also referred to as a top line), may also be the top-right side (also referred to as a top-right line), or the left side (also referred to as a left column), or the bottom-left side (also referred to as a bottom-left column), and even may be a combination of two sides, such as the top side and the left side, which is not limited in the embodiment of the present disclosure.</p><p id="p-0071" num="0070">Further, in some embodiments, if the at least one side of the current block is the left side and/or the top side, for S<b>301</b>, the operation that a neighbouring reference sample set of a current block is determined may include the following operations.</p><p id="p-0072" num="0071">The reference sample neighbouring to the at least one side of the current block is acquired, the at least one side including the top side and/or the left side.</p><p id="p-0073" num="0072">The neighbouring reference sample set of the current block is determined according to the acquired reference sample.</p><p id="p-0074" num="0073">Here, the at least one side of the current block may include the left side of the current block and/or the top side of the current block, namely the at least one side of the current block may refer to the top side of the current block, or may refer to the left side of the current block, or may even refer to the top side and left side of the current block. No specific limits are made in the embodiment of the present disclosure.</p><p id="p-0075" num="0074">Further, in some embodiments, for S<b>301</b>, the operation that a neighbouring reference sample set of a current block is determined may include the following operations.</p><p id="p-0076" num="0075">First filtering processing is performed on the reference sample neighbouring to the at least one side of the current block to determine a reference sample neighbouring to the at least one side.</p><p id="p-0077" num="0076">The neighbouring reference sample set of the current block is formed according to the acquired reference sample.</p><p id="p-0078" num="0077">Furthermore, in some embodiments, the method may further include the following operation.</p><p id="p-0079" num="0078">The first filtering processing includes down-sampling filtering or low-pass filtering.</p><p id="p-0080" num="0079">It is to be noted that, when both a left-side neighbouring region and a top-side neighbouring region are effective regions, the neighbouring reference sample set may be obtained by filtering a reference sample neighbouring to the left side of the current block and a reference sample neighbouring to the top side of the current block. When the left-side neighbouring region is an effective region, and the top-side neighbouring region is an ineffective region, the neighbouring reference sample set may be obtained by filtering a reference sample neighbouring to the left side of the current block. When the left-side neighbouring region is an ineffective region, and the top-side neighbouring region is an effective region, the neighbouring reference sample set may be obtained by filtering a reference sample neighbouring to the top side of the current block. The filtering may refer to down-sampling filtering, or may refer to low-pass filtering, which is not specifically limited in the embodiment of the present disclosure.</p><p id="p-0081" num="0080">In practical applications, during prediction of the current block, a top block and a left block of the current block are already coded; a reference sample of the MIP technology may be a reconstructed values of a reference sample in the previous line, neighbouring to the current block and a reconstructed value of a reference sample in the left column, neighbouring to the current block, the reference sample of the current block may be obtained from reference samples respectively corresponding to the top side and the left side of the current block. In <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, a diagram of positions of reference samples according to an embodiment of the present disclosure is shown. In <figref idref="DRAWINGS">FIG. <b>4</b>A</figref>, when both the left-side neighbouring region and the top-side neighbouring region are effective regions, the reference samples corresponding to the top side of the current block are samples filled with gray, which may be represented by refT. The reference samples corresponding to the left side of the current block are samples filled with slashes, which may be represented by refL. Thus, the reference samples of the current block may include refT and refL, and the neighbouring reference sample set is obtained by filtering refT and refL It is important to note that ineffective positions (e.g., boundaries of a picture) may be filled by the same method as that of acquiring reference samples in the traditional intra prediction technology.</p><p id="p-0082" num="0081">For the MIP technology, the current block may be classified into three types according to the size, which may be recorded with mipSizeld. Specifically, a different type of the current block correspond to a different number of sample points included in a neighbouring reference sample set and a different number of matrix multiplication output sample points.</p><p id="p-0083" num="0082">Assuming that the current block is a 4&#xd7;4 picture block, mipSizeId=0, then its input reference sample set involves two samples selected for each side, the number of matrix multiplication input sample points is four, and a 4&#xd7;4 MIP block is output.</p><p id="p-0084" num="0083">Assuming that the current block is a 4&#xd7;N, N&#xd7;4, or 8&#xd7;8 picture block (where N=8, 16, 32, and 64), mipSizeId=1, then its input reference sample set involves four samples selected for each side, the number of matrix multiplication input sample points is eight, and a 4&#xd7;4 MIP block is output.</p><p id="p-0085" num="0084">Assuming that the current block is a picture block of other size, mipSizeId=2, then its input reference sample set involves fourth samples selected for each side, the number of matrix multiplication input sample points is seven, and an 8&#xd7;8 MIP block is output.</p><p id="p-0086" num="0085">Thus, since the sum of the width and height of the current block is greater than the number of matrix multiplication input sample points, in order to obtain a sample of the number of the input sample points, down-sampling processing on the obtained reference samples (including refT and refL) is required, to obtain the neighbouring reference sample set.</p><p id="p-0087" num="0086">Further, in some embodiments, the operation that the neighbouring reference sample set of the current block is determined according to the acquired reference sample may include the following operations.</p><p id="p-0088" num="0087">Sampling positions of the reference samples are determined based on the at least one side of the current block.</p><p id="p-0089" num="0088">Reference samples corresponding to the sampling positions are selected from the acquired reference samples, the selected parameter samples form the neighbouring reference sample set.</p><p id="p-0090" num="0089">Furthermore, the operation that sampling positions of the reference samples are determined based on the at least one side of the current block may include the following operation.</p><p id="p-0091" num="0090">Down-sampling processing is performed on the at least one side of the current block to determine the sampling positions.</p><p id="p-0092" num="0091">It is to be noted that reference samples in the number of the boundarySize need to be respectively sampled on each reference side (including the top side and the left side) of the current block, and a value of boundarySize is related to mipSizeld of the current block.</p><p id="p-0093" num="0092">Specifically, for reference samples refS, the number (i.e., a length of a side of the current block) is nTbS, the number of reference samples that need to be down-sampled here is boundarySize. A sampling rate of each reference side may be represented by bDwn, which may be calculated according to formula (A). In addition, among the reference samples refS, every bDwn reference samples are subjected to an average operation. Each obtained average value serves as a sample point of the reference samples redS which may be calculated according to formula (2). Here, S may be substituted with W and H respectively, where W represents the top side, and H represents the left side.</p><p id="p-0094" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>b</i>Dwn=<i>n</i>Tbs/boundarySize&#x2003;&#x2003;(1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0095" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>red<i>S</i>[<i>x</i>]=(&#x3a3;<sub>i=0</sub><sup>bDwn&#x2212;1</sup>ref<i>S</i>[<i>x&#xd7;b</i>Dwn+<i>i</i>]+(1&#x3c;&#x3c;(Log 2(<i>b</i>Dwn)&#x2212;1)))&#x3e;&#x3e;Log 2(<i>b</i>Dwn)&#x2003;&#x2003;(2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0096" num="0093">After the down-sampling processing according to formula (1) and formula (2), two parts of reference samples may be obtained: top-side reference samples redT obtained by down-sampling top-side reference samples refT of the current block, and left-side reference samples redL obtained by down-sampling left-side reference samples refL of the current block, as shown in <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>. In <figref idref="DRAWINGS">FIG. <b>4</b>B</figref>, taking a 4&#xd7;4 current block as an example, the redL obtained by down-sampling the left side includes two reference samples, namely a reference sample 1 and a reference sample 2; the redT obtained by down-sampling the top side includes two reference samples, namely a reference sample 3 and a reference sample 4. Thus, the neighbouring reference sample set of the current block includes four reference samples.</p><p id="p-0097" num="0094">For the MIP technology, in addition to obtaining the type mipSizeld of the current block, a bitdepth value (which may be represented by BitDepth) corresponding to a to-be-predicted colour component of the current block is also required. Assuming that the to-be-predicted colour component is a luma component, a luma bitdepth of the current block may be obtained; or, assuming that the to-be-predicted colour component is a chroma component, a chroma bitdepth of the current block may be obtained, so that the preset parameter value of the current block is obtained.</p><p id="p-0098" num="0095">Further, in some embodiments, for S<b>301</b>, the operation that a preset parameter value corresponding to the current block is determined may include the following operations.</p><p id="p-0099" num="0096">A bitdepth value corresponding to a to-be-predicted colour component of the current block is determined.</p><p id="p-0100" num="0097">A shift is performed on 1 by the bitdepth value minus 1 to obtain the preset parameter value.</p><p id="p-0101" num="0098">That is, the preset parameter value may be represented as 1&#x3c;&#x3c;(BitDepth-1) after the BitDepth corresponding to the to-be-predicted colour component of the current block is acquired.</p><p id="p-0102" num="0099">Thus, the obtained neighbouring reference sample set and the preset parameter value of the current block may be buffered to construct an input reference sample set.</p><p id="p-0103" num="0100">In S<b>301</b> the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set.</p><p id="p-0104" num="0101">It is to be rioted that, after the neighbouring reference sample set is obtained, an initial input reference sample set may be constructed first; one bit is added at the end of an initial buffer to buffer the preset parameter value to obtain an input reference sample set, which facilitates the subsequent construction of an input sample matrix.</p><p id="p-0105" num="0102">In some embodiments, for S<b>302</b>, the operation that the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set may include the following operations.</p><p id="p-0106" num="0103">The neighbouring reference sample set is buffered to obtain an initial input reference sample set.</p><p id="p-0107" num="0104">The preset parameter value is buffered by using a data unit after the initial input reference sample set to obtain the input reference sample set.</p><p id="p-0108" num="0105">Further, for the construction of the initial input reference sample set, there is a difference between an encoder side and a decoder side, which is substantially related to a manner of determining a transposition processing indication flag (which may be represented by isTransposed).</p><p id="p-0109" num="0106">When applied to the encoder side, in some embodiments, the operation that the neighbouring reference sample set is buffered to obtain an initial input reference sample set may include the following operations.</p><p id="p-0110" num="0107">A value of a transposition processing indication flag is determined by using a Rate Distortion Optimization (RDO) manner.</p><p id="p-0111" num="0108">When the value of the transposition processing indication flag is equal to 0, a reference sample is stored in a buffer, such that a reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to the left side of the current block in the neighbouring reference sample set, and the buffer is determined as the initial input reference sample set. Or, when the value of the transposition processing indication flag is equal to 1, the reference sample is stored in a buffer, such that the reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored after the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, transposition processing is performed on the buffer, and the transposed buffer is determined as the initial input reference sample set.</p><p id="p-0112" num="0109">It is to be noted that, the value of the transposition processing indication flag may be determined by RDO. For example, a first cost value when transposition processing is performed and a second cost value when transposition processing is not performed are calculated respectively; if the first cost value is less than the second cost value, it may be determined that the value of the transposition processing indication flag is equal to 1, then reference samples corresponding to the top side in the neighbouring reference sample set may be stored after reference samples corresponding to the left side in the neighbouring reference sample set, or a reference sample corresponding to the left side in the neighbouring reference sample set may be stored ahead of a reference sample corresponding to the top side of the current block in the neighbouring reference sample set, that is, transposition processing is required; if the first cost value is no less than the second cost value, it may be determined that the value of the transposition processing indication flag is equal to 0, then the reference sample corresponding to the top side of the current block in the neighbouring reference sample set may be stored ahead of the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, or the reference sample corresponding to the left side of the current block in the neighbouring reference sample set may be stored after the reference sample corresponding to the top side of the current block in the neighbouring reference sample set, that is, transposition processing is not required.</p><p id="p-0113" num="0110">It is also to be noted that, on the encoder side, the determined value of the transposition processing indication flag needs to be written in a bitstream to facilitate subsequent parsing processing on the decoder side.</p><p id="p-0114" num="0111">When applied to the decoder side, in some embodiments, the operation that the neighbouring reference sample set is buffered to obtain an initial input reference sample set may include the following operations.</p><p id="p-0115" num="0112">A bitstream is parsed to obtain a value of a transposition processing indication flag.</p><p id="p-0116" num="0113">When the value of the transposition processing indication flag is equal to 0, a reference sample is stored in a buffer, such that a reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to the left side of the current block in the neighbouring reference sample set, and the buffer is determined as the initial input reference sample set.</p><p id="p-0117" num="0114">When the value of the transposition processing indication flag is equal to 1, reference samples are stored in a buffer, such that reference samples corresponding to the top side in the neighbouring reference sample set is stored after reference samples corresponding to the left side in the neighbouring reference sample set, transposition processing is performed on the buffer, and the transposed buffer is determined as the initial input reference sample set.</p><p id="p-0118" num="0115">It is to be noted that on the decoder side, the value of the transposition processing indication flag may be directly obtained by parsing the bitstream; then, it is determined whether to perform transposition processing on the buffer according to the value of the transposition processing indication flag.</p><p id="p-0119" num="0116">That is, after the value of the transposition processing indication flag (isTransposed) is determined, assuming that the buffer may be represented by pTemp, when isTransposed is 0, all reference samples redT corresponding to the top side are stored in pTemp first, and all reference samples redL corresponding to the left side are stored from a next bit immediately following all stored redT on. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>A</figref>, still taking a 4&#xd7;4 current block as an example, redL includes a reference sample 1 and a reference sample 2, and redT includes a reference sample 3 and a reference sample 4; thus, the buffer order in pTemp is the reference sample 3, the reference sample 4, the reference sample 1, and the reference sample 2. Since the reference samples corresponding to the top side of the current block are all stored ahead of the reference samples corresponding to the left side of the current block, transposition is omitted here, and the resulting buffer is the initial input reference sample set.</p><p id="p-0120" num="0117">When isTransposed is 1, all reference samples redL corresponding to the left side are stored in pTemp first, and all reference samples redT corresponding to the top side are stored from a next bit immediately following all stored redL on. As shown in <figref idref="DRAWINGS">FIG. <b>5</b>B</figref>, still taking a 4&#xd7;4 current block as an example, redL includes a reference sample 1 and a reference sample 2, and redT includes a reference sample 3 and a reference sample 4; thus, the buffer order in pTemp is the reference sample 1, the reference sample 2, the reference sample 3, and the reference sample 4. Since the reference samples corresponding to the top side are all stored after the reference samples corresponding to the left side, transposition is required here, and the transposed buffer is determined as the initial input reference sample set.</p><p id="p-0121" num="0118">Thus, after the initial input reference sample set is obtained, a data unit may be expanded after the initial input reference sample set. The data unit is configured to buffer a preset parameter value, i.e., to store 1&#x3c;&#x3c;(BitDepth&#x2212;1), as shown in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>. In <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>, stilling taking a 4&#xd7;4 current block as an example, four values are stored in the initial input reference sample set, namely reference samples after down-sampling of the reference samples. In the embodiment of the present disclosure, five values are stored in the input reference sample set. i.e., in addition to the reference samples obtained by the down-sampling of the four reference samples, a preset parameter value is further stored.</p><p id="p-0122" num="0119">In S<b>303</b>, an input sample matrix is determined by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0123" num="0120">It is to be noted that input samples are matrix vectors to be subjected to matrix multiplication. The current solution is determined by an initial buffer (represented by pTemp), the type (represented by mipSizeId) of current block, a bitdepth value (represented by BitDepth) corresponding to a to-be-predicted colour component, and the number of input samples, and finally an x<sup>th </sup>input sample (represented by P[x]) in the input sample matrix is obtained. When mipSizeId=0 or 1, a sample at 0<sup>th </sup>position of pTemp needs to be subtracted from 1&#x3c;&#x3c;(BitDepth&#x2212;1) to be P[0], and a sample corresponding to each of other positions need to be subtracted from the sample at the 0<sup>th </sup>position of pTemp to be P[x]. Details are as follows.</p><p id="p-0124" num="0000"><maths id="MATH-US-00001" num="00001"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>{</mo>     <mtable>      <mtr>       <mtd>        <mrow>         <mrow>          <mi>p</mi>          <mo>[</mo>          <mn>0</mn>          <mo>]</mo>         </mrow>         <mo>=</mo>         <mrow>          <mrow>           <mi>pTemp</mi>           <mo>[</mo>           <mn>0</mn>           <mo>]</mo>          </mrow>          <mo>-</mo>          <mrow>           <mo>(</mo>           <mrow>            <mn>1</mn>            <mo>&#x2062;</mo>            <mrow>             <mo>&#xf761;</mo>             <mrow>              <mo>(</mo>              <mrow>               <mi>BitDepth</mi>               <mo>-</mo>               <mn>1</mn>              </mrow>              <mo>)</mo>             </mrow>            </mrow>           </mrow>           <mo>)</mo>          </mrow>         </mrow>        </mrow>       </mtd>      </mtr>      <mtr>       <mtd>        <mrow>         <mrow>          <mi>p</mi>          <mo>[</mo>          <mi>x</mi>          <mo>]</mo>         </mrow>         <mo>=</mo>         <mrow>          <mrow>           <mi>pTemp</mi>           <mo>[</mo>           <mi>x</mi>           <mo>]</mo>          </mrow>          <mo>-</mo>          <mrow>           <mi>pTemp</mi>           <mo>[</mo>           <mn>0</mn>           <mo>]</mo>          </mrow>         </mrow>        </mrow>       </mtd>      </mtr>     </mtable>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>3</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0125" num="0121">When mipSizeId=2, a first position of the initial buffer pTemp may be ignored, and a value sample corresponding to each of other positions is subtracted from the sample corresponding to the 0<sup>th </sup>position, to be stored at a previous position. Details are as follows.</p><p id="p-0126" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>p</i>[<i>x</i>]=<i>p</i>Temp[<i>x+</i>1]&#x2212;<i>p</i>Temp[0]&#x2003;&#x2003;(4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0127" num="0122">As shown in <figref idref="DRAWINGS">FIG. <b>6</b>A</figref>, still taking a 4&#xd7;4 current block as an example, four values are stored in the initial buffer, and the number of input samples is four, then four input samples may be determined according to formulas (3) and (4), which may be represented by p[x], where x=0, 1, 2, and 3. Thus, a 1&#xd7;4 input sample matrix is formed. However, in the current solution, the derivation process of matrix multiplication input samples needs to be related to the type mipSizeld of current block, which makes the derivation process complicated and has a certain degree of complexity. In addition, in case where mipSizeId=0 or 1, the calculation formulas of p[0] and p[i] are different, which is not conducive to parallel processing.</p><p id="p-0128" num="0123">In the embodiment of the present disclosure, the initial buffer may be expanded to the input reference sample set, and used to store 1&#x3c;&#x3c;(BitDepth&#x2212;1), so that the derivation process of input samples is no longer related to the type mipSizeld of the current block, and the derivation process of input samples for matrix multiplication is unified. In addition, the input samples may be determined only through the input reference sample set (still represented by pTemp) and the number of input samples, so that an i<sup>th </sup>input sample (represented by p[i]) in the input sample matrix is acquired.</p><p id="p-0129" num="0124">Specifically, in some embodiments, for S<b>303</b>, the operation that an input sample matrix is determined by means of a first preset calculation model based on the input reference sample set may include the following operations.</p><p id="p-0130" num="0125">An i<sup>th </sup>input sample is calculated by means of a first preset calculation model according to a sample corresponding to a (i+1)<sup>th </sup>position and a sample corresponding to the 0<sup>th </sup>position in the input reference sample set, where i is a positive integer greater than or equal to 0 and less than N, N representing the number of elements contained in the input sample matrix.</p><p id="p-0131" num="0126">The input sample matrix is formed according to N input samples obtained by calculation.</p><p id="p-0132" num="0127">Further, in some embodiments, the operation that an i<sup>th </sup>input sample is calculated by means of a first preset calculation model may include the following operation.</p><p id="p-0133" num="0128">A subtraction operation is performed by means of the first preset calculation model to obtain the i<sup>th </sup>input sample.</p><p id="p-0134" num="0129">Furthermore, in some embodiments, the method may further include the following operations.</p><p id="p-0135" num="0130">The minuend of the subtraction operation is set to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the reference sample set; and the subtraction of the subtraction operation is set to be equal to the sample corresponding to the 0<sup>th </sup>position in the reference sample set.</p><p id="p-0136" num="0131">In other words, regardless of the type of current block, a sample at the first position, namely the 0<sup>th </sup>position, in the input reference sample set may be ignored; then a sample corresponding to each of other positions is subtracted from the sample corresponding to the 0<sup>th </sup>position, to be stored in a previous position. Here, the first preset calculation model is as shown as the following formula:</p><p id="p-0137" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>p</i>[<i>i</i>]=<i>p</i>Temp[<i>i</i>+1]&#x2212;<i>p</i>Temp[0]&#x2003;&#x2003;(5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0138" num="0132">where i=0, 1 . . . N&#x2212;1, N is the number of input samples (which may also be represented by inSize), and the number of input samples is the number of elements contained in the input sample matrix; pTemp[0] represents the sample corresponding to the 0<sup>th </sup>position, pTemp [i+1] represents the sample corresponding to the (i+1)<sup>th </sup>position, and p[i] represents the i<sup>th </sup>input sample. As such, after N input samples are obtained, an input sample matrix may be formed. As shown in <figref idref="DRAWINGS">FIG. <b>6</b>B</figref>, still taking a 4&#xd7;4 current block as an example, five values are stored in the input reference sample set, but the number of input samples is four, then regardless of the type of the current block, four input samples may be determined according to formula (5), which is represented by p[i], where i=0, 1, 2, and 3; and thus, a 1&#xd7;4 input sample matrix is formed.</p><p id="p-0139" num="0133">In S<b>304</b>, colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0140" num="0134">It is to be noted that after the input sample matrix is obtained, a temporary predicted value of at least one sample in the MIP block may be calculated first; then clipping processing, transposition processing, and up-sampling processing are carried out in sequence to finally obtain the prediction block of the current block.</p><p id="p-0141" num="0135">It is also to be noted that, assuming that a to-be-predicted colour component is a luma component, the current block may be a present luma block, and finally a luma prediction block of the current luma block may be obtained, in which a luma predicted value of at least one sample is provided; or assuming that the to-be-predicted colour component is a chroma component, then the current block may be a current chroma block, and finally a chroma prediction block of the present chroma block may be obtained, in which a chroma predicted value of at least one sample is provided. No limits are made thereto in the embodiment of the present disclosure.</p><p id="p-0142" num="0136">In some embodiments, for S<b>304</b>, the step that colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block, as shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, may include the following steps.</p><p id="p-0143" num="0137">In S<b>401</b>, an MIP block of the current block is obtained according to the input sample matrix, the MIP block including a predicted sample at at least part of sample positions in the current block.</p><p id="p-0144" num="0138">It is to be noted that after the input sample matrix is obtained, a weight matrix (represented by mWeight), a shift factor (represented by sW) and an offset factor (represented by fO) corresponding to the current block may also be obtained; then as shown in <figref idref="DRAWINGS">FIG. <b>8</b></figref>, a temporary predicted value (represented by predMip) of at least one sample in the MIP block may be calculated by means of a second preset prediction model to obtain the MIP block.</p><p id="p-0145" num="0139">Further, in some embodiments, for S<b>401</b>, the operation that the MIP block of the current block is obtained according to the input sample matrix may include the following operations.</p><p id="p-0146" num="0140">A weight matrix, a shift factor, and an offset factor corresponding to the current block are acquired.</p><p id="p-0147" num="0141">Matrix multiplication processing is performed on the input sample matrix, the weight matrix, the shift factor, and the offset factor by means of a second preset calculation model to calculate the MIP block.</p><p id="p-0148" num="0142">That is, in the encoder or the decoder, a weight matrix table is pre-established, and the weight matrix table is stored in the encoder or decoder. Thus, according to the current block type mipSizeId and the MIP mode modeld, a weight matrix mWeight[x][y] that the current block needs to use may be determined by looking up the table.</p><p id="p-0149" num="0143">In addition, in the encoder or the decoder, a shift factor table is also pre-established, as shown in Table 1, and an offset factor table, as shown in Table 2. And the shift factor table and the offset factor table are also stored in the encoder or decoder. Thus, according to the type of current block mipSizeld and the MIP mode modeld, the shift factor sW and the offset factor fO that need to be used for the current block may also be determined by looking up the tables.</p><p id="p-0150" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="224pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>modeId</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="14pt" align="center"/><colspec colname="3" colwidth="14pt" align="center"/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="center"/><colspec colname="9" colwidth="14pt" align="center"/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="14pt" align="center"/><tbody valign="top"><row><entry>mipSizeId</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry>8</entry><entry>9</entry><entry>10</entry><entry>11</entry><entry>12</entry><entry>13</entry><entry>14</entry><entry>15</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row><row><entry>0</entry><entry>6</entry><entry>5</entry><entry>5</entry><entry>5</entry><entry>5</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>5</entry><entry>6</entry><entry>5</entry><entry>5</entry><entry>5</entry></row><row><entry>1</entry><entry>7</entry><entry>7</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry><entry>6</entry></row><row><entry>2</entry><entry>6</entry><entry>7</entry><entry>5</entry><entry>6</entry><entry>6</entry><entry>6</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0151" num="0000"><tables id="TABLE-US-00002" num="00002"><table frame="none" colsep="0" rowsep="0" pgwide="1"><tgroup align="left" colsep="0" rowsep="0" cols="2"><colspec colname="offset" colwidth="35pt" align="left"/><colspec colname="1" colwidth="224pt" align="center"/><thead><row><entry/><entry namest="offset" nameend="1" rowsep="1">TABLE 2</entry></row></thead><tbody valign="top"><row><entry/><entry namest="offset" nameend="1" align="center" rowsep="1"/></row><row><entry/><entry>modeId</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="14pt" align="center"/><colspec colname="3" colwidth="14pt" align="center"/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="center"/><colspec colname="9" colwidth="14pt" align="center"/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="14pt" align="center"/><tbody valign="top"><row><entry>mipSizeId</entry><entry>0</entry><entry>1</entry><entry>2</entry><entry>3</entry><entry>4</entry><entry>5</entry><entry>6</entry><entry>7</entry><entry>8</entry><entry>9</entry><entry>10</entry><entry>11</entry><entry>12</entry><entry>13</entry><entry>14</entry><entry>15</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="17"><colspec colname="1" colwidth="35pt" align="center"/><colspec colname="2" colwidth="14pt" align="char" char="."/><colspec colname="3" colwidth="14pt" align="char" char="."/><colspec colname="4" colwidth="14pt" align="center"/><colspec colname="5" colwidth="14pt" align="center"/><colspec colname="6" colwidth="14pt" align="center"/><colspec colname="7" colwidth="14pt" align="center"/><colspec colname="8" colwidth="14pt" align="char" char="."/><colspec colname="9" colwidth="14pt" align="char" char="."/><colspec colname="10" colwidth="14pt" align="center"/><colspec colname="11" colwidth="14pt" align="center"/><colspec colname="12" colwidth="14pt" align="center"/><colspec colname="13" colwidth="14pt" align="center"/><colspec colname="14" colwidth="14pt" align="center"/><colspec colname="15" colwidth="14pt" align="center"/><colspec colname="16" colwidth="14pt" align="center"/><colspec colname="17" colwidth="14pt" align="center"/><tbody valign="top"><row><entry>0</entry><entry>9</entry><entry>9</entry><entry>16</entry><entry>20</entry><entry>29</entry><entry>22</entry><entry>9</entry><entry>6</entry><entry>16</entry><entry>14</entry><entry>21</entry><entry>26</entry><entry>19</entry><entry>23</entry><entry>28</entry><entry>17</entry></row><row><entry>1</entry><entry>15</entry><entry>14</entry><entry>23</entry><entry>24</entry><entry>10</entry><entry>14</entry><entry>10</entry><entry>27</entry></row><row><entry>2</entry><entry>15</entry><entry>19</entry><entry>46</entry><entry>16</entry><entry>14</entry><entry>11</entry></row><row><entry namest="1" nameend="17" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0152" num="0144">Thus, after the type mipSizeld of the current block and the MIP mode modeld are acquired, the weight matrix mWeight[x][y], the shift factor sW, and the offset factor fO may be determined by looking up the tables, that is, the MIP block predMip[x][ ]y may be calculated. The second reset calculation model is shown below.</p><p id="p-0153" num="0000"><maths id="MATH-US-00002" num="00002"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>{</mo>     <mrow>      <mtable>       <mtr>        <mtd>         <mrow>          <mi>oW</mi>          <mo>=</mo>          <mrow>           <mrow>            <mo>(</mo>            <mrow>             <mn>1</mn>             <mo>&#x2062;</mo>             <mrow>              <mo>&#xf761;</mo>              <mrow>               <mo>(</mo>               <mrow>                <mi>sW</mi>                <mo>-</mo>                <mn>1</mn>               </mrow>               <mo>)</mo>              </mrow>             </mrow>            </mrow>            <mo>)</mo>           </mrow>           <mo>-</mo>           <mrow>            <mi>fO</mi>            <mo>&#xd7;</mo>            <mrow>             <mo>(</mo>             <mrow>              <msubsup>               <mo>&#x2211;</mo>               <mrow>                <mi>i</mi>                <mo>=</mo>                <mn>0</mn>               </mrow>               <mrow>                <mi>inSize</mi>                <mo>-</mo>                <mn>1</mn>               </mrow>              </msubsup>              <mrow>               <mi>p</mi>               <mo>[</mo>               <mi>i</mi>               <mo>]</mo>              </mrow>             </mrow>             <mo>)</mo>            </mrow>           </mrow>          </mrow>         </mrow>        </mtd>       </mtr>       <mtr>        <mtd>         <mrow>          <mrow>           <mrow>            <mrow>             <mrow>              <mrow>               <mrow>                <mi>predMip</mi>                <mo>[</mo>                <mi>x</mi>                <mo>]</mo>               </mrow>               <mo>[</mo>               <mi>y</mi>               <mo>]</mo>              </mrow>              <mo>=</mo>              <mrow>               <mo>(</mo>               <mrow>                <mo>(</mo>                <mrow>                 <mrow>                  <mo>(</mo>                  <mrow>                   <msubsup>                    <mo>&#x2211;</mo>                    <mrow>                     <mi>i</mi>                     <mo>=</mo>                     <mn>0</mn>                    </mrow>                    <mrow>                     <mi>inSize</mi>                     <mo>-</mo>                     <mn>1</mn>                    </mrow>                   </msubsup>                   <mrow>                    <mrow>                     <mrow>                      <mi>mWeight</mi>                      <mo>[</mo>                      <mi>i</mi>                      <mo>]</mo>                     </mrow>                     <mo>[</mo>                     <mrow>                      <mrow>                       <mi>y</mi>                       <mo>&#xd7;</mo>                       <mi>predSize</mi>                      </mrow>                      <mo>+</mo>                      <mi>x</mi>                     </mrow>                     <mo>]</mo>                    </mrow>                    <mo>&#xd7;</mo>                    <mrow>                     <mi>p</mi>                     <mo>[</mo>                     <mi>i</mi>                     <mo>]</mo>                    </mrow>                   </mrow>                  </mrow>                  <mo>)</mo>                 </mrow>                 <mo>+</mo>                 <mi>oW</mi>                </mrow>                <mo>)</mo>               </mrow>              </mrow>             </mrow>             <mo>&#xf762;</mo>            </mrow>            <mo>&#x2062;</mo>            <mi>sW</mi>           </mrow>           <mo>)</mo>          </mrow>          <mo>+</mo>          <mrow>           <mi>pTemp</mi>           <mo>[</mo>           <mn>0</mn>           <mo>]</mo>          </mrow>         </mrow>        </mtd>       </mtr>      </mtable>      <mo>,</mo>     </mrow>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>6</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0154" num="0145">where [x][y] represents position coordinates of a sample, x represents a horizontal direction, and y represents a vertical direction, inSize represents the number of input samples, and predSize represents a side length of the MIP block predMip. Here, predSize is only related to the type mipSizeld of the current block; when mipSizeId=0 or 1, the output MIP block is 4&#xd7;4, then predSize is equal to 4; when mipSizeId=2, the output MIP block is 8&#xd7;8, so predSize is equal to 8. Thus, according to the above formula (6), the temporary predicted value of at least one sample in the MIP block predMip may be calculated to obtain the MIP block.</p><p id="p-0155" num="0146">In S<b>402</b>, clipping processing is performed on the predicted sample in the MIP block to obtain the MIP block of the current block.</p><p id="p-0156" num="0147">It is to be noted that, after the temporary predicted value of at least one sample in the MIP block is obtained, the temporary predicted value of at least one sample in the MIP block may be subjected to clipping processing. Specifically, if the temporary predicted value is less than 0, it can be set to 0; if the temporary predicted value is greater than (1&#x3c;&#x3c;BitDepth)&#x2212;1, then it can be set to (1&#x3c;BitDepth)&#x2212;1, so that a range of the predicted value can be clippinged between 0 and (1&#x3c;&#x3c;BitDepth)&#x2212;1.</p><p id="p-0157" num="0148">In this way, after the MIP block is subjected to clipping processing, the predicted value of at least one sample in the MIP block may be obtained, and the range of the predicted value is between 0 and (1&#x3c;&#x3c;BitDepth)&#x2212;1; and then it is determined whether transposition processing is required according to the transposition flag bit isTransposed, so that the final MIP block is determined.</p><p id="p-0158" num="0149">In S<b>403</b>, it is judged whether to perform transposition processing on the MIP block.</p><p id="p-0159" num="0150">In S<b>404</b>, when a judgment result is &#x201c;yes&#x201d;, transposition processing is performed on the predicted sample in the MIP block, and the transposed MIP block is determined as the MIP block of the current block.</p><p id="p-0160" num="0151">In S<b>405</b>, when a judgment result is &#x201c;no&#x201d;, transposition processing is performed on the predicted sample in the MIP block, and the transposed MIP block is determined as the MIP block of the current block.</p><p id="p-0161" num="0152">In S<b>406</b>, it is determined whether the size of the MIP block is the same as the size of the current block.</p><p id="p-0162" num="0153">When applied to the encoder side, in some embodiments, for S<b>403</b>, the operation that whether to perform transposition processing on the MIP block is judged may include the following operations.</p><p id="p-0163" num="0154">A first cost value when transposition processing is performed on the MIP block and a second cost value when transposition processing is not performed on the MIP block are respectively calculated by using an RDO manner.</p><p id="p-0164" num="0155">When the first cost value is less than the second cost, it is determined to perform transposition processing on the MIP block; or when the first cost value is no less than the second cost, it is determined not to perform transposition processing on the MIP block.</p><p id="p-0165" num="0156">When applied to the decoder side, in some embodiments, for S<b>403</b>, the operation that whether to perform transposition processing on the MIP block is judged may include the following operations.</p><p id="p-0166" num="0157">A bitstream is parsed to obtain a value of a transposition processing indication flag.</p><p id="p-0167" num="0158">It is judged whether to perform transposition processing on the MIP block according to the value of the transposition processing.</p><p id="p-0168" num="0159">It is to be noted that the transposition processing indication flag is represented by isTransposed, whether the MIP block needs to be transposed may be judged according to the value of isTransposed. Specifically, on the encoder side, if the first cost value is less than the second cost value, the value of isTransposed is 1, then it can be determined that the MIP block needs to be transposed; or if the first cost value is no less than the second cost value, the value of isTransposed is 0, then it can be determined that the MIP block does not need to be transposed. On the decoder side, the value of the transposition processing indication flag may be obtained by parsing the bitstream; if the value of isTransposed is parsed to be 1, then it can be determined that the MIP block needs to be transposed; or, if the value of isTransposed is parsed to be 0, it can be determined that the MIP block does not need to be transposed.</p><p id="p-0169" num="0160">More specifically, when isTransposed is 0, it indicates that the MIP block does not need to be transposed, then the MIP block predMip may be directly used to perform subsequent steps, i.e., to perform S<b>406</b> and judge whether the size of the MIP block is the same as the size of the current block; when isTransposed is 0, it indicates that the MIP block needs to be transposed, then transposition processing may be performed with the following formula:</p><p id="p-0170" num="0000"><maths id="MATH-US-00003" num="00003"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>{</mo>     <mtable>      <mtr>       <mtd>        <mrow>         <mrow>          <mrow>           <mi>predTemp</mi>           <mo>[</mo>           <mi>y</mi>           <mo>]</mo>          </mrow>          <mo>[</mo>          <mi>x</mi>          <mo>]</mo>         </mrow>         <mo>=</mo>         <mrow>          <mrow>           <mi>predMip</mi>           <mo>[</mo>           <mi>x</mi>           <mo>]</mo>          </mrow>          <mo>[</mo>          <mi>y</mi>          <mo>]</mo>         </mrow>        </mrow>       </mtd>      </mtr>      <mtr>       <mtd>        <mrow>         <mi>predMip</mi>         <mo>=</mo>         <mi>predTemp</mi>        </mrow>       </mtd>      </mtr>     </mtable>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>7</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0171" num="0161">Thus, according to formula (7), the transposed MIP block may be obtained after the MIP block is subjected to the transposition processing, and serves as an MIP block. Then. S<b>406</b> is also performed to judge whether the size of the MIP block is the same as the size of the current block.</p><p id="p-0172" num="0162">In S<b>407</b>, when a size of the MIP block is different from a size of the current block, second filtering processing is performed on the MIP block to obtain a prediction block of the current block.</p><p id="p-0173" num="0163">In S<b>408</b>, when the size of the MIP block is the same as the size of the current block, a prediction block of the current block is set to be equal to the MIP block, the prediction block containing a predicted sample at all sample positions in the current block.</p><p id="p-0174" num="0164">Further, the second filtering processing may include up-sampling filtering or low-pass filtering.</p><p id="p-0175" num="0165">It is be noted that after the MIP block is obtained, the size of the MIP block only includes two types: a 4&#xd7;4 MIP block and an 8&#xd7;8 MIP block, and thus the size of the current block may be the same as or different from the size of the MIP block. In other words, the current block may not be filled with the sample corresponding to the MIP block, resulting in that an up-sampling operation on the MIP block may be required for generation of a final predicted value, that is, by judging whether the size of the MIP block is the same as the size of the current block, it may be determined whether to perform up-sampling processing on the MIP block.</p><p id="p-0176" num="0166">Specifically, when the size of the MIP block is the same as the size of the current block, that is, the width and height of the MIP block are the same as those of the current block, indicating that the MIP block does not need to be up-sampled, and then the current block may be filled with the MIP block directly, that is, there are no vacant samples in the filled current block, and a predicted value of each sample in the current block may be directly set to a predicted value of each sample in the MIP block, as shown below.</p><p id="p-0177" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>predSamples[<i>x</i>][<i>y</i>]=predMip[<i>x</i>][<i>y</i>]&#x2003;&#x2003;(8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0178" num="0167">where [x][y] represents position coordinates of a sample, x represents a horizontal direction, y represents a vertical direction, predSamples[x][y] represents a predicted value corresponding to a sample at position coordinates [x][y] in the current block, predMip[x][y] represents a predicted value corresponding to a sample at position coordinates [x][y] in the MIP block. Thus, according to the formula (8), the MIP block predMip[x][y] may be directly used as the prediction block predSamples [x][y] of the current block.</p><p id="p-0179" num="0168">When the size of the MIP block is different from the size of the current block, that is, one of the width and height of the MIP block is different from that of the current block, indicating that the MIP block needs to be up-sampled, and after the up-sampling processing, the prediction block of the current block may be obtained.</p><p id="p-0180" num="0169">Specifically, in some embodiments, for S<b>407</b>, when the second filtering processing refers to up-sampling filtering, the method may further include the following operations.</p><p id="p-0181" num="0170">A horizontal up-sampling factor and a vertical up-sampling factor corresponding to the current block are determined.</p><p id="p-0182" num="0171">According to the MIP block, the horizontal up-sampling factor and the vertical up-sampling factor, a predicted value of a to-be-filled sample position in the current block is determined by means of a third preset calculation model to obtain a prediction block of the current block, the to-be-filled sample position being a sample position in the current block different from a sample position in the MIP block.</p><p id="p-0183" num="0172">It is to be noted that when the size of the MIP block is different from the size of the current block, vacant samples exist in the current block after being filled, then the MIP block predMip[x][y] needs to be subjected to up-sampling in a linear interpolation mode.</p><p id="p-0184" num="0173">Here, assuming that both the width and height of the MIP block are predSize, the width of the current block is nTbW, and the height of the current block is nTbH, then according to the side length predSize of the MIP block and the width nTbW of the current block, the horizontal up-sampling factor (represented by upHor) may be calculated. Similarly, according to the side length predSize of the MIP block and the height nTbH of the current block, the vertical up-sampling factor (represented by upVer) may be calculated. The specific calculation formula is as follows.</p><p id="p-0185" num="0000"><maths id="MATH-US-00004" num="00004"><math overflow="scroll"> <mtable>  <mtr>   <mtd>    <mrow>     <mo>{</mo>     <mtable>      <mtr>       <mtd>        <mrow>         <mi>upHor</mi>         <mo>=</mo>         <mrow>          <mi>nTbW</mi>          <mo>/</mo>          <mi>predSize</mi>         </mrow>        </mrow>       </mtd>      </mtr>      <mtr>       <mtd>        <mrow>         <mi>upVer</mi>         <mo>=</mo>         <mrow>          <mi>nTbH</mi>          <mo>/</mo>          <mi>predSize</mi>         </mrow>        </mrow>       </mtd>      </mtr>     </mtable>    </mrow>   </mtd>   <mtd>    <mrow>     <mo>(</mo>     <mn>9</mn>     <mo>)</mo>    </mrow>   </mtd>  </mtr> </mtable></math></maths></p><p id="p-0186" num="0174">Since the MIP block cannot fill up the current block, the current block needs to be filled according to the horizontal up-sampling factor upHor and the vertical up-sampling factor upVer, that is, the up-sampling operation is performed. The method for filling the corresponding position is as follows.</p><p id="p-0187" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>predSamples(<i>x+</i>1)&#xd7;upHor&#x2212;1][(<i>y+</i>1)&#xd7;upVer&#x2212;1]=predMip[<i>x</i>][<i>y</i>]&#x2003;&#x2003;(10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0188" num="0175">where x=0, 1, . . . , vnTbW&#x2212;1; y=0, 1, . . . , nTbH&#x2212;1.</p><p id="p-0189" num="0176">Here, the specific up-sampling manner is to first fill to the positions corresponding to the previous line of the current block predSamples[x][&#x2212;1] with the upper reference samples refT, and then fill the positions predSamples[&#x2212;1][y] corresponding to the left column of the current block with the left reference samples refL of the left side. Then, according to formula (10), for the sample positions to be filled in the current block, for example, a vacant position between the predicted values at the corresponding positions, or a vacant position between the reference samples and the predicted value filling the corresponding position, etc., horizontal interpolation is performed followed by vertical interpolation, so that an up-sampling result predSamples[x][y] of the current block is obtained finally. The predSamples[x][y] is a predicted value of the current block according to the MIP mode.</p><p id="p-0190" num="0177">In the embodiment of the present disclosure, when the method for colour component prediction is applied to the encoder side, the method for colour component prediction can be used to calculate the predicted value of at least one sample in the current block. A residual corresponding to the at least one sample is calculated according to a difference value between a true value and a predicted value of the at least one sample in the current block, and the obtained residual is written in a bitstream. In addition, after the transposition processing indication flag (isTransposed) is obtained, the value of isTransposed also needs to be written in the bitstream, and then the bitstream is transmitted from the encoder side to the decoder side. Correspondingly, when the method for colour component prediction is applied to the decoder side, the value of isTransposed may be determined by parsing the bitstream, and then whether transposition processing is required is determined. In addition, the method for colour component prediction may also be used to calculate the predicted value of at least one sample in the current block, the residual corresponding to the at least one sample may be directly obtained by parsing the bitstream, and thus, according to the predicted value and residual of the at least one sample in the current block, the true value of the at least one sample in the current block can be obtained.</p><p id="p-0191" num="0178">The embodiment provides a method for colour component prediction, which is applied to an encoder or a decoder. A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample; the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set; an input sample matrix is determined by means of a first preset calculation model according to the reference sample set; and colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block. Thus, in the solutions of the embodiments of the present disclosure, judgment of the type of current block is omitted, the time complexity is reduced, and hardware implementation is facilitated; in addition, the input sample matrix may be determined based on the input reference sample set and the first preset calculation model, while the derivation process of the input samples for matrix multiplication is also simplified, so that the derivation process of the input sample matrix is unified, and the solutions of the embodiments of the present disclosure no longer depend on the type of the current block and can further realize parallel processing, thereby reducing the calculation complexity.</p><p id="p-0192" num="0179">Based on the same inventive concept of the abovementioned embodiments, referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, a composition structure diagram of an encoder <b>90</b> according to an embodiment of the present disclosure is shown. As shown in <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoder <b>90</b> includes a first determination unit <b>901</b>, a first buffer unit <b>902</b>, and a first prediction unit <b>903</b>.</p><p id="p-0193" num="0180">The first determination unit <b>901</b> is configured to determine a neighbouring reference sample set of a current block, and determine a preset parameter value corresponding to the current block, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0194" num="0181">The first buffer unit <b>902</b> is configured to buffer the neighbouring reference sample set and the preset parameter value to construct an input reference sample set.</p><p id="p-0195" num="0182">The first determination unit <b>901</b> is further configured to determine an input sample matrix by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0196" num="0183">The first prediction unit <b>903</b> is configured to perform colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0197" num="0184">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoder <b>90</b> may further include a first acquisition unit <b>904</b>, configured to acquire a reference sample neighbouring to at least one side of the current block, the at least one side of the current block including at least one of a top side, a top-right side, a left side, or a bottom-left side.</p><p id="p-0198" num="0185">The first determination unit <b>901</b> is configured to determine a neighbouring reference sample set of the current block according to the acquired reference sample.</p><p id="p-0199" num="0186">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoder <b>90</b> may further include a first processing unit <b>905</b>, configured to perform first filtering processing on a reference sample neighbouring to at least one side of the current block to determine reference sample neighbouring to the at least one side.</p><p id="p-0200" num="0187">The first determination unit <b>901</b> is configured to form the neighbouring reference sample set of the current block according to the acquired reference sample.</p><p id="p-0201" num="0188">In the above solution, the first filtering processing includes down-sampling filtering or low-pass filtering.</p><p id="p-0202" num="0189">In the above solution, the first acquisition unit <b>904</b> is further configured to determine a bitdepth value corresponding to a to-be-predicted colour component of the current block.</p><p id="p-0203" num="0190">The first processing unit <b>905</b> is further configured to perform a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value.</p><p id="p-0204" num="0191">In the above solution, the first buffer unit <b>902</b> is configured to buffer the neighbouring reference sample to obtain an initial input reference sample set, and buffer the preset parameter values by using a data unit after the initial input reference sample set, to obtain the input reference sample set.</p><p id="p-0205" num="0192">In the above solution, the first determination unit <b>901</b> is further configured to determine a value of a transposition processing indication flag by using an RDO manner.</p><p id="p-0206" num="0193">The first buffer unit <b>902</b> is specifically configured to, when the value of the transposition processing indication flag is equal to 0, store a reference sample in a buffer such that a reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to the left side of the current block in the neighbouring reference sample set, and determine the buffer as the initial input reference sample set; or when the value of the transposition processing indication flag is equal to 1, store the reference sample in a buffer such that the reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored after the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, perform transposition processing on the buffer, and determine the transposed buffer as the initial input reference sample set.</p><p id="p-0207" num="0194">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoder <b>90</b> may further include a first calculation unit <b>906</b> which is configured to calculate an i<sup>th </sup>input sample by means of a first preset calculation model according to a sample corresponding to the (i+1)<sup>th </sup>position and a sample corresponding to the 0<sup>th </sup>position in the reference sample set, where i is a positive integer greater than or equal to 0 and less than N. N representing the number of elements contained in the input sample matrix.</p><p id="p-0208" num="0195">The first determination unit <b>901</b> is configured to form the input sample matrix according to N input samples obtained by calculation.</p><p id="p-0209" num="0196">In the above solution, the first calculation unit <b>906</b> is specifically perform a subtraction operation by means of the first preset calculation model to obtain the i<sup>th </sup>input sample.</p><p id="p-0210" num="0197">In the above solution, the first calculation unit <b>906</b> is specifically configured to set the minuend of the subtraction operation to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the reference sample set; and set the subtraction of the subtraction operation to be equal to the sample corresponding to the 0<sup>th </sup>position in the reference sample set.</p><p id="p-0211" num="0198">In the above solution, the first acquisition unit <b>904</b> is further configured to obtain an MIP block of the current block according to the input sample matrix, the MIP block including a predicted sample at at least part of sample positions in the current block.</p><p id="p-0212" num="0199">The first processing unit <b>905</b> is further configured to, when one of a width and a height of the MIP block is different from that of the current block, perform second filtering processing on the MIP block to obtain a prediction block of the current block; or, when both of a width and a height of the MIP block are the same as those of the current block, set a prediction block of the current block to be equal to the MIP block, the prediction block containing a predicted sample at all sample positions in the current block.</p><p id="p-0213" num="0200">In the above solution, the first acquisition unit <b>904</b> is specifically configured to perform clipping processing on the predicted sample in the MIP block to obtain the MIP block of the current block.</p><p id="p-0214" num="0201">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the encoder <b>90</b> may also include a first judgment unit <b>907</b>, which is configured to judge whether to perform transposition processing on the MIP block, and when a judgment result is &#x201c;yes&#x201d;, to perform transposition processing on the predicted sample in the MIP block, and determine the transposed MIP block as the MIP block of the current block.</p><p id="p-0215" num="0202">In the solution, the first calculation unit <b>906</b> is further configured to calculate a first cost value when transposition processing is performed on the MIP block and a second cost value when transposition processing is not performed on the MIP block.</p><p id="p-0216" num="0203">The first judgment unit <b>907</b> is specifically configured to, when the first cost value is no less than the second cost value, determine not to perform transposition processing on the MIP block.</p><p id="p-0217" num="0204">In the above solution, the second filtering processing includes up-sampling filtering or low-pass filtering.</p><p id="p-0218" num="0205">In the above solution, the first acquisition unit <b>904</b> is further configured to acquire a weight matrix, a shift factor, and an offset factor corresponding to the current block.</p><p id="p-0219" num="0206">The first calculation unit <b>906</b> is further configured to perform matrix multiplication processing on the input sample matrix, the weight matrix, the shift factor, and the offset factor by means of a second preset calculation model, to calculate the MIP block.</p><p id="p-0220" num="0207">In the above solution, when the second filtering processing is the up-sampling filtering, the first determination unit <b>901</b> is further configured to determine a horizontal up-sampling factor and a vertical up-sampling factor corresponding to the current block;</p><p id="p-0221" num="0208">The first calculation unit <b>906</b> is further configured to determine, according to the MIP block, the horizontal up-sampling factor and the vertical up-sampling factor, a predicted value of a to-be-filled sample position in the current block by means of a third preset calculation model to obtain a prediction block of the current block, the to-be-filled sample position being a sample position in the current block different from a sample position in the MIP block.</p><p id="p-0222" num="0209">It can be understood that, in the embodiment of the present disclosure, &#x201c;unit&#x201d; may be part of a circuit, part of a processor, part of a program or software and the like, of course, may also be modular and may also be non-modular. In addition, each component in the embodiment may be integrated into a processing unit, each unit may also exist independently, and two or more than two units may also be integrated into a unit. The integrated unit may be implemented in a hardware form and may also be implemented in form of software function module.</p><p id="p-0223" num="0210">When implemented in form of software function module and sold or used not as an independent product, the integrated unit may be stored in a computer-readable storage medium. Based on such an understanding, the technical solution of the embodiment substantially or parts making contributions to the conventional art or all or part of the technical solution may be embodied in form of software product, and the computer software product is stored in a storage medium, including a plurality of instructions configured to enable a computer device (which may be a personal computer, a server, a network device, etc.) or a processor to execute all or part of the steps of the method in the embodiment. The abovementioned storage medium includes: various media capable of storing program codes such as a U disk, a mobile hard disk, a ROM, a RAM, a magnetic disk or an optical disk.</p><p id="p-0224" num="0211">Thus, the embodiment of the present disclosure provides a computer storage medium, which is applied to an encoder <b>90</b>, and stores a colour component prediction program. The colour component prediction program is executed by a first processor to implement any method as described in the abovementioned embodiments.</p><p id="p-0225" num="0212">Based on the composition of the encoder <b>90</b> and the computer storage medium, referring to <figref idref="DRAWINGS">FIG. <b>10</b></figref>, a specific hardware structure example of the encoder <b>90</b> according to the embodiment of the present disclosure is shown, and may include a first communication interface <b>1001</b>, a first memory <b>1002</b>, and a first processor <b>1003</b>. Each component is coupled together through a first bus system <b>1004</b>. It can be understood that the first bus system <b>1004</b> is configured to implement connection communication between these components. The first bus system <b>1004</b> includes a data bus, and further includes a power bus, a control bus, and a state signal bus. However, for clear description, various buses in <figref idref="DRAWINGS">FIG. <b>10</b></figref> are marked as the first bus system <b>1004</b>.</p><p id="p-0226" num="0213">The first communication interface <b>1001</b> is configured to receive and send a signal in a process of receiving and sending information with another external network element.</p><p id="p-0227" num="0214">The first memory <b>1002</b> is configured to store a computer program capable of running in the first processor <b>1003</b>.</p><p id="p-0228" num="0215">The first processor <b>1003</b> is configured to run the computer program to execute the following operations.</p><p id="p-0229" num="0216">A neighbouring reference sample set of the current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0230" num="0217">The neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set.</p><p id="p-0231" num="0218">An input sample matrix is determined by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0232" num="0219">Colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0233" num="0220">It can be understood that the first memory <b>1002</b> in the embodiment of the present disclosure may be a volatile memory or a nonvolatile memory, or may include both the volatile and nonvolatile memories. The nonvolatile memory may be a ROM, a PROM, an Erasable PROM (EPROM), an EEPROM, or a flash memory. The volatile memory may be a RAM, and is used as an external high-speed cache. It is exemplarily but unlimitedly described that RAMs in various forms may be adopted, such as a Static RAM (SRAM), a Dynamic RAM (DRAM), a Synchronous DRAM (SDRAM), a Double Data Rate SDRAM (DDR SDRAM), an Enhanced SDRAM (ESDRAM), a Synchlink DRAM (SLDRAM), and a Direct Rambus RAM (DR RAM). It is to be noted that the memory of a system and method described in the disclosure is intended to include, but not limited to, memories of these and any other proper types.</p><p id="p-0234" num="0221">The first processor <b>1003</b> may be an integrated circuit chip with a signal processing capability. In an implementation process, each step of the method may be completed by an integrated logic circuit of hardware in the first processor <b>1003</b> or an instruction in a software form. The processor <b>1003</b> may be a universal processor, a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA) or another programmable logical device, discrete gate or transistor logical device and discrete hardware component. Each method, step and logical block diagram disclosed in the embodiments of the present disclosure may be implemented or executed. The universal processor may be a microprocessor or the processor may also be any conventional processor, etc. The steps of the method disclosed in combination with the embodiments of the present disclosure may be directly embodied to be executed and completed by a hardware decoding processor or executed and completed by a combination of hardware and software modules in the decoding processor. The software module may be located in a mature storage medium in this field such as a RAM, a flash memory, a ROM, a PROM or EEPROM, and a register. The storage medium is located in the first memory <b>1002</b>. The first processor <b>1003</b> reads information in the first memory <b>1002</b> and completes the steps of the method in combination with hardware.</p><p id="p-0235" num="0222">It can be understood that these embodiments described in the present disclosure may be implemented by hardware, software, firmware, middleware, a microcode or a combination thereof. In case of implementation with the hardware, the processing unit may be implemented in one or more ASICs, DSPs, DSP Devices (DSPDs), PLDs, FPGAs, universal processors, controllers, microcontrollers, microprocessors, other electronic units configured to execute the functions in the present disclosure or combinations thereof. In case of implementation with the software, the technology of the present disclosure may be implemented through the modules (for example, processes and functions) executing the functions in the present disclosure. A software code may be stored in the memory and executed by the processor. The memory may be implemented in the processor or outside the processor.</p><p id="p-0236" num="0223">Optionally, as another embodiment, the first processor <b>1003</b> is further configured to run the computer program to execute any method in the abovementioned embodiments.</p><p id="p-0237" num="0224">The embodiment provides an encoder. The encoder may include a first determination unit, a first buffer unit, and a first prediction unit. The first determination unit is configured to determine a neighbouring reference sample set of the current block and determine a preset parameter value corresponding to the current block. The first buffer unit is configured to buffer the neighbouring reference sample set and the preset parameter value to construct an input reference sample set; the first determination unit is further configured to determine an input sample matrix by means of a first preset calculation model based on the input reference sample set; and the first prediction unit is configured to perform colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block. Thus, the derivation process of input samples for matrix multiplication is simplified, the derivation process of the input sample matrix is unified, judgment on the type of the current block is omitted, the time complexity is reduced, and implementation of hardware is facilitated.</p><p id="p-0238" num="0225">Based on the same inventive concept of the abovementioned embodiments, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, a composition structure diagram of a decoder <b>110</b> according to an embodiment of the present disclosure is shown. As shown in <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> includes a second determination unit <b>1101</b>, a second buffer unit <b>1102</b>, and a second prediction unit <b>1103</b>.</p><p id="p-0239" num="0226">The second determination unit <b>1101</b> is configured to determine a neighbouring reference sample set of a current block, and determine a preset parameter value corresponding to the current block, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0240" num="0227">The second buffer unit <b>1102</b> is configured to buffer the neighbouring reference sample set and the preset parameter value to construct an input reference sample set.</p><p id="p-0241" num="0228">The second determination unit <b>1101</b> is further configured to determine an input sample matrix by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0242" num="0229">The second prediction unit <b>1103</b> is configured to perform colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0243" num="0230">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> may further include a second acquisition unit <b>1104</b>, configured to acquire a reference sample neighbouring to at least one side of the current block, the at least one side of the current block including at least one of a top side, a top-right side, a left side, or a bottom-left side.</p><p id="p-0244" num="0231">The second determination unit <b>1101</b> is configured to determine a neighbouring reference sample set of the current block according to the acquired reference sample.</p><p id="p-0245" num="0232">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> may further include a second processing unit <b>1105</b>, configured to perform first filtering processing on the reference sample neighbouring to at least one side of the current block to determine a reference sample neighbouring to the at least one side.</p><p id="p-0246" num="0233">The second determination unit <b>1101</b> is configured to form the neighbouring reference sample set of the current block according to the acquired reference samples.</p><p id="p-0247" num="0234">In the above solution, the first filtering processing includes down-sampling filtering or low-pass filtering.</p><p id="p-0248" num="0235">In the above solution, the second acquisition unit <b>1104</b> is further configured to determine a bitdepth value corresponding to a to-be-predicted colour component of the current block.</p><p id="p-0249" num="0236">The second processing unit <b>1105</b> is further configured to perform a shift on 1 by the bitdepth value minus 1 to obtain a preset parameter value.</p><p id="p-0250" num="0237">In the above solution, the second buffer unit <b>1102</b> is configured to buffer the neighbouring reference sample to obtain an initial input reference sample set, and buffer the preset parameter value by using a data unit after the initial input reference sample set to obtain the input reference sample set.</p><p id="p-0251" num="0238">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> may further include a parsing unit <b>1106</b> configured to parse a bitstream to obtain a value of a transposition processing indication flag.</p><p id="p-0252" num="0239">The second buffer unit <b>1102</b> is specifically configured to, when the value of the transposition processing indication flag is equal to 0, store a reference sample in a buffer, such that a reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to the left side of the current block in the neighbouring reference sample set, and determine the buffer as the initial input reference sample set; or when the value of the transposition processing indication flag is equal to 1, store the reference sample in a buffer, such that the reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored after the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, perform transposition processing on the buffer, and determine the transposed buffer as the initial input reference sample set.</p><p id="p-0253" num="0240">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> may further include a second calculation unit <b>1107</b> which is configured to calculate an i<sup>th </sup>input sample by means of a first preset calculation model according to a sample corresponding to the (i+1)<sup>th </sup>position and a sample corresponding to the 0<sup>th </sup>position in the reference sample set, where i is a positive integer greater than or equal to 0 and less than N, N representing the number of elements contained in the input sample matrix.</p><p id="p-0254" num="0241">The second determination unit <b>1101</b> is configured to form the input sample matrix according to N input samples obtained by calculation.</p><p id="p-0255" num="0242">In the above solution, the second calculation unit <b>1107</b> is specifically perform a subtraction operation by means of the first preset calculation model to obtain the i<sup>th </sup>input sample.</p><p id="p-0256" num="0243">In the above solution, the second calculation unit <b>1107</b> is specifically configured to set the minuend of the subtraction operation to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the reference sample set; and set the subtraction of the subtraction operation to be equal to the sample corresponding to the 0<sup>th </sup>position in the reference sample set.</p><p id="p-0257" num="0244">In the above solution, the second acquisition unit <b>1104</b> is further configured to obtain an MIP block of the current block according to the input sample matrix, the MIP block including a predicted sample at at least part of sample positions in the current block.</p><p id="p-0258" num="0245">The second processing unit <b>1105</b> is further configured to, when one of a width and a height of the MIP block is different from that of the current block, perform second filtering processing on the MIP block to obtain a prediction block of the current block; or, when both of a width and a height of the MIP block are the same as those of the current block, set a prediction block of the current block to be equal to the MIP block, the prediction block containing a predicted sample at all sample positions in the current block.</p><p id="p-0259" num="0246">In the above solution, the second acquisition unit <b>1104</b> is specifically configured to perform clipping processing on the predicted sample in the MIP block to obtain the MIP block of the current block.</p><p id="p-0260" num="0247">In the above solution, referring to <figref idref="DRAWINGS">FIG. <b>11</b></figref>, the decoder <b>110</b> may also include a second judgment unit <b>1108</b>, which is configured to judge whether to perform transposition processing on the MIP block, and when a judgment result is &#x201c;yes&#x201d;, to perform transposition processing on the predicted sample in the MIP block, and determine the transposed MIP block as the MIP block of the current block.</p><p id="p-0261" num="0248">In the above solution, the parsing unit <b>1106</b> is specifically configured to parse a bitstream to obtain a value of a transposition processing indication flag.</p><p id="p-0262" num="0249">The second judgment unit <b>1108</b> is specifically configured to judge, according to the value of the transposition processing, whether to perform transposition processing on the MIP block.</p><p id="p-0263" num="0250">In the above solution, the second filtering processing includes up-sampling filtering or low-pass filtering.</p><p id="p-0264" num="0251">In the above solution, the second acquisition unit <b>1104</b> is further configured to acquire a weight matrix, a shift factor, and an offset factor corresponding to the current block.</p><p id="p-0265" num="0252">The second calculation unit <b>1107</b> is further configured to perform matrix multiplication processing on the input sample matrix, the weight matrix, the shift factor, and the offset factor by means of a second preset calculation model to calculate the MIP block.</p><p id="p-0266" num="0253">In the above solution, the second determination unit <b>1101</b> is further configured to determine a horizontal up-sampling factor and a vertical up-sampling factor corresponding to the current block.</p><p id="p-0267" num="0254">The second calculation unit <b>1107</b> is further configured to determine, according to the MIP block, the horizontal up-sampling factor and the vertical up-sampling factor, a predicted value of a to-be-filled sample position in the current block by means of a third preset calculation model to obtain a prediction block of the current block, the to-be-filled sample position being a sample position in the current block different from a sample position in the MIP block.</p><p id="p-0268" num="0255">It can be understood that, in the embodiment, &#x201c;unit&#x201d; may be part of a circuit, part of a processor, part of a program or software and the like, of course, may also be modular and may also be non-modular. In addition, each component in the embodiment may be integrated into a processing unit, each unit may also exist independently, and two or more than two units may also be integrated into a unit. The integrated unit may be implemented in a hardware form and may also be implemented in form of software function module.</p><p id="p-0269" num="0256">When implemented in form of a software functional module and sold or used not as an independent product, the integrated unit may be stored in a computer-readable storage medium. Based on such an understanding, the embodiment provides a computer storage medium, which is applied to a decoder <b>110</b> and stores a colour component prediction program. The colour component prediction program is executed by a second processor to implement any method as described in the abovementioned embodiments.</p><p id="p-0270" num="0257">Based on the composition of the decoder <b>110</b> and the computer storage medium, referring to <figref idref="DRAWINGS">FIG. <b>12</b></figref>, a specific hardware structure example of the decoder <b>110</b> according to the embodiment of the present disclosure is shown, and may include a second communication interface <b>1201</b>, a second memory <b>1202</b>, and a second processor <b>1203</b>. Each component is coupled together through a second bus system <b>1204</b>. It can be understood that the second bus system <b>1204</b> is configured to implement connection communication between these components. The second bus system <b>1204</b> includes a data bus, and further includes a power bus, a control bus, and a state signal bus. However, for clear description, various buses in <figref idref="DRAWINGS">FIG. <b>12</b></figref> are marked as the second bus system <b>1204</b>.</p><p id="p-0271" num="0258">The second communication interface <b>1201</b> is configured to receive and send a signal in a process of receiving and sending information with another external network element.</p><p id="p-0272" num="0259">The second memory <b>1202</b> is configured to store a computer program capable of running in the second processor <b>1203</b>.</p><p id="p-0273" num="0260">The second processor <b>1203</b> is configured to run the computer program to execute the following operations.</p><p id="p-0274" num="0261">A neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined, the neighbouring reference sample set including at least one reference sample.</p><p id="p-0275" num="0262">The neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set.</p><p id="p-0276" num="0263">An input sample matrix is determined by means of a first preset calculation model based on the input reference sample set.</p><p id="p-0277" num="0264">Colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block.</p><p id="p-0278" num="0265">Optionally, as another embodiment, the second processor <b>1203</b> is further configured to run the computer program to execute any method in the abovementioned embodiments.</p><p id="p-0279" num="0266">It can be understood that the second memory <b>1202</b> has a hardware function similar to that of the first memory <b>1002</b> and the second processor <b>1203</b> has a hardware function similar to that of the first processor <b>1003</b>. Elaborations are omitted herein.</p><p id="p-0280" num="0267">It is to be noted that, in the present disclosure, terms &#x201c;include&#x201d; and &#x201c;contain&#x201d; or any other variant thereof is intended to cover nonexclusive inclusions, so that a process, method, object or device including a series of elements not only includes those elements but also includes other elements which are not clearly listed or further includes elements intrinsic to the process, the method, the object or the device. Under the condition of no more limitations, an element defined by the statement &#x201c;including a/an . . . &#x201d; does not exclude existence of the same other elements in a process, method, object or device including the element.</p><p id="p-0281" num="0268">The sequence numbers of the embodiments of the present disclosure are adopted not to represent superiority-inferiority of the embodiments but only for description.</p><p id="p-0282" num="0269">The methods disclosed in some method embodiments provided in the present disclosure may be freely combined without conflicts to obtain new method embodiments.</p><p id="p-0283" num="0270">The characteristics disclosed in some product embodiments provided in the present disclosure may be freely combined without conflicts to obtain new product embodiments.</p><p id="p-0284" num="0271">The characteristics disclosed in some method or device embodiments provided in the present disclosure may be freely combined without conflicts to obtain new method embodiments or device embodiments.</p><p id="p-0285" num="0272">The above is only the specific implementation mode of the present disclosure and not intended to limit the scope of protection of the present disclosure. Any variations or replacements apparent to those skilled in the art within the technical scope disclosed by the present disclosure shall fall within the scope of protection of the present disclosure. Therefore, the scope of protection of the present disclosure shall be subject to the scope of protection of the claims.</p><p id="p-0286" num="0273">According to the embodiments of the present disclosure, a neighbouring reference sample set of a current block is determined, and a preset parameter value corresponding to the current block is determined; the neighbouring reference sample set and the preset parameter value are buffered to construct an input reference sample set; an input sample matrix is determined by means of a first preset calculation model according to the reference sample set, and colour component prediction is performed on the current block according to the input sample matrix to obtain a prediction block of the current block. Thus, in the solutions of the embodiments of the present disclosure, judgment of the type of the current block is omitted, the time complexity is reduced, and hardware implementation is facilitated. In addition, the input sample matrix may be determined based on the input reference sample set and the first preset calculation model, while the derivation process of the input samples for matrix multiplication is also simplified, so that the derivation process of the input sample matrix is unified, and the solutions of the embodiments of the present disclosure no longer depend on the type of the current block and can also realize parallel processing, thereby reducing the calculation complexity.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-math idrefs="MATH-US-00001" nb-file="US20230007279A1-20230105-M00001.NB"><img id="EMI-M00001" he="6.69mm" wi="76.20mm" file="US20230007279A1-20230105-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00002" nb-file="US20230007279A1-20230105-M00002.NB"><img id="EMI-M00002" he="11.60mm" wi="116.08mm" file="US20230007279A1-20230105-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00003" nb-file="US20230007279A1-20230105-M00003.NB"><img id="EMI-M00003" he="5.67mm" wi="76.20mm" file="US20230007279A1-20230105-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><us-math idrefs="MATH-US-00004" nb-file="US20230007279A1-20230105-M00004.NB"><img id="EMI-M00004" he="6.69mm" wi="76.20mm" file="US20230007279A1-20230105-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/></us-math><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method for colour component prediction, applied to an encoder and comprising:<claim-text>determining a neighbouring reference sample set of a current block, wherein the neighbouring reference sample set comprises at least one reference sample;</claim-text><claim-text>determining a preset parameter value corresponding to the current block, comprising:<claim-text>determining a bitdepth value corresponding to a to-be-predicted colour component of the current block; and performing a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value;</claim-text></claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value; and</claim-text><claim-text>performing colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>determining an input reference sample set based on the neighbouring reference sample set and the preset parameter;</claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the neighbouring reference sample set of the current block comprises:<claim-text>acquiring a reference sample neighbouring to at least one side of the current block, the at least one side of the current block comprising at least one of a top side, a top-right side, a left side, or a bottom-left side; and</claim-text><claim-text>determining the neighbouring reference sample set of the current block according to the acquired reference sample, comprising:</claim-text><claim-text>performing first filtering processing on the acquired reference sample neighbouring to the at least one side of the current block to determine a reference sample neighbouring to the at least one side; and</claim-text><claim-text>forming the neighbouring reference sample set of the current block according to the determined reference sample,</claim-text><claim-text>wherein the first filtering processing comprises down-sampling filtering or low-pass filtering.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein determining the input reference sample set based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>buffering the neighbouring reference sample set to obtain an initial input reference sample set; and</claim-text><claim-text>buffering the preset parameter value by using a data unit after the initial input reference sample set to obtain the input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein buffering the neighbouring reference sample set to obtain an initial input reference sample set comprises:<claim-text>determining a value of a transposition processing indication flag by using a Rate Distortion Optimization (RDO) manner;</claim-text><claim-text>when the value of the transposition processing indication flag is equal to 0, storing the reference sample in a buffer such that a reference sample corresponding to a top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to a left side of the current block in the neighbouring reference sample set, and determining the buffer as the initial input reference sample set; or</claim-text><claim-text>when the value of the transposition processing indication flag is equal to 1, storing the reference sample in the buffer such that the reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored after the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, performing transposition processing on the buffer, and determining the transposed buffer as the initial input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein determining the input sample matrix by means of the first preset calculation model based on the input reference sample set comprises:<claim-text>performing, according to a sample corresponding to a (i+1)<sup>th </sup>position and a sample corresponding to a 0<sup>th </sup>position in the input reference sample set, a subtraction operation by means of the first preset calculation model, to obtain an i<sup>th </sup>input sample, wherein a minuend of the subtraction operation is set to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the input reference sample set; and a subtraction of the subtraction operation is set to be equal to the sample corresponding to the 0<sup>th </sup>position in the input reference sample set, and wherein i is a positive integer greater than or equal to 0 and less than N, N representing a number of elements contained in the input sample matrix; and</claim-text><claim-text>forming the input sample matrix according to N input samples obtained by calculation.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein performing colour component prediction on the current block according to the input sample matrix to obtain the prediction block of the current block comprises:<claim-text>obtaining a Matrix-based Intra Prediction (MIP) block of the current block according to the input sample matrix, comprising:<claim-text>acquiring a weight matrix, a shift factor, and an offset factor corresponding to the current block;</claim-text><claim-text>performing matrix multiplication processing on the input sample matrix, the weight matrix, the shift factor, and the offset factor by means of a second preset calculation model, to calculate the MIP block; and</claim-text><claim-text>performing clipping processing on the predicted sample in the MIP block to obtain the MIP block of the current block;</claim-text></claim-text><claim-text>wherein the MIP block comprises the predicted sample in at least part of sample positions in the current block;</claim-text><claim-text>when one of a width and a height of the MIP block is different from that of the current block, performing second filtering processing on the MIP block to obtain the prediction block of the current block; or</claim-text><claim-text>when both of the width and the height of the MIP block are the same as those of the current block, setting the prediction block of the current block to be equal to the MIP block, wherein the prediction block contains a predicted sample at all sample positions in the current block.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein obtaining the MIP block of the current block according to the input sample matrix comprises:<claim-text>calculating, by using the RDO manner, a first cost value when transposition processing is performed on the MIP block and a second cost value when transposition processing is not performed on the MIP block;</claim-text><claim-text>when the first cost value is less than the second cost value, determining to perform transposition processing on the predicted sample in the MIP block, and determining the transposed MIP block as the MIP block of the current block; or</claim-text><claim-text>when the first cost value is no less than the second cost value, determining not to perform transposition processing on the MIP block.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the second filtering processing comprises up-sampling filtering or low-pass filtering,<claim-text>wherein when the second filtering processing is the up-sampling filtering, the method further comprises:</claim-text><claim-text>determining a horizontal up-sampling factor and a vertical up-sampling factor corresponding to the current block; and</claim-text><claim-text>determining, according to the MIP block, the horizontal up-sampling factor and the vertical up-sampling factor, a predicted value of a to-be-filled sample position in the current block by means of a third preset calculation model, to obtain the prediction block of the current block, wherein the to-be-filled sample position is a sample position in the current block different from a sample position in the MIP block.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. A method for colour component prediction, applied to a decoder and comprising:<claim-text>determining a neighbouring reference sample set of a current block, wherein the neighbouring reference sample set comprises at least one reference sample;</claim-text><claim-text>determining a preset parameter value corresponding to the current block, comprising:<claim-text>determining a bitdepth value corresponding to a to-be-predicted colour component of the current block; and performing a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value;</claim-text></claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value; and</claim-text><claim-text>performing colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>determining an input reference sample set based on the neighbouring reference sample set and the preset parameter;</claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on thee input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein determining the neighbouring reference sample set of the current block comprises:<claim-text>acquiring a reference sample neighbouring to at least one side of the current block, the at least one side of the current block comprising at least one of a top side, a top-right side, a left side, or a bottom-left side; and</claim-text><claim-text>determining the neighbouring reference sample set of the current block according to the acquired reference sample, comprising:<claim-text>performing first filtering processing on the reference sample neighbouring to the at least one side of the current block to determine the reference sample neighbouring to the at least one side; and</claim-text><claim-text>forming the neighbouring reference sample set of the current block according to the acquired reference sample,</claim-text><claim-text>wherein the first filtering processing comprises down-sampling filtering or low-pass filtering.</claim-text></claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the input reference sample set based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>buffering the neighbouring reference sample set to obtain an initial input reference sample set; and</claim-text><claim-text>buffering the preset parameter value by using a data unit after the initial input reference sample set to obtain the input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein buffering the neighbouring reference sample set to obtain the initial input reference sample set comprises:<claim-text>parsing a bitstream to obtain a value of a transposition processing indication flag,</claim-text><claim-text>when the value of the transposition processing indication flag is equal to 0, storing a reference sample in a buffer such that a reference sample corresponding to a top side of the current block in the neighbouring reference sample set is stored ahead of a reference sample corresponding to a left side of the current block in the neighbouring reference sample set, and determining the buffer as the initial input reference sample set; or</claim-text><claim-text>when the value of the transposition processing indication flag is equal to 1, storing reference samples in the buffer such that the reference sample corresponding to the top side of the current block in the neighbouring reference sample set is stored after the reference sample corresponding to the left side of the current block in the neighbouring reference sample set, performing transposition processing on the buffer, and determining the transposed buffer as the initial input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein determining the input sample matrix by means of the first preset calculation model based on the input reference sample set comprises:<claim-text>calculating an i<sup>th </sup>input sample by means of the first preset calculation model according to a sample corresponding to a (i+1)<sup>th </sup>position and a sample corresponding to a 0<sup>th </sup>position in the input reference sample set, comprising: performing a subtraction operation by means of the first preset calculation model, to obtain the i*<sup>th </sup>input sample, wherein a minuend of the subtraction operation is set to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the input reference sample set, and a subtraction of the subtraction operation is set to be equal to the sample corresponding to the 0<sup>th </sup>position in the input reference sample set, wherein i is a positive integer greater than or equal to 0 and less than N, N representing a number of elements contained in the input sample matrix; and</claim-text><claim-text>forming the input sample matrix according to N input samples obtained by calculation.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein performing colour component prediction on the current block according to the input sample matrix to obtain the prediction block of the current block comprises:<claim-text>obtaining a Matrix-based Intra Prediction (MIP) block of the current block according to the input sample matrix, comprising: acquiring a weight matrix, a shift factor, and an offset factor corresponding to the current block, and performing matrix multiplication processing on the input sample matrix, the weight matrix, the shift factor, and the offset factor by means of a second preset calculation model to calculate the MIP block, and performing clipping processing on the predicted sample in the MIP block to obtain the MIP block of the current block, wherein the MIP block comprises a predicted sample in at least part of sample positions in the current block;</claim-text><claim-text>when one of a width and a height of the MIP block is different from that of the current block, performing second filtering processing on the MIP block to obtain the prediction block of the current block; or</claim-text><claim-text>when both of the width and the height of the MIP block are the same as those of the current block, setting the prediction block of the current block to be equal to the MIP block, wherein the prediction block contains a predicted sample at all sample positions in the current block.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein obtaining the MIP block of the current block according to the input sample matrix comprises:<claim-text>parsing a bitstream to obtain a value of a transposition processing indication flag;</claim-text><claim-text>judging, according to the value of the transposition processing, whether to perform transposition processing on the MIP block; and</claim-text><claim-text>when a judgment result is &#x201c;yes&#x201d;, performing transposition processing on the predicted sample in the MIP block, and determining the transposed MIP block as the MIP block of the current block.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the second filtering processing comprises up-sampling filtering or low-pass filtering,<claim-text>wherein when the second filtering processing refers to the up-sampling filtering, the method further comprises:</claim-text><claim-text>determining a horizontal up-sampling factor and a vertical up-sampling factor corresponding to the current block; and</claim-text><claim-text>determining, according to the MIP block, the horizontal up-sampling factor and the vertical up-sampling factor, a predicted value of a to-be-filled sample position in the current block by means of a third preset calculation model, to obtain the prediction block of the current block, wherein the to-be-filled sample position is a sample position in the current block different from a sample position in the MIP block.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. An encoder, comprising a first memory and a first processor, wherein<claim-text>the first memoryy is configured to store a computer program capable of running in the first processor; and</claim-text><claim-text>the first processor is configured to run the computer program to execute a method for colour component prediction, the method comprising:<claim-text>determining a neighbouring reference sample set of a current block, wherein the neighbouring reference sample set comprises at least one reference sample;</claim-text><claim-text>determining a preset parameter value corresponding to the current block, comprising:<claim-text>determining a bitdepth value corresponding to a to-be-predicted colour component of the current block; and performing a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value:</claim-text></claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value; and</claim-text><claim-text>performing colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</claim-text></claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The encoder of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>determining an input reference sample set based on the neighbouring reference sample set and the preset parameter;</claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The encoder of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein determining the input sample matrix by means of the first preset calculation model based on the input reference sample set comprises:<claim-text>performing, according to a sample corresponding to a (i+1)<sup>th </sup>position and a sample corresponding to a 0<sup>th </sup>position in the input reference sample set, a subtraction operation by means of the first preset calculation model, to obtain an i<sup>th </sup>input sample, wherein a minuend of the subtraction operation is set to be equal to the sample corresponding to the (i+1)<sup>th </sup>position in the input reference sample set; and a subtraction of the subtraction operation is set to be equal to the sample corresponding to the 0<sup>th </sup>position in the input reference sample set, and wherein i is a positive integer greater than or equal to 0 and less than N, N representing a number of elements contained in the input sample matrix; and</claim-text><claim-text>forming the input sample matrix according to N input samples obtained by calculation.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. A decoder, comprising a second memory and a second processor, wherein<claim-text>the second memory is configured to store a computer program capable of running in the second processor; and</claim-text><claim-text>the second processor is configured to run the computer program to execute a method for colour component prediction, comprising:<claim-text>determining a neighbouring reference sample set of a current block, wherein the neighbouring reference sample set comprises at least one reference sample;</claim-text><claim-text>determining a preset parameter value corresponding to the current block, comprising:<claim-text>determining a bitdepth value corresponding to a to-be-predicted colour component of the current block; and performing a shift on 1 by the bitdepth value minus 1 to obtain the preset parameter value:</claim-text></claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value; and</claim-text><claim-text>performing colour component prediction on the current block according to the input sample matrix to obtain a prediction block of the current block.</claim-text></claim-text></claim-text></claim><claim id="CLM-00023" num="00023"><claim-text><b>23</b>. The decoder of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein determining an input sample matrix by means of a first preset calculation model based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>determining an input reference sample set based on the neighbouring reference sample set and the preset parameter;</claim-text><claim-text>determining an input sample matrix by means of a first preset calculation model based on thee input reference sample set.</claim-text></claim-text></claim><claim id="CLM-00024" num="00024"><claim-text><b>24</b>. The decoder of <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein determining the input sample matrix by means of the first preset calculation model based on the neighbouring reference sample set and the preset parameter value comprises:<claim-text>calculating an i<sup>th </sup>input sample by means of the first preset calculation model according to a sample corresponding to a (i+1)<sup>th </sup>position and a sample corresponding to a 0<sup>th </sup>position in the input reference sample set, comprising: performing a subtraction operation by means of the first preset calculation model, to obtain the i<sup>th </sup>input sample, wherein a minuend of the subtraction operation is set to be equal to the sample corresponding to the (i+1)th position in the input reference sample set, and a subtraction of the subtraction operation is set to be equal to the sample corresponding to the 0th position in the input reference sample set, wherein i is a positive integer greater than or equal to 0 and less than N, N representing a number of elements contained in the input sample matrix; and</claim-text><claim-text>forming the input sample matrix according to N input samples obtained by calculation.</claim-text></claim-text></claim></claims></us-patent-application>