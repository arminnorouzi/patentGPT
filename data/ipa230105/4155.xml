<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004156A2-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004156</doc-number><kind>A2</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>16952003</doc-number><date>20201118</date></document-id></application-reference><us-application-series-code>16</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>00</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>02</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0061</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>1</main-group><subgroup>0217</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>05</class><subclass>D</subclass><main-group>2201</main-group><subgroup>0216</subgroup><symbol-position>L</symbol-position><classification-value>A</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">METHODS AND APPARATUS FOR CONTROLLING AUTONOMOUS VEHICLES</invention-title><us-related-documents><related-publication><document-id><country>US</country><doc-number>20220155781</doc-number><kind>A1</kind><date>20220519</date></document-id></related-publication></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>6 RIVER SYSTEMS, LLC</orgname><address><city>Waltham</city><state>MA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Cacioppo</last-name><first-name>Christopher</first-name><address><city>Somerville</city><state>MA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Simons</last-name><first-name>Corey</first-name><address><city>Merrimac</city><state>MA</state><country>US</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>6 RIVER SYSTEMS, LLC</orgname><role>02</role><address><city>Waltham</city><state>MA</state><country>US</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Methods and apparatus for making autonomous vehicle handover decisions are described. A handover decision involves deciding if an autonomous vehicle should be handed off from one worker to another worker. The methods allow for decisions to be made in real or near real time shortly before an autonomous vehicle changes location. Worker time, if a handover is not implemented, is considered including the amount of worker time involved with the worker moving with the autonomous vehicle to the new location as compared to a new worker meeting the autonomous vehicle at the new location or on the way to the new location. Handover decisions can consider worker distribution and/or order priority. Such factors can be used to weight one or more time based cost values with a cost value representation of the cost if a handover is not implemented vs implementing a handover being compared to make the handover decision.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="105.16mm" wi="158.75mm" file="US20230004156A2-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="225.81mm" wi="150.28mm" orientation="landscape" file="US20230004156A2-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="194.39mm" wi="150.45mm" file="US20230004156A2-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="86.28mm" wi="118.28mm" file="US20230004156A2-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="235.20mm" wi="162.64mm" orientation="landscape" file="US20230004156A2-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="233.60mm" wi="118.11mm" file="US20230004156A2-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="210.48mm" wi="115.15mm" file="US20230004156A2-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="221.23mm" wi="156.13mm" file="US20230004156A2-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="30.14mm" wi="39.96mm" file="US20230004156A2-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="241.05mm" wi="168.49mm" file="US20230004156A2-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="228.52mm" wi="159.00mm" orientation="landscape" file="US20230004156A2-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="225.30mm" wi="160.78mm" orientation="landscape" file="US20230004156A2-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">FIELD</heading><p id="p-0002" num="0001">The present application relates to methods and apparatus for controlling autonomous vehicles, e.g., robotic devices such as robotic carts, and, more particularly, to controlling autonomous vehicles to associate them with operators, and yet more particularly, to methods and apparatus for assigning devices to workers to complete location dependent operations, e.g., picks of items from storage locations or the placement of items into storage locations.</p><heading id="h-0002" level="1">BACKGROUND</heading><p id="p-0003" num="0002">Efficient use of resources is important to many systems including warehouse systems. In the context of warehouse systems resources to be used may include robotic equipment such as a robotic cart used to transport goods. Some example applications where such robotic carts are used include picking of items from storage locations to complete one or more orders and/or the placement of items into storage locations as part of a stocking or restocking process.</p><p id="p-0004" num="0003">Human workers, e.g., associates, may be employed to pick items that are then loaded onto such robotic carts. Time spent by the robotic carts and these human operators often involves travel time from one location within a warehouse to another location within that warehouse. Attempts have been made to efficiently use time in such scenarios. Such attempts often involve the use of zones in a warehouse system with workers being assigned to pick or stock items from an individual zone or zones.</p><p id="p-0005" num="0004">In order to meet service level agreements and maintain profitability, there is a constant pressure to keep a fulfillment operation, e.g., a warehouse operation in which orders are satisfied, running efficiently. Enabling associates to spend more time picking products and less time walking from one place to another is a goal of many warehouse systems. To reduce the amount of time spent by a worker walking around, collaborative robots, e.g., robotic carts, are sometimes used with a worker meeting a robotic cart to perform one or more pick operations. Robotic carts are useful at eliminating or reducing worker walks to induct cartons and/or drop off fulfillments to the correct locations. However robotic carts normally do not remove walking between pick locations.</p><p id="p-0006" num="0005">One technique which has been used to reduce the amount of walking that is required is to break the picking area into zones and assign particular robotic carts and associates to stay within them. This can be especially effective if there are sparse picks over a large area but less than ideal in many other situations.</p><p id="p-0007" num="0006">In view of the above, it should be appreciated that there is a need for methods and/or apparatus which allow for the efficient use of warehouse resources including equipment and/or worker time.</p><heading id="h-0003" level="1">SUMMARY</heading><p id="p-0008" num="0007">In various embodiments the need for zones within a warehouse or other system is avoided. While the methods and apparatus do not require the use of zones, in various embodiments the methods and/or apparatus are used in combination with zones, e.g., with crossing a zone boundary to complete an operation being considered as one of several factors used in making a resource allocation.</p><p id="p-0009" num="0008">In the case of fixed zones, there are two interrelated problems that may cause zones to be less effective than operators hope. The interrelated problems include: i) defining zone areas and ii) labor balancing.</p><p id="p-0010" num="0009">With regard to zone area definition, in many systems zone areas are set with the intent to evenly distribute work and ideally put common clusters of work in one area. The problem is that it is extraordinarily difficult to predict commonly clustered Stock Keeping Units (SKUs). Order profiles are constantly changing over time&#x2014;from season to season and even over the course of the day. Warehouses are sometimes broken into zones based on physical size and then never adjusted again leading to zones that don't efficiently match actual pick operations that may vary seasonally or based on product demand.</p><p id="p-0011" num="0010">With regard to the second related problem of labor balancing, over the course of a shift, an operator normally wants their associates to spend as much time as possible actively picking rather than traveling from one pick to the next or, even worse, being idle. When utilizing a zone picking method, an attempt is often made to have orders evenly distributed across the existing zones so that each associate is engaged. Unfortunately, this rarely happens. In many existing zone based warehouse systems there are often drastically different work loads across zones.</p><p id="p-0012" num="0011">While labor, e.g. worker, resources are an important resource to manage, efficient utilization of autonomous vehicles can also be important to efficient use of resources. Having a large number of unused or idle autonomous vehicles can result in inefficient capital allocation and, more importantly, the need to maintain more equipment, e.g. autonomous vehicles, than is necessary.</p><p id="p-0013" num="0012">Although some warehouses use zones, it would be desirable if methods and apparatus could be developed which would allow for efficient allocation of resources, e.g., workers and/or autonomous vehicles, for use in item pick and/or stocking operations, without the need for zones. While it would be desirable that zones not be required, it would also be desirable that if one or more of the methods or apparatus could be used in a system which used zones.</p><p id="p-0014" num="0013">In accordance with various aspects an autonomous vehicle is associated with a series of location dependent operations, e.g., a pick list to be implemented. The autonomous vehicle may be, and sometimes is, a robotic cart which can move autonomously between locations in a warehouse or move with a worker between locations in the warehouse. The location dependent operations may be, e.g., item picks for one or more orders which have been grouped together for processing and/or one or more restocking operations. Thus, an autonomous vehicle is associated, as part of the resource allocation process, with a series of locations, where each of the locations correspond to one or more item pick or placement operations that are to be performed, e.g., sequentially.</p><p id="p-0015" num="0014">While explained in the context of a robotic cart used for pick or stocking operations, the methods and apparatus of the invention relating to worker assignment to autonomous vehicles are applicable to a wide range of applications where an autonomous vehicle is assigned a series of location specific tasks which involve a human worker. For example, in manufacturing operations an autonomous vehicle may transport an item being assembled between a plurality of workstations with a worker being responsible for one or more tasks at each workstation. The methods and apparatus of the invention can be, and sometimes are, used in such embodiments to determine when a worker should stay with the autonomous vehicle and assist in the operations at various workstations and/or when the autonomous vehicle should be handed off to another worker. In the case of the handoff, the new worker replaces the initial worker associated with the autonomous vehicle and performs one or more additional location dependent tasks, e.g., item assembly operations.</p><p id="p-0016" num="0015">As part of the resource allocation processes implemented by a control system, a decision is made, once a task is completed, e.g., whether it be the initial task or a subsequent task that is completed, as to whether the worker assigned to perform the task should be assigned to another robotic cart, and thus another location dependent task list, or should remain and travel with the autonomous vehicle to the next location on the device's assigned task list. This decision, in various embodiments, is an automated decision involving a cost function that is evaluated and used for decision making by the processor of the control system and/or a processor in the mobile cart which acts as part of the control system when making handover decisions. Depending on the embodiment the decision may be made at different times. In some embodiments the decision could is determined when the work is generated or at the time the task completion or anywhere in between. Preassigning, e.g., before a worker begins work with a cart, when a handoff is to be implemented, is easier in some implementations than making such determinations during a sequence of tasks since it does not require connectivity to one or more systems providing work or other information during the period of time that tasks are being performed or the cart is moving from location to location. Making the cart handoff decisions at a later time during the work processes provides more time and information that can be used to more accurately estimates costs since changes relating to traffic and/or worker availability might occur if the decision is made earlier and such information might not be available if the decision is made at an earlier time.</p><p id="p-0017" num="0016">During operation, as part of making a handover decision, the control system takes into consideration various times associated with satisfying a task list. Times which can be, and sometimes are, considered by the control system include the time a worker will spend traveling to meet up with an autonomous vehicle, the time a worker spends logging into the autonomous vehicle so he/she can use the device, and/or the time spent by a worker traveling between locations with a cart. Such times are all examples of worker time which can be considered wasted in that the worker is not performing the productive tasks to be completed using the autonomous vehicle, e.g., performing pick operations or placement operations. In a pick operation, a worker picks an item from a storage location and then places it on the robot device e.g., robotic cart. In a placement operation, a worker removes the item from the robotic cart and places it in a storage location, e.g., as part of a stocking or restocking operation. In various embodiments, time spent by a worker performing activities other than picking or placing items are considered costs which ideally should be minimized. Such an approach considers worker time an important resource that should be utilized efficiently when possible.</p><p id="p-0018" num="0017">In various embodiments, the control system generates, e.g. determines based on estimation, a first cost (C1) value, associated with the associate assigned to a cart continuing to the location of the next task on the task list and performing the next task. A second cost value (C2), which is a cost that would be incurred, from a resource utilization perspective, if a second worker were to meet the autonomous vehicle and take over and perform the next operation and the first worker were to move on to work with another robotic cart, is also determined, e.g., estimated. The first and second costs ((C1) and (C2)) are then compared, and a decision is made whether the autonomous vehicle, e.g., cart handoff should be made. Handoff costs may be, and sometimes are, weighted to take into consideration whether a cart is processing a high priority order. In some such embodiments the cost of completing a handoff for a high priority order is increased compared to the cost of not completing a handoff since the handoff may result in or add to delays in completing an order. This discourages handovers, also sometimes referred to as handoffs, and the possible associated time delays, in the case of high priority orders.</p><p id="p-0019" num="0018">If the decision is to implement a cart handoff, the worker associated with the cart, e.g., the first worker associated with the first cart, is assigned to another cart and the second worker is assigned to the first cart. The cart can, and sometimes does, automatically travel from the first pick location to the second pick location and, depending on the embodiment, may meet the second worker on the way to the second location.</p><p id="p-0020" num="0019">By taking into consideration a wide range of factors, in the terms of weights which may, and sometimes do, contribute to the value generated by a cost function, used in the handover decision making process, efficient utilization of workers and/or robotic resources can be, and sometimes is, achieved, while also allowing for effective management of the distribution of workers throughout a warehouse.</p><p id="p-0021" num="0020">While various features, factors and weights are used in some embodiments, not all the features discussed above need be used or included in each embodiment. Numerous variations on the above described methods and apparatus will be apparent in view of the detailed description which follows.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example system implemented in accordance with the invention.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an example autonomous vehicle, e.g., robotic pick cart, that can be used as any of the robotic pick carts shown in the other figures.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example pick list that can be used in the system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example order processing and control system that can be used as the order processing and control system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>5</b>A</figref> shows the steps of a first part of an example order processing and robotic device control routine that is implemented in some embodiments.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>5</b>B</figref> shows the steps of a second part of the example order processing and autonomous vehicle control routine that is implemented in some embodiments.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>5</b>C</figref> shows the steps of a third part of the example order processing and autonomous vehicle control routine that is implemented in some embodiments.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows how <figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B and <b>5</b>C</figref> can be combined to form the full example order processing and autonomous vehicle control routine used in some embodiment.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows the steps of an example handover determination routine that can be, and sometimes is, called by the example order processing and autonomous vehicle control routine shown in the other figures of this application.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a diagram of a system in which the management system of <figref idref="DRAWINGS">FIG. <b>1</b></figref> is implemented as part of an e-commerce platform which provides merchant products and services to customers, and example systems, websites, devices, providers, applications and channels which interact with the e-commerce platform/management system.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts a non-limiting embodiment for a home page of an administrator, which may show information about daily tasks, a store's recent activity, and the next steps a merchant can take to build their business.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>1</b></figref> illustrates an example system <b>100</b> implemented in accordance with the invention. In the system autonomous vehicles, e.g., robotic pick carts, are used. The autonomous vehicles may be and sometimes are fully autonomous and in other embodiments partially autonomous. Reference is made to robotic carts in the figures and/or various places in the specification. Such robotic carts are exemplary and it should be appreciated that the methods and apparatus of the invention can be used with a wide range of autonomous vehicles and are not limited to the exemplary robotic carts used in some embodiments.</p><p id="p-0034" num="0033">The system <b>100</b> includes a number of customer devices <b>108</b>, <b>110</b> through which orders for items can be placed. The customer devices <b>108</b>, <b>110</b> are coupled via communications links <b>112</b>, <b>114</b>, respectively, by communications network <b>116</b>, e.g., the Internet, and by communications link <b>118</b>, to an order processing and/or control system <b>122</b> which may be, and in some embodiments is, located at a warehouse <b>120</b>. The system <b>122</b> will simply be referred to as a control system for purposes of explaining the invention, since it controls one or more devices, said controlling including determining, generating and sending autonomous vehicle assignments and/or workers to robotic cart assignments. The order processing and/or control system <b>122</b> may be implemented as a distributed system or as a single device. In the case of a distributed system one or more processors located outside the warehouse or in other devices may be, and sometimes are, used to perform one or more steps attributed to the order processing and control system <b>122</b> in the example described embodiment. In addition to the control system <b>122</b>, the warehouse <b>120</b> includes a worker break area <b>124</b>, an empty cart staging area <b>126</b>, a first item storage area, Area A <b>132</b>, a second item storage area, Area B <b>140</b>, a third item storage area, Area C <b>150</b>, a fourth item storage area, Area D <b>160</b>, first through fourth cart parking areas <b>146</b>, <b>148</b>, <b>164</b>, <b>168</b> and a packing and/or shipping area <b>166</b>.</p><p id="p-0035" num="0034">The empty cart staging area <b>126</b> is an area to which empty carts <b>129</b>, <b>131</b> are transported and stored until assignment to a pick list and work. Worker break area <b>124</b> is an area where workers can take rest breaks, e.g., between periods of time during which they are associated with autonomous vehicles, e.g., robotic carts, to perform operations, e.g., item pick operations.</p><p id="p-0036" num="0035">Storage area A <b>132</b> includes shelves and/or racks <b>134</b>, where items are stored. In the example, worker 1 <b>136</b> associated with a first robotic cart <b>138</b> is shown in front of the shelves/racks <b>134</b> so that the worker <b>136</b> can pick items from the shelves. Storage area B <b>140</b> includes shelves/racks <b>142</b>. Storage Area C <b>150</b> includes shelves/racks <b>154</b> and a second robotic cart <b>158</b> and second worker <b>156</b>, associated with the second robotic cart <b>158</b> and performing pick operations in area C <b>150</b>. Area D <b>160</b> includes shelves/racks <b>162</b>. Outside and near each item storage area (area A <b>132</b>, area B <b>140</b>, area C <b>150</b>, area D <b>160</b>) is a cart parking area (<b>146</b>, <b>148</b>, <b>164</b> and <b>168</b>), respectively. The cart parking areas (<b>146</b>, <b>148</b>, <b>164</b>, <b>168</b>) are locations to which carts can automatically travel and park between pick operations, e.g., with the cart parking areas serving as an intermediate meeting point where a worker can meet up and log in to a cart to which he/she is assigned.</p><p id="p-0037" num="0036">The cart parking areas may be useful when there may be a delay with a worker joining up to begin working with a cart or if the worker will pass near a parking area on the way to a pick operation. Parking a cart as part of a handover process can allow for efficient use of worker time since a worker can complete a pick operation and then meet a waiting cart to proceed with a new pick operation, e.g., as part of a handover operation. While a cart may be idle for a brief period of time at a cart parking area, picker time is utilized efficiently by having a cart ready and waiting for the picker. By placing the cart parking area near but outside the pick areas, cart storage is possible without interfering with pick and/or stocking operations. While in some cases a robotic cart may automatically go to a cart parking area to meet up with a worker during a handover, in some cases the meet location is a storage area where the next pick is to occur. Such a case can be particularly efficient when there is a worker available in the pick area where the next pick is to occur.</p><p id="p-0038" num="0037">Because the carts <b>129</b>, <b>131</b>, <b>138</b> and <b>158</b> are robotic, they can, and sometimes do, travel between locations without a human worker present. For example, as part of a handover a robotic cart may, and sometimes does, travel to a meeting location unaccompanied by a worker. Similarly once a pick is complete the loaded cart can leave the worker, who completed the loading, and travel on its own to the packing and/or shipping area <b>166</b> to be unloaded and for the order to be shipped. Once unloaded the empty cart automatically returns to the empty cart staging area <b>126</b> until assigned for use with another pick list and worker.</p><p id="p-0039" num="0038">Human workers <b>136</b>, <b>156</b> sometimes wear earpieces and receive audio instructions from the control system <b>122</b> and/or carts with which they are associated. Thus, it should be appreciated that the control system <b>122</b> can, and sometimes does, instruct a worker as to which robotic cart the worker is to use and where he/she is to meet up with the cart.</p><p id="p-0040" num="0039">While the system <b>100</b> includes multiple areas, it does not depend on zones with respect to the assignment of workers to mobile carts and/or pick operations. Rather decisions are dynamically made based on worker location and time/cost analysis to determine when autonomous vehicle (e.g., robotic cart) handovers are to be implemented.</p><p id="p-0041" num="0040">Such decisions are made by the control system <b>122</b>. The control system <b>122</b> generates from orders, one or more pick lists which are then assigned to an autonomous vehicle, e.g., mobile robotic cart, for picking operations. A worker <b>136</b> or <b>156</b> is assigned, e.g., associated with the robotic cart. Handover decisions are made for each change in task location, e.g., pick location. The handover decisions can be, and sometimes are, made before assignment of a pick list to a cart and/or worker. However, in at least some embodiments, as tasks are completed and shortly before the robotic cart is going to move from one location to another, a handover decision is made. In such an embodiment, handover decisions can be made with real time or near real time information about worker availability and/or location. This can result in efficient handover decisions which provide good use of worker time without the need for the use of fixed zones.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>2</b></figref> shows an example autonomous vehicle, e.g., an example two shelf robotic pick cart <b>200</b>, which can be used as any one of the robotic carts shown in the other figures. One or more receptacles can be, and sometimes are, transported on each of the shelves <b>204</b>, <b>206</b> of the robotic cart <b>200</b>. The robotic cart includes a processor <b>208</b>, memory <b>210</b>, network interface <b>212</b>, motor <b>214</b> and wheels <b>220</b>, which are driven by the motor <b>214</b>. In addition to these components and shelves <b>204</b>, <b>206</b>, the cart <b>200</b> includes a user interface including display <b>210</b> and speaker <b>203</b>. The network interface <b>212</b> is a wireless network interface capable of receiving commands and information from the order processing and control system <b>122</b> and sending information, e.g., cart location and order pick status information, to the order processing and control system <b>122</b> via wireless signals. The memory <b>210</b> is used to store pick list and path information received from the order processing and control system <b>122</b>. The pick list information may be, and sometimes does, include the information shown in the example pick list <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In addition to the information shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, in some, but not necessarily all, embodiments the pick list information also includes information on the number of receptacles to be carried on the cart <b>200</b>, their locations on the cart <b>200</b> and which items are to be placed in the individual receptacles. The memory <b>210</b> also stores information used to prompt and guide a human operator e.g., worker associated with the cart <b>200</b>, to pick items as the robotic cart <b>200</b> automatically travels through the warehouse under the control of processor <b>208</b> and/or one or more processors in the order processing and control system <b>122</b>. The processor in the control system <b>122</b> or the processor <b>208</b> of the robotic cart <b>200</b> can make handover decisions and control robotic cart operation in accordance with the handover decisions as will be discussed below. The cart <b>200</b>, through visual signals displayed on display <b>210</b> and/or audio instructions provided via speaker <b>203</b> instructs a human worker, e.g., picker, to pick particular items for an order and to place them in a receptacle on the cart <b>200</b> which was allocated for the storage of the picked item. The processor <b>208</b> in the cart and/or system <b>122</b> also controls the robotic cart <b>200</b> to move to/from one pick location to the next and/or to a meeting location when a handover is to be made to a new worker. In the case of a handover the meeting location can be a cart parking area, e.g., <b>146</b>, <b>148</b>, <b>164</b> or <b>168</b> or a next pick location depending on which location is more efficient to use as a meet location. For example if a second worker will pass a cart parking area on his/her way to the next pick location, the cart parking area may be, and sometimes is, selected as the meet location since it is out of the way and parking the cart there while the second worker meets up with the cart will not interfere with other pick operations.</p><p id="p-0043" num="0042">However, if there is no cart parking area on the second workers path to the second pick location, it may be more efficient for the cart to automatically travel to the next pick location and meet the second worker at the pick location. The cart may, and sometimes does, autonomously travel without a worker between a first pick location and a second pick or meeting location when a mobile cart handover is to be implemented. In cases where a handover is not to be implemented, the mobile cart <b>200</b> guides the worker, e.g., a first worker, assigned to work with the mobile cart <b>200</b>, and thus associated with the cart by the assignment, to the next pick location. When a handover is implemented the mobile cart <b>200</b> may, and often does, require the second worker to log in to the mobile cart <b>200</b> via the touch screen <b>210</b> prior to the robotic cart providing guidance as to the next pick operation to be performed.</p><p id="p-0044" num="0043">While a two shelf cart embodiment is shown, multiple robotic cart configurations are possible, with some carts being implemented using a single shelf while other carts have two or more shelves for carrying receptacles.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>3</b></figref> shows an example pick list <b>300</b> that can be used in the system shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The pick list <b>300</b> is generated by the control system <b>122</b> from one or more orders by the control system <b>122</b> in some embodiments. The pick list <b>300</b> is a task list in that each row <b>312</b>, <b>314</b>, <b>316</b>, <b>318</b> with an item listed corresponds to a pick task. Each row of the pick list <b>300</b> includes location information in the first two columns <b>304</b>, <b>306</b>, item identification information in the third column <b>308</b> and quantity information in the fourth column <b>310</b>. In cases where items are to be placed in a particular bin on a robotic cart to which the pick list is assigned, a fifth column with bin identification information is added to provide the worker with information as to which bin on the cart the picked item should be placed. This additional bin column is useful in embodiments where different bins on the robotic cart correspond to different orders.</p><p id="p-0046" num="0045">The first column <b>304</b> of location information indicates the warehouse area to which a pick operation corresponds, while the second column <b>306</b> indicates the particular location, e.g., shelf or rack location, where the item to be picked is located.</p><p id="p-0047" num="0046">Consider, for example, row <b>312</b> which indicates that one of item H is to be picked from the shelf location S1 of Area A. Row <b>314</b> indicates that, as part of a second pick operation, 3 of Item I should be picked from shelf location S3 in Area B. In order to complete the pick list, the mobile robotic cart, to which pick list <b>300</b> is assigned, will have to travel from Area A to Area B. If a handover is to be implemented, the worker who was associated with the robotic cart for the Area A pick will not accompany the robotic cart as it moves from Area A to Area B, where another worker will perform the Area B pick. However if a decision is made that a handover should not be made as part of the process of the mobile cart moving to Area B, the worker associated with the robotic cart will travel with the cart from Area A to Area B. The process of making handover decisions will be explained in detail below.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>4</b></figref> shows an example order processing and control system <b>400</b> that can be used as the order processing and control system <b>122</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. The control system <b>400</b> includes a network interface (NI) <b>407</b>, processor <b>402</b>, assembly of hardware components <b>408</b>, display <b>409</b>, input device <b>403</b> and memory <b>410</b> which may be, and sometimes are, coupled together as shown in <figref idref="DRAWINGS">FIG. <b>4</b></figref> by bus <b>411</b>.</p><p id="p-0049" num="0048">The network interface <b>407</b> includes a wired or optical interface <b>406</b> with receiver <b>416</b> and transmitter circuitry <b>418</b>. The network interface <b>407</b> also includes a wireless interface <b>404</b> including a receiver circuit <b>412</b> coupled to a receive antenna <b>413</b> and a transmitter circuit <b>414</b> coupled to a transmit antenna <b>415</b>. Via the wired interface <b>406</b> and/or the wireless interface <b>404</b> the control system <b>400</b> can receive and send data including order data. The control system <b>400</b> can also wirelessly communicate instructions, data and task lists, e.g., pick list <b>300</b>, to one or more mobile autonomous vehicles, <b>138</b>, <b>158</b> and/or wireless communications devices used by human workers <b>136</b>, <b>156</b> such as tablet devices, cell phones and/or wireless headsets. Thus, the control system <b>400</b> can receive order information, generate task lists, mobile robotic cart assignments, worker assignments and communicate such information to the workers and/or robotic carts. Location information, e.g., worker and/or robotic cart location information, can be, and sometimes is, communicated to the control system <b>400</b> in real time from worker devices and/or the robotic carts <b>138</b>, <b>158</b>. Task status information, such as task completion of a pick operation or pick list is communicated to the control system <b>400</b> form the robotic carts <b>138</b>, <b>158</b> e.g., wirelessly. Handover decisions and/or worker assignments are communicated to the workers and/or robotic carts <b>138</b>, <b>158</b> wirelessly.</p><p id="p-0050" num="0049">The processor <b>402</b>, e.g., a CPU, controls operation of the control system <b>400</b> in accordance with the invention, e.g., to implement the steps shown in <figref idref="DRAWINGS">FIGS. <b>4</b>, <b>5</b> and <b>6</b></figref> of the present application. The assembly of modules <b>408</b> includes hardware components, e.g., circuity used in some embodiments, such as an application-specific integrated circuit (ASIC) which is a dedicated processor which in a hardware embodiment controls the control system <b>400</b> to implement the method steps shown in the various other figures. Memory <b>410</b> includes control routine <b>420</b>, which when executed by the processor <b>402</b> causes the server to operate in accordance with the invention and perform the steps of the methods shown in <figref idref="DRAWINGS">FIGS. <b>4</b>, <b>5</b> and <b>6</b></figref>. The memory also includes an assembly of components, e.g., an assembly of software components <b>422</b>, which include software or lines of code for controlling the control system <b>400</b> to implement one, more or all of the steps of the methods described herein.</p><p id="p-0051" num="0050">The memory <b>410</b> also includes data/information <b>424</b> which includes order information <b>450</b>, worker location information <b>460</b>, human worker, e.g., picker, to robotic cart assignment information <b>462</b>, pick lists <b>464</b>, robotic cart assignment information <b>470</b>, warehouse location and distance information, e.g., a warehouse map <b>472</b>, and a set of generated time costs, e.g., values, <b>474</b>. The order information <b>450</b> includes information <b>452</b> corresponding to a first order which includes a list of ordered items <b>456</b>. The order information <b>452</b> may, and also sometimes does, include billing and/or contact information for a customer to which the first order <b>452</b> corresponds. The order information <b>450</b> includes similar order information for one or more additional orders including order Z information <b>458</b>. The order Z information <b>458</b> includes a list of ordered items <b>459</b> in addition to customer and/or billing info corresponding to order Z. The control system <b>400</b> generates picks lists <b>464</b> from the order information. Pick lists <b>464</b> includes a first pick list <b>466</b> and additional pick lists including pick list X <b>468</b>. The pick list <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref> may be, and sometimes is, stored in the set of pick lists <b>464</b> and is an example of the content included in a pick list.</p><p id="p-0052" num="0051">Worker location information <b>460</b> includes a list of workers and their current location. Human picker to robotic cart assignment information <b>462</b> includes worker availability information, e.g., whether they are occupied with one or more assignments corresponding to a robotic cart and corresponding pick(s) or are available at the present time or likely to be available in the near future to perform a pick. From robotic cart assignment information <b>470</b> the controller <b>400</b> knows which cart a worker is currently assigned to. Robotic cart assignment information <b>470</b> indicates a task list, e.g., pick list assigned to a cart. Based on the pick list assigned to the cart and the worker assigned to a cart a pick list, worker and robotic cart are associated with each other for one or more location dependent operations.</p><p id="p-0053" num="0052">The data and information <b>424</b> also includes, in some but not necessarily all embodiments, warehouse location and distance information <b>472</b>, e.g., map information, which can be used to estimate travel time between locations and the distance between a task or current location and a meeting location. This information <b>472</b> may be, and in some embodiments is, used in generating the time cost estimates <b>474</b>. The time cost estimates <b>474</b> include first and second time cost values <b>476</b>, <b>478</b> corresponding to a potential cart handoff. The first time cost value <b>476</b> is based, in some embodiments, on a sum of one or more worker times which are likely to be incurred or used if a handover is not implemented when a cart switches from one task location to the next. The second time cost value <b>478</b> is based, in some embodiments, on one or more worker times which are likely to be incurred or used if a handover to a second worker is made, rather than allowing a first worker to stay with a robotic cart as it moves from one task location to the next. By comparing the cost values <b>476</b> and <b>478</b> a handover decision can be, and sometimes is, made as will be discussed below, e.g., with the decision (handover or no handover) corresponding to the lower cost value normally being selected.</p><p id="p-0054" num="0053">During operation, the control system <b>122</b> can, and sometimes does, take into consideration the various times that can be associated with satisfying a task list such as the pick list <b>300</b> shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. Times, which can be considered by the control system <b>122</b>, include the time a worker <b>136</b> or <b>156</b> spends traveling to meet up with an autonomous vehicle, e.g., cart <b>138</b>, the time a worker spends logging into the autonomous vehicle so he/she can use the device, and/or the time spent by a worker traveling between locations with a cart. Such times are all examples of worker time which can be considered wasted in that the worker is not performing the productive tasks to be completed using the autonomous vehicle, e.g., performing pick operations or placement operations. In a pick operation a worker picks an item from a storage location and then places it on the robot device e.g., robotic cart. In a placement operation a worker removes the item from the robotic cart and places it in a storage location, e.g., as part of a stocking or restocking operation. In various embodiments time spent by a worker performing activities other than picking or placing items are considered costs which ideally should be minimized. Such an approach considers worker time an important resource that should be utilized efficiently when possible.</p><p id="p-0055" num="0054">While worker time can be thought of as a &#x201c;cost&#x201d;, autonomous vehicles <b>138</b>, <b>158</b> are another type of resource and thus &#x201c;cost&#x201d; to implement a system. Idle robotic time is often less important than a worker being idle from an efficiency perspective, but in some, but not necessarily all, embodiments it is considered as a factor that is taken into consideration when allocating resources. Allowing a robotic cart <b>138</b> or <b>158</b> to be idle for a short period of time while it is parked or heading to a site for a worker to meet up with it can be useful in that it potentially saves worker time in that a worker can complete one task and then join up with the mobile cart and perform the next task without a period of work idle time in between. Given the relative value of a worker's time, compared to the cost of a robotic cart being idle for a short period of time, incurring some cart idle time in a handoff may be and often is acceptable but should be accounted for if possible as part of a handoff cost.</p><p id="p-0056" num="0055">Other factors that can affect system efficiency include an individual worker's particular suitability for particular pick operations, e.g., a tall worker may be better suited for particular location picks, e.g., picks from high locations due to the workers height, than a shorter worker. The cognitive condition of a particular worker may also be a factor in determining whether a worker should be assigned to a particular cart. For example, as a worker becomes tired he/she may become more likely to make login errors or get lost while navigating through a warehouse to meet up with a cart. Accordingly, the probability of a particular worker making an error when assigned to an autonomous vehicle to complete one or more operations can be, and in some, but not necessarily all, embodiments is, taken into consideration when making a resource allocation, e.g., when assigning a worker to a cart.</p><p id="p-0057" num="0056">While the effective completion of location dependent tasks is an important factor in the control system <b>122</b> allocating resources, allocation of workers to particular task lists can have an effect on the distribution of workers in the warehouse <b>120</b>. It can be desirable to take into consideration the distribution of workers in a warehouse when deciding whether a worker should continue to work with an autonomous vehicle and move with it or if another worker should be assigned to meet with the autonomous vehicle and continue to complete the list of tasks associated with the device. The switch or continued association of a user (worker) with a mobile device (robotic cart) <b>138</b> or <b>158</b> will have an effect on the distribution of workers in the warehouse <b>120</b>. In some embodiments how the assignment of a worker <b>136</b>, <b>156</b> to a robotic cart and where the worker will be located as he/she works with the robotic cart is taken into consideration with assignments to carts being controlled, in some but not all cases, to affect or manage the distribution of workers in the warehouse <b>120</b>, e.g., to avoid congestion and ensure an adequate number of workers in each part of a warehouse <b>120</b> given the current or expected load conditions.</p><p id="p-0058" num="0057">In various embodiments an automated process for assigning an autonomous vehicle <b>138</b> or <b>158</b> to be used for location dependent tasks and then assigning one or more workers <b>136</b>, <b>156</b> to use the autonomous vehicle is described. By taking into consideration various factors corresponding to what may be considered costs and/or a particular goal of distributing workers throughout the warehouse <b>120</b> to avoid congestion and to have sufficient workers in an area for current or expected future needs, an effective allocation of autonomous vehicles and workers can be achieved by the control system <b>122</b> without the need for fixed zones.</p><p id="p-0059" num="0058">In some embodiments where zones are used in combination with one or more methods, crossing a zone can be viewed as a &#x201c;cost&#x201d; which can be, and sometimes is, factored into whether a worker should remain with an autonomous vehicle or be assigned to a new autonomous vehicle. In this way while &#x201c;zones&#x201d; may exist and be defined, they are not rigid constructs in the system <b>100</b>, and a worker <b>136</b>, <b>156</b> is not limited to a particular zone and can in fact cross over into another zone if the resource allocation system considers it to be effective for a worker to do so.</p><p id="p-0060" num="0059">In various embodiments a cart <b>138</b> or <b>158</b> is assigned to be used to complete a list, e.g., pick list <b>300</b>, of location dependent tasks, e.g., picking items for one or more orders. A worker, sometimes referred to as an associate, is then assigned to the robotic cart <b>138</b> or <b>158</b> to perform the initial location dependent task, e.g., first pick or placement operation on the task list. The worker <b>136</b> or <b>156</b> assigned to the initial pick can be referred to a first worker for convenience. For purposes of explanation assume the worker <b>136</b> is assigned to the initial pick. In such a case by associating a worker <b>136</b> with an autonomous vehicle <b>138</b> and task list <b>300</b>, the worker <b>136</b> is assigned one or more tasks on the list, with the worker <b>138</b> being responsible for performing the tasks on the list associated with the autonomous vehicle <b>138</b> while he/she remains with the autonomous vehicle <b>138</b>.</p><p id="p-0061" num="0060">As part of the resource allocation processes implemented by the control system <b>122</b>, a decision is made as to whether, once a task is completed, e.g., whether it be the initial task or a subsequent task, the worker <b>136</b> assigned to perform the task should be assigned to another robotic cart, and thus another location dependent task list, or should remain and travel with the autonomous vehicle <b>136</b> to the next location on the device's assigned task list <b>300</b>. This decision in various embodiments is an automated decision involving a cost function that is evaluated and used for decision making by the processor of the control system <b>122</b> and/or a processor in the mobile cart <b>138</b> which acts as part of the control system <b>122</b> when making handover decisions.</p><p id="p-0062" num="0061">In various embodiments the control system <b>122</b> generates, e.g., determines based on estimation, a first cost (C1) value, associated with the associate assigned to a cart continuing to the location of the next task on the task list and performing the next task. A second cost value (C2), which is a cost that would be incurred, from a resource utilization perspective, if a second worker <b>156</b> were to meet the autonomous vehicle <b>138</b> and take over and perform the next operation and the first worker <b>136</b> were to move on to work with another robotic cart <b>136</b>, is determined, e.g., estimated. The first and second costs ((C1) and (C2)) are then compared, and a decision is made whether the autonomous vehicle <b>138</b>, e.g., robotic cart, handoff should be made. Handoff costs may be, and sometimes are, weighted to take into consideration whether a cart is processing a high priority order. In some such embodiments, the cost of completing a handoff for a high priority order is increased compared to the cost of not completing a handoff since the handoff may result in or add to delays in completing an order. This discourages handovers, also sometimes referred to as handoffs, and the possible associated time delays, in the case of high priority orders.</p><p id="p-0063" num="0062">If the decision is to implement a cart handoff, the worker <b>136</b> associated with the cart <b>138</b>, e.g., the first worker associated with the first cart, is assigned to another cart, e.g., cart <b>129</b>, and the second worker <b>156</b> is assigned to the first cart <b>138</b>. The cart <b>138</b> can, and sometimes does, automatically travel from the first pick location to the second pick location and, depending on the embodiment, may meet the second worker on the way to the second location.</p><p id="p-0064" num="0063">By taking into consideration a wide range of factors, in the terms of weights which may, and sometimes do, contribute to the value generated by a cost function, used by the control system <b>122</b> in determining a cost, used in the handover decision making process, efficient utilization of workers and/or robotic resources can be, and sometimes is, achieved, while also allowing for effective management of the distribution of workers throughout a warehouse.</p><p id="p-0065" num="0064">While the decision whether or not to implemented a handoff can be, and sometimes is, made at or near the time of completion of an individual task or set of tasks at a location, in at least some cases a complete set of tasks is determined promptly after assignment of a list of tasks and corresponding locations to a robotic cart, e.g., prior to a first worker meeting up with the robotic cart to implement the first of the assigned operations. In such embodiments the list of locations and decisions of when handoffs are to occur is loaded into an autonomous vehicle, e.g., robotic cart, while the cart is docked or in an area with known reliable communications. Thus, the risk of problems with wireless communications being interrupted or unreliable will not affect the mobile device's, e.g. mobile robotic cart's, ability to complete an assigned task list and provide information to the assigned associate(s) about a handoff. Updates of the task list and handoff decisions can be made on the fly in cases where cart is in wireless communications with the control system <b>122</b>, e.g., with handoff decisions being made and updated as the worker signals completion of a task, e.g., item pick, by pressing a button or screen to send a task completion signal to the control system <b>122</b> responsible for task assignments.</p><p id="p-0066" num="0065">In some, but not all embodiments, the decision of whether a worker should remain with an autonomous vehicle, e.g., robotic cart <b>138</b> or <b>158</b>, and move to the next location or a device handover should be implemented can be, and sometimes is, implemented based on a comparison of two cost values where each cost value is determined based on one or more factors or weights. The weights can be additive or multiplicative and used to take into consideration various costs which may be, and often are, not directly associated with worker travel time.</p><p id="p-0067" num="0066">In some embodiments the equation used by the control system <b>122</b> to decide whether a handoff is implemented is implemented as follows:</p><p id="p-0068" num="0067">Implement handoff when C1&#x3e;C2, where:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0068">C1 is an estimate of a first cost of a first worker associated with a first autonomous vehicle remaining with the first autonomous vehicle and optionally, in some embodiments, the time of the first worker to perform a next operation assigned to the first autonomous vehicle which is to be performed at a second location which is different from a first location where the first worker is completing one or more tasks associated with the first autonomous vehicle; and</li>        <li id="ul0002-0002" num="0069">C2 is an estimate of a second cost of a second worker being associated with the first autonomous vehicle and, reaching the second location where the first autonomous vehicle is to perform the next operation and the second cost further optionally including one more or all of:</li>        <li id="ul0002-0003" num="0070">i) an additional cost (e.g., travel plus login time) associated with the first worker becoming associated with an additional cart (e.g., so that the first worker can continue working to pick or place items); ii) the time required for the second worker to complete the next task (which could be different based on the second worker's individual characteristics such as height which might be different from the physical characteristics of the first worker); and/or iii) an additional autonomous vehicle cost associated with a time period during which one or more robots may be unaccompanied or out of use to implement the handover (e.g., a period of time the first robotic cart may be idle waiting for the second worker to takeover and/or a time period the additional cart may be idle waiting for the first worker to take over use of the additional robotic cart).</li>    </ul>    </li></ul></p><p id="p-0069" num="0071">In various embodiments the costs C1 and/or C2 are generated using one or more additive or additional weight values used to reflect potential costs associated with a handover including potential delays associated with completing the set of tasks assigned to the first cart and/or a weight used to factor in the cost of the first worker changing position to the second location if the handover is not implemented, where this cost would be negative if the second location is a preferred location from the perspective of achieving worker distribution or positive if the second location is a preferred location for the first worker from a worker distribution perspective.</p><p id="p-0070" num="0072">In some embodiments C1 can be expressed as a sum as follows:<ul id="ul0003" list-style="none">    <li id="ul0003-0001" num="0000">    <ul id="ul0004" list-style="none">        <li id="ul0004-0001" num="0073">C1=Sum of ((T1 (time for first worker (W1) to move from the first location (L1) to the second location(L2))+optionally one or more of i) a cost metric based on the time for first worker (W1) to complete the next task at second location (L2); ii) a weight based on the priority of the ongoing list of operations associated with the first cart (e.g., priority of order to which the first mobile cart corresponds&#x2014;note that for a high priority order this weight would be negative to decrease the probability of a handoff which might increase overall time for the first list of operations to be completed); iii) a weight based on the effect (a negative weight if good effect, a positive weight if bad effect) of having the first worker (W1) reposition to second location (L2) thereby changing the worker distribution in the warehouse where the first autonomous vehicle is being used; and iv) a cost function based on whether the first worker (W1) will cross a zone boundary in a warehouse where zones are defined, e.g., with a weight associated with a zone boundary crossing being positive reflecting an increased cost to thereby discourage movement of workers between zones).</li>    </ul>    </li></ul></p><p id="p-0071" num="0074">In some embodiments C2 can be expressed as a sum as follows:<ul id="ul0005" list-style="none">    <li id="ul0005-0001" num="0000">    <ul id="ul0006" list-style="none">        <li id="ul0006-0001" num="0075">C2=a value (T2) representing the time required for an additional (e.g., second) worker (W2) to travel to the second location (L2) plus one, more or all of the following: i) the time for the second worker (W2) to login and take over operation of the first autonomous vehicle; ii) the time for the second worker (W2) to perform the next task associated with the first autonomous vehicle at the second location (L2); iii) the time required to the first worker (W1) to meet up with an additional autonomous vehicle and begin performing operations with the additional autonomous vehicle (this may include login times); iv) a weight associated with the first or second worker (W1 or W2) making an error during the handover, e.g., a navigation error delaying one of the first and second workers (W1 or W2) meeting with the first or additional autonomous vehicle within an expected amount of time; and v) a robotic cost in terms of an amount of time the first autonomous vehicle or a second autonomous vehicle will go unused due to a time period associated with a handover that would not occur if the handover was not performed.</li>    </ul>    </li></ul></p><p id="p-0072" num="0076">The times and/or costs used in computing the above cost values are expressed as numbers. This allows the cost components to be added or weighted without regard to the units (e.g., seconds or other type of units) the individual cost components correspond to or otherwise represent.</p><p id="p-0073" num="0077">While explained in the context of a robotic cart used for pick or stocking operations, the methods and apparatus of the invention relating to worker assignment to autonomous vehicles are applicable to a wide range of applications where an autonomous vehicle is assigned a series of location specific tasks which involve a human worker. For example, in manufacturing operations an autonomous vehicle may transport an item being assembled between a plurality of workstations with a worker being responsible for one or more tasks at each workstation. The methods and apparatus of the invention can be, and sometimes are, used in such embodiments to determine when a worker should stay with the autonomous vehicle and assist in the operations at various workstations and/or when the autonomous vehicle should be handed off to another worker. In the case of the handoff the new worker replaces the initial worker associated with the autonomous vehicle and performs one or more additional location dependent tasks, e.g., item assembly operations.</p><p id="p-0074" num="0078"><figref idref="DRAWINGS">FIG. <b>5</b></figref> shows how <figref idref="DRAWINGS">FIGS. <b>5</b>A, <b>5</b>B and <b>5</b>C</figref> can be combined to form the full example order processing and autonomous vehicle control routine <b>500</b> used in some embodiments. Steps shown in <figref idref="DRAWINGS">FIG. <b>5</b></figref> are implemented by the order processing control system <b>122</b> or <b>400</b> and/or robotic cart <b>138</b> assigned to a pick list. The order processing and autonomous vehicle control routine <b>500</b> starts in start step <b>502</b> with the routine being executed by processor <b>402</b>.</p><p id="p-0075" num="0079">Operation proceeds from step <b>502</b> to step <b>504</b>, in which one or more orders are received, e.g., from customer devices <b>108</b>, <b>110</b>. Then, in step <b>506</b>, items corresponding to one or more orders are allocated to a pick list, e.g., a first pick list such as the one shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>. After the allocation of items to the pick list, in step <b>508</b> location information for the items is determined, e.g., from stored warehouse location information <b>472</b> which includes information about the warehouse layout and locations of stored items. By including the location information with ordered item identification information and item quantity information a complete pick list, e.g., a first pick list, is generated in step <b>508</b>. In step <b>510</b>, the pick list generated in step <b>508</b> is stored in memory, e.g., so that it can be assigned to a robotic cart.</p><p id="p-0076" num="0080">Operation proceeds from step <b>510</b> to step <b>512</b> in which the generated pick list is assigned to an autonomous vehicle, e.g., a first robotic cart. The pick list is a list of location dependent operations, e.g., pick operations, with location information about where the operations are to be performed.</p><p id="p-0077" num="0081">In step <b>513</b> a worker, e.g., a first worker is assigned to the first robotic cart, e.g., to perform one or more operations on the pick list that was assigned to the first robotic cart. Accordingly, at the end of step <b>513</b> the generated, e.g., first, pick list, first worker <b>136</b> and first robotic cart <b>138</b> are associated with each other. Operation proceeds from step <b>513</b> to step <b>514</b> wherein the first pick list, first cart information and assigned worker information are stored in memory <b>410</b>, e.g., as a set of combined pick list, robotic cart and worker assignment information <b>471</b>.</p><p id="p-0078" num="0082">In step <b>516</b> the assignment information is communicated to the first robotic cart and/or first worker so that they know they are to work together on completing one or more items on the first pick list. Communication to the first worker may be via a radio headset, wireless pad device, cell phone or other communication device and/or the display or audio output device of one of the robotic carts. In this way the first worker is informed of his assignment to the first robotic cart and optimally where the worker needs to go to meet up with and log in to the first robotic cart.</p><p id="p-0079" num="0083">Then in step <b>518</b> the first robotic cart is controlled to travel to an initial location, e.g., the first pick location in the pick list. This control can be and sometimes is simply by the control device specifying the location in the pick list with the robotic cart processor being configured to access the pick list and use it to determine the location to which the robotic cart should move and/or by an explicit move command from the control system <b>122</b>.</p><p id="p-0080" num="0084">Operation proceeds from step <b>518</b> to step <b>524</b> of <figref idref="DRAWINGS">FIG. <b>5</b>B</figref> via connecting node A <b>520</b>. In step <b>524</b> the first robotic cart <b>138</b> is operated to display pick information to the worker while at the pick location. In the case of the first instance of step <b>524</b> this step will be performed at the first pick location in the assigned pick list. However, in subsequent iterations of step <b>524</b> the displaying of pick information will be at subsequent pick locations, e.g., the second, third or some other pick location on the pick list. In step <b>526</b> a determination is made if a worker, and thus robotic cart, handover should be implemented for the next pick operation on the pick list. Step <b>526</b> involves a call to a handover determination subroutine such as the one shown in <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The handover determination subroutine <b>600</b> returns an indication whether a handover is to be implemented or if the current worker associated with the robotic cart, e.g., the first worker associated with the first robotic cart should continue to work with the cart and move to the next pick location.</p><p id="p-0081" num="0085">In step <b>528</b> completion of a pick operation at the current pick location is detected. This operation may correspond to the robotic pick cart <b>138</b> detecting placement of the items which were to be picked at a location on the robotic cart and/or to an operator input, e.g., touch of a bottom on the cart screen signaling pick completion at a location. The completion of the pick of items at a location is signaled by the cart <b>138</b> to the control system <b>122</b>. The completion of the pick of items at a location is detected at the control system based on the signal or information sent by the robotic cart <b>138</b>.</p><p id="p-0082" num="0086">With the completion of the pick operations at the current location having been detected at step <b>528</b> operation proceeds from step <b>528</b> to step <b>538</b> (shown in <figref idref="DRAWINGS">FIG. <b>5</b>C</figref>) via connecting node B <b>536</b>.</p><p id="p-0083" num="0087">In step <b>538</b> the first robotic cart is controlled to take an action based on the determination that a robotic cart handover should be implemented. Step <b>538</b> in various embodiments includes a number of sub steps including step <b>540</b> in which a check is made as to whether a handover is to be implemented. This involves checking, at the robotic cart <b>138</b> or control system <b>122</b>, whether the determination was made that a handover should be performed as part of moving to the next pick location or if the current worker working with the robotic cart <b>138</b> should continue working with the robotic cart <b>138</b> and move to the next pick location. If in step <b>540</b> it is determined that a handover is not to be implemented, operation proceeds to step <b>542</b> in which the robotic cart is operated to output a worker notification instructing the worker working with the robotic cart <b>138</b> to move to the next, e.g., second, pick location. Then, in step <b>546</b> the robotic cart <b>138</b> is operated to automatically proceed to the next pick location with the worker.</p><p id="p-0084" num="0088">Operation proceeds from step <b>546</b>, via connecting node C <b>566</b>, to step <b>524</b> where the robotic cart provides pick information to the worker, e.g., at the location to which the robotic cart <b>138</b> moved. By iterating through step <b>524</b> and the other steps a handover can be considered before each possible robotic cart moves to a new pick location.</p><p id="p-0085" num="0089">If in step <b>540</b> the check reveals that the decision was that a handover should be implemented, e.g., the first robotic cart should be handed off in an automated fashion to a second worker <b>156</b>, then operation proceeds from step <b>540</b> to step <b>548</b>. In step <b>548</b> the control system <b>122</b> assigns a second worker <b>156</b> to the first robotic cart <b>138</b>. Then operation proceeds to step <b>550</b>. In step <b>550</b> the first robotic cart <b>138</b> is routed to a meeting location where the second worker <b>156</b> can log in to the robotic cart <b>138</b> before proceeding to work using the cart <b>138</b>. In step <b>550</b> the first robotic cart is controlled to automatically move to the meeting location which can be a cart parking area, e.g. on the second workers way to the next pick location, or the second pick location whichever is more efficient.</p><p id="p-0086" num="0090">Step <b>550</b> includes in some embodiments decision step <b>552</b> in which a check is made as to whether the first robotic cart is to meet the new, e.g., second worker <b>156</b> at a meeting location prior to the first robotic cart reaching the next, e.g., second, pick location. If the first robotic cart is to meet the second worker <b>156</b> at a meeting location on the way to the next pick location operation proceeds to step <b>556</b> in which the first robotic cart <b>136</b> is operated to automatically proceed to the meeting location, e.g., without the first worker. Then in step <b>558</b>, e.g., after reaching the meeting location which may be a cart parking area near the next pick location, the first robotic cart requires the new, e.g. second, worker to complete a worker login procedure after meeting up with the first robotic cart and before the cart moves from the meeting location to the next pick location. Once the second worker has completed the login at the meeting location, the first robotic cart in step <b>560</b> guides and travels with the second worker <b>156</b> to the next pick location. Operation proceeds from step <b>560</b> to step <b>524</b> via connecting node C <b>566</b>.</p><p id="p-0087" num="0091">In step <b>552</b> if it was determined that the first robotic cart was not to meet the new, e.g., second worker, at a meeting location prior to the robotic cart reaching the next pick location operation proceeds to step <b>562</b>. In step <b>562</b> the robotic cart <b>138</b> is controlled to proceed automatically to the next pick location which is used as the meeting location for the first robotic cart <b>138</b> to meet the second worker <b>156</b>.</p><p id="p-0088" num="0092">Operation proceeds from step <b>562</b> to step <b>564</b> in which the first robotic cart is operated to require the second worker to log in and complete the login after the second worker <b>156</b> meets the robotic cart.</p><p id="p-0089" num="0093">Whether the meeting location is before or at the second pick location, a handover involves a second worker cart login operation that takes some amount of worker time that would not be required if the first worker remained with the cart and a handoff had not been implemented. Accordingly, it should be appreciated that second worker login time is a worker time cost that should be factored into and considered when deciding whether to implement a handoff or not.</p><p id="p-0090" num="0094">By returning to step <b>524</b> a loop is performed in which pick operations will be performed after each move to a new pick operation and decisions whether a handover should occur can be made and considered with each move of the robotic cart <b>138</b>.</p><p id="p-0091" num="0095"><figref idref="DRAWINGS">FIG. <b>6</b></figref> shows the steps of an example handover determination routine that can be, and sometimes is, called by the example order processing and autonomous vehicle control routine shown in the other figures of this application.</p><p id="p-0092" num="0096"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a flowchart <b>600</b> of an example handover determination method implemented by a handover determination routine. The steps of example handover determination method are implemented by control system <b>122</b> or <b>400</b>, e.g., under the control of processor <b>402</b>.</p><p id="p-0093" num="0097">Operation of the handover determination method starts in step <b>602</b>, e.g., in response to call from step <b>526</b> of flowchart <b>500</b> of the main routine of flowchart <b>500</b>. Operation proceeds from start step <b>602</b> to step <b>604</b>. In step <b>604</b> the control system accesses information indicating the location of one or more workers, said one or more workers including a second worker. Operation proceeds from step <b>604</b> to step <b>606</b>. In step <b>606</b> the control system accesses task location information, e.g., pick list information, indicating a first location where a first operation associated with a first autonomous vehicle, e.g., a first robotic cart, is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed. Operation proceeds from step <b>606</b> to step <b>608</b>.</p><p id="p-0094" num="0098">In step <b>608</b> the control system determines whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association with an autonomous vehicle from one human picker or worker to another) for the second operation should be implemented based on a first estimated time cost for a first worker associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle. In some embodiments, the first estimated time cost is based on at least a time for the first worker to travel with the first autonomous vehicle to the second location.</p><p id="p-0095" num="0099">In some but not necessarily all embodiments, the second estimated time cost is based on at least a time for the first autonomous vehicle to travel unaccompanied at least a portion of the way from the first location to meet the second worker.</p><p id="p-0096" num="0100">Step <b>608</b> includes steps <b>610</b>, <b>614</b>, <b>620</b>, <b>622</b>, <b>624</b> and <b>626</b>. In step <b>610</b> the control system determines a first cost value based on at least the amount of time required for the first worker assigned to the first autonomous vehicle to travel from the first location to the second location. In some embodiments, step <b>610</b> includes step <b>612</b>, in which the control system determines the first cost value based on one or more of all of: i) a cost metric based on the time for the first worker (W1) to complete the second operation (e.g., task) at the second location; ii) a weight based on the priority of the ongoing list of operations associated with the first autonomous vehicle (e.g., priority of order to which the first autonomous vehicle corresponds&#x2014;note that for a high priority order this weight would be negative to decrease the probability of a handoff which might increase overall time for the first list of operations to be completed); iii) a weight based on the effect (e.g., a negative weight if good effect, a positive weight if bad effect) of having the first worker reposition to the second location, thereby changing the worker distribution in the warehouse where the first autonomous vehicle is being used; and iv) a cost function based on whether the first worker will cross a zone boundary in a warehouse, where zones are defined (e.g., with a weight associated with a zone boundary crossing being positive reflecting an increased cost to thereby discourage movement of workers between zones). Operation proceeds from step <b>610</b> to step <b>614</b>.</p><p id="p-0097" num="0101">In step <b>614</b> the control system determines a second cost value based on at least the second amount of time required for the second worker to travel to the second location. In some embodiments, step <b>614</b> includes one or both of step <b>616</b> and step <b>618</b>. In step <b>616</b>, the control system determines the second cost value based on one, multiple, or all of the following: i) the time for the second worker to login and take over operation of the first autonomous vehicle; ii) the time for the second worker to perform the next task associated with the first autonomous vehicle at the second location; and iii) the time required to the first worker to meet up with an additional autonomous vehicle and begin performing operations with the additional autonomous vehicle (this may include login times). In step <b>618</b>, the control system determines the second cost value based on one, multiple or all of: i) a weight associated with the first or second worker making an error during the handover, e.g., a navigation error delaying one of the first and second workers meeting with the first or additional autonomous vehicle within an expected amount of time; and ii) a robotic cost in terms of an amount of time either of the first autonomous vehicle or the additional autonomous vehicle go unused due to a time period associated with a handover that would not occur if the handover was not performed.</p><p id="p-0098" num="0102">Operation proceeds from step <b>614</b> to step <b>620</b>. In step <b>620</b>, the control system compares the first cost value to the second cost value. If the first cost value is greater than the second cost value, then operation proceeds from step <b>620</b> to step <b>622</b>, in which the control system makes a decision to implement a handover. However, if the first cost value is not greater than the second cost value, then operation proceeds from step <b>620</b> to step <b>624</b>, in which the control system makes a decision not to implement a handover. Operation proceeds from step <b>622</b> or step <b>624</b>, to step <b>626</b>, in which the control system returns the handover decision to the main routine.</p><p id="p-0099" num="0103">Various embodiments are directed to a decision making system, e.g., a system for making worker to robotic pick cart assignment decisions. In some embodiments the work assignments are on a per autonomous vehicle and task location basis, e.g., with a decision as to whether a worker handoff should be implemented for each time an autonomous vehicle will change locations to complete tasks on a location dependent task list assigned to the autonomous vehicle. In some embodiments the assignment logic determines the total worker, e.g., picker, time that will be used at each pick (e.g., a set of one or more pick operations at a task location) to select worker assignments that minimize the total picker time used to complete a location dependent task list and/or achieves one or more other objectives such as a preferred distribution of workers in a warehouse. This can be, and sometime is, accomplished by calculating the difference in time that will be required between staying with the current picker, e.g., continuing to keep the current worker assigned to a mobile pick cart or implementing a handoff, e.g., assigning a second picker, e.g., worker, for the next pick to be performed with the robotic cart.</p><p id="p-0100" num="0104">The system allows individual workers operating as pickers to operate in general zones that can dynamically change the area of an individual's worker's zone, e.g., area of operation, based on the contextual composition of a pick list. While zones may be used in some embodiments, the methods do not require the use of zones.</p><p id="p-0101" num="0105">In one example embodiment a robotic cart goes from pick location to pick location with a person and/or autonomously moves between pick locations. When a cart moves between locations without a worker, a worker meets the pick location to which the cart is moving or at a point along the route to the new location. In this way a handoff of the cart is implemented leaving the worker previously working with the cart with the task of meeting another cart and continue to perform picks with the new cart. Thus a person may move with the cart for some portions of a location pick list. However when a handoff is made during implementation of a pick list, the robotic cart normally travels without a person for some portion of the route and meets a person at the next pick location or on the way to the next pick location. Consider for example an example case where there are four picks, A, B, C and D assigned to a first robotic cart where each of the four picks corresponds to a different location. The robotic cart leads a first worker initially assigned to perform picks with the first cart from pick location A, then to pick location B, etc. This is generally how the robot carts work for most applications. However, a handoff can be, and sometimes is, implemented at some point during implementation of a task list if it is efficient to do so.</p><p id="p-0102" num="0106">In the case of strict zone picking a handoff is implemented when the robotic cart crosses a zone boundary. Forced handoffs at strict zone boundaries in all cases can prevent people from walking all the way across a warehouse a lot but can be wasteful and/or have other adverse effects as previously discussed.</p><p id="p-0103" num="0107">The dynamic handoff decision making implemented in accordance with the invention can efficiently decide when a handoff should be implemented avoiding issues that exist with strict zone based handoffs. In accordance with the invention, in some embodiments for one or more picks, the system, e.g., a control system, looks at and determines how much time it will take an associate to go from the current pick to the next pick. This is used to generate a first cost metric which equals or is a function of the determined amount of time. If the first cost metric is greater than a second cost metric that is based on one or more costs associated with a handoff of the mobile robotic cart to a second worker, a handoff will be implemented. The second cost metric is based on, e.g., a function of the time it takes a first worker currently assigned to the robotic cart being used to go find a new robot and log in to continue working and the additional time another worker, e.g., worker 2 will spend to meet and log into the first robotic cart that was being used by worker 1. If cart idle time will be involved with a handoff this maybe and sometime is included as a handoff cost but with a lesser impact than work time, e.g., with each unit of cart idle time contributing a fraction, e.g., 1/10, of a corresponding unit of worker time to the estimated handoff cost. Thus, in the automated decision process, the cost of a first worker remaining with an autonomous vehicle and continuing to perform tasks associated with that device is compared to the cost of a change in workers assigned to work with the first autonomous vehicle. The automated decision to implement a handoff effectively creates a &#x201c;virtual zone&#x201d; from the perspective of an individual worker or set of works which is dynamic in size based on the cost of handoffs and which can change over time. This can lead to efficiencies over strict fixed zone systems.</p><p id="p-0104" num="0108">Consider for example one example case in which a first worker, named John, is assigned to a first robotic cart, e.g., RC1, in a warehouse with 4 products corresponding to different locations in the first robotic cart's pick list. The system calculates that as the first worker, John, goes through the pick list, whether it would be more time-efficient for the first robotic cart to stay with the first worker John or meet up with a second worker, e.g., Rob, in another area of the warehouse to perform a pick on the pick list after John completes one of the picks on the pick list associated with the first robotic cart. The goal is to minimize the amount of total picker time needed to complete the pick list while also minimizing worker time wasted due to mobile cart handoffs. In one example, the control system determines based on the relative costs (e.g., time) associated with the first worker staying with the first robotic cart vs. the cost of a handoff, that after 3 products are picked, that it would be more efficient to meet up with the second worker, Rob, at a pick location or on the way to a pick location on the list, e.g., the pick location of the item 4 rather than stay with the first worker, John. In one such embodiment, the robotic cart is programmed to automatically travel between the last pick location where the third pick is made by the first worker to the fourth pick location where the second worker is to pick the fourth item and place it on the robotic cart. Along the path between the third and fourth item pick locations or at the fourth pick location the robotic cart may stop and wait for the second worker, Rob, to meet the cart and login. Since the cart is able to wait for the second worker, the second worker does not have idle time between pick assignments and can complete whatever assignment he is working on before meeting the first robotic cart. To the extent that the first robotic cart will be idle during a handoff, the anticipated amount of time the cart will be idle can be taken into consideration as a handoff cost and added to a time related cost used in estimating the cost of the handoff. However, since cart idle time is often a relatively small cost as compared to the cost of worker time, in some embodiments, cart idle time is not factored into the cost of a handoff.</p><p id="p-0105" num="0109">The worker to robotic cart assignment process of the invention can and sometimes does result in decoupling of a worker, e.g., picker, from the mobile autonomous vehicle, e.g., item hauler used to transport items picked by the worker associated with the mobile autonomous vehicle.</p><p id="p-0106" num="0110">In one example embodiment the invention may result in a work/robotic cart assignment and operation flow as follows:<ul id="ul0007" list-style="none">    <li id="ul0007-0001" num="0000">    <ul id="ul0008" list-style="none">        <li id="ul0008-0001" num="0111">1) Associate 1 meets the robot and goes to pick A. When she is done, the robot figures that it will take 65 seconds to get to pick B. Alternately, it will take the Associate 1 60 seconds to get to another robot and log in and another 40 seconds for an associate to get to this robot and log in. 65 seconds&#x3c;100 seconds (60+40) so we move onto pick B with Associate 1.</li>        <li id="ul0008-0002" num="0112">2) Associate 1 goes to pick B. When she is done, the robot figures that it will take 40 seconds to get to pick C. Alternately, it will take Associate 1 70 seconds to get to another robot and log in and another 50 seconds for an associate to get to this robot and log in. 40 seconds&#x3c;120 seconds (70+50) so we move onto pick C with Associate 1.</li>        <li id="ul0008-0003" num="0113">3) Associate 1 goes to pick C. When she is done, the robot figures that it will take 240 seconds to get to pick D. Alternately, it will take Associate 1 50 seconds to get to another robot and log in and another 40 seconds for an associate to get to this robot and log in. 240 seconds&#x3c;90 seconds (50+40) so we will have Associate 1 go find a new robot and this robot will go to meet Associate 2.</li>        <li id="ul0008-0004" num="0114">4) Associate 1 meets the robot and goes to pick D. When the associate is done all the work is done and they go to find another robot. This robot will then go to the correct takeoff location(s).</li>    </ul>    </li></ul></p><p id="p-0107" num="0115">With reference to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, an embodiment in which the order processing and control system <b>122</b> shown in <figref idref="DRAWINGS">FIG. <b>1</b></figref> is implemented as part of an e-commerce platform <b>1400</b> that provides merchant products and services to customers. Thus, in some embodiments, the e-commerce system implements the steps of the method shown in <figref idref="DRAWINGS">FIGS. <b>5</b> and <b>6</b></figref> in addition to performing various other functions. While in some embodiments the features and components of the control system <b>122</b> are incorporated into the e-commerce platform <b>1400</b>, it should be appreciated that the methods and apparatus described herein are in no way limited to e-commerce embodiments and can be used in a wide range of applications including, for example, warehouse systems which do not involve or relate to e-commerce.</p><p id="p-0108" num="0116">While the disclosure contemplates using the apparatus, system, and process related to the e-commerce system to purchase products and services, for simplicity the description herein will refer to products. All references to products throughout this disclosure should also be understood to be references to products and/or services, including physical products, digital content, tickets, subscriptions, services to be provided, and the like.</p><p id="p-0109" num="0117">While the disclosure contemplates that a &#x2018;merchant&#x2019; and a &#x2018;customer&#x2019; may be more than individuals, for simplicity the following description may generally refer to merchants and customers as such. All references to merchants and customers throughout this disclosure should also be understood to be references to groups of individuals, companies, corporations, computing entities, and the like, and may represent for-profit or not-for-profit exchange of products. Further, while the disclosure throughout refers to &#x2018;merchants&#x2019; and &#x2018;customers&#x2019;, and describes their roles as such, the e-commerce platform <b>1400</b> should be understood to more generally support users in an e-commerce environment, and all references to merchants and customers throughout this disclosure should also be understood to be references to users, such as where a user is a merchant-user (e.g., a seller, retailer, wholesaler, or provider of products), a customer-user (e.g., a buyer, purchase agent, or user of products), a prospective user (e.g., a user browsing and not yet committed to a purchase, a user evaluating the e-commerce platform <b>1400</b> for potential use in marketing and selling products, and the like), a service provider user (e.g., a shipping provider <b>1412</b>, a financial provider, and the like), a company or corporate user (e.g., a company representative for purchase, sales, or use of products; an enterprise user; a customer relations or customer management agent, and the like), an information technology user, a computing entity user (e.g., a computing bot for purchase, sales, or use of products), and the like.</p><p id="p-0110" num="0118">The e-commerce platform <b>1400</b> may provide a centralized system for providing merchants with online resources and facilities for managing their business. The facilities described herein may be deployed in part or in whole through a machine that executes computer software, modules, program codes, and/or instructions on one or more processors which may be part of or external to the platform <b>1400</b>. Merchants may utilize the e-commerce platform <b>1400</b> for managing commerce with customers, such as by implementing an e-commerce experience with customers through an online store <b>1438</b>, through channels <b>1410</b>A-B, through POS devices <b>1452</b> in physical locations (e.g., a physical storefront or other location such as through a kiosk, terminal, reader, printer, 3D printer, and the like), by managing their business through the e-commerce platform <b>1400</b>, and by interacting with customers through a communications facility <b>1429</b> of the e-commerce platform <b>1400</b>, or any combination thereof. A merchant may utilize the e-commerce platform <b>1400</b> as a sole commerce presence with customers, or in conjunction with other merchant commerce facilities, such as through a physical store (e.g., &#x2018;brick-and-mortar&#x2019; retail stores), a merchant off-platform website <b>1404</b> (e.g., a commerce Internet website or other internet or web property or asset supported by or on behalf of the merchant separately from the e-commerce platform), and the like. However, even these &#x2018;other&#x2019; merchant commerce facilities may be incorporated into the e-commerce platform, such as where POS devices <b>1452</b> in a physical store of a merchant are linked into the e-commerce platform <b>1400</b>, where a merchant off-platform website <b>1404</b> is tied into the e-commerce platform <b>1400</b>, such as through &#x2018;buy buttons&#x2019; that link content from the merchant off platform website <b>1404</b> to the online store <b>1438</b>, and the like.</p><p id="p-0111" num="0119">The online store <b>1438</b> may represent a multitenant facility comprising a plurality of virtual storefronts. In embodiments, merchants may manage one or more storefronts in the online store <b>1438</b>, such as through a merchant device <b>1402</b> (e.g., computer, laptop computer, mobile computing device, and the like), and offer products to customers through a number of different channels <b>1410</b>A-B (e.g., an online store <b>1438</b>; a physical storefront through a POS device <b>1452</b>; electronic marketplace, through an electronic buy button integrated into a website or social media channel such as on a social network, social media page, social media messaging system; and the like). A merchant may sell across channels <b>1410</b>A-B and then manage their sales through the e-commerce platform <b>1400</b>, where channels <b>1410</b>A may be provided internal to the e-commerce platform <b>1400</b> or from outside the e-commerce channel <b>1410</b>B. A merchant may sell in their physical retail store, at pop ups, through wholesale, over the phone, and the like, and then manage their sales through the e-commerce platform <b>1400</b>. A merchant may employ all or any combination of these, such as maintaining a business through a physical storefront utilizing POS devices <b>1452</b>, maintaining a virtual storefront through the online store <b>1438</b>, and utilizing a communication facility <b>1429</b> to leverage customer interactions and analytics <b>1432</b> to improve the probability of sales. Throughout this disclosure the terms online store <b>1438</b> and storefront may be used synonymously to refer to a merchant's online e-commerce offering presence through the e-commerce platform <b>1400</b>, where an online store <b>1438</b> may refer to the multitenant collection of storefronts supported by the e-commerce platform <b>1400</b> (e.g., for a plurality of merchants) or to an individual merchant's storefront (e.g., a merchant's online store).</p><p id="p-0112" num="0120">In embodiments, a customer may interact through a customer device <b>1450</b> (e.g., computer, laptop computer, mobile computing device, and the like), a POS device <b>1452</b> (e.g., retail device, a kiosk, an automated checkout system, and the like), or any other commerce interface device known in the art. The e-commerce platform <b>1400</b> may enable merchants to reach customers through the online store <b>138</b>, through POS devices <b>1452</b> in physical locations (e.g., a merchant's storefront or elsewhere), to promote commerce with customers through dialog via electronic communication facility <b>1429</b>, and the like, providing a system for reaching customers and facilitating merchant services for the real or virtual pathways available for reaching and interacting with customers.</p><p id="p-0113" num="0121">In embodiments, and as described further herein, the e-commerce platform <b>1400</b> may be implemented through a processing facility including a processor and a memory, the processing facility storing a set of instructions that, when executed, cause the e-commerce platform <b>1400</b> to perform the e-commerce and support functions as described herein. The processing facility may be part of a server, client, network infrastructure, mobile computing platform, cloud computing platform, stationary computing platform, or other computing platform, and provide electronic connectivity and communications between and amongst the electronic components of the e-commerce platform <b>1400</b>, merchant devices <b>1402</b>, payment gateways <b>1406</b>, application developers, channels <b>1410</b>A-B, shipping providers <b>1412</b>, customer devices <b>1450</b>, point of sale devices <b>1452</b>, and the like. The e-commerce platform <b>1400</b> may be implemented as a cloud computing service, a software as a service (SaaS), infrastructure as a service (IaaS), platform as a service (PaaS), desktop as a Service (DaaS), managed software as a service (MSaaS), mobile backend as a service (MBaaS), information technology management as a service (ITMaaS), and the like, such as in a software and delivery model in which software is licensed on a subscription basis and centrally hosted (e.g., accessed by users using a client (for example, a thin client) via a web browser or other application, accessed through by POS devices, and the like). In embodiments, elements of the e-commerce platform <b>1400</b> may be implemented to operate on various platforms and operating systems, such as iOS, Android, on the web, and the like (e.g., the administrator <b>1414</b> being implemented in multiple instances for a given online store for iOS, Android, and for the web, each with similar functionality).</p><p id="p-0114" num="0122">In embodiments, the online store <b>1438</b> may be served to a customer device <b>1450</b> through a webpage provided by a server of the e-commerce platform <b>1400</b>. The server may receive a request for the webpage from a browser or other application installed on the customer device <b>1450</b>, where the browser (or other application) connects to the server through an IP Address, the IP address obtained by translating a domain name. In return, the server sends back the requested webpage. Webpages may be written in or include Hypertext Markup Language (HTML), template language, JavaScript, and the like, or any combination thereof. For instance, HTML is a computer language that describes static information for the webpage, such as the layout, format, and content of the webpage. Website designers and developers may use the template language to build webpages that combine static content, which is the same on multiple pages, and dynamic content, which changes from one page to the next. A template language may make it possible to re-use the static elements that define the layout of a webpage, while dynamically populating the page with data from an online store. The static elements may be written in HTML, and the dynamic elements written in the template language. The template language elements in a file may act as placeholders, such that the code in the file is compiled and sent to the customer device <b>1450</b> and then the template language is replaced by data from the online store <b>1438</b>, such as when a theme is installed. The template and themes may consider tags, objects, and filters. The client device web browser (or other application) then renders the page accordingly.</p><p id="p-0115" num="0123">In embodiments, online stores <b>1438</b> may be served by the e-commerce platform <b>1400</b> to customers, where customers can browse and purchase the various products available (e.g., add them to a cart, purchase immediately through a buy-button, and the like). Online stores <b>1438</b> may be served to customers in a transparent fashion without customers necessarily being aware that it is being provided through the e-commerce platform <b>1400</b> (rather than directly from the merchant). Merchants may use a merchant configurable domain name, a customizable HTML theme, and the like, to customize their online store <b>1438</b>. Merchants may customize the look and feel of their website through a theme system, such as where merchants can select and change the look and feel of their online store <b>1438</b> by changing their theme while having the same underlying product and business data shown within the online store's product hierarchy. Themes may be further customized through a theme editor, a design interface that enables users to customize their website's design with flexibility. Themes may also be customized using theme-specific settings that change aspects, such as specific colors, fonts, and pre-built layout schemes. The online store may implement a content management system for website content. Merchants may author blog posts or static pages and publish them to their online store <b>1438</b>, such as through blogs, articles, and the like, as well as configure navigation menus. Merchants may upload images (e.g., for products), video, content, data, and the like to the e-commerce platform <b>1400</b>, such as for storage by the system (e.g. as data <b>1434</b>). In embodiments, the e-commerce platform <b>1400</b> may provide functions for resizing images, associating an image with a product, adding and associating text with an image, adding an image for a new product variant, protecting images, and the like.</p><p id="p-0116" num="0124">As described herein, the e-commerce platform <b>1400</b> may provide merchants with transactional facilities for products through a number of different channels <b>1410</b>A-B, including the online store <b>1438</b>, over the telephone, as well as through physical POS devices <b>1452</b> as described herein. The e-commerce platform <b>1400</b> may include business support services <b>1416</b>, an administrator <b>1414</b>, and the like associated with running an on-line business, such as providing a domain service <b>1418</b> associated with their online store, payment services <b>1420</b> for facilitating transactions with a customer, shipping services <b>1422</b> for providing customer shipping options for purchased products, risk and insurance services <b>1424</b> associated with product protection and liability, merchant billing, and the like. Services <b>1416</b> may be provided via the e-commerce platform <b>1400</b> or in association with external facilities, such as through a payment gateway <b>1406</b> for payment processing, shipping providers <b>1412</b> for expediting the shipment of products, and the like.</p><p id="p-0117" num="0125">In embodiments, the e-commerce platform <b>1400</b> may provide for integrated shipping services <b>1422</b> (e.g., through an e-commerce platform shipping facility or through a third-party shipping carrier), such as providing merchants with real-time updates, tracking, automatic rate calculation, bulk order preparation, label printing, and the like.</p><p id="p-0118" num="0126"><figref idref="DRAWINGS">FIG. <b>8</b></figref> depicts a non-limiting embodiment for a home page of an administrator <b>1414</b>, which may show information about daily tasks, a store's recent activity, and the next steps a merchant can take to build their business. In embodiments, a merchant may log in to administrator <b>1414</b> via a merchant device <b>1402</b> such as from a desktop computer or mobile device, and manage aspects of their online store <b>1438</b>, such as viewing the online store's <b>1438</b> recent activity, updating the online store's <b>1438</b> catalog, managing orders, recent visits activity, total orders activity, and the like. In embodiments, the merchant may be able to access the different sections of administrator <b>1414</b> by using the sidebar, such as shown on <figref idref="DRAWINGS">FIG. <b>8</b></figref>. Sections of the administrator <b>1414</b> may include various interfaces for accessing and managing core aspects of a merchant's business, including orders, products, customers, available reports and discounts. The administrator <b>1414</b> may also include interfaces for managing sales channels for a store including the online store, mobile application(s) made available to customers for accessing the store (Mobile App), POS devices, and/or a buy button. The administrator <b>1414</b> may also include interfaces for managing applications (Apps) installed on the merchant's account; settings applied to a merchant's online store <b>1438</b> and account. A merchant may use a search bar to find products, pages, or other information. Depending on the device <b>1402</b> or software application the merchant is using, they may be enabled for different functionality through the administrator <b>1414</b>. For instance, if a merchant logs in to the administrator <b>1414</b> from a browser, they may be able to manage all aspects of their online store <b>1438</b>. If the merchant logs in from their mobile device (e.g. via a mobile application), they may be able to view all or a subset of the aspects of their online store <b>1438</b>, such as viewing the online store's <b>1438</b> recent activity, updating the online store's <b>1438</b> catalog, managing orders, and the like.</p><p id="p-0119" num="0127">More detailed information about commerce and visitors to a merchant's online store <b>1438</b> may be viewed through acquisition reports or metrics, such as displaying a sales summary for the merchant's overall business, specific sales and engagement data for active sales channels, and the like. Reports may include, acquisition reports, behavior reports, customer reports, finance reports, marketing reports, sales reports, custom reports, and the like. The merchant may be able to view sales data for different channels <b>1410</b>A-B from different periods of time (e.g., days, weeks, months, and the like), such as by using drop-down menus. An overview dashboard may be provided for a merchant that wants a more detailed view of the store's sales and engagement data. An activity feed in the home metrics section may be provided to illustrate an overview of the activity on the merchant's account. For example, by clicking on a &#x2018;view all recent activity&#x2019; dashboard button, the merchant may be able to see a longer feed of recent activity on their account. A home page may show notifications about the merchant's online store <b>1438</b>, such as based on account status, growth, recent customer activity, and the like. Notifications may be provided to assist a merchant with navigating through a process, such as capturing a payment, marking an order as fulfilled, archiving an order that is complete, and the like.</p><p id="p-0120" num="0128">The e-commerce platform <b>1400</b> may provide for a communications facility <b>1429</b> and associated merchant interface for providing electronic communications and marketing, such as utilizing an electronic messaging aggregation facility for collecting and analyzing communication interactions between merchants, customers, merchant devices <b>1402</b>, customer devices <b>1450</b>, POS devices <b>1452</b>, and the like, to aggregate and analyze the communications, such as for increasing the potential for providing a sale of a product, and the like. For instance, a customer may have a question related to a product, which may produce a dialog between the customer and the merchant (or automated processor-based agent representing the merchant), where the communications facility <b>1429</b> analyzes the interaction and provides analysis to the merchant on how to improve the probability for a sale.</p><p id="p-0121" num="0129">The e-commerce platform <b>1400</b> may provide a financial facility <b>1420</b> for secure financial transactions with customers, such as through a secure card server environment. The e-commerce platform <b>1400</b> may store credit card information, such as in payment card industry data (PCI) environments (e.g., a card server), to reconcile financials, bill merchants, perform automated clearing house (ACH) transfers between an e-commerce platform <b>1400</b> financial institution account and a merchant's bank account (e.g., when using capital), and the like. These systems may have Sarbanes-Oxley Act (SOX) compliance and a high level of diligence required in their development and operation. The financial facility <b>1420</b> may also provide merchants with financial support, such as through the lending of capital (e.g., lending funds, cash advances, and the like) and provision of insurance. In addition, the e-commerce platform <b>1400</b> may provide for a set of marketing and partner services and control the relationship between the e-commerce platform <b>1400</b> and partners. They also may connect and onboard new merchants with the e-commerce platform <b>1400</b>. These services may enable merchant growth by making it easier for merchants to work across the e-commerce platform <b>1400</b>. Through these services, merchants may be provided help facilities via the e-commerce platform <b>1400</b>.</p><p id="p-0122" num="0130">In embodiments, online store <b>1438</b> may support a great number of independently administered storefronts and process a large volume of transactional data on a daily basis for a variety of products. Transactional data may include customer contact information, billing information, shipping information, information on products purchased, information on services rendered, and any other information associated with business through the e-commerce platform <b>1400</b>. In embodiments, the e-commerce platform <b>1400</b> may store this data in a data facility <b>1434</b>. The transactional data may be processed to produce analytics <b>1432</b>, which in turn may be provided to merchants or third-party commerce entities, such as providing consumer trends, marketing and sales insights, recommendations for improving sales, evaluation of customer behaviors, marketing and sales modeling, trends in fraud, and the like, related to online commerce, and provided through dashboard interfaces, through reports, and the like. The e-commerce platform <b>1400</b> may store information about business and merchant transactions, and the data facility <b>1434</b> may have many ways of enhancing, contributing, refining, and extracting data, where over time the collected data may enable improvements to aspects of the e-commerce platform <b>1400</b>.</p><p id="p-0123" num="0131">Referring again to <figref idref="DRAWINGS">FIG. <b>7</b></figref>, in embodiments the e-commerce platform <b>100</b> may be configured with a commerce management engine <b>1436</b> for content management, task automation and data management to enable support and services to the plurality of online stores <b>1438</b> (e.g., related to products, inventory, customers, orders, collaboration, suppliers, reports, financials, risk and fraud, and the like), but be extensible through applications <b>1442</b>A-B that enable greater flexibility and custom processes required for accommodating an ever-growing variety of merchant online stores, POS devices, products, and services, where applications <b>1442</b>A may be provided internal to the e-commerce platform <b>1400</b> or applications <b>1442</b>B from outside the e-commerce platform <b>1400</b>. In embodiments, an application <b>1442</b>A may be provided by the same party providing the platform <b>1400</b> or by a different party. In embodiments, an application <b>1442</b>B may be provided by the same party providing the platform <b>1400</b> or by a different party. The commerce management engine <b>1436</b> may be configured for flexibility and scalability through portioning (e.g., sharding) of functions and data, such as by customer identifier, order identifier, online store identifier, and the like. The commerce management engine <b>136</b> may accommodate store-specific business logic and in some embodiments, may incorporate the administrator <b>1414</b> and/or the online store <b>1438</b>.</p><p id="p-0124" num="0132">The commerce management engine <b>1436</b> includes base or &#x201c;core&#x201d; functions of the e-commerce platform <b>1400</b>, and as such, as described herein, not all functions supporting online stores <b>1438</b> may be appropriate for inclusion. For instance, functions for inclusion into the commerce management engine <b>1436</b> may need to exceed a core functionality threshold through which it may be determined that the function is core to a commerce experience (e.g., common to a majority of online store activity, such as across channels, administrator interfaces, merchant locations, industries, product types, and the like), is re-usable across online stores <b>1438</b> (e.g., functions that can be re-used/modified across core functions), limited to the context of a single online store <b>1438</b> at a time (e.g., implementing an online store &#x2018;isolation principle&#x2019;, where code should not be able to interact with multiple online stores <b>1438</b> at a time, ensuring that online stores <b>1438</b> cannot access each other's data), provide a transactional workload, and the like. Maintaining control of what functions are implemented may enable the commerce management engine <b>1436</b> to remain responsive, as many required features are either served directly by the commerce management engine <b>1436</b> or enabled through an interface <b>1440</b>A-B, such as by its extension through an application programming interface (API) connection to applications <b>1442</b>A-B and channels <b>1410</b>A-B, where interfaces <b>140</b>A may be provided to applications <b>1442</b>A and/or channels <b>1410</b>A inside the e-commerce platform <b>1400</b> or through interfaces <b>1440</b>B provided to applications <b>1442</b>B and/or channels <b>1410</b>B outside the e-commerce platform <b>100</b>. Generally, the platform <b>1400</b> may include interfaces <b>1440</b>A-B (which may be extensions, connectors, APIs, and the like) which facilitate connections to and communications with other platforms, systems, software, data sources, code and the like. Such interfaces <b>1440</b>A-B may be an interface <b>1440</b>A of the commerce management engine <b>1436</b> or an interface <b>1440</b>B of the platform <b>1400</b> more generally. If care is not given to restricting functionality in the commerce management engine <b>1436</b>, responsiveness could be compromised, such as through infrastructure degradation through slow databases or non-critical backend failures, through catastrophic infrastructure failure such as with a data center going offline, through new code being deployed that takes longer to execute than expected, and the like. To prevent or mitigate these situations, the commerce management engine <b>1436</b> may be configured to maintain responsiveness, such as through configuration that utilizes timeouts, queues, back-pressure to prevent degradation, and the like.</p><p id="p-0125" num="0133">Although isolating online store data is important to maintaining data privacy between online stores <b>1438</b> and merchants, there may be reasons for collecting and using cross-store data, such as for example, with an order risk assessment system or a platform payment facility, both of which require information from multiple online stores <b>1438</b> to perform well. In embodiments, rather than violating the isolation principle, it may be preferred to move these components out of the commerce management engine <b>1436</b> and into their own infrastructure within the e-commerce platform <b>1400</b>.</p><p id="p-0126" num="0134">In embodiments, the e-commerce platform <b>1400</b> may provide for a platform payment facility <b>1420</b>, which is another example of a component that utilizes data from the commerce management engine <b>1436</b> but may be located outside so as to not violate the isolation principle. The platform payment facility <b>1420</b> may allow customers interacting with online stores <b>1438</b> to have their payment information stored safely by the commerce management engine <b>1436</b> such that they only have to enter it once. When a customer visits a different online store <b>1438</b>, even if they've never been there before, the platform payment facility <b>1420</b> may recall their information to enable a more rapid and correct check out. This may provide a cross-platform network effect, where the e-commerce platform <b>1400</b> becomes more useful to its merchants as more merchants join, such as because there are more customers who checkout more often because of the ease of use with respect to customer purchases. To maximize the effect of this network, payment information for a given customer may be retrievable from an online store's checkout, allowing information to be made available globally across online stores <b>1438</b>. It would be difficult and error prone for each online store <b>1438</b> to be able to connect to any other online store <b>1438</b> to retrieve the payment information stored there. As a result, the platform payment facility may be implemented external to the commerce management engine <b>1436</b>.</p><p id="p-0127" num="0135">For those functions that are not included within the commerce management engine <b>1436</b>, applications <b>1442</b>A-B provide a way to add features to the e-commerce platform <b>1400</b>. Applications <b>1442</b>A-B may be able to access and modify data on a merchant's online store <b>1438</b>, perform tasks through the administrator <b>1414</b>, create new flows for a merchant through a user interface (e.g., that is surfaced through extensions/API), and the like. Merchants may be enabled to discover and install applications <b>1442</b>A-B through application search, recommendations, and support <b>1428</b>. In embodiments, core products, core extension points, applications, and the administrator <b>1414</b> may be developed to work together. For instance, application extension points may be built inside the administrator <b>1414</b> so that core features may be extended by way of applications, which may deliver functionality to a merchant through the extension.</p><p id="p-0128" num="0136">In embodiments, applications <b>1442</b>A-B may deliver functionality to a merchant through the interface <b>1440</b>A-B, such as where an application <b>1442</b>A-B is able to surface transaction data to a merchant (e.g., App: &#x201c;Engine, surface my app data in mobile and web admin using the embedded app SDK&#x201d;), and/or where the commerce management engine <b>1436</b> is able to ask the application to perform work on demand (Engine: &#x201c;App, give me a local tax calculation for this checkout&#x201d;).</p><p id="p-0129" num="0137">Applications <b>1442</b>A-B may support online stores <b>1438</b> and channels <b>1410</b>A-B, provide for merchant support, integrate with other services, and the like. Where the commerce management engine <b>136</b> may provide the foundation of services to the online store <b>1438</b>, the applications <b>1442</b>A-B may provide a way for merchants to satisfy specific and sometimes unique needs. Different merchants will have different needs, and so may benefit from different applications <b>1442</b>A-B. Applications <b>1442</b>A-B may be better discovered through the e-commerce platform <b>1400</b> through development of an application taxonomy (categories) that enable applications to be tagged according to a type of function it performs for a merchant; through application data services that support searching, ranking, and recommendation models; through application discovery interfaces such as an application store, home information cards, an application settings page; and the like.</p><p id="p-0130" num="0138">Applications <b>1442</b>A-B may be connected to the commerce management engine <b>1436</b> through an interface <b>1440</b>A-B, such as utilizing APIs to expose the functionality and data available through and within the commerce management engine <b>1436</b> to the functionality of applications (e.g., through REST, GraphQL, and the like). For instance, the e-commerce platform <b>1400</b> may provide API interfaces <b>1440</b>A-B to merchant and partner-facing products and services, such as including application extensions, process flow services, developer-facing resources, and the like. With customers more frequently using mobile devices for shopping, applications <b>1442</b>A-B related to mobile use may benefit from more extensive use of APIs to support the related growing commerce traffic. The flexibility offered through use of applications and APIs (e.g., as offered for application development) enable the e-commerce platform <b>1400</b> to better accommodate new and unique needs of merchants (and internal developers through internal APIs) without requiring constant change to the commerce management engine <b>1436</b>, thus providing merchants what they need when they need it. For instance, shipping services <b>1422</b> may be integrated with the commerce management engine <b>1436</b> through a shipping or carrier service API, thus enabling the e-commerce platform <b>1400</b> to provide shipping service functionality without directly impacting code running in the commerce management engine <b>1436</b>.</p><p id="p-0131" num="0139">Many merchant problems may be solved by letting partners improve and extend merchant workflows through application development, such as problems associated with back-office operations (merchant-facing applications <b>1442</b>A-B) and in the online store <b>1438</b> (customer-facing applications <b>1442</b>A-B). As a part of doing business, many merchants will use mobile and web related applications on a daily basis for back-office tasks (e.g., merchandising, inventory, discounts, fulfillment, and the like) and online store tasks (e.g., applications related to their online shop, for flash-sales, new product offerings, and the like), where applications <b>1442</b>A-B, through extension/API <b>1440</b>A-B, help make products easy to view and purchase in a fast growing marketplace. In embodiments, partners, application developers, internal applications facilities, and the like, may be provided with a software development kit (SDK), such as through creating a frame within the administrator <b>1414</b> that sandboxes an application interface. In embodiments, the administrator <b>1414</b> may not have control over nor be aware of what happens within the frame. The SDK may be used in conjunction with a user interface kit to produce interfaces that mimic the look and feel of the e-commerce platform <b>1400</b>, such as acting as an extension of the commerce management engine <b>1436</b>.</p><p id="p-0132" num="0140">Applications <b>1442</b>A-B that utilize APIs may pull data on demand, but often they also need to have data pushed when updates occur. Update events may be implemented in a subscription model, such as for example, customer creation, product changes, or order cancelation. Update events may provide merchants with needed updates with respect to a changed state of the commerce management engine <b>1436</b>, such as for synchronizing a local database, notifying an external integration partner, and the like. Update events may enable this functionality without having to poll the commerce management engine <b>1436</b> all the time to check for updates, such as through an update event subscription. In embodiments, when a change related to an update event subscription occurs, the commerce management engine <b>1436</b> may post a request, such as to a predefined callback URL. The body of this request may contain a new state of the object and a description of the action or event. Update event subscriptions may be created manually, in the administrator facility <b>1414</b>, or automatically (e.g., via the API <b>1440</b>A-B). In embodiments, update events may be queued and processed asynchronously from a state change that triggered them, which may produce an update event notification that is not distributed in real-time.</p><p id="p-0133" num="0141">In embodiments, the e-commerce platform <b>1400</b> may provide application search, recommendation and support <b>1428</b>. Application search, recommendation and support <b>1428</b> may include developer products and tools to aid in the development of applications, an application dashboard (e.g., to provide developers with a development interface, to administrators for management of applications, to merchants for customization of applications, and the like), facilities for installing and providing permissions with respect to providing access to an application <b>1442</b>A-B (e.g., for public access, such as where criteria must be met before being installed, or for private use by a merchant), application searching to make it easy for a merchant to search for applications <b>1442</b>A-B that satisfy a need for their online store <b>1438</b>, application recommendations to provide merchants with suggestions on how they can improve the user experience through their online store <b>1438</b>, a description of core application capabilities within the commerce management engine <b>1436</b>, and the like. These support facilities may be utilized by application development performed by any entity, including the merchant developing their own application <b>1442</b>A-B, a third-party developer developing an application <b>1442</b>A-B (e.g., contracted by a merchant, developed on their own to offer to the public, contracted for use in association with the e-commerce platform <b>1400</b>, and the like), or an application <b>1442</b>A or <b>1442</b>B being developed by internal personal resources associated with the e-commerce platform <b>1400</b>. In embodiments, applications <b>1442</b>A-B may be assigned an application identifier (ID), such as for linking to an application (e.g., through an API), searching for an application, making application recommendations, and the like.</p><p id="p-0134" num="0142">The commerce management engine <b>1436</b> may include base functions of the e-commerce platform <b>1400</b> and expose these functions through APIs <b>1440</b>A-B to applications <b>1442</b>A-B. The APIs <b>1440</b>A-B may enable different types of applications built through application development. Applications <b>1442</b>A-B may be capable of satisfying a great variety of needs for merchants but may be grouped roughly into three categories: customer-facing applications, merchant-facing applications, integration applications, and the like. Customer-facing applications <b>1442</b>A-B may include online store <b>1438</b> or channels <b>1410</b>A-B that are places where merchants can list products and have them purchased (e.g., the online store, applications for flash sales (e.g., merchant products or from opportunistic sales opportunities from third-party sources), a mobile store application, a social media channel, an application for providing wholesale purchasing, and the like). Merchant-facing applications <b>1442</b>A-B may include applications that allow the merchant to administer their online store <b>1438</b> (e.g., through applications related to the web or website or to mobile devices), run their business (e.g., through applications related to POS devices), to grow their business (e.g., through applications related to shipping (e.g., drop shipping), use of automated agents, use of process flow development and improvements), and the like. Integration applications may include applications that provide useful integrations that participate in the running of a business, such as shipping providers <b>1412</b> and payment gateways.</p><p id="p-0135" num="0143">In embodiments, an application developer may use an application proxy to fetch data from an outside location and display it on the page of an online store <b>1438</b>. Content on these proxy pages may be dynamic, capable of being updated, and the like. Application proxies may be useful for displaying image galleries, statistics, custom forms, and other kinds of dynamic content. The core-application structure of the e-commerce platform <b>1400</b> may allow for an increasing number of merchant experiences to be built in applications <b>1442</b>A-B so that the commerce management engine <b>1436</b> can remain focused on the more commonly utilized business logic of commerce.</p><p id="p-0136" num="0144">The e-commerce platform <b>1400</b> provides an online shopping experience through a curated system architecture that enables merchants to connect with customers in a flexible and transparent manner. A typical customer experience may be better understood through an embodiment example purchase workflow, where the customer browses the merchant's products on a channel <b>1410</b>A-B, adds what they intend to buy to their cart, proceeds to checkout, and pays for the content of their cart resulting in the creation of an order for the merchant. The merchant may then review and fulfill (or cancel) the order. The product is then delivered to the customer. If the customer is not satisfied, they might return the products to the merchant.</p><p id="p-0137" num="0145">In an example embodiment, a customer may browse a merchant's products on a channel <b>1410</b>A-B. A channel <b>1410</b>A-B is a place where customers can view and buy products. In embodiments, channels <b>1410</b>A-B may be modeled as applications <b>1442</b>A-B (a possible exception being the online store <b>1438</b>, which is integrated within the commence management engine <b>1436</b>). A merchandising component may allow merchants to describe what they want to sell and where they sell it. The association between a product and a channel may be modeled as a product publication and accessed by channel applications, such as via a product listing API. A product may have many options, like size and color, and many variants that expand the available options into specific combinations of all the options, like the variant that is extra-small and green, or the variant that is size large and blue. Products may have at least one variant (e.g., a &#x201c;default variant&#x201d; is created for a product without any options). To facilitate browsing and management, products may be grouped into collections, provided product identifiers (e.g., stock keeping unit (SKU)) and the like. Collections of products may be built by either manually categorizing products into one (e.g., a custom collection), by building rulesets for automatic classification (e.g., a smart collection), and the like. Products may be viewed as 2D images, 3D images, rotating view images, through a virtual or augmented reality interface, and the like.</p><p id="p-0138" num="0146">In embodiments, the customer may add what they intend to buy to their cart (in an alternate embodiment, a product may be purchased directly, such as through a buy button as described herein). Customers may add product variants to their shopping cart. The shopping cart model may be channel specific. The online store <b>1438</b> cart may be composed of multiple cart line items, where each cart line item tracks the quantity for a product variant. Merchants may use cart scripts to offer special promotions to customers based on the content of their cart. Since adding a product to a cart does not imply any commitment from the customer or the merchant, and the expected lifespan of a cart may be in the order of minutes (not days), carts may be persisted to an ephemeral data store.</p><p id="p-0139" num="0147">The customer then proceeds to checkout. A checkout component may implement a web checkout as a customer-facing order creation process. A checkout API may be provided as a computer-facing order creation process used by some channel applications to create orders on behalf of customers (e.g., for point of sale). Checkouts may be created from a cart and record a customer's information such as email address, billing, and shipping details. On checkout, the merchant commits to pricing. If the customer inputs their contact information but does not proceed to payment, the e-commerce platform <b>1400</b> may provide an opportunity to re-engage the customer (e.g., in an abandoned checkout feature). For those reasons, checkouts can have much longer lifespans than carts (hours or even days) and are therefore persisted. Checkouts may calculate taxes and shipping costs based on the customer's shipping address. Checkout may delegate the calculation of taxes to a tax component and the calculation of shipping costs to a delivery component. A pricing component may enable merchants to create discount codes (e.g., &#x2018;secret&#x2019; strings that when entered on the checkout apply new prices to the items in the checkout). Discounts may be used by merchants to attract customers and assess the performance of marketing campaigns. Discounts and other custom price systems may be implemented on top of the same platform piece, such as through price rules (e.g., a set of prerequisites that when met imply a set of entitlements). For instance, prerequisites may be items such as &#x201c;the order subtotal is greater than $100&#x201d; or &#x201c;the shipping cost is under $10&#x201d;, and entitlements may be items such as &#x201c;a 20% discount on the whole order&#x201d; or &#x201c;$10 off products X, Y, and Z&#x201d;.</p><p id="p-0140" num="0148">Customers then pay for the content of their cart resulting in the creation of an order for the merchant. Channels <b>1410</b>A-B may use the commerce management engine <b>1436</b> to move money, currency or a store of value (such as dollars or a cryptocurrency) to and from customers and merchants. Communication with the various payment providers (e.g., online payment systems, mobile payment systems, digital wallet, credit card gateways, and the like) may be implemented within a payment processing component. The actual interactions with the payment gateways <b>1406</b> may be provided through a card server environment. In embodiments, the payment gateway <b>1406</b> may accept international payment, such as integrating with leading international credit card processors. The card server environment may include a card server application, card sink, hosted fields, and the like. This environment may act as the secure gatekeeper of the sensitive credit card information. In embodiments, most of the process may be orchestrated by a payment processing job. The commerce management engine <b>1436</b> may support many other payment methods, such as through an offsite payment gateway <b>1406</b> (e.g., where the customer is redirected to another website), manually (e.g., cash), online payment methods (e.g., online payment systems, mobile payment systems, digital wallet, credit card gateways, and the like), gift cards, and the like. At the end of the checkout process, an order is created. An order is a contract of sale between the merchant and the customer where the merchant agrees to provide the goods and services listed on the orders (e.g., order line items, shipping line items, and the like) and the customer agrees to provide payment (including taxes). This process may be modeled in a sales component. Channels <b>1410</b>A-B that do not rely on commerce management engine <b>1436</b> checkouts may use an order API to create orders. Once an order is created, an order confirmation notification may be sent to the customer and an order placed notification sent to the merchant via a notification component. Inventory may be reserved when a payment processing job starts to avoid over-selling (e.g., merchants may control this behavior from the inventory policy of each variant). Inventory reservation may have a short time span (minutes) and may need to be very fast and scalable to support flash sales (e.g., a discount or promotion offered for a short time, such as targeting impulse buying). The reservation is released if the payment fails. When the payment succeeds, and an order is created, the reservation is converted into a long-term inventory commitment allocated to a specific location. An inventory component may record where variants are stocked, and tracks quantities for variants that have inventory tracking enabled. It may decouple product variants (a customer facing concept representing the template of a product listing) from inventory items (a merchant facing concept that represents an item whose quantity and location is managed). An inventory level component may keep track of quantities that are available for sale, committed to an order or incoming from an inventory transfer component (e.g., from a vendor).</p><p id="p-0141" num="0149">The merchant may then review and fulfill (or cancel) the order. A review component may implement a business process merchant's use to ensure orders are suitable for fulfillment before actually fulfilling them. Orders may be fraudulent, require verification (e.g., ID checking), have a payment method which requires the merchant to wait to make sure they will receive their funds, and the like. Risks and recommendations may be persisted in an order risk model. Order risks may be generated from a fraud detection tool, submitted by a third-party through an order risk API, and the like. Before proceeding to fulfillment, the merchant may need to capture the payment information (e.g., credit card information) or wait to receive it (e.g., via a bank transfer, check, and the like) and mark the order as paid. The merchant may now prepare the products for delivery. In embodiments, this business process may be implemented by a fulfillment component. The fulfillment component may group the line items of the order into a logical fulfillment unit of work based on an inventory location and fulfillment service. The merchant may review, adjust the unit of work, and trigger the relevant fulfillment services, such as through a manual fulfillment service (e.g., at merchant managed locations) used when the merchant picks and packs the products in a box, purchase a shipping label and input its tracking number, or just mark the item as fulfilled. A custom fulfillment service may send an email (e.g., a location that doesn't provide an API connection). An API fulfillment service may trigger a third party, where the third-party application creates a fulfillment record. A legacy fulfillment service may trigger a custom API call from the commerce management engine <b>1436</b> to a third party (e.g., fulfillment by Amazon). A gift card fulfillment service may provision (e.g., generating a number) and activate a gift card. Merchants may use an order printer application to print packing slips. The fulfillment process may be executed when the items are packed in the box and ready for shipping, shipped, tracked, delivered, verified as received by the customer, and the like.</p><p id="p-0142" num="0150">If the customer is not satisfied, they may be able to return the product(s) to the merchant. The business process merchants may go through to &#x201c;un-sell&#x201d; an item may be implemented by a return component. Returns may consist of a variety of different actions, such as a restock, where the product that was sold actually comes back into the business and is sellable again; a refund, where the money that was collected from the customer is partially or fully returned; an accounting adjustment noting how much money was refunded (e.g., including if there was any restocking fees, or goods that weren't returned and remain in the customer's hands); and the like. A return may represent a change to the contract of sale (e.g., the order), and where the e-commerce platform <b>1400</b> may make the merchant aware of compliance issues with respect to legal obligations (e.g., with respect to taxes). In embodiments, the e-commerce platform <b>1400</b> may enable merchants to keep track of changes to the contract of sales over time, such as implemented through a sales model component (e.g., an append-only date-based ledger that records sale related events that happened to an item).</p><p id="p-0143" num="0151">Various illustrative, non-limiting numbered example embodiments will now be discussed with reference to the accompanying drawings. Reference numbers included in the example numbered embodiments are intended to facilitate an understanding of the embodiments and are not intended to limit the embodiments to the particular features shown in the figures to which the reference numbers correspond.</p><heading id="h-0006" level="1">Numbered List of Example Method Embodiments</heading><p id="p-0144" num="0152">Method Embodiment 1 A method operating a control system including a processor to control one or more autonomous vehicles, the method comprising: accessing (<b>606</b>) information indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed; determining (<b>608</b>) whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association with an autonomous vehicle from one human picker or worker to another) for the second operation should be implemented based on a first estimated time cost for a first worker (W1) associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker (W2) not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination.</p><p id="p-0145" num="0153">Method Embodiment 1A The method of Method Embodiment 1, wherein the first estimated time cost is based on at least a time for the first worker to travel with the first autonomous vehicle to the second location.</p><p id="p-0146" num="0154">Method Embodiment 1B The method of Method Embodiment 1, wherein the second estimated time cost is based on at least a time for the first autonomous vehicle to travel unaccompanied at least a portion of the way from the first location to meet the second worker.</p><p id="p-0147" num="0155">Method Embodiment 1AA. The method of claim <b>1</b>, wherein the first estimate time cost and the second estimated time cost are estimated at the time a list of first and second operations is created (e.g., when the work is created).</p><p id="p-0148" num="0156">Method Embodiment 1AB. The method of claim <b>1</b>, wherein the first estimated time cost is estimated prior to the first operation being completed and wherein the second estimated time cost is estimated after the first operation is completed.</p><p id="p-0149" num="0157">Method Embodiment 2 The method of Method Embodiment 1, wherein controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination includes: outputting (<b>542</b>) a worker notification to move from the first location to the second location; and routing (<b>550</b>) the autonomous vehicle from the first location to the second location when a worker handover is not to be implemented.</p><p id="p-0150" num="0158">Method Embodiment 3 The method of Method Embodiment 2, wherein controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination includes: assigning (<b>548</b>) the second operation to the second worker when the determination is a decision to implement a worker handover.</p><p id="p-0151" num="0159">Method Embodiment 4 The method of Method Embodiment 1, wherein said controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination comprises one or more of: i) routing (<b>550</b>) the first autonomous vehicle to a handover location or ii) operating (<b>558</b> and/or <b>564</b>) the first autonomous vehicle to require a login to the first autonomous vehicle by the second worker.</p><p id="p-0152" num="0160">Method Embodiment 4A The method of Method Embodiment 4, wherein the handover location is the second location.</p><p id="p-0153" num="0161">Method Embodiment 5 The method of Method Embodiment 3, wherein said first autonomous vehicle is a first robotic cart.</p><p id="p-0154" num="0162">Method Embodiment 6 The method of Method Embodiment 1, wherein determining (<b>608</b>) whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association for the second operation) should be implemented is based on at on at least an amount of time required for a first worker assigned to the first autonomous vehicle to travel from the first location to the second location with the first autonomous vehicle.</p><p id="p-0155" num="0163">Method Embodiment 7 The method of Method Embodiment 6, wherein determining (<b>608</b>) whether a worker handover should be implemented is further based on a second amount of time required for the second worker to travel to the second location.</p><p id="p-0156" num="0164">Method Embodiment 8 The method of Method Embodiment 7, wherein determining (<b>608</b>) whether a worker handover should be implemented includes: determining (<b>610</b>) a first cost value based on at least the amount of time required for the first worker assigned to the first autonomous vehicle to travel from the first location to the second location; and determining (<b>614</b>) a second cost value based on at least the second amount of time required for the second worker to travel to the second location.</p><p id="p-0157" num="0165">Method Embodiment 9 The method of Method Embodiment 8, further comprising, prior to determining (<b>610</b>) the first cost value, performing the steps of: assigning (<b>512</b>) a first list of location dependent tasks to the first autonomous vehicle, said first set of location dependent tasks including a first task to be completed at the first location and a next task to be completed at a second location, said second location being different from said first location; and assigning (<b>513</b>) said first worker to the first autonomous vehicle to perform said first operation at said first location.</p><p id="p-0158" num="0166">Method Embodiment 10 The method of Method Embodiment 8, wherein determining (<b>608</b>) whether a worker handover should be implemented includes: making (<b>622</b>) a decision to implement a handover when the first cost value is greater than the second cost value.</p><p id="p-0159" num="0167">Method Embodiment 11 The method of Method Embodiment 10, wherein the first cost value is (<b>612</b>) further based on one, multiple, or all of: i) a cost metric based on the time for the first worker (W1) to complete the second operation (e.g. task) at the second location; ii) a weight based on the priority of the ongoing list of operations associated with the first autonomous vehicle (e.g., priority of order to which the first autonomous vehicle (e.g., first robotic mobile cart) corresponds&#x2014;note that for a high priority order this weight would be negative to decrease the probability of a handoff which might increase overall time for the first list of operations to be completed); iii) a weight based on the effect (e.g., a negative weight if good effect, a positive weight if bad effect) of having the first worker reposition to the second location, thereby changing the worker distribution in the warehouse where the first autonomous vehicle is being used; and iv) a cost function based on whether the first worker will cross a zone boundary in a warehouse, where zones are defined, e.g., with a weight associated with a zone boundary crossing being positive reflecting an increased cost to thereby discourage movement of workers between zones).</p><p id="p-0160" num="0168">Method Embodiment 12 The method of Method Embodiment 10, wherein the second cost value is (<b>616</b>) further based on one, multiple or all of the following: i) the time for the second worker to login and take over operation of the first autonomous vehicle; ii) the time for the second worker to perform the next task associated with the first autonomous vehicle at the second location; and iii) the time required to the first worker to meet up with an additional autonomous vehicle and begin performing operations with the additional autonomous vehicle (this may include login times).</p><p id="p-0161" num="0169">Method Embodiment 13 The method of Method Embodiment 11, wherein the second cost value is, (<b>618</b>) further based on one, multiple or all of: i) a weight associated with the first or second worker making an error during the handover, e.g., a navigation error delaying one of the first and second workers meeting with the first or additional autonomous vehicle within an expected amount of time; and ii) a robotic cost in terms of an amount of time either of the first autonomous vehicle or the additional (e.g., second) autonomous vehicle go unused due to a time period associated with a handover that would not occur if the handover was not performed.</p><heading id="h-0007" level="1">Numbered List of Example System Embodiments</heading><p id="p-0162" num="0170">System Embodiment 1 A control system comprising: memory including a task list; and a processor configured to control one or more autonomous vehicles based on task list information, said processor being configured to: access (<b>606</b>) information in said task list indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed; determine (<b>608</b>) whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association with an autonomous vehicle from one human picker or worker to another) for the second operation should be implemented based on a first estimated time cost for a first worker (W1) associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker (W2) not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and control (<b>538</b>) the first autonomous vehicle to take an action based on said determination.</p><p id="p-0163" num="0171">System Embodiment 1a The control system of System Embodiment 1, wherein the first estimated time cost is based on at least a time for the first worker to travel with the first autonomous vehicle to the second location.</p><p id="p-0164" num="0172">System Embodiment 1b The control system of System Embodiment 1, wherein the second estimated time cost is based on at least a time for the first autonomous vehicle to travel unaccompanied at least a portion of the way from the first location to meet the second worker.</p><p id="p-0165" num="0173">System Embodiment 2 The control system of System Embodiment 1, wherein the processor is further configured, as part of controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination to control the autonomous vehicle to: output (<b>542</b>) a worker notification to move from the first location to the second location; and route (<b>550</b>) the first autonomous vehicle from the first location to the second location when a worker handover is not to be implemented.</p><p id="p-0166" num="0174">System Embodiment 3 The control system of System Embodiment 2, wherein the processor is further configured, as part of controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination, to control the autonomous vehicle to: assign (<b>548</b>) the second operation to the second worker when the determination is a decision to implement a worker handover.</p><p id="p-0167" num="0175">System Embodiment 4 The control system of System Embodiment 1, wherein the processor is further configured, as part of controlling (<b>538</b>) the first autonomous vehicle to take an action based on said determination, to control the autonomous vehicle to perform one or more of: i) routing (<b>550</b>) the first autonomous vehicle to a handover location or ii) operating (<b>558</b> and/or <b>564</b>) the first autonomous vehicle to require a login to the first autonomous vehicle by the second worker.</p><p id="p-0168" num="0176">System Embodiment 4A The control system of System Embodiment 4, wherein the handover location is the second location.</p><p id="p-0169" num="0177">System Embodiment 5 The control system of System Embodiment 3, wherein said first autonomous vehicle is a first robotic cart.</p><p id="p-0170" num="0178">System Embodiment 6 The control system of System Embodiment 1, wherein the processor is further configured, as part of determining (<b>608</b>) whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association for the second operation) should be implemented, to use at on at least an amount of time required for a first worker assigned to the first autonomous vehicle to travel from the first location to the second location with the first autonomous vehicle in making said determination of whether the worker handover should be implemented.</p><p id="p-0171" num="0179">System Embodiment 7 The control system of System Embodiment 6, wherein the processor is further configured, as part of determining (<b>608</b>) whether a worker handover should be implemented, to base said determination on a second amount of time required for the second worker to travel to the second location.</p><p id="p-0172" num="0180">System Embodiment 8 The control system of System Embodiment 7, wherein the processor is configured, as part of determining (<b>608</b>) whether a worker handover should be implemented, to: determine (<b>610</b>) a first cost value based on at least the amount of time required for the first worker assigned to the first autonomous vehicle to travel from the first location to the second location; and determine (<b>614</b>) a second cost value based on at least the second amount of time required for the second worker to travel to the second location.</p><p id="p-0173" num="0181">System Embodiment 9 The control system of System Embodiment 8, wherein the processor is configured to: perform, prior to determining (<b>610</b>) the first cost value, the steps of: assigning (<b>512</b>) a first list of location dependent tasks to the first autonomous vehicle, said first set of location dependent tasks including a first task to be completed at the first location and a next task to be completed at a second location, said second location being different from said first location; and assigning (<b>513</b>) said first worker to the first autonomous vehicle to perform said first operation at said first location.</p><p id="p-0174" num="0182">System Embodiment 10 The control system of System Embodiment 8, wherein the processor is configured as part of determining (<b>608</b>) whether a worker handover should be implemented, to: make a decision to implement a handover when the first cost value is greater than the second cost value.</p><p id="p-0175" num="0183">System Embodiment 11 The control system of System Embodiment 10, wherein the first cost value is (<b>612</b>) further based on one, multiple, or all of: i) a cost metric based on the time for the first worker (W1) to complete the second operation (e.g., task) at the second location; ii) a weight based on the priority of the ongoing list of operations associated with the first autonomous vehicle (e.g., priority of order to which the first autonomous vehicle, e.g., first robotic mobile cart, corresponds&#x2014;note that for a high priority order this weight would be negative to decrease the probability of a handoff which might increase overall time for the first list of operations to be completed); iii) a weight based on the effect (e.g., a negative weight if good effect, a positive weight if bad effect) of having the first worker reposition to the second location, thereby changing the worker distribution in the warehouse where the first autonomous vehicle is being used; and iv) a cost function based on whether the first worker will cross a zone boundary in a warehouse, where zones are defined, e.g., with a weight associated with a zone boundary crossing being positive reflecting an increased cost to thereby discourage movement of workers between zones).</p><p id="p-0176" num="0184">System Embodiment 12. The control system of System Embodiment 10, wherein the second cost value is (<b>616</b>) further based on one, multiple or all of the following: i) the time for the second worker to login and take over operation of the first autonomous vehicle; ii) the time for the second worker to perform the next task associated with the first autonomous vehicle at the second location; and iii) the time required to the first worker to meet up with an additional autonomous vehicle and begin performing operations with the additional autonomous vehicle (this may include login times).</p><p id="p-0177" num="0185">System Embodiment 13 The control system of System Embodiment 11, wherein the second cost value is (<b>618</b>), further based on one, multiple or all of: i) a weight associated with the first or second worker making an error during the handover, e.g., a navigation error delaying one of the first and second workers meeting with the first or additional autonomous vehicle within an expected amount of time; and ii) a robotic cost in terms of an amount of time either of the first autonomous vehicle or the additional (e.g., second) autonomous vehicle go unused due to a time period associated with a handover that would not occur if the handover was not performed.</p><heading id="h-0008" level="1">Numbered List of Example</heading><heading id="h-0009" level="1">Non-Transitory Computer Readable Medium Embodiments</heading><p id="p-0178" num="0186">Non-Transitory Computer Readable Medium Embodiment 1 A non-transitory computer readable medium including processor executable instruction which when executed by a processor of a control system cause the processor to: access (<b>606</b>) information indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed; determine (<b>608</b>) whether a worker handover (e.g., an assignment of an operation or a set of operations to be performed in association with an autonomous vehicle from one human picker or worker to another) for the second operation should be implemented based on a first estimated time cost for a first worker (W1) associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker (W2) not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and control (<b>538</b>) the first autonomous vehicle to take an action based on said determination.</p><p id="p-0179" num="0187">The methods and systems described herein may be deployed in part or in whole through a machine that executes computer software, program codes, and/or instructions on a processor. The processor may be part of a server, cloud server, client, network infrastructure, mobile computing platform, stationary computing platform, or other computing platform. A processor may be any kind of computational or processing device capable of executing program instructions, codes, binary instructions and the like. The processor may be or include a signal processor, digital processor, embedded processor, microprocessor or any variant such as a co-processor (math co-processor, graphic co-processor, communication co-processor and the like) and the like that may directly or indirectly facilitate execution of program code or program instructions stored thereon. In addition, the processor may enable execution of multiple programs, threads, and codes. The threads may be executed simultaneously to enhance the performance of the processor and to facilitate simultaneous operations of the application. By way of implementation, methods, program codes, program instructions and the like described herein may be implemented in one or more threads. The thread may spawn other threads that may have assigned priorities associated with them; the processor may execute these threads based on priority or any other order based on instructions provided in the program code. The processor may include memory that stores methods, codes, instructions and programs as described herein and elsewhere. The processor may access a storage medium through an interface that may store methods, codes, and instructions as described herein and elsewhere.</p><p id="p-0180" num="0188">The storage medium associated with the processor for storing methods, programs, codes, program instructions or other type of instructions capable of being executed by the computing or processing device may include but may not be limited to one or more of a CD-ROM, DVD, memory, hard disk, flash drive, RAM, ROM, cache and the like.</p><p id="p-0181" num="0189">A processor may include one or more cores that may enhance speed and performance of a multiprocessor. In embodiments, the process may be a dual core processor, quad core processors, other chip-level multiprocessor and the like that combine two or more independent cores (called a die).</p><p id="p-0182" num="0190">The methods and systems described herein may be deployed in part or in whole through a machine that executes computer software on a server, cloud server, client, firewall, gateway, hub, router, or other such computer and/or networking hardware. The software program may be associated with a server that may include a file server, print server, domain server, internet server, intranet server and other variants such as secondary server, host server, distributed server and the like. The server may include one or more of memories, processors, computer readable media, storage media, ports (physical and virtual), communication devices, and interfaces capable of accessing other servers, clients, machines, and devices through a wired or a wireless medium, and the like. The methods, programs or codes as described herein and elsewhere may be executed by the server. In addition, other devices required for execution of methods as described in this application may be considered as a part of the infrastructure associated with the server.</p><p id="p-0183" num="0191">The server may provide an interface to other devices including, without limitation, clients, other servers, printers, database servers, print servers, file servers, communication servers, distributed servers and the like. Additionally, this coupling and/or connection may facilitate remote execution of programs across the network. The networking of some or all of these devices may facilitate parallel processing of a program or method at one or more locations without deviating from the scope of the disclosure. In addition, any of the devices attached to the server through an interface may include at least one storage medium capable of storing methods, programs, code and/or instructions. A central repository may provide program instructions to be executed on different devices. In this implementation, the remote repository may act as a storage medium for program code, instructions, and programs.</p><p id="p-0184" num="0192">The software program may be associated with a client that may include a file client, print client, domain client, internet client, intranet client and other variants such as secondary client, host client, distributed client and the like. The client may include one or more of memories, processors, computer readable media, storage media, ports (physical and virtual), communication devices, and interfaces capable of accessing other clients, servers, machines, and devices through a wired or a wireless medium, and the like. The methods, programs or codes as described herein and elsewhere may be executed by the client. In addition, other devices required for execution of methods as described in this application may be considered as a part of the infrastructure associated with the client.</p><p id="p-0185" num="0193">The client may provide an interface to other devices including, without limitation, servers, other clients, printers, database servers, print servers, file servers, communication servers, distributed servers and the like. Additionally, this coupling and/or connection may facilitate remote execution of programs across the network. The networking of some or all of these devices may facilitate parallel processing of a program or method at one or more locations without deviating from the scope of the disclosure. In addition, any of the devices attached to the client through an interface may include at least one storage medium capable of storing methods, programs, applications, code and/or instructions. A central repository may provide program instructions to be executed on different devices. In this implementation, the remote repository may act as a storage medium for program code, instructions, and programs.</p><p id="p-0186" num="0194">The methods and systems described herein may be deployed in part or in whole through network infrastructures. The network infrastructure may include elements such as computing devices, servers, routers, hubs, firewalls, clients, personal computers, communication devices, routing devices and other active and passive devices, modules and/or components as known in the art. The computing and/or non-computing device(s) associated with the network infrastructure may include, apart from other components, a storage medium such as flash memory, buffer, stack, RAM, ROM and the like. The processes, methods, program codes, instructions described herein and elsewhere may be executed by one or more of the network infrastructural elements.</p><p id="p-0187" num="0195">The methods, program codes, and instructions described herein and elsewhere may be implemented in different devices which may operate in wired or wireless networks. Examples of wireless networks include 4th Generation (4G) networks (e.g. Long Term Evolution (LTE)) or 5th Generation (5G) networks, as well as non-cellular networks such as Wireless Local Area Networks (WLANs). However, the principles described therein may equally apply to other types of networks.</p><p id="p-0188" num="0196">The operations, methods, programs codes, and instructions described herein and elsewhere may be implemented on or through mobile devices. The mobile devices may include navigation devices, cell phones, mobile phones, mobile personal digital assistants, laptops, palmtops, netbooks, pagers, electronic books readers, music players and the like. These devices may include, apart from other components, a storage medium such as a flash memory, buffer, RAM, ROM and one or more computing devices. The computing devices associated with mobile devices may be enabled to execute program codes, methods, and instructions stored thereon. Alternatively, the mobile devices may be configured to execute instructions in collaboration with other devices. The mobile devices may communicate with base stations interfaced with servers and configured to execute program codes. The mobile devices may communicate on a peer to peer network, mesh network, or other communications network. The program code may be stored on the storage medium associated with the server and executed by a computing device embedded within the server. The base station may include a computing device and a storage medium. The storage device may store program codes and instructions executed by the computing devices associated with the base station.</p><p id="p-0189" num="0197">The computer software, program codes, and/or instructions may be stored and/or accessed on machine readable media that may include: computer components, devices, and recording media that retain digital data used for computing for some interval of time; semiconductor storage known as random access memory (RAM); mass storage typically for more permanent storage, such as optical discs, forms of magnetic storage like hard disks, tapes, drums, cards and other types; processor registers, cache memory, volatile memory, non-volatile memory; optical storage such as CD, DVD; removable media such as flash memory (e.g. USB sticks or keys), floppy disks, magnetic tape, paper tape, punch cards, standalone RANI disks, Zip drives, removable mass storage, off-line, and the like; other computer memory such as dynamic memory, static memory, read/write storage, mutable storage, read only, random access, sequential access, location addressable, file addressable, content addressable, network attached storage, storage area network, bar codes, magnetic ink, and the like.</p><p id="p-0190" num="0198">The methods and systems described herein may transform physical and/or or intangible items from one state to another. The methods and systems described herein may also transform data representing physical and/or intangible items from one state to another, such as from usage data to a normalized usage dataset.</p><p id="p-0191" num="0199">The elements described and depicted herein, including in flow charts and block diagrams throughout the figures, imply logical boundaries between the elements. However, according to software or hardware engineering practices, the depicted elements and the functions thereof may be implemented on machines through computer executable media having a processor capable of executing program instructions stored thereon as a monolithic software structure, as standalone software modules, or as modules that employ external routines, code, services, and so forth, or any combination of these, and all such implementations may be within the scope of the present disclosure. Examples of such machines may include, but may not be limited to, personal digital assistants, laptops, personal computers, mobile phones, other handheld computing devices, medical equipment, wired or wireless communication devices, transducers, chips, calculators, satellites, tablet PCs, electronic books, gadgets, electronic devices, devices having artificial intelligence, computing devices, networking equipment, servers, routers and the like. Furthermore, the elements depicted in the flow chart and block diagrams or any other logical component may be implemented on a machine capable of executing program instructions. Thus, while the foregoing drawings and descriptions set forth functional aspects of the disclosed systems, no particular arrangement of software for implementing these functional aspects should be inferred from these descriptions unless explicitly stated or otherwise clear from the context. Similarly, it will be appreciated that the various steps identified and described above may be varied, and that the order of steps may be adapted to particular applications of the techniques disclosed herein. All such variations and modifications are intended to fall within the scope of this disclosure. As such, the depiction and/or description of an order for various steps should not be understood to require a particular order of execution for those steps, unless required by a particular application, or explicitly stated or otherwise clear from the context.</p><p id="p-0192" num="0200">The methods and/or processes described above, and steps thereof, may be realized in hardware, software or any combination of hardware and software suitable for a particular application. The hardware may include a general-purpose computer and/or dedicated computing device or specific computing device or particular aspect or component of a specific computing device. The processes may be realized in one or more microprocessors, microcontrollers, embedded microcontrollers, programmable digital signal processors or other programmable devices, along with internal and/or external memory. The processes may also, or instead, be embodied in an application specific integrated circuit, a programmable gate array, programmable array logic, or any other device or combination of devices that may be configured to process electronic signals. It will further be appreciated that one or more of the processes may be realized as a computer executable code capable of being executed on a machine readable medium.</p><p id="p-0193" num="0201">The computer executable code may be created using a structured programming language such as C, an object oriented programming language such as C++, or any other high-level or low-level programming language (including assembly languages, hardware description languages, and database programming languages and technologies) that may be stored, compiled or interpreted to run on one of the above devices, as well as heterogeneous combinations of processors, processor architectures, or combinations of different hardware and software, or any other machine capable of executing program instructions.</p><p id="p-0194" num="0202">Thus, in one aspect, each method described above, and combinations thereof may be embodied in computer executable code that, when executing on one or more computing devices, performs the steps thereof In another aspect, the methods may be embodied in systems that perform the steps thereof and may be distributed across devices in a number of ways, or all of the functionality may be integrated into a dedicated, standalone device or other hardware. In another aspect, the means for performing the steps associated with the processes described above may include any of the hardware and/or software described above. All such permutations and combinations are intended to fall within the scope of the present disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><us-claim-statement>What is claimed is:</us-claim-statement><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A method operating a control system including a processor to control one or more autonomous vehicles, the method comprising:<claim-text>accessing information indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed;</claim-text><claim-text>determining whether a worker handover for the second operation should be implemented based on a first estimated time cost for a first worker associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and</claim-text><claim-text>controlling the first autonomous vehicle to take an action based on said determination.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first estimate time cost and the second estimated time cost are estimated at the time a list of first and second operations is created.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the second estimated time cost is estimated after the first operation is completed.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein controlling the first autonomous vehicle to take an action based on said determination includes:<claim-text>outputting a worker notification to move from the first location to the second location; and</claim-text><claim-text>routing the autonomous vehicle from the first location to the second location when a worker handover is not to be implemented.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein controlling the first autonomous vehicle to take an action based on said determination includes:<claim-text>assigning the second operation to the second worker when the determination is a decision to implement a worker handover.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said controlling the first autonomous vehicle to take an action based on said determination comprises one or more of: i) routing the first autonomous vehicle to a handover location or ii) operating the first autonomous vehicle to require a login to the first autonomous vehicle by the second worker.</claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said first autonomous vehicle is a first robotic cart.</claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining whether a worker handover should be implemented is based on at on at least an amount of time required for a first worker assigned to the first autonomous vehicle to travel from the first location to the second location with the first autonomous vehicle.</claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein determining whether a worker handover should be implemented is further based on a second amount of time required for the second worker to travel to the second location.</claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein determining whether a worker handover should be implemented includes:<claim-text>determining a first cost value based on at least the amount of time required for the first worker assigned to the first autonomous vehicle to travel from the first location to the second location; and</claim-text><claim-text>determining a second cost value based on at least the second amount of time required for the second worker to travel to the second location.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising, prior to determining the first cost value, performing the steps of:<claim-text>assigning a first list of location dependent tasks to the first autonomous vehicle, said first set of location dependent tasks including a first task to be completed at the first location and a next task to be completed at a second location, said second location being different from said first location; and</claim-text><claim-text>assigning said first worker to the first autonomous vehicle to perform said first operation at said first location.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein determining whether a worker handover should be implemented includes:<claim-text>making a decision to implement a handover when the first cost value is greater than the second cost value.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first cost value is further based on one, multiple, or all of: i) a cost metric based on the time for the first worker to complete the second operation at the second location; ii) a weight based on the priority of the ongoing list of operations associated with the first autonomous vehicle (e.g., priority of order to which the first autonomous vehicle corresponds; iii) a weight based on the effect of having the first worker reposition to the second location, thereby changing the worker distribution in the warehouse where the first autonomous vehicle is being used; and iv) a cost function based on whether the first worker will cross a zone boundary in a warehouse, where zones are defined, e.g., with a weight associated with a zone boundary crossing being positive reflecting an increased cost to thereby discourage movement of workers between zones.</claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. A control system comprising:<claim-text>memory including a task list; and</claim-text><claim-text>a processor configured to control one or more autonomous vehicles based on task list information, said processor being configured to:<claim-text>access information in said task list indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed;</claim-text><claim-text>determine whether a worker handover for the second operation should be implemented based on a first estimated time cost for a first worker associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and</claim-text><claim-text>control the first autonomous vehicle to take an action based on said determination.</claim-text></claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The control system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured, as part of controlling the first autonomous vehicle to take an action based on said determination to control the autonomous vehicle to:<claim-text>output a worker notification to move from the first location to the second location; and</claim-text><claim-text>route the first autonomous vehicle from the first location to the second location when a worker handover is not to be implemented.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The control system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor is further configured, as part of controlling the first autonomous vehicle to take an action based on said determination, to control the autonomous vehicle to:<claim-text>assign the second operation to the second worker when the determination is a decision to implement a worker handover.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The control system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured, as part of controlling the first autonomous vehicle to take an action based on said determination, to control the autonomous vehicle to perform one or more of: i) routing the first autonomous vehicle to a handover location or ii) operating the first autonomous vehicle to require a login to the first autonomous vehicle by the second worker.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The control system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the processor is further configured, as part of determining whether a worker handover should be implemented, to use at on at least an amount of time required for a first worker assigned to the first autonomous vehicle to travel from the first location to the second location with the first autonomous vehicle in making said determination of whether the worker handover should be implemented.</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The control system of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the processor is further configured, as part of determining whether a worker handover should be implemented, to base said determination on a second amount of time required for the second worker to travel to the second location.</claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The control system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the processor is configured, as part of determining whether a worker handover should be implemented, to:<claim-text>determine a first cost value based on at least the amount of time required for the first worker assigned to the first autonomous vehicle to travel from the first location to the second location; and</claim-text><claim-text>determine a second cost value based on at least the second amount of time required for the second worker to travel to the second location.</claim-text></claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. The control system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the processor is configured as part of determining whether a worker handover should be implemented, to:<claim-text>make a decision to implement a handover when the first cost value is greater than the second cost value.</claim-text></claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. A non-transitory computer readable medium including processor executable instruction which when executed by a processor of a control system cause the processor to:<claim-text>access information indicating a first location at which a first operation associated with a first autonomous vehicle is to be performed and a second location where a second operation associated with the first autonomous vehicle is to be performed;</claim-text><claim-text>determine whether a worker handover for the second operation should be implemented based on a first estimated time cost for a first worker associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle and a second estimated time cost for a second worker not associated with the first autonomous vehicle at said first location for performing the second operation with the first autonomous vehicle; and</claim-text><claim-text>control the first autonomous vehicle to take an action based on said determination.</claim-text></claim-text></claim></claims></us-patent-application>