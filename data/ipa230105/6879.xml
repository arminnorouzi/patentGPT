<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230006880A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230006880</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17364729</doc-number><date>20210630</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>12</main-group><subgroup>24</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>L</subclass><main-group>29</main-group><subgroup>06</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>41</main-group><subgroup>0816</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>L</subclass><main-group>63</main-group><subgroup>205</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">LOCAL EDGE AUTHORITY PLATFORM</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>Microsoft Technology Licensing, LLC</orgname><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>KAUFMAN</last-name><first-name>Peter J.</first-name><address><city>Sammamish</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>YUE</last-name><first-name>Feng</first-name><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>LAHIRI</last-name><first-name>Shayak</first-name><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>COOLEY</last-name><first-name>Sarah Eleni</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>IYENGAR</last-name><first-name>Shrivaths Rajagopalan</first-name><address><city>Redmond</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="05" designation="us-only"><addressbook><last-name>REYNOLDS</last-name><first-name>Matthew Wayman</first-name><address><city>Maple Valley</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="06" designation="us-only"><addressbook><last-name>AGRAWAL</last-name><first-name>Anshul</first-name><address><city>Seattle</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="07" designation="us-only"><addressbook><last-name>HEVIA</last-name><first-name>Joannier Pinales</first-name><address><city>Kirkland</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="08" designation="us-only"><addressbook><last-name>IDE</last-name><first-name>Nathan Jeffrey</first-name><address><city>Bothell</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="09" designation="us-only"><addressbook><last-name>RICHARDS</last-name><first-name>Peter John</first-name><address><city>Snoqualmie</city><state>WA</state><country>US</country></address></addressbook></inventor><inventor sequence="10" designation="us-only"><addressbook><last-name>PINKSTON</last-name><first-name>Jeffrey Scott</first-name><address><city>Draper</city><state>UT</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems and methods providing a local edge authority platform that enables localized control of managed devices with selective cloud and occasional cloud connectivity are provided. The method includes receiving first configuration instructions from a first configuration authority for configuring a managed device; receiving second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority; determining a conflict exists between the first configuration instructions and the second configuration instructions; resolving the conflict; and configuring the managed device based on the resolved conflict.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="95.33mm" wi="158.75mm" file="US20230006880A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="219.29mm" wi="149.94mm" file="US20230006880A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="246.13mm" wi="161.71mm" orientation="landscape" file="US20230006880A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="218.69mm" wi="164.59mm" file="US20230006880A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="218.52mm" wi="172.55mm" file="US20230006880A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="254.00mm" wi="166.45mm" file="US20230006880A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="219.54mm" wi="160.61mm" file="US20230006880A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="237.41mm" wi="152.23mm" file="US20230006880A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="228.43mm" wi="125.05mm" file="US20230006880A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="195.41mm" wi="162.05mm" file="US20230006880A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="241.22mm" wi="161.88mm" file="US20230006880A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">BACKGROUND</heading><p id="p-0002" num="0001">Within organizations throughout the world, a common need for Information Technology (IT) administrators is the convenient ability to manage multiple types of devices and networks across an organization. Accordingly, enterprises are increasingly adopting the cloud to manage devices, especially mobile and desktop devices, where the benefits of the cloud resonate clearly, such as scalability, flexibility, cost reduction, etc. The simplicity of device management via the cloud is appealing to enterprises, particularly because of the opportunities to re-evaluate and rethink existing device management solutions, especially solutions that are home grown and resource drains. However, cloud-based solutions generally require IT intervention for commands and configuration, which is not always available for systems and devices that require local control and cannot, or will not, be constantly connected to the cloud.</p><heading id="h-0002" level="1">SUMMARY</heading><p id="p-0003" num="0002">This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.</p><p id="p-0004" num="0003">Examples and implementations disclosed herein are directed to systems and methods that provide a local edge authority platform that enables localized control of managed devices with selective cloud and occasional cloud connectivity. The method includes receiving first configuration instructions from a first configuration authority for configuring a managed device; receiving second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority; determining a conflict exists between the first configuration instructions and the second configuration instructions; resolving the conflict; and configuring the managed device based on the resolved conflict.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004">The present description will be better understood from the following detailed description read in light of the accompanying drawings, wherein:</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an example computing device for implementing various examples of the present disclosure;</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating an example system including the local edge authority platform according to various examples of the present disclosure;</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example system implementing the local edge authority platform according to various examples of the present disclosure;</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example system including edge web services and a datastore according to various examples of the present disclosure;</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example system including a multi-authority hub according to various examples of the present disclosure;</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example system including a configuration filter hub according to various examples of the present disclosure;</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating an example system implementing the local edge authority platform according to various examples of the present disclosure;</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart diagram illustrating operations of a computer-implemented method for configuring a managed device according to various examples of the present disclosure;</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow chart diagram illustrating operations of a computer-implemented method for resolving a conflict between configuration instructions according to various examples of the present disclosure; and</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating an example cloud infrastructure according to various examples of the present disclosure.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><p id="p-0016" num="0015">Corresponding reference characters indicate corresponding parts throughout the drawings. In <figref idref="DRAWINGS">FIGS. <b>1</b> to <b>10</b></figref>, the systems are illustrated as schematic drawings. The drawings may not be to scale.</p><heading id="h-0004" level="1">DETAILED DESCRIPTION</heading><p id="p-0017" num="0016">The various implementations and examples will be described in detail with reference to the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made throughout this disclosure relating to specific examples and implementations are provided solely for illustrative purposes but, unless indicated to the contrary, are not meant to limit all examples.</p><p id="p-0018" num="0017">In an organization, IT administrators are typically tasked with deploying devices throughout the organization and for ensuring that such devices are adequately configured with various settings that can ensure that the organization's network remains secure and stable. For example, an organization may require that any devices issued to employees of the organization be locked down such that the employees cannot install new applications or modify settings of the device. Alternatively, the organization may restrict installation of applications to the managed device, such that a user can only install certain trusted applications. However, the wide variety of devices that may be deployed by an organization can make management of these devices difficult, as each device may require different configuration values to ensure adherence to the organization's security requirements.</p><p id="p-0019" num="0018">This scenario is made more complex as the cloud is integrated into an enterprise's device management infrastructure. In these scenarios, the enterprise ideally has clear, concise guidance from the cloud provider concerning the local, on-premises needs. The enterprise receives guidance on how to securely lockdown and protect devices from mobile device management (MDM), in addition to potential other needs. The IT department of an enterprise can spend a great amount of time understanding these needs and working out a logistical solution to them. Many of these needs are solved by having local or on-premises control points or authorities for specialization. However, these local edge authorities are sometimes not an integral part of the cloud solution and can therefore potentially become their own isolated environments, in effect becoming what the enterprise intended to avoid by adopting the cloud environment.</p><p id="p-0020" num="0019">Furthermore, due to the time, security, and bandwidth requirements of IT administration, as well as the functional requirements of cloud connectivity, it is also understood that some functions are preferably executed without IT administration oversight. For example, in some implementations, cloud connectivity is not preferred due to security concerns. In addition, due to the various authorities that are used to configure a single device, such as the IT administrator and a localized administrator or device, configuration instructions can sometimes be received that conflict with each other. Accordingly, examples of the present disclosure provide a local edge authority, or hub, that enables configuration of a managed device, or devices, based on configuration instructions from multiple authorities that can, in some instances, provide conflicting instructions. The local edge authority platform determines a hierarchy of authorities, resolves the conflict based on the determined hierarchy, and configures the managed device based on the resolved conflict.</p><p id="p-0021" num="0020">In certain instances, IT administrators can utilize an Enterprise Mobility Management (EMM) service, which can provide a set of services and technologies that can assist with provisioning and securing an organization's devices. For example, an organization may deploy multiple devices, and upon powering on of the devices or periodically during the deployment life of the devices, the devices can interact with the EMM to receive necessary configuration data for provisioning. Such configuration data can include, for example, security policies, wireless passwords, required applications, and various administrator tools, among other settings. An EMM can typically provide some flexibility for the configuration of devices, as one organization that utilizes the EMM may have vastly different requirements than a different organization that utilizes the EMM. As such, the local edge authority platform can utilize EMM to assist with defining the various configuration settings to be applied to deployed devices associated with an organization.</p><p id="p-0022" num="0021">As referenced herein, a semi-connected environment is an environment which is configurable to operate when both connected to the cloud and when not connected to the cloud. For example, a semi-connected device includes connectivity options such that regular operations, such as particular applications and operating systems, are executed without connection to a cloud network or device, but selectively and periodically has access to the cloud environment to receives updates, maintenance, and so forth via an intermediary device that is connected to the cloud. Constant cloud connectivity cannot always be guaranteed. Furthermore, even cloud-connected devices benefit from a delegated, simplified level of control within global guardrails.</p><p id="p-0023" num="0022">As further referenced herein, a configuration authority is an authority that is authorized to configure at least a portion, or a part, of a managed device. In some examples, a configuration authority is an IT administrator, an on-premises device, a LEAP hub that is a parent of another LEAP hub, and so forth. However, these examples should not be construed as limiting and various examples are possible without departing from the scope of the present disclosure.</p><p id="p-0024" num="0023">As further referenced herein, a managed device is a device that can be configured by an authorized configuration authority as described herein. In some examples, a managed device is a local device. However, this example should not be construed as limiting and various examples are possible without departing from the scope of the present disclosure. In some examples, a managed device refers to a plurality, i.e., more than one, managed device. In some examples, the managed device can be configured by more than one configuration authority simultaneously. For example, the managed device can include multiple types of configuration data such as security policies, wireless passwords, required applications, and various administrator tools, among other settings, that are configured via multiple configuration authorities.</p><p id="p-0025" num="0024">Current solutions fail to provide sufficient solutions for configuring a managed devices based on multiple configuration instructions that are received from different sources, while meeting requirements for edge devices that operate with low network saturation, are battery conscious, and so forth. Solutions that do attempt to address these challenges fail to sufficiently delegate configurations, fail to provide the security and framework typically provided by an IT administrator, and/or fail to enable to use of a same operating system configuration surface. In particular, the current solutions fail to provide a technical solution that provides a same operating system configuration for different authorities such as an IT administrator and an independent software vendor (ISV), enables third-party control planes on the edge of a semi-connected environment to configure or re-configure either alone or with the cloud, provides a delegated, simplified level of control within global guardrails, and provides a secure agent and device/service communication protocol compatible with particular software requirements.</p><p id="p-0026" num="0025">Various examples of the present disclosure address the above-identified challenges by providing a local edge authority platform that enables localized control of managed devices with selective cloud and occasional cloud connectivity. The local edge authority platform segregates the various authorities that are used to configure the managed devices, filters the configuration instructions according to the authorities, resolves conflicts between the instructions received from the various authorities, and configures the managed devices according to the configuration instructions. Providing a local, i.e., on-site or on-premises, hub platform provides a series of advantages, including not limited to a standard device configuration control plane, extensibility for additional specialized control planes, multi-authority conflict/precedence resolution, device authentication, an authorization/RBAC model, a targeting/specialty model, a local application and update repository with deployment support, cloud disconnect/reconnect handling to a cloud authority, telemetry and diagnostics, investigative tooling, a staging/testing platform, and a break-glass ability to mitigate device-management blocking issues. Furthermore, support for the local authority in a local edge authority platform enables an enterprise on-premises ecosystem to seamlessly integrate with a cloud computing environment.</p><p id="p-0027" num="0026">Aspects of the present disclosure provide a computer-implemented method and system for configuring a managed device in an edge authority platform. The computer-implemented method includes receiving first configuration instructions from a first configuration authority for configuring a managed device; receiving second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority; determining a conflict exists between the first configuration instructions and the second configuration instructions; resolving the conflict; and configuring the managed device based on the resolved conflict.</p><p id="p-0028" num="0027">Accordingly, the system provided in the present disclosure operates in an unconventional manner by introducing a security model to managed device configuration that segregates multiple authorities used to configure the managed device, filtering configuration instructions from the multiple authorities, resolving conflicts between the instructions, and configuring the managed device based on the configuration instructions, all while meeting security levels of global guardrails and providing the same operating system configuration for the different authorities.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is a block diagram illustrating an example computing device <b>100</b> for implementing aspects disclosed herein and is designated generally as computing device <b>100</b>. Computing device <b>100</b> is but one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the computing device <b>100</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated.</p><p id="p-0030" num="0029">The examples disclosed herein may be described in the general context of computer code or machine- or computer-executable instructions, such as program components, being executed by a computer or other machine. Program components include routines, programs, objects, components, data structures, and the like that refer to code, performs particular tasks, or implement particular abstract data types. The disclosed examples may be practiced in a variety of system configurations, including servers, personal computers, laptops, smart phones, servers, VMs, mobile tablets, hand-held devices, consumer electronics, specialty computing devices, etc. The disclosed examples may also be practiced in distributed computing environments when tasks are performed by remote-processing devices that are linked through a communications network.</p><p id="p-0031" num="0030">The computing device <b>100</b> includes a bus <b>110</b> that directly or indirectly couples the following devices: computer-storage memory <b>112</b>, one or more processors <b>114</b>, one or more presentation components <b>116</b>, I/O ports <b>118</b>, I/O components <b>120</b>, a power supply <b>122</b>, and a network component <b>124</b>. While the computing device <b>100</b> is depicted as a seemingly single device, multiple computing devices <b>100</b> may work together and share the depicted device resources. For example, memory <b>112</b> is distributed across multiple devices, and processor(s) <b>114</b> is housed with different devices. Bus <b>110</b> represents what may be one or more busses (such as an address bus, data bus, or a combination thereof). Although the various blocks of <figref idref="DRAWINGS">FIG. <b>1</b></figref> are shown with lines for the sake of clarity, delineating various components may be accomplished with alternative representations. For example, a presentation component such as a display device is an I/O component in some examples, and some examples of processors have their own memory. Distinction is not made between such categories as &#x201c;workstation,&#x201d; &#x201c;server,&#x201d; &#x201c;laptop,&#x201d; &#x201c;hand-held device,&#x201d; etc., as all are contemplated within the scope of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the references herein to a &#x201c;computing device.&#x201d;</p><p id="p-0032" num="0031">Memory <b>112</b> may take the form of the computer-storage memory device referenced below and operatively provide storage of computer-readable instructions, data structures, program modules and other data for the computing device <b>100</b>. In some examples, memory <b>112</b> stores one or more of an operating system (OS), a universal application platform, or other program modules and program data. Memory <b>112</b> is thus able to store and access data <b>112</b><i>a </i>and instructions <b>112</b><i>b </i>that are executable by processor <b>114</b> and configured to carry out the various operations disclosed herein. In some examples, memory <b>112</b> stores executable computer instructions for an OS and various software applications. The OS may be any OS designed to the control the functionality of the computing device <b>100</b>, including, for example but without limitation: WINDOWS&#xae; developed by the MICROSOFT CORPORATION&#xae;, MAC OS&#xae; developed by APPLE, INC.&#xae; of Cupertino, Calif., ANDROID&#x2122; developed by GOOGLE, INC.&#xae; of Mountain View, Calif., open-source LINUX&#xae;, and the like.</p><p id="p-0033" num="0032">By way of example and not limitation, computer readable media comprise computer-storage memory devices and communication media. Computer-storage memory devices may include volatile, nonvolatile, removable, non-removable, or other memory implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or the like. Computer-storage memory devices are tangible and mutually exclusive to communication media. Computer-storage memory devices are implemented in hardware and exclude carrier waves and propagated signals. Computer-storage memory devices for purposes of this disclosure are not signals per se. Example computer-storage memory devices include hard disks, flash drives, solid state memory, phase change random-access memory (PRAM), static random-access memory (SRAM), dynamic random-access memory (DRAM), other types of random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disk read-only memory (CD-ROM), digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transmission medium that may be used to store information for access by a computing device. In contrast, communication media typically embody computer readable instructions, data structures, program modules, or the like in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media.</p><p id="p-0034" num="0033">The computer-executable instructions may be organized into one or more computer-executable components or modules. Generally, program modules include, but are not limited to, routines, programs, objects, components, and data structures that perform particular tasks or implement particular abstract data types. Aspects of the disclosure may be implemented with any number an organization of such components or modules. For example, aspects of the disclosure are not limited to the specific computer-executable instructions or the specific components or modules illustrated in the figures and described herein. Other examples of the disclosure may include different computer-executable instructions or components having more or less functionality than illustrated and described herein. In examples involving a general-purpose computer, aspects of the disclosure transform the general-purpose computer into a special-purpose computing device, CPU, GPU, ASIC, system on chip (SoC), or the like for provisioning new VMs when configured to execute the instructions described herein.</p><p id="p-0035" num="0034">Processor(s) <b>114</b> may include any quantity of processing units that read data from various entities, such as memory <b>112</b> or I/O components <b>120</b>. Specifically, processor(s) <b>114</b> are programmed to execute computer-executable instructions for implementing aspects of the disclosure. The instructions may be performed by the processor <b>114</b>, by multiple processors <b>114</b> within the computing device <b>100</b>, or by a processor external to the client computing device <b>100</b>. In some examples, the processor(s) <b>114</b> are programmed to execute instructions such as those illustrated in the flow charts discussed below and depicted in the accompanying figures. Moreover, in some examples, the processor(s) <b>114</b> represent an implementation of analog techniques to perform the operations described herein. For example, the operations are performed by an analog client computing device <b>100</b> and/or a digital client computing device <b>100</b>.</p><p id="p-0036" num="0035">Presentation component(s) <b>116</b> present data indications to a user or other device. Example presentation components include a display device, speaker, printing component, vibrating component, etc. One skilled in the art will understand and appreciate that computer data may be presented in a number of ways, such as visually in a graphical user interface (GUI), audibly through speakers, wirelessly between computing devices <b>100</b>, across a wired connection, or in other ways. I/O ports <b>118</b> allow computing device <b>100</b> to be logically coupled to other devices including I/O components <b>120</b>, some of which may be built in. Example I/O components <b>120</b> include, for example but without limitation, a microphone, joystick, game pad, satellite dish, scanner, printer, wireless device, etc.</p><p id="p-0037" num="0036">The computing device <b>100</b> may communicate over a network <b>130</b> via network component <b>124</b> using logical connections to one or more remote computers. In some examples, the network component <b>124</b> includes a network interface card and/or computer-executable instructions (e.g., a driver) for operating the network interface card. Communication between the computing device <b>100</b> and other devices may occur using any protocol or mechanism over any wired or wireless connection. In some examples, network component <b>124</b> is operable to communicate data over public, private, or hybrid (public and private) using a transfer protocol, between devices wirelessly using short range communication technologies (e.g., near-field communication (NFC), Bluetooth&#x2122; branded communications, or the like), or a combination thereof. Network component <b>124</b> communicates over wireless communication link <b>126</b> and/or a wired communication link <b>126</b><i>a </i>across network <b>130</b> to a cloud environment <b>128</b>, such as the cloud computing environment illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref>. Various different examples of communication links <b>126</b> and <b>126</b><i>a </i>include a wireless connection, a wired connection, and/or a dedicated link, and in some examples, at least a portion is routed through the Internet.</p><p id="p-0038" num="0037">The network <b>130</b> may include any computer network or combination thereof. Examples of computer networks configurable to operate as network <b>130</b> include, without limitation, a wireless network; landline; cable line; digital subscriber line (DSL): fiber-optic line; cellular network (e.g., 3G, 4G, 5G, etc.); local area network (LAN); wide area network (WAN); metropolitan area network (MAN); or the like. The network <b>130</b> is not limited, however, to connections coupling separate computer units. Rather, the network <b>130</b> may also include subsystems that transfer data between servers or computing devices. For example, the network <b>130</b> may also include a point-to-point connection, the Internet, an Ethernet, an electrical bus, a neural network, or other internal system. Such networking architectures are well known and need not be discussed at depth herein.</p><p id="p-0039" num="0038">As described herein, the computing device <b>100</b> can be implemented as one or more servers. The computing device <b>100</b> can be implemented as a local edge authority platform, or hub, such as the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and/or the LEAP hub <b>720</b>.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram illustrating an example system including the local edge authority platform (LEAP) according to various examples of the present disclosure. As depicted in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, the system <b>200</b> comprises a platform management server <b>202</b> that can be utilized to manage the provisioning of one or more managed device(s) <b>204</b>, which may include desktop or laptop devices <b>204</b>(<b>1</b>) or portable devices <b>204</b>(<b>2</b>), for example. In some examples, the platform management server <b>202</b> is the computing device <b>100</b>. For example, the processor <b>212</b>(<b>1</b>) can be the processor <b>114</b> and the memory <b>214</b>(<b>1</b>) can be the memory <b>112</b>. The management of managed devices <b>204</b> may be initiated by an administrator <b>206</b>, who may interact with one or more enterprise service(s) <b>208</b> to define configuration settings to be used for provisioning managed devices <b>204</b> and can monitor the status of the provisioning process. Enterprise services <b>208</b> may be an EMM, and may include multiple different types of EMMs, such as EMM <b>208</b>(<b>1</b>) which may be an EMM provided by a particular service provider, while EMM <b>208</b>(<b>2</b>) may be an EMM provided by a different service provider.</p><p id="p-0041" num="0040">As described herein, the platform management server <b>202</b> provides a local authority hub to various devices enrolled to it. In some examples, the local authority hub is a conduit for local authorities to manage enrolled devices. For example, the system <b>200</b> can be a local edge authority platform that implements the local authority hub, such as the platform management server <b>202</b>, that is the local authority. Multiple simultaneous control planes through the hub to manage multiple devices are supported, with the hub, i.e., the platform management server <b>202</b>, serving as the scenario controller. Providing a local, i.e., on-site or on-premises, hub platform provides a series of advantages, including not limited to a standard device configuration control plane, extensibility for additional specialized control planes, multi-authority conflict/precedence resolution, device authentication, an authorization/RBAC model, a targeting/specialty model, a local application and update repository with deployment support, cloud disconnect/reconnect handling to a cloud authority, telemetry and diagnostics, investigative tooling, a staging/testing platform, and a break-glass ability to mitigate device-management blocking issues. Furthermore, support for the local authority in a local edge authority platform enables an enterprise on-premises ecosystem to seamlessly integrate with a cloud computing environment.</p><p id="p-0042" num="0041">Platform management server <b>202</b>, managed devices <b>204</b>, administrator <b>206</b>, and enterprise services <b>208</b> may all be communicatively coupled by way of a network <b>210</b> (e.g., the Internet or an intranet). In some examples, the network <b>210</b> is the network <b>130</b>. However, it is to be appreciated that while the various entities depicted in system <b>200</b> can be communicatively coupled to network <b>210</b>, not all of the entities may necessarily communicate with each other. For example, in some implementations, administrator <b>206</b> may only communicate with the platform management server <b>202</b> and does not have the direct ability to communicate with enterprise service <b>208</b>. Similarly, enterprise service <b>208</b> may not have the ability to communicate directly with managed devices <b>204</b>, as platform management server <b>202</b> can be in charge of communication with the managed devices <b>204</b>.</p><p id="p-0043" num="0042">Platform management server <b>202</b> and managed devices <b>204</b> may each comprise a processor <b>212</b> and memory <b>214</b>, as illustrated in <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Memory <b>214</b> may have various software modules that can be executable by processor <b>212</b> for performing the processes disclosed herein. Memory <b>214</b> can include both persistent storage resources, such as magnetic or solid-state drives, and volatile storage, such as one or more random-access memory devices. In some examples, the modules described herein in connection with memory <b>214</b> can be provided as executable instructions that are stored on persistent storage devices, loaded into the random-access memory (RAM), and read from RAM by the processor for execution.</p><p id="p-0044" num="0043">Memory <b>214</b>(<b>1</b>) associated with platform management server <b>202</b> can include or have access to a management module <b>216</b>, which may be a software program executable by processor <b>212</b> for performing the various management tasks associated with configuring managed devices <b>204</b>. Memory <b>214</b>(<b>1</b>) may also include an API <b>218</b> that can be exposed to provide programming interfaces for use by enterprise service <b>208</b>, and a discovery module <b>220</b> and check-in module <b>222</b> that can interact with deployed devices.</p><p id="p-0045" num="0044">In some examples, the memory <b>214</b>(<b>1</b>) further includes an enrollment module <b>217</b>. The enrollment module <b>217</b> enrolls the managed device <b>204</b> into the management module <b>216</b> and tracks the managed device <b>204</b>. In other words, enrolling the managed device <b>204</b> into the management module <b>216</b> initiates the management protocol executed by the management module <b>216</b>. The managed device <b>204</b> queries the discovery module <b>220</b> and the enrollment module <b>217</b> is returned to the managed device <b>204</b> as well as the check-in module <b>222</b> used by the managed device <b>204</b> to ping the hub for various policies and/or configurations. The API module <b>218</b> takes configuration requests received from an IT Administrator or another authority and stores the requests until the managed device <b>204</b> checks in. When the managed device <b>204</b> checks in, the management module <b>216</b> supplies the configuration data as the response back to the managed device <b>204</b>.</p><p id="p-0046" num="0045">In one implementation, enterprise service <b>208</b> may include a software application usable by administrator <b>206</b> that can include a graphical user interface (GUI) for displaying a visual depiction of managed devices <b>204</b> within the organization, and present information to administrator <b>206</b> about the various options available for configuring the devices by way of configuration settings that can be applied to the devices as provided by platform management server <b>202</b>. In particular, the GUI of enterprise service <b>208</b> may interact with management module <b>216</b> by making programmatic calls using API <b>218</b> to pull certain information regarding configuration capabilities of management module <b>216</b>, and to provide received configuration data in a form suitable for processing by management module <b>216</b>. Such configuration data can be stored, for example, in a database <b>224</b> of platform management server <b>202</b>.</p><p id="p-0047" num="0046">In some implementations, management module <b>216</b> may allow only certain configuration data, regardless of the particular EMM that is utilizing platform management server <b>202</b> to manage the devices. By only providing API calls for particular types of information, platform management server <b>202</b> can ensure that configuration settings applied by administrator <b>206</b> via enterprise service <b>208</b> do not go outside the bounds of the predefined configuration settings. For example, while the configuration settings utilized by platform management server <b>202</b> can include a large listing of various data fields, an EMM would not be able to specify additional secret values beyond the fields in the configuration settings. This can ensure that management module <b>216</b> can appropriately precompute a configuration packet for managed devices <b>204</b> without running into problems of how to handle unknown data, which could result in system instability.</p><p id="p-0048" num="0047">In providing enterprise service <b>208</b> the ability to define configuration data for use by multiple types of managed devices <b>204</b>, management module <b>216</b> may abstract out the details of how the configuration can be applied to each of the managed devices <b>204</b>, as the management module can ultimately precompute the necessary device-specific configuration steps once the device checks-in, regardless of what kind of device it is. As such, an administrator <b>206</b> can provide generic configuration data via platform management server <b>202</b> by filling in any relevant data that is specified by the configuration settings without regard to device implementation, along with an assignment of the data to a particular device. The assignment of configuration settings to particular devices can utilize a flexible assignment system that can easily allow administrator <b>206</b> to specify certain devices among the organization's various deployed devices.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a block diagram illustrating an example system implementing the local edge authority platform (LEAP) according to various examples of the present disclosure. The system <b>300</b> is but one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the system <b>300</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated. The system <b>300</b> provides an architecture where a device configuration system has encapsulated control and data planes for specialized scenarios that can be applied independently of a cloud computing environment while maintaining its own self-contained identity, targeting, notification, storage, updatability, and segregated capabilities. Further, the device configuration system does maintain a capability to connect to the cloud computing environment selectively and periodically, for example for degrees of centralized authority control, monitoring, and/or remediation.</p><p id="p-0050" num="0049">The system <b>300</b> includes a cloud computing device <b>310</b>. In some examples, the cloud computing device <b>310</b> is an IT administrator, or IT administrators, that implements a cloud computing device or devices. In some examples, the cloud computing device <b>310</b> is referred to herein as a first configuration authority and/or a hub MDM cloud authority. The cloud computing device <b>310</b> includes a management tool <b>311</b> and a cloud API <b>313</b>. In some examples, the cloud API <b>313</b> is an EMM API.</p><p id="p-0051" num="0050">The system <b>300</b> further includes a local edge authority platform (LEAP) hub <b>320</b>. In some examples, the LEAP hub <b>320</b> is the computing device <b>101</b> and/or the platform management server <b>202</b>. For example, the LEAP hub <b>320</b> can be a local server or any other suitable computing device. The LEAP hub <b>320</b> includes an IT administrative portal <b>321</b> that transmits and receives signals to and from, respectively, a local MDM authority. The LEAP hub <b>320</b> further includes a non-IT authority <b>323</b> and an edge API <b>325</b>. The non-IT authority <b>323</b> transmits and receives signals to and from, respectively, a local device trainer authority that sends data to train a local device. The edge API <b>325</b> transmits and receives signals and data to and from, respectively, the cloud computing device <b>310</b>, the IT administrative portal <b>321</b>, and the non-IT authority <b>323</b>. In particular, the edge API <b>325</b> enables different authorities to configure a managed device <b>204</b>, such as the local device <b>340</b>, while being simultaneously enrolled with the LEAP hub <b>320</b>. For example, the edge API <b>325</b> enables an IT administrator to manage the device security, a classroom instructor managing to student lessons and test taking, a trainer to train particular devices, a technician to monitor and diagnose device issues, and so forth simultaneously and independently.</p><p id="p-0052" num="0051">In some examples, the LEAP hub <b>320</b> is connected to additional authority hubs, in addition to or instead of the LEAP hub <b>330</b> and/or the cloud computing device <b>310</b>, that the LEAP hub <b>320</b> has authority to configure or be configured by. In other words, although the LEAP hub <b>320</b> is discussed herein as connected to the cloud computing device <b>310</b> and the LEAP hub <b>320</b>, various examples are possible. For example, policies can be implemented in the LEAP hub <b>320</b> can be received from another cloud authority, another LEAP hub, and so forth.</p><p id="p-0053" num="0052">The system <b>300</b> further includes at least one local devices <b>340</b>. In some examples, the at least one local device <b>340</b> is the managed device <b>204</b>. Although illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> as including one local device <b>340</b>, the local device <b>340</b> is illustrated for simplicity only. The system <b>300</b> can include any number of local devices <b>340</b> without departing from the scope of the present disclosure. The local device <b>340</b> includes a MMP client <b>341</b>. The local device <b>340</b> is enrolled to the system <b>300</b> and has a clearly segregated privilege surface area to enable the segregated configuration as described herein.</p><p id="p-0054" num="0053">In some examples, the system <b>300</b> further includes a second LEAP hub <b>330</b>. The second LEAP hub <b>330</b> includes an IT administrative portal <b>331</b>, an edge API <b>333</b>, and an enrollment module <b>401</b>. In some examples, the LEAP hub <b>330</b> is referred to herein as a second configuration authority. The second LEAP hub <b>330</b> is an additional authority for configuring the local device <b>340</b>. In some examples, the various authorities for configuring the local device <b>340</b> can have precedence ranking for configuring the local device <b>340</b>. As described in greater detail below, in examples where the instructions for configuration of the local device <b>340</b> conflict, the authority with the higher precedence ranking takes precedence. In examples where the authorities have the same rank, the most secure setting takes place, if possible. In examples where the most secure setting is not available or cannot be returned, an error is returned and the local device <b>340</b> is not configured.</p><p id="p-0055" num="0054">The enrollment module <b>401</b> can be enrollment module <b>217</b> illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> and described above. In some examples, the enrollment module <b>401</b> receives instructions from a local MDM authority <b>404</b> and a non-IT authority <b>404</b>. The enrollment module <b>401</b>, the local MDM authority <b>404</b>, and the non-IT authority <b>404</b> are described in greater detail in the description of <figref idref="DRAWINGS">FIG. <b>4</b></figref> below.</p><p id="p-0056" num="0055">In some examples, the LEAP hubs can be arranged hierarchically within the system <b>300</b>. For example, the LEAP hub <b>330</b> and the LEAP hub <b>320</b> can be arranged in a parent-child relationship where the child hub is enrolled with a parent hub. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the LEAP hub <b>330</b> is the parent hub and the LEAP hub <b>320</b> is the child hub, but various examples are possible. In examples where a parent-child hub relationship is present within the system <b>300</b>, the parent hub functions similarly to the cloud connect and acts as a higher ranked authority, for example delegating the MDM IT administrator to request devices to enroll as one or more other authorities. Accordingly, the system <b>300</b> presents an architecture where the LEAP hub <b>320</b> has its own ecosystem for enrollment, configuration of local devices <b>340</b>, execution, and so forth but also maintains extensibility for higher authorities to control the LEAP hub <b>320</b>, when necessary, that manages the enrolled devices <b>340</b>.</p><p id="p-0057" num="0056">For example, the LEAP hub <b>330</b> can be similar to the cloud computing device <b>310</b>, but a localized hub rather than a cloud-based hub. Each is capable of calling into the EMM API that is configured to control the local device <b>340</b>, but as higher authorities also are configured to set guard rails, capabilities, and/or restrictions on a lower authority in the hierarchy. As shown in <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the LEAP hub <b>320</b> is arranged as a higher authority than the LEAP hub <b>330</b>, which is arranged as a higher authority than the local device <b>340</b>. Accordingly, the local device <b>340</b> only periodically returns to the LEAP hub <b>320</b> to receive instructions for configurations and so forth.</p><p id="p-0058" num="0057">In some examples, the system <b>300</b> further provides a pluggable identity model for device and user authentication and targeting. In some examples, authentication and targeting can be certificate based for device only management. In some examples, per-user management is accomplished by an air gap version of AAD or a third-party model. Further, due to the encapsulated nature and extensibility model of the system <b>300</b>, the system <b>300</b> provides a potentially isolated hub to host a device management system to integrate the device management system into a cloud-based device management system.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a block diagram illustrating an example system including edge web services and a datastore according to various examples of the present disclosure. The system <b>400</b> is but one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the system <b>400</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>4</b></figref> illustrates the process of enrolling a device to a hub. As illustrated in <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the system <b>400</b> includes an enrollment module <b>401</b>. The enrollment module <b>401</b> further includes web services <b>406</b> and a structured query language (SQL) <b>430</b>. The web services <b>406</b> includes one or more web services, including, but not limited to, discovery services <b>408</b>, an enrollment service <b>410</b>, a certificate authority <b>412</b>, a reporting service <b>414</b>, a trainer API <b>416</b>, an EMM API <b>418</b>, a device check-in BT service <b>420</b>, a notification service <b>422</b>, such as a Windows&#x2122; Notification System MT, a device check-in MT service <b>424</b>, an instance data service <b>426</b>, and a WinDCMT <b>428</b>. The trainer API <b>416</b> receives instructions from an external trainer app authority <b>402</b> and the EMM API <b>418</b> receives instructions from an MDM authority <b>404</b>. The received instructions can be configuration instructions as described herein. In some examples, the system <b>400</b> is implemented on a device or devices as described herein, for example the computing device <b>100</b>, the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and/or the LEAP hub <b>720</b>.</p><p id="p-0061" num="0060">The SQL <b>430</b> is a datastore that communicates with a database. The SQL <b>430</b> includes an enrollment module <b>432</b>, an EMM module <b>434</b>, a reporting module <b>436</b>, and a check-in module <b>438</b>. The EMM module <b>434</b> communicates with the EMM API <b>418</b> and places an async call to one or both of the reporting module <b>436</b> and the check-in module <b>438</b>. The device check-in BT <b>420</b> further communicates with the check-in module <b>438</b>.</p><p id="p-0062" num="0061">As described herein, the device, or devices, in the system <b>400</b> use a discovery uniform resource identifier (URI) to retrieve the needed URIs. The device utilizes the enrollment URIs following an implementation of an OMA device management (DM) protocol to negotiate capabilities with a hub, such as the MMP edge hub described herein, allowing the hub to allocate and/or provision the enrollment device certificate. The enrollment device certificate secures the device to hub communication link through SSL during the device check-in.</p><p id="p-0063" num="0062">Accordingly, the device is enabled to securely communicate with the hub following the OMA DM protocol in order to receive the latest device actions, instructions, and configurations such as reboot, policies, and so forth during a device check-in. A device check-in is where a periodic ping from the device to the hub is executed. In some examples, the device periodically pings the hub by utilizing schedule tasks where the frequency of the ping is dictated by the hub. In other examples, the hub pings the device to begin a check-in by utilizing the notification service <b>422</b>.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a block diagram illustrating an example system including a multi-authority hub according to various examples of the present disclosure. The system <b>500</b> is but one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the system <b>500</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated.</p><p id="p-0065" num="0064">The system <b>500</b> illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> illustrates a multi-authority edge hub. In other words, the hub receives configuration instructions from multiple authorities, such as an MDM authority and a trainer authority. For examples, the system <b>500</b> enables the management of devices from physical locations for IT purposes and for non-IT purposes rather than the from a cloud device, given the need for response and control. In some examples, a non-IT purpose includes a control plane to orchestrate a trainer/teacher scenario, a control plane for technician troubleshooting, and so forth. The system <b>500</b> illustrates a multi-authority edge platform that enables multiple authorities to configure a local device, an on-premises device, and so forth. In some examples, the RBAC, policies, identity, inventory, auditing, and so forth can be controlled by a cloud authority, such as the cloud device <b>510</b>, when the LEAP hub <b>520</b> connects to the cloud.</p><p id="p-0066" num="0065">The system <b>500</b> includes a cloud computing device <b>510</b>. In some examples, the cloud computing device <b>510</b> is an IT administrator, or IT administrators, that implements a cloud computing device or devices. In some examples, the cloud computing device <b>510</b> is referred to herein as a first configuration authority and/or a hub MDM cloud authority. The cloud computing device <b>510</b> includes a management tool <b>511</b> and a cloud API <b>513</b>. In some examples, the cloud API <b>513</b> is an EMM API. In some examples, the cloud computing device <b>510</b> is the cloud computing device <b>310</b>.</p><p id="p-0067" num="0066">The system <b>500</b> further includes a local edge authority platform (LEAP) hub <b>520</b>. In some examples, the LEAP hub <b>520</b> is the computing device <b>101</b>, the platform management server <b>202</b>, and/or the LEAP hub <b>320</b>. For example, the LEAP hub <b>520</b> can be a local server or any other suitable computing device. The LEAP hub <b>520</b> includes an IT administrative portal <b>521</b> that transmits and receives signals to and from, respectively, a local MDM authority. The LEAP hub <b>520</b> further includes a non-IT administrative portal <b>522</b> and a non-IT authority API <b>523</b>. The non-IT administrative portal <b>522</b> transmits and receives signals to and from, respectively, a local device trainer authority and the non-IT authority API <b>523</b>.</p><p id="p-0068" num="0067">The LEAP hub <b>520</b> further includes an edge API <b>526</b> that includes a discovery module <b>527</b> that discovers devices, a targeting module <b>528</b> that targets a discovered device, an EMM API <b>529</b> that communicates with the non-IT authority API <b>523</b>, a device check-in module <b>530</b> that checks in the targeted device using a notification service <b>531</b>, for example the Windows&#x2122; Notification Service, and an enrollment module <b>532</b> that enrolls the checked-in device via the CA <b>534</b>. The LEAP hub <b>520</b> further includes an ISV application and device update store <b>525</b> that enables the downloading and installing of updates for a local device <b>540</b>.</p><p id="p-0069" num="0068">The system <b>500</b> further includes at least one local device <b>540</b>. In some examples, the at least one local device <b>540</b> is the managed device <b>204</b>. Although illustrated in <figref idref="DRAWINGS">FIG. <b>5</b></figref> as including one local device <b>540</b>, the local device <b>540</b> is illustrated for simplicity only. The system <b>500</b> can include any number of local devices <b>540</b> without departing from the scope of the present disclosure. Each local device <b>540</b> includes an MMP client <b>541</b> that is updated via the ISV application and device update store <b>525</b> and enrolled via the enrollment module <b>532</b>. The local device <b>540</b> includes a clearly segregated privilege surface area to enable the segregated configuration as described herein. A device check-in session <b>543</b> is selectively and periodically executed in order to check-in with one or more authorities with which the local device <b>540</b> is enrolled to be configured by. The local device <b>540</b> further includes one or more real-time transport (RTP) packets <b>545</b> that deliver data to the MMP client <b>541</b>.</p><p id="p-0070" num="0069">In some examples, the system <b>500</b> further includes a corporate device <b>550</b>. The corporate device <b>550</b> can be similar to the local device <b>540</b>, for example including similar features such as an MMP client <b>551</b> and a device check-in module <b>553</b>. In some examples, the corporate client <b>550</b> is managed solely from the cloud computing device <b>510</b> and is not integrated with the LEAP hub <b>520</b>. Accordingly, various examples of the present disclosure recognize and take into account that an IT administrator, such as the cloud device <b>510</b>, can be integrated with a LEAP hub, such as the LEAP hub <b>520</b>, that is integrated with multiple authorities while simultaneously controlling other devices outside the hierarchy that does not have a need for specialization, does not have a need to handle cloud disconnect, and has its own identity solution.</p><p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a block diagram illustrating an example system including a configuration filter hub according to various examples of the present disclosure. The system <b>600</b> is but one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the system <b>600</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated.</p><p id="p-0072" num="0071">The system <b>600</b> illustrated in <figref idref="DRAWINGS">FIG. <b>6</b></figref> illustrates a configuration filter edge hub. The configuration filter edge hub enables devices to be gated from an enterprise IT, allowing a local edge authority to inspect and reject, approve, and/or modify a proposed IT change. Allowing a local edge authority to inspect a proposed IT change enables the intended integrity of the devices behind the gate to be maintained. Accordingly, the configuration filter edge hub illustrated in the system <b>600</b> detects a higher authority, proposes changes if determined to be necessary, and alerts a local authority to the changes that are to be processed. For example, an enterprise that utilizes a system center configuration manager (SCCM) for on-premise local authority control and a cloud-based enterprise-wide device management via the cloud could determine to avoid the infrastructure and logistics that come with supporting SCCM and using the Internet's infrastructure offered by the cloud-based enterprise-wide device management.</p><p id="p-0073" num="0072">The system <b>600</b> includes a cloud computing device <b>610</b>. In some examples, the cloud computing device <b>610</b> is an IT administrator, or IT administrators, that implements a cloud computing device or devices. In some examples, the cloud computing device <b>610</b> is referred to herein as a first configuration authority and/or a hub MDM cloud authority. The cloud computing device <b>610</b> includes a management tool <b>611</b> and a cloud API <b>613</b>. The cloud computing device <b>610</b> receives instructions from an IT administrator, or user, for configuring a local device, such as the local device <b>630</b> and/or the on-premises device <b>640</b>. In some examples, the cloud API <b>613</b> is an EMM API.</p><p id="p-0074" num="0073">The system <b>600</b> further includes a local edge authority platform (LEAP) hub <b>620</b>. In some examples, the LEAP hub <b>620</b> is the computing device <b>101</b>, the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, and/or the LEAP hub <b>520</b>. For example, the LEAP hub <b>520</b> can be a local server or any other suitable computing device. The LEAP hub <b>620</b> includes a local MDM portal <b>621</b> that transmits signals to a local MDM authority and transmits signals to and from an edge API <b>623</b> of the LEAP hub <b>620</b>. The edge API <b>623</b> performs various functions as described herein, for example checking in a local device using a notification service <b>627</b>, for example the Windows&#x2122; Notification Service, and enrolling the checked-in device via the CA <b>625</b>.</p><p id="p-0075" num="0074">The system <b>600</b> further includes at least one local device <b>630</b> and at least one on-premise device <b>640</b>. In some examples, the at least one local device <b>630</b> and/or <b>640</b> is the managed device <b>204</b>. The at least one local device <b>630</b> includes an MMP client <b>631</b> and a device check-in module <b>633</b>. Similarly, the at least one on-premise device <b>640</b> includes an MMP client <b>641</b> and a device check-in module <b>643</b>. In some examples, the on-premise device <b>640</b> is a local authority that is authorized to configure at least part of the local device <b>630</b>. For example, the cloud computing device <b>610</b> can be a first configuration authority and the on-premises device <b>640</b> can be a second configuration authority. The process of configuring the local device <b>630</b> based configuration instructions received from each of the first configuration authority and the second configuration authority is described in greater detail below.</p><p id="p-0076" num="0075">The system <b>600</b> further includes a security isolation boundary <b>650</b> that isolates the LEAP hub <b>620</b> and the on-premises device <b>640</b> from the local device <b>630</b> that is not controlled by the LEAP hub <b>620</b>. In other words, the security isolation boundary <b>650</b> is a subnet providing a single access point to the LEAP hub <b>620</b> such that the LEAP hub <b>620</b> manages only the devices inside the security isolation boundary <b>650</b>.</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a block diagram illustrating an example system implementing the local edge authority platform according to various examples of the present disclosure. The system <b>700</b> is but one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of the examples disclosed herein. Neither should the system <b>700</b> be interpreted as having any dependency or requirement relating to any one or combination of components/modules illustrated.</p><p id="p-0078" num="0077">The system <b>700</b> includes a cloud computing device <b>310</b>. In some examples, the cloud computing device <b>310</b> is an IT administrator, or IT administrators, that implements a cloud computing device or devices. In some examples, the cloud computing device <b>710</b> is referred to herein as a first configuration authority and/or a hub MDM cloud authority. As shown in <figref idref="DRAWINGS">FIG. <b>7</b></figref>, the cloud computing environment <b>710</b> includes a management tool <b>711</b> and a cloud API <b>713</b>. In some examples, the cloud API <b>713</b> is an EMM API.</p><p id="p-0079" num="0078">The system <b>700</b> further includes a local edge authority platform (LEAP) hub <b>720</b>. In some examples, the LEAP hub <b>720</b> is the computing device <b>101</b>, the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, and/or the LEAP hub <b>620</b>. For example, the LEAP hub <b>720</b> can be a local server or any other suitable computing device. The LEAP hub <b>720</b> includes an IT administrative portal <b>721</b> that transmits and receives signals to and from, respectively, a local MDM authority. The LEAP hub <b>720</b> further includes an ISV application and device update store <b>725</b> that enables the downloading and installing of updates for the at least one local device <b>740</b>.</p><p id="p-0080" num="0079">The LEAP hub <b>720</b> further includes an edge API <b>727</b> that includes a discovery module <b>729</b> that discovers devices, a targeting module <b>731</b> that targets a discovered device, an EMM API <b>733</b>, a device check-in module <b>734</b> that checks in the targeted device using a notification service <b>737</b>, for example the Windows&#x2122; Notification Service, and an enrollment module <b>735</b> that enrolls the checked-in device via the CA <b>739</b>.</p><p id="p-0081" num="0080">The system <b>700</b> further includes the at least one local device <b>740</b>. In some examples, the at least one local device <b>740</b> is the managed device <b>204</b>. Although illustrated in <figref idref="DRAWINGS">FIG. <b>7</b></figref> as including one local device <b>740</b>, the local device <b>740</b> is illustrated for simplicity only. The system <b>700</b> can include any number of local devices <b>740</b> without departing from the scope of the present disclosure. Each local device <b>740</b> includes an MMP client <b>741</b> that is updated via the ISV application and device update store <b>725</b> and enrolled via the enrollment module <b>735</b>. The local device <b>740</b> includes a clearly segregated privilege surface area to enable the segregated configuration as described herein. A device check-in session <b>743</b> is selectively and periodically executed in order to check-in with one or more authorities with which the local device <b>740</b> is enrolled to be configured by.</p><p id="p-0082" num="0081">The system <b>700</b> illustrates a break glass scenario. A glass break scenario is a scenario where the hub software takes over from the cloud to continue management until an issue is resolved. Examples of break glass scenarios can include, but are not limited to, an outage in the cloud where the cloud computing device <b>710</b> is unavailable to send configuration and/or management instructions. For example, where the local device <b>740</b> is experiencing difficulty connecting to the local MDM authority, the LEAP hub <b>720</b> can be turnkey installed onto a server device from a cloud computing environment <b>710</b>, the resource manager <b>715</b>, and/or locally from the local device <b>740</b>. Following the installation of the LEAP hub <b>720</b>, an IT administrator can deploy an update or otherwise fix the issue in order for the local device <b>740</b> to reconnect to the local MDM authority. Accordingly, the system <b>700</b> illustrates a hybrid management model, or a hybrid control plane, of local devices to provide multiple points of authority in the event that one authority is unavailable. The hybrid management model provides a mixture of cloud- and local-authority to manage devices as necessary.</p><p id="p-0083" num="0082">Furthermore, a local device <b>740</b> that is enrolled into the LEAP hub <b>720</b> enables the local device <b>740</b> to be utilized as a local tool in various examples. In one example, the local device <b>740</b> is used throughout the development lifecycle of a next generation of security features managed by the MDM as a test device. In another example, the local device <b>740</b> can be used as both a package generator and a verification tool of the next generation of a configuration designer, such as the Windows&#x2122; Configuration Designer (WCD). In yet another example, the local device <b>740</b> can be placed into an investigative mode by an IT administrator even after the local device <b>740</b> has been shipped and put into use. In this example, the investigative mode can be used for troubleshooting, exercising potential new applications or features, and so forth. When the local device <b>740</b> exits the investigative mode, the local device <b>740</b> can remove and/or revert actions taken by the investigator and revert back to the original state.</p><p id="p-0084" num="0083">In some examples, the local device <b>740</b> enrolled into the LEAP hub <b>720</b> further is enabled to be utilized as an enterprise evaluation tool in order to enable and exercise various features offered by a software provider. For example, the local device <b>740</b> is enabled to provide a feature demonstration and/or evaluation due to its enrollment into the LEAP hub <b>720</b>.</p><p id="p-0085" num="0084">It should be understood that although the system <b>300</b>, the system <b>400</b>, the system <b>500</b>, the system <b>600</b>, and the system <b>700</b> are described as separate systems, this should not be construed as limiting. Various examples of the systems <b>300</b>-<b>700</b> are possible and elements from one system can be included in another system as illustrated in <figref idref="DRAWINGS">FIGS. <b>3</b>-<b>7</b></figref>. For example, the parent-child relationship of the LEAP hub <b>330</b>, the LEAP hub <b>320</b>, and the at least one local device <b>340</b> illustrated in <figref idref="DRAWINGS">FIG. <b>3</b></figref> can be implemented in any of the systems <b>400</b>-<b>700</b> illustrated in <figref idref="DRAWINGS">FIGS. <b>4</b>-<b>7</b></figref>, respectively.</p><p id="p-0086" num="0085"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is a flow chart diagram illustrating operations of a computer-implemented method for configuring a managed device <b>204</b> according to various examples of the present disclosure. The operations illustrated in <figref idref="DRAWINGS">FIG. <b>8</b></figref> are for illustration and should not be construed as limiting. Various examples of the operations can be used without departing from the scope of the present disclosure. The operations of the flow chart <b>800</b> can be executed by a local edge authority platform, for example any one of the computing device <b>100</b>, the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and/or the LEAP hub <b>720</b>.</p><p id="p-0087" num="0086">Various examples of the present disclosure recognize and take into account the potential for a LEAP hub, such as any one of the LEAP hub <b>320</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and the LEAP hub <b>720</b>, to receive conflicting configuration instructions for one or more local devices, i.e., managed devices, in examples where more than one configuration authority is included in a respective system. Accordingly, various examples of the present disclosure include a hierarchy of configuration authorities that a LEAP hub can use to prioritize respective configuration instructions for a local device, i.e., a managed device. In these examples, the configuration instructions from a highest ranked configuration authority are prioritized and implemented to configure the managed device. Configuration instructions from a lower ranked configuration authority are analyzed to determine which of the instructions conflict with the instructions received from the higher ranked configuration authority. The LEAP hub then continues to configure the managed device by implementing the instructions from the lower ranked configuration authority that do not conflict with the instructions from the higher ranked configuration authority while opting not to implement the conflicting instructions. The process by which a LEAP hub resolves a conflict of received configuration instructions is described in greater detail below.</p><p id="p-0088" num="0087">The flow chart <b>800</b> begins by the platform management server <b>202</b> receiving first configuration instructions in operation <b>801</b>. The first configuration instructions are received from a first configuration authority, such as an administrator. In some examples, the first configuration authority is the administrator <b>206</b>. The first configuration instructions include instructions for configuring a managed device, such as the managed device <b>204</b>. In some examples, the first configuration instructions are received in a configuration packet received from the first configuration authority. In some examples, the configuration packet includes, but is not limited to, configuration settings and the data that may be necessary to achieve a device state that is defined by the configuration settings.</p><p id="p-0089" num="0088">In operation <b>803</b>, the platform management server <b>202</b> receives second configuration instructions. The second configuration instructions are received from a second configuration authority, such as one or more of the enterprise services <b>208</b>. The second configuration instructions include instructions for configuring the managed device <b>204</b>. In some examples, the second configuration instructions are received in a configuration packet received from the second configuration authority. As described above, the configuration packet includes, but is not limited to, configuration data and the data that may be necessary to achieve a device state that is defined by the configuration settings.</p><p id="p-0090" num="0089">It should be appreciated that although the flow chart <b>800</b> illustrates receiving configuration instructions from the first configuration authority and the second configuration authority, various examples are possible. For example, instructions can be received from more than two configuration authorities or less than two configuration authorities without departing from the scope of the present disclosure.</p><p id="p-0091" num="0090">In some examples, the platform management server <b>202</b> segregates the received first configuration instructions from the received second configuration instructions. In some examples, each individual configuration authority has a segregated privilege surface area that defines a dedicated portion, or portions, of the managed device <b>204</b> that each particular configuration authority is authorized to configure. The particular, dedicated portions are segregated such that first configuration instructions received from the first configuration authority are not implemented in a portion of the managed device <b>204</b> that the first configuration authority is not authorized to configure. However, in some examples not all portions of the managed device <b>204</b> can be segregated. For example, the first configuration authority and the second configuration authority can be authorized to configure different aspects of the managed device <b>204</b>, but both aspects include implementations on a user interface. In this example, complete segregation is not feasible because the user interface is used for each implementation. Therefore, it should be understood that a conflict can exist, in some examples, even when segregation of the first configuration instructions and the second configuration instructions is successfully implemented.</p><p id="p-0092" num="0091">In operation <b>805</b>, the platform management server <b>202</b> determines whether a conflict exists. In some examples, the second configuration instructions are compatible with the first configuration instructions. In other words, the second configuration instructions do not include instructions for configuring the managed device <b>204</b> that conflict with the first configuration instructions. When the platform management server <b>202</b> determines there is not a conflict between the first configuration instructions and the second configuration instructions, the flow chart <b>800</b> proceeds to operation <b>809</b>. In other examples, the second configuration instructions conflict with the first configuration instructions. In other words, the second configuration instructions include at least some instructions for configuring the managed device <b>204</b> that conflict with at least a portion of the first configuration instructions. When the platform management server <b>202</b> determines there is a conflict between the first configuration instructions and the second configuration instructions, the flow chart <b>800</b> proceeds to operation <b>807</b>.</p><p id="p-0093" num="0092">In some examples, determining whether a conflict exists includes examining the particular instructions included in the respective configuration packets received from the first configuration authority and the second configuration authority. A conflict is identified when implementing the configuration settings or data received in one configuration packet would inhibit the configuration settings or data received in another configuration packet from being implemented. For example, the platform management server <b>202</b> determines a conflict exists when the first configuration instructions include instructions to display a particular type of data on a user interface and the second configuration instructions include instructions not to display a particular type of data on the user interface.</p><p id="p-0094" num="0093">In some examples, a conflict is determined to exist where each of the first configuration authority and the second configuration authority are authorized to configure an overlapping portion of the managed device <b>204</b>.</p><p id="p-0095" num="0094">In operation <b>807</b>, based on the determining a conflict exists in operation <b>805</b>, the platform management server <b>202</b> resolves the determined conflict. The platform management server <b>202</b> determines a hierarchy of configuration authorities that includes the first configuration authority and the second configuration authority. In some examples, the platform management server <b>202</b> identifies the first configuration authority and the second configuration authority within a pre-existing local edge authority framework. The highest ranked authority within the local edge authority framework is then given precedence. Accordingly, the configuration instructions from the higher ranked authority of the first configuration authority and the second configuration authority is given precedence. Resolving the conflict is described in greater detail below in the description of <figref idref="DRAWINGS">FIG. <b>9</b></figref>.</p><p id="p-0096" num="0095">In operation <b>809</b>, the platform management server <b>202</b> configures the managed device <b>204</b>. The platform management server <b>202</b> configures the managed device <b>204</b> by implementing the configuration instructions of the highest ranked authority of the first configuration authority and the second configuration authority and the non-conflicting configuration instructions of the lower ranked authority of the first configuration authority and the second configuration authority.</p><p id="p-0097" num="0096">In operation <b>811</b>, the platform management server <b>202</b> determines whether additional instructions are received. The platform management server <b>202</b> can receive additional instructions from one or more of the first configuration authority, the second configuration authority, and an additional configuration authority. If additional instructions are not received, the flow chart <b>800</b> terminates. If additional instructions are received, the platform management server <b>202</b> proceeds to operation <b>805</b> and determines whether a conflict exists between any of the previously received configuration instructions and the additionally received instructions.</p><p id="p-0098" num="0097">In one example, the platform management server <b>202</b> determines a second conflict exists between the additionally received configuration instructions and at least one of the first configuration instructions or the second configuration instructions in the same manner that the first conflict was determined in operation <b>805</b>. The platform management server <b>202</b> then resolves the second conflict in the same manner the first conflict was resolved in operation <b>807</b> and re-configures the managed device <b>204</b> in the same manner the managed device <b>204</b> was originally configured in operation <b>809</b>. The operations of the flow chart <b>800</b> are performed as described herein until additional instructions are not received in operation <b>811</b> and the flow chart <b>800</b> terminates.</p><p id="p-0099" num="0098"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is a flow chart diagram illustrating operations of a computer-implemented method for resolving a conflict between configuration instructions according to various examples of the present disclosure. The operations illustrated in <figref idref="DRAWINGS">FIG. <b>9</b></figref> are for illustration and should not be construed as limiting. Various examples of the operations can be used without departing from the scope of the present disclosure. The operations of the flow chart <b>900</b> can be executed by a local edge authority platform, for example any one of the computing device <b>100</b>, the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and/or the LEAP hub <b>720</b>.</p><p id="p-0100" num="0099">As described herein, the flow chart <b>900</b> illustrates operations of determining a conflict exists, resolving the conflict, and configuring the managed device as described in operations <b>805</b>-<b>809</b> above. In operation <b>901</b>, the platform management server <b>202</b> determines a conflict exists. For example, the platform management server <b>202</b> determines implementing the configuration settings or data received in the first configuration instructions would inhibit the configuration settings or data received in the second configuration instructions from being implemented, or vice versa.</p><p id="p-0101" num="0100">In operation <b>903</b>, based on determining a conflict exists, the platform management server <b>202</b> determines a hierarchy that includes at least the first configuration authority and the second configuration authority. In some examples, determining the hierarchy includes ranking the first configuration authority and the second configuration authority. In some examples, determining the hierarchy includes accessing a pre-existing local edge authority framework and identifying each of the first configuration authority and the second configuration authority within the local edge authority framework. For example, the local edge authority framework can include a hierarchy of configuration authorities from which the platform management server <b>202</b> can receive configuration instructions. The platform management server <b>202</b> identifies the first configuration authority and the second configuration authority within the local edge authority framework to determine a ranking of the first configuration authority and the second configuration authority.</p><p id="p-0102" num="0101">In some examples, the local edge authority framework includes a linear listing of configuration authorities from a highest rank to a lowest rank. In this example, the local edge authority framework does not include configuration authorities that include a same rank within the hierarchy. In other examples, the local edge authority framework includes one or more tiers of configuration authorities. The tiers group different configuration authorities together to provide a hierarchy of configuration authorities. In this example, a first tier includes one or more configuration authorities and a second tier includes one or more configuration authorities. Each of the configuration authorities included in the first tier are ranked higher than each configuration authority in the second tier. In some examples, a tier can include sub-tiers that rank the configuration authorities in the tier. For example, the second tier can include a first sub-tier ranked higher than a second sub-tier such that a configuration authority is the first sub-tier is ranked lower than each configuration authority in the first tier, but higher than each configuration authority in the second sub-tier of the second tier.</p><p id="p-0103" num="0102">In operation <b>905</b>, the platform management server <b>202</b> determines whether the first configuration authority and the second configuration authority have the same rank within the local edge authority framework. For example, the platform management server <b>202</b> identifies first configuration authority and the second configuration authority within the local edge hierarchy framework. In examples where the local edge hierarchy framework is organized into tiers, the tier and, when applicable, the sub-tier, of both the first configuration authority and the second configuration authority are identified. In some examples, the first configuration authority and the second configuration authority are organized, or sorted, into the same tier. In some examples, the first configuration authority and the second configuration authority are organized, or sorted, into the same sub-tier within the same tier. In examples where the first configuration authority and the second configuration authority are not determined to have the same rank, the flow chart <b>900</b> proceeds to operation <b>907</b>. In examples where the first configuration authority and the second configuration authority are determined to have the same rank, the flow chart <b>900</b> proceeds to operation <b>913</b>.</p><p id="p-0104" num="0103">In operation <b>907</b>, based on determining the first configuration authority and the second configuration authority do not have the same rank within the local edge hierarchy framework, the platform management server <b>202</b> prioritizes the configuration instructions received from the higher ranked configuration authority. In other words, where the first configuration authority is ranked higher than the second configuration authority, the first configuration instructions are prioritized over the second configuration instructions. Where the second configuration authority is ranked higher than the first configuration authority, the second configuration instructions are prioritized over the first configuration instructions.</p><p id="p-0105" num="0104">In operation <b>911</b>, the platform management server <b>202</b> configures the managed device <b>204</b>, giving priority to the configuration instructions from the identified higher ranked configuration authority. For example, the platform management server <b>202</b> configures the managed device <b>204</b> by implementing the configuration instructions of the highest ranked authority of the first configuration authority and the second configuration authority and the non-conflicting configuration instructions of the lower ranked authority of the first configuration authority and the second configuration authority.</p><p id="p-0106" num="0105">In operation <b>913</b>, based on determining the first configuration authority and the second configuration authority have the same rank within the local edge hierarchy framework, the platform management server <b>202</b> determines which of the first configuration instructions and the second configuration instructions provide a more secure setting. In some examples, some configuration instructions require additional security protocols not included in other configuration instructions. Accordingly, the configuration instructions that require additional security protocols are prioritized over the configuration instructions that do not require the additional security protocols. In some examples, the conflict can be resolved by prioritizing first received instructions over later instructions where the authorities from which the conflicting instructions were received are equal in the hierarchy.</p><p id="p-0107" num="0106">In operation <b>915</b>, the platform management server <b>202</b> configures the managed device <b>204</b>, giving priority to the configuration instructions that were identified as more secure in operation <b>913</b>. For example, the platform management server <b>202</b> configures the managed device <b>204</b> by implementing the more secure configuration instructions.</p><p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is a block diagram illustrating an example cloud infrastructure according to various examples of the present disclosure. The cloud-computing environment <b>1000</b> includes a public network <b>1002</b>, a private network <b>1004</b>, and a dedicated network <b>1006</b>. The public network <b>1002</b> may be a public cloud-based network of computing resources, for example. The private network <b>1004</b> may be a private enterprise network or private cloud-based network of computing resources. The dedicated network <b>1006</b> may be a third-party network or dedicated cloud-based network of computing resources. The hybrid cloud <b>1008</b> may include any combination of public network <b>1002</b>, private network <b>1004</b>, and dedicated network <b>1006</b>.</p><p id="p-0109" num="0108">The public network <b>1002</b> may include data centers configured to host and support operations, including tasks of a distributed application, according to the fabric controller <b>1018</b>. It will be understood and appreciated that data center <b>1014</b> and data center <b>1016</b> shown in <figref idref="DRAWINGS">FIG. <b>10</b></figref> are merely examples of suitable implementations for accommodating one or more distributed applications and are not intended to suggest any limitation as to the scope of use or functionality of examples disclosed herein. Neither should data center <b>1014</b> and data center <b>1016</b> be interpreted as having any dependency or requirement related to any single resource, combination of resources, combination of servers (e.g., servers <b>1020</b> and <b>1024</b>) combination of nodes (e.g., nodes <b>1032</b> and <b>1034</b>), or a set of application programming interfaces (APIs) to access the resources, servers, and/or nodes.</p><p id="p-0110" num="0109">The data center <b>1014</b> illustrates a data center comprising a plurality of servers, such as servers <b>1020</b> and <b>1024</b>. A fabric controller <b>1018</b> is responsible for automatically managing the servers <b>1020</b> and <b>1024</b> and distributing tasks and other resources within the data center <b>1014</b>. By way of example, the fabric controller <b>1018</b> may rely on a service model (e.g., designed by a customer that owns the distributed application) to provide guidance on how, where, and when to configure server <b>1022</b> and how, where, and when to place application <b>1026</b> and application <b>1028</b> thereon. One or more role instances of a distributed application may be placed on one or more of the servers <b>1020</b> and <b>1024</b> of data center <b>1014</b>, where the one or more role instances may represent the portions of software, component programs, or instances of roles that participate in the distributed application. In other examples, one or more of the role instances may represent stored data that are accessible to the distributed application.</p><p id="p-0111" num="0110">The data center <b>1016</b> illustrates a data center comprising a plurality of nodes, such as node <b>1032</b> and node <b>1034</b>. One or more virtual machines may run on nodes of data center <b>1016</b>, such as virtual machine <b>1036</b> of node <b>1034</b> for example. Although <figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts a single virtual node on a single node of data center <b>1016</b>, any number of virtual nodes may be implemented on any number of nodes of the data center in accordance with illustrative embodiments of the disclosure. Generally, virtual machine <b>1036</b> is allocated to role instances of a distributed application, or service application, based on demands (e.g., amount of processing load) placed on the distributed application. As used herein, the phrase &#x201c;virtual machine,&#x201d; or VM, is not meant to be limiting, and may refer to any software, application, operating system, or program that is executed by a processing unit to underlie the functionality of the role instances allocated thereto. Further, the VMs <b>1036</b> may include processing capacity, storage locations, and other assets within the data center <b>1016</b> to properly support the allocated role instances.</p><p id="p-0112" num="0111">In operation, the virtual machines are dynamically assigned resources on a first node and second node of the data center, and endpoints (e.g., the role instances) are dynamically placed on the virtual machines to satisfy the current processing load. In one instance, a fabric controller <b>1030</b> is responsible for automatically managing the virtual machines running on the nodes of data center <b>1016</b> and for placing the role instances and other resources (e.g., software components) within the data center v16. By way of example, the fabric controller <b>1030</b> may rely on a service model (e.g., designed by a customer that owns the service application) to provide guidance on how, where, and when to configure the virtual machines, such as VM <b>1036</b>, and how, where, and when to place the role instances thereon.</p><p id="p-0113" num="0112">As described above, the virtual machines may be dynamically established and configured within one or more nodes of a data center. As illustrated herein, node <b>1032</b> and node <b>1034</b> may be any form of computing devices, such as, for example, a personal computer, a desktop computer, a laptop computer, a mobile device, a consumer electronic device, a server, and like. VMs machine(s) <b>1036</b>, while simultaneously hosting other virtual machines carved out for supporting other tenants of the data center <b>1016</b>, such as internal services <b>1038</b>, hosted services <b>1040</b>, and storage <b>1042</b>. Often, the role instances may include endpoints of distinct service applications owned by different customers.</p><p id="p-0114" num="0113">In some embodiments, the hosted services <b>1040</b> include a LEAP hub <b>320</b> configured to perform the various features discussed herein. Although illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> as a LEAP hub <b>320</b>, it should be understood that the LEAP hub <b>320</b> illustrated in <figref idref="DRAWINGS">FIG. <b>10</b></figref> can be any one of the platform management server <b>202</b>, the LEAP hub <b>320</b>, the LEAP hub <b>330</b>, the LEAP hub <b>520</b>, the LEAP hub <b>620</b>, and/or the LEAP hub <b>720</b> described herein.</p><heading id="h-0005" level="1">Additional Examples</heading><p id="p-0115" num="0114">Some examples herein are directed to a method of configuring a managed device, as illustrated by the flow chart <b>800</b>. The method (<b>800</b>) includes receiving (<b>801</b>) first configuration instructions from a first configuration authority for configuring a managed device; receiving (<b>803</b>) second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority; determining (<b>805</b>) a conflict exists between the first configuration instructions and the second configuration instructions; resolving (<b>807</b>) the conflict; and configuring (<b>809</b>) the managed device based on the resolved conflict.</p><p id="p-0116" num="0115">In some examples, the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) is an administrator.</p><p id="p-0117" num="0116">In some examples, the method further includes determining the conflict exists includes determining at least a part of the first configuration instructions conflict with at least a part of the second configuration instructions.</p><p id="p-0118" num="0117">In some examples, the method further includes determining a hierarchy that includes the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) and the second configuration authority (<b>330</b>).</p><p id="p-0119" num="0118">In some examples, the method further includes prioritizing configuration instructions received from a highest ranked authority, of the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) and the second configuration authority (<b>330</b>), in the hierarchy.</p><p id="p-0120" num="0119">In some examples, the method further includes determining the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) and the second configuration authority (<b>330</b>) include the same ranking within the hierarchy; determining which of the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) and the second configuration authority (<b>330</b>) includes a more secure setting; and configuring the managed device (<b>204</b>) with the determined more secure setting.</p><p id="p-0121" num="0120">In some examples, the method further includes receiving additional configuration instructions from at least one of the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) or the second configuration authority (<b>330</b>); determining a second conflict exists between the additional configuration instructions and at least one of the first configuration instructions (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) or the second configuration instructions (<b>330</b>); resolving the second conflict; and reconfiguring the managed device (<b>204</b>) based on the resolved second conflict.</p><p id="p-0122" num="0121">In some examples, at least one of the first configuration authority (<b>310</b>, <b>510</b>, <b>610</b>, <b>710</b>) or the second configuration (<b>330</b>) is a parent hub device. Configuring the managed device (<b>204</b>) can include configuring a child hub device.</p><p id="p-0123" num="0122">Although described in connection with an example computing device <b>100</b>, examples of the disclosure are capable of implementation with numerous other general-purpose or special-purpose computing system environments, configurations, or devices. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with aspects of the disclosure include, but are not limited to, smart phones, mobile tablets, mobile computing devices, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, gaming consoles, microprocessor-based systems, set top boxes, programmable consumer electronics, mobile telephones, mobile computing and/or communication devices in wearable or accessory form factors (e.g., watches, glasses, headsets, or earphones), network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, virtual reality (VR) devices, augmented reality (AR) devices, mixed reality (MR) devices, holographic device, and the like. Such systems or devices may accept input from the user in any way, including from input devices such as a keyboard or pointing device, via gesture input, proximity input (such as by hovering), and/or via voice input.</p><p id="p-0124" num="0123">Examples of the disclosure may be described in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices in software, firmware, hardware, or a combination thereof. The computer-executable instructions may be organized into one or more computer-executable components or modules. Generally, program modules include, but are not limited to, routines, programs, objects, components, and data structures that perform particular tasks or implement particular abstract data types. Aspects of the disclosure may be implemented with any number and organization of such components or modules. For example, aspects of the disclosure are not limited to the specific computer-executable instructions or the specific components or modules illustrated in the figures and described herein. Other examples of the disclosure may include different computer-executable instructions or components having more or less functionality than illustrated and described herein. In examples involving a general-purpose computer, aspects of the disclosure transform the general-purpose computer into a special-purpose computing device when configured to execute the instructions described herein.</p><p id="p-0125" num="0124">By way of example and not limitation, computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile, removable, and non-removable memory implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or the like. Computer storage media are tangible and mutually exclusive to communication media. Computer storage media are implemented in hardware and exclude carrier waves and propagated signals. Computer storage media for purposes of this disclosure are not signals per se. Exemplary computer storage media include hard disks, flash drives, solid-state memory, phase change random-access memory (PRAM), static random-access memory (SRAM), dynamic random-access memory (DRAM), other types of random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disk read-only memory (CD-ROM), digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transmission medium that can be used to store information for access by a computing device. In contrast, communication media typically embody computer readable instructions, data structures, program modules, or the like in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media.</p><p id="p-0126" num="0125">The order of execution or performance of the operations in examples of the disclosure illustrated and described herein is not essential and may be performed in different sequential manners in various examples. For example, it is contemplated that executing or performing a particular operation before, contemporaneously with, or after another operation is within the scope of aspects of the disclosure. When introducing elements of aspects of the disclosure or the examples thereof, the articles &#x201c;a,&#x201d; &#x201c;an,&#x201d; &#x201c;the,&#x201d; and &#x201c;said&#x201d; are intended to mean that there are one or more of the elements. The terms &#x201c;comprising,&#x201d; &#x201c;including,&#x201d; and &#x201c;having&#x201d; are intended to be inclusive and mean that there may be additional elements other than the listed elements. The term &#x201c;exemplary&#x201d; is intended to mean &#x201c;an example of&#x201d; The phrase &#x201c;one or more of the following: A, B, and C&#x201d; means &#x201c;at least one of A and/or at least one of B and/or at least one of C.&#x201d;</p><p id="p-0127" num="0126">Having described aspects of the disclosure in detail, it will be apparent that modifications and variations are possible without departing from the scope of aspects of the disclosure as defined in the appended claims. As various changes could be made in the above constructions, products, and methods without departing from the scope of aspects of the disclosure, it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.</p><p id="p-0128" num="0127">While no personally identifiable information is tracked by aspects of the disclosure, examples have been described with reference to data monitored and/or collected from the users. In some examples, notice may be provided to the users of the collection of the data (e.g., via a dialog box or preference setting) and users are given the opportunity to give or deny consent for the monitoring and/or collection. The consent may take the form of opt-in consent or opt-out consent.</p><p id="p-0129" num="0128">Although the subject matter has been described in language specific to structural features and/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.</p><p id="p-0130" num="0129">It will be understood that the benefits and advantages described above may relate to one example or may relate to several examples. The examples are not limited to those that solve any or all of the stated problems or those that have any or all of the stated benefits and advantages. It will further be understood that reference to &#x2018;an&#x2019; item refers to one or more of those items.</p><p id="p-0131" num="0130">The term &#x201c;comprising&#x201d; is used in this specification to mean including the feature(s) or act(s) followed thereafter, without excluding the presence of one or more additional features or acts.</p><p id="p-0132" num="0131">In some examples, the operations illustrated in the figures may be implemented as software instructions encoded on a computer readable medium, in hardware programmed or designed to perform the operations, or both. For example, aspects of the disclosure may be implemented as a system on a chip or other circuitry including a plurality of interconnected, electrically conductive elements.</p><p id="p-0133" num="0132">The order of execution or performance of the operations in examples of the disclosure illustrated and described herein is not essential, unless otherwise specified. That is, the operations may be performed in any order, unless otherwise specified, and examples of the disclosure may include additional or fewer operations than those disclosed herein. For example, it is contemplated that executing or performing a particular operation before, contemporaneously with, or after another operation is within the scope of aspects of the disclosure.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. A computer-implemented method, the method comprising:<claim-text>receiving first configuration instructions from a first configuration authority for configuring a managed device;</claim-text><claim-text>receiving second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority;</claim-text><claim-text>determining a conflict exists between the first configuration instructions and the second configuration instructions;</claim-text><claim-text>determining correct configurations instruction for resolving the conflict; and</claim-text><claim-text>in response to receiving the check-in, configuring the managed device based on the correct configuration instructions.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first configuration authority is an administrator.</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein determining the conflict exists includes determining at least a part of the first configuration instructions conflict with at least a part of the second configuration instructions.</claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining a hierarchy that includes the first configuration authority and the second configuration authority.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein resolving the conflict includes prioritizing configuration instructions received from a highest ranked authority, of the first configuration authority and the second configuration authority, in the hierarchy.</claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The computer-implemented method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising:<claim-text>determining the first configuration authority and the second configuration authority include the same ranking within the hierarchy;</claim-text><claim-text>selecting between the first configuration authority and the second configuration authority based on security; and</claim-text><claim-text>configuring the managed device with the selected one of the first configuration authority and the second configuration authority.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising;<claim-text>receiving additional configuration instructions from at least one of the first configuration authority or the second configuration authority;</claim-text><claim-text>determining a second conflict exists between the additional configuration instructions and at least one of the first configuration instructions or the second configuration instructions;</claim-text><claim-text>resolving the second conflict; and</claim-text><claim-text>reconfiguring the managed device based on the resolved second conflict.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The computer-implemented method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:<claim-text>at least one of the first configuration authority or the second configuration is a parent hub device, and</claim-text><claim-text>configuring the managed device includes configuring a child hub device.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. One or more servers, each of the one or more servers comprising:<claim-text>a processor; and</claim-text><claim-text>a computer-readable medium storing instructions that, when executed by the processor, cause the processor to:<claim-text>receive first configuration instructions from a first configuration authority for configuring a managed device;</claim-text><claim-text>receive second configuration instructions from a second configuration authority for configuring the managed device, wherein the first configuration authority is different than the second configuration authority;</claim-text><claim-text>determine a conflict exists between the first configuration instructions and the second configuration instructions;</claim-text><claim-text>determine a hierarchy that includes the first configuration authority and the second configuration authority;</claim-text><claim-text>determining correct configuration instructions by resolving the conflict based at least in part on the determined hierarchy;</claim-text></claim-text><claim-text>receiving, at a hub that manages configuration policies, a check in from the managed device; and</claim-text><claim-text>in response to receiving the check-in, configure the managed device based on the correct configuration instructions.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the first configuration authority is an administrator.</claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the computer-readable medium further stores instructions to determine the conflict exists that, when executed by the processor, cause the processor to:<claim-text>determine at least a part of the first configuration instructions conflict with at least a part of the second configuration instructions.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the computer-readable medium further stores instructions to resolve the conflict that, when executed by the processor, cause the processor to:<claim-text>prioritize configuration instructions received from a highest ranked authority, of the first configuration authority and the second configuration authority, in the hierarchy.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the computer-readable medium further stores instructions that, when executed by the processor, cause the processor to:<claim-text>determine the first configuration authority and the second configuration authority include the same ranking within the hierarchy,</claim-text><claim-text>selecting between the first configuration authority and the second configuration authority based on security, and</claim-text><claim-text>configure the managed device with the selected one of the first configuration authority and the second configuration authority.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the computer-readable medium further stores instructions that, when executed by the processor, cause the processor to:<claim-text>receive additional configuration instructions from at least one of the first configuration authority or the second configuration authority,</claim-text><claim-text>determine a second conflict exists between the additional configuration instructions and at least one of the first configuration instructions or the second configuration instructions,</claim-text><claim-text>resolve the second conflict, and</claim-text><claim-text>reconfigure the managed device based on the resolved second conflict.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The one or more servers of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the computer-readable medium further stores instructions that, when executed by the processor, cause the processor to:<claim-text>segregate the received first configuration instructions from the received second configuration instructions.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. One or more computer-storage memory devices embodied with executable operations that, when executed by a processor, cause the processor to:<claim-text>establish an edge authority framework including a managed device, a first configuration authority, and a second configuration authority, wherein the first configuration authority is different than the second configuration authority;</claim-text><claim-text>receive first configuration instructions from the first configuration authority for configuring the managed device;</claim-text><claim-text>receive second configuration instructions from the second configuration authority for configuring the managed device determine a conflict exists between the first configuration instructions and the second configuration instructions;</claim-text><claim-text>determine a hierarchy that includes the first configuration authority and the second configuration authority;</claim-text><claim-text>resolve the conflict based at least in part on the determined hierarchy;</claim-text><claim-text>waiting until the managed device checks in with a hub that manages configuration policies;</claim-text><claim-text>in response to receiving the check-in, configure the managed device based on the resolved conflict.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The one or more computer storage memory devices of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the first configuration authority is an administrator.</claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The one or more computer storage memory devices of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with executable operations to determine the conflict exists that, when executed by the processor, cause the processor to:<claim-text>determine at least a part of the first configuration instructions conflict with at least a part of the second configuration instructions</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The one or more computer storage memory devices of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with executable operations that, when executed by the processor, cause the processor to:<claim-text>prioritize configuration instructions received from a highest ranked authority, of the first configuration authority and the second configuration authority, in the hierarchy, and</claim-text><claim-text>configure the managed device based on the prioritized configuration instructions.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The one or more computer storage memory devices of <claim-ref idref="CLM-00016">claim 16</claim-ref>, further embodied with executable operations that, when executed by the processor, cause the processor to:<claim-text>determine the first configuration authority and the second configuration authority include the same ranking within the hierarchy,</claim-text><claim-text>selecting between the first configuration authority and the second configuration authority based on security, and</claim-text><claim-text>configure the managed device with the selected one of the first configuration authority and the second configuration authority,</claim-text><claim-text>selecting between the first configuration authority and the second configuration authority based on security of the two, and</claim-text><claim-text>configure the managed device with the selected one of the first configuration authority and the second configuration authority.</claim-text></claim-text></claim></claims></us-patent-application>