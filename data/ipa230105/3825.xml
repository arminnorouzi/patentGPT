<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230003826A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230003826</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17901490</doc-number><date>20220901</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>01</class><subclass>S</subclass><main-group>5</main-group><subgroup>02</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>H</section><class>04</class><subclass>W</subclass><main-group>64</main-group><subgroup>00</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>5</main-group><subgroup>0221</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>H</section><class>04</class><subclass>W</subclass><main-group>64</main-group><subgroup>003</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>01</class><subclass>S</subclass><main-group>5</main-group><subgroup>0268</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e43">SYSTEMS, APPARATUS, ARTICLES OF MANUFACTURE, AND METHODS FOR DISTRIBUTED AND SCALABLE HIGH PERFORMANCE LOCATION AND POSITIONING</invention-title><us-related-documents><us-provisional-application><document-id><country>US</country><doc-number>63335084</doc-number><date>20220426</date></document-id></us-provisional-application></us-related-documents><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="obligated-assignee"><addressbook><orgname>Intel Corporation</orgname><address><city>Santa Clara</city><state>CA</state><country>US</country></address></addressbook><residence><country>US</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Parker</last-name><first-name>Valerie</first-name><address><city>Portland</city><state>OR</state><country>US</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Palermo</last-name><first-name>Stephen</first-name><address><city>Chandler</city><state>AZ</state><country>US</country></address></addressbook></inventor></inventors></us-parties></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">Systems, apparatus, articles of manufacture, and methods are disclosed for distributed and scalable high performance location and positioning. Disclosed example apparatus are to enqueue a data pointer associated with sounding reference signal (SRS) measurement data from a device into a first data queue associated with a first worker core. Disclosed example apparatus are also to generate, with the first worker core, at least one of a reception angle measurement dataset or a time-of-arrival measurement dataset based on the SRS measurement data and dequeue the data pointer associated with the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset from the first data queue into a second data queue associated with a second worker core. Disclosed example apparatus are further to determine, with the second worker core, a location of the device based on the at least one of the reception angle or time-of-arrival measurement dataset.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="88.05mm" wi="158.75mm" file="US20230003826A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="223.44mm" wi="140.55mm" orientation="landscape" file="US20230003826A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="240.45mm" wi="162.22mm" file="US20230003826A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="200.49mm" wi="164.76mm" orientation="landscape" file="US20230003826A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="216.92mm" wi="150.20mm" orientation="landscape" file="US20230003826A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00005" num="00005"><img id="EMI-D00005" he="220.90mm" wi="120.31mm" orientation="landscape" file="US20230003826A1-20230105-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00006" num="00006"><img id="EMI-D00006" he="228.68mm" wi="173.82mm" orientation="landscape" file="US20230003826A1-20230105-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00007" num="00007"><img id="EMI-D00007" he="227.92mm" wi="175.51mm" orientation="landscape" file="US20230003826A1-20230105-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00008" num="00008"><img id="EMI-D00008" he="216.41mm" wi="135.30mm" orientation="landscape" file="US20230003826A1-20230105-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00009" num="00009"><img id="EMI-D00009" he="122.68mm" wi="126.49mm" orientation="landscape" file="US20230003826A1-20230105-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00010" num="00010"><img id="EMI-D00010" he="136.48mm" wi="118.70mm" orientation="landscape" file="US20230003826A1-20230105-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00011" num="00011"><img id="EMI-D00011" he="242.23mm" wi="148.76mm" orientation="landscape" file="US20230003826A1-20230105-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00012" num="00012"><img id="EMI-D00012" he="239.69mm" wi="155.45mm" orientation="landscape" file="US20230003826A1-20230105-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00013" num="00013"><img id="EMI-D00013" he="246.46mm" wi="156.46mm" orientation="landscape" file="US20230003826A1-20230105-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00014" num="00014"><img id="EMI-D00014" he="246.46mm" wi="156.80mm" orientation="landscape" file="US20230003826A1-20230105-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00015" num="00015"><img id="EMI-D00015" he="242.06mm" wi="169.50mm" orientation="landscape" file="US20230003826A1-20230105-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00016" num="00016"><img id="EMI-D00016" he="245.03mm" wi="166.37mm" orientation="landscape" file="US20230003826A1-20230105-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00017" num="00017"><img id="EMI-D00017" he="246.38mm" wi="176.61mm" orientation="landscape" file="US20230003826A1-20230105-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00018" num="00018"><img id="EMI-D00018" he="238.08mm" wi="172.89mm" orientation="landscape" file="US20230003826A1-20230105-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00019" num="00019"><img id="EMI-D00019" he="207.52mm" wi="172.47mm" orientation="landscape" file="US20230003826A1-20230105-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00020" num="00020"><img id="EMI-D00020" he="191.52mm" wi="171.11mm" orientation="landscape" file="US20230003826A1-20230105-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00021" num="00021"><img id="EMI-D00021" he="240.37mm" wi="130.22mm" orientation="landscape" file="US20230003826A1-20230105-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00022" num="00022"><img id="EMI-D00022" he="237.66mm" wi="176.87mm" orientation="landscape" file="US20230003826A1-20230105-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00023" num="00023"><img id="EMI-D00023" he="228.85mm" wi="172.97mm" orientation="landscape" file="US20230003826A1-20230105-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00024" num="00024"><img id="EMI-D00024" he="238.93mm" wi="176.36mm" orientation="landscape" file="US20230003826A1-20230105-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00025" num="00025"><img id="EMI-D00025" he="165.27mm" wi="135.30mm" orientation="landscape" file="US20230003826A1-20230105-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00026" num="00026"><img id="EMI-D00026" he="236.73mm" wi="176.78mm" orientation="landscape" file="US20230003826A1-20230105-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00027" num="00027"><img id="EMI-D00027" he="245.45mm" wi="169.50mm" orientation="landscape" file="US20230003826A1-20230105-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00028" num="00028"><img id="EMI-D00028" he="242.32mm" wi="171.62mm" orientation="landscape" file="US20230003826A1-20230105-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00029" num="00029"><img id="EMI-D00029" he="150.45mm" wi="163.75mm" orientation="landscape" file="US20230003826A1-20230105-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00030" num="00030"><img id="EMI-D00030" he="247.23mm" wi="166.29mm" orientation="landscape" file="US20230003826A1-20230105-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00031" num="00031"><img id="EMI-D00031" he="241.89mm" wi="176.11mm" orientation="landscape" file="US20230003826A1-20230105-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00032" num="00032"><img id="EMI-D00032" he="161.37mm" wi="163.83mm" orientation="landscape" file="US20230003826A1-20230105-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00033" num="00033"><img id="EMI-D00033" he="230.55mm" wi="166.37mm" orientation="landscape" file="US20230003826A1-20230105-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00034" num="00034"><img id="EMI-D00034" he="230.72mm" wi="142.83mm" orientation="landscape" file="US20230003826A1-20230105-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00035" num="00035"><img id="EMI-D00035" he="236.98mm" wi="149.35mm" orientation="landscape" file="US20230003826A1-20230105-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00036" num="00036"><img id="EMI-D00036" he="227.50mm" wi="125.90mm" orientation="landscape" file="US20230003826A1-20230105-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00037" num="00037"><img id="EMI-D00037" he="239.78mm" wi="175.34mm" orientation="landscape" file="US20230003826A1-20230105-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00038" num="00038"><img id="EMI-D00038" he="216.58mm" wi="145.29mm" orientation="landscape" file="US20230003826A1-20230105-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00039" num="00039"><img id="EMI-D00039" he="203.79mm" wi="149.10mm" orientation="landscape" file="US20230003826A1-20230105-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00040" num="00040"><img id="EMI-D00040" he="223.52mm" wi="159.34mm" orientation="landscape" file="US20230003826A1-20230105-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00041" num="00041"><img id="EMI-D00041" he="243.08mm" wi="174.75mm" orientation="landscape" file="US20230003826A1-20230105-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00042" num="00042"><img id="EMI-D00042" he="239.95mm" wi="164.00mm" orientation="landscape" file="US20230003826A1-20230105-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00043" num="00043"><img id="EMI-D00043" he="236.73mm" wi="168.06mm" orientation="landscape" file="US20230003826A1-20230105-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00044" num="00044"><img id="EMI-D00044" he="239.61mm" wi="146.47mm" orientation="landscape" file="US20230003826A1-20230105-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00045" num="00045"><img id="EMI-D00045" he="239.01mm" wi="158.16mm" orientation="landscape" file="US20230003826A1-20230105-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00046" num="00046"><img id="EMI-D00046" he="242.32mm" wi="163.24mm" orientation="landscape" file="US20230003826A1-20230105-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00047" num="00047"><img id="EMI-D00047" he="217.00mm" wi="162.56mm" orientation="landscape" file="US20230003826A1-20230105-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00048" num="00048"><img id="EMI-D00048" he="235.46mm" wi="163.49mm" file="US20230003826A1-20230105-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00049" num="00049"><img id="EMI-D00049" he="229.79mm" wi="151.05mm" file="US20230003826A1-20230105-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00050" num="00050"><img id="EMI-D00050" he="244.09mm" wi="168.40mm" file="US20230003826A1-20230105-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00051" num="00051"><img id="EMI-D00051" he="244.09mm" wi="168.40mm" file="US20230003826A1-20230105-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00052" num="00052"><img id="EMI-D00052" he="242.57mm" wi="168.40mm" file="US20230003826A1-20230105-D00052.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00053" num="00053"><img id="EMI-D00053" he="238.00mm" wi="168.40mm" file="US20230003826A1-20230105-D00053.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00054" num="00054"><img id="EMI-D00054" he="240.03mm" wi="167.81mm" file="US20230003826A1-20230105-D00054.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00055" num="00055"><img id="EMI-D00055" he="243.16mm" wi="172.55mm" file="US20230003826A1-20230105-D00055.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00056" num="00056"><img id="EMI-D00056" he="243.08mm" wi="174.07mm" file="US20230003826A1-20230105-D00056.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00057" num="00057"><img id="EMI-D00057" he="199.39mm" wi="161.46mm" file="US20230003826A1-20230105-D00057.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00058" num="00058"><img id="EMI-D00058" he="235.37mm" wi="176.53mm" file="US20230003826A1-20230105-D00058.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00059" num="00059"><img id="EMI-D00059" he="242.15mm" wi="167.13mm" file="US20230003826A1-20230105-D00059.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00060" num="00060"><img id="EMI-D00060" he="240.88mm" wi="175.77mm" file="US20230003826A1-20230105-D00060.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00061" num="00061"><img id="EMI-D00061" he="149.52mm" wi="139.53mm" file="US20230003826A1-20230105-D00061.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="lead"?><heading id="h-0001" level="1">RELATED APPLICATION</heading><p id="p-0002" num="0001">This patent claims the benefit of U.S. Provisional Patent Application No. 63/335,084, which was filed on Apr. 26, 2022. U.S. Provisional Patent Application No. 63/335,084 is hereby incorporated herein by reference in its entirety. Priority to U.S. Provisional Patent Application No. 63/335,084 is hereby claimed.</p><?cross-reference-to-related-applications description="Cross Reference To Related Applications" end="tail"?><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0002" level="1">FIELD OF THE DISCLOSURE</heading><p id="p-0003" num="0002">This disclosure relates generally to location determination and, more particularly, to systems, apparatus, articles of manufacture, and methods for distributed and scalable high performance location and positioning.</p><heading id="h-0003" level="1">BACKGROUND</heading><p id="p-0004" num="0003">Billions of devices rely on some form of location-aware capabilities instrumental to several industries and sectors that leverage terrestrial techniques in cellular networks and/or non-terrestrial techniques in satellite-based networks. Location determination capabilities have shortcomings that challenge positioning, navigation, and timing resilience in various applications.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an illustration of an example location determination system.</p><p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of example location engine circuitry.</p><p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a first example environment including the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object in the first environment.</p><p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a second example environment including the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object in the second environment.</p><p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a first example location determination architecture.</p><p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a second example location determination architecture.</p><p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a third example location determination architecture.</p><p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an example timing diagram associated with the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is an illustration of an example location determination technique based on time-of-arrival.</p><p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is an illustration of an example location determination technique based on time-difference-of-arrival.</p><p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example location determination workflow.</p><p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts a first stage of the example location determination workflow of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts a second stage of the example location determination workflow of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. <b>14</b></figref> depicts a third stage of the example location determination workflow of <figref idref="DRAWINGS">FIG. <b>11</b></figref>.</p><p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. <b>15</b></figref> depicts an example resource grid that may be used to implement examples disclosed herein.</p><p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. <b>16</b></figref> depicts an example data management workflow to process radio access network data.</p><p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. <b>17</b>A</figref> depicts another example data management workflow to process radio access network data.</p><p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. <b>17</b>B</figref> is an example workflow to enqueue and/or dequeue data using the dynamic load balancers of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. <b>17</b>C</figref> depicts an example implementation of the dynamic load balancers of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and/or <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>.</p><p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. <b>17</b>D</figref> depicts an example implementation of the dynamic load balancers of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and/or <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>.</p><p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. <b>18</b></figref> depicts yet another example data management workflow to process radio access network data.</p><p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an example timing diagram to process cellular data.</p><p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an illustration of an example location determination technique based on time-difference-of-arrival data.</p><p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a timing diagram of an example location determination technique based on time-difference-of-arrival data.</p><p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. <b>22</b></figref> depicts an example distributed antenna system to implement examples disclosed herein.</p><p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is an example architecture to implement examples disclosed herein.</p><p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is an example data flow diagram to effectuate location determination of a device and/or an object.</p><p id="p-0032" num="0031"><figref idref="DRAWINGS">FIGS. <b>25</b>-<b>26</b></figref> depict another example data flow diagram to effectuate location determination of a device and/or an object.</p><p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is yet another example data flow diagram to effectuate location determination of a device and/or an object.</p><p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is an illustration of an example architecture to implement examples disclosed herein.</p><p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is an illustration of an example implementation of an example gNodeB (gNB).</p><p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is an example data flow diagram to implement examples disclosed herein.</p><p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is an illustration of an example workflow to implement fifth generation cellular (5G) positioning as disclosed herein.</p><p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. <b>32</b></figref> depicts example performance plots associated with examples disclosed herein.</p><p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. <b>33</b></figref> depicts example configurations for location determination techniques disclosed herein.</p><p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a table of example bandwidth configurations by examples disclosed herein.</p><p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is an illustration of an example server determining a location of a device and/or an object based on SRS data.</p><p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is another illustration of another example server determining a location of a device and/or an object based on SRS data.</p><p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a table of example configurations for location determination techniques disclosed herein.</p><p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. <b>38</b></figref> depicts example data that may be utilized for example location determination techniques disclosed herein.</p><p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. <b>39</b></figref> depicts an example implementation of communication subframes.</p><p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. <b>40</b></figref> illustrates an overview of an example edge cloud configuration for edge computing that may implement the examples disclosed herein.</p><p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. <b>41</b></figref> illustrates operational layers among example endpoints, an example edge cloud, and example cloud computing environments that may implement the examples disclosed herein.</p><p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. <b>42</b></figref> illustrates an example approach for networking and services in an edge computing system that may implement the examples disclosed herein.</p><p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. <b>43</b></figref> depicts an example edge computing system for providing edge services and applications to multi-stakeholder entities, as distributed among one or more client compute platforms, one or more edge gateway platforms, one or more edge aggregation platforms, one or more core data centers, and a global network cloud, as distributed across layers of the edge computing system.</p><p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. <b>44</b></figref> illustrates a drawing of a cloud computing network, or cloud, in communication with a number of Internet of Things (IoT) devices, according to an example.</p><p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. <b>45</b></figref> illustrates network connectivity in non-terrestrial (satellite) and terrestrial (mobile cellular network) settings, according to an example.</p><p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device based on cellular data.</p><p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on at least one of time-of-arrival data or time-difference-of-arrival data associated with different base stations.</p><p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object based on at least one of time-of-arrival data or time-difference-of-arrival data associated with the same base station.</p><p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on angle-of-arrival data associated with different base stations.</p><p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) based on angle-of-arrival data associated with the same base station.</p><p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is another flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s).</p><p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is yet another flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on data queue management.</p><p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations that may be executed by example processor circuitry to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to obtain cellular data based on a programmable configuration.</p><p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. <b>54</b></figref> illustrates a block diagram for an example IoT processing system architecture upon which any one or more of the techniques (e.g., operations, processes, methods, and methodologies) discussed herein may be performed, according to an example.</p><p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a block diagram of an example processing platform including processor circuitry structured to execute the example machine-readable instructions and/or the example operations of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> to implement the example location engine circuitry of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a block diagram of an example implementation of the processor circuitry of <figref idref="DRAWINGS">FIGS. <b>54</b></figref> and/or 55.</p><p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a block diagram of another example implementation of the processor circuitry of <figref idref="DRAWINGS">FIGS. <b>54</b></figref> and/or 55.</p><p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. <b>58</b></figref> is a block diagram of an example software distribution platform (e.g., one or more servers) to distribute software (e.g., software corresponding to the example machine-readable instructions of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> to client devices associated with end users and/or consumers (e.g., for license, sale, and/or use), retailers (e.g., for sale, re-sale, license, and/or sub-license), and/or original equipment manufacturers (OEMs) (e.g., for inclusion in products to be distributed to, for example, retailers and/or to other end users such as direct buy customers).</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0065" num="0064">In general, the same reference numbers will be used throughout the drawing(s) and accompanying written description to refer to the same or like parts. The figures are not to scale.</p><p id="p-0066" num="0065">As used herein, connection references (e.g., attached, coupled, connected, and joined) may include intermediate members between the elements referenced by the connection reference and/or relative movement between those elements unless otherwise indicated. As such, connection references do not necessarily infer that two elements are directly connected and/or in fixed relation to each other.</p><p id="p-0067" num="0066">Unless specifically stated otherwise, descriptors such as &#x201c;first,&#x201d; &#x201c;second,&#x201d; &#x201c;third,&#x201d; etc., are used herein without imputing or otherwise indicating any meaning of priority, physical order, arrangement in a list, and/or ordering in any way, but are merely used as labels and/or arbitrary names to distinguish elements for ease of understanding the disclosed examples. In some examples, the descriptor &#x201c;first&#x201d; may be used to refer to an element in the detailed description, while the same element may be referred to in a claim with a different descriptor such as &#x201c;second&#x201d; or &#x201c;third.&#x201d; In such instances, it should be understood that such descriptors are used merely for identifying those elements distinctly that might, for example, otherwise share a same name.</p><p id="p-0068" num="0067">As used herein &#x201c;substantially real time&#x201d; and &#x201c;substantially real-time&#x201d; refer to occurrence in a near instantaneous manner recognizing there may be real-world delays for computing time, transmission, etc. Thus, unless otherwise specified, &#x201c;substantially real time&#x201d; and &#x201c;substantially real-time&#x201d; refer to being within a 1-second time frame of real time.</p><p id="p-0069" num="0068">As used herein, the phrase &#x201c;in communication,&#x201d; including variations thereof, encompasses direct communication and/or indirect communication through one or more intermediary components, and does not require direct physical (e.g., wired) communication and/or constant communication, but rather additionally includes selective communication at periodic intervals, scheduled intervals, aperiodic intervals, and/or one-time events.</p><p id="p-0070" num="0069">As used herein, &#x201c;processor circuitry&#x201d; is defined to include (i) one or more special purpose electrical circuits structured to perform specific operation(s) and including one or more semiconductor-based logic devices (e.g., electrical hardware implemented by one or more transistors), and/or (ii) one or more general purpose semiconductor-based electrical circuits programmable with instructions to perform specific operations and including one or more semiconductor-based logic devices (e.g., electrical hardware implemented by one or more transistors). Examples of processor circuitry include programmable microprocessors, Field Programmable Gate Arrays (FPGAs) that may instantiate instructions, Central Processor Units (CPUs), Graphics Processor Units (GPUs), Digital Signal Processors (DSPs), XPUs, or microcontrollers and integrated circuits such as Application Specific Integrated Circuits (ASICs). For example, an XPU may be implemented by a heterogeneous computing system including multiple types of processor circuitry (e.g., one or more FPGAs, one or more CPUs, one or more GPUs, one or more DSPs, etc., and/or a combination thereof) and application programming interface(s) (API(s)) that may assign computing task(s) to whichever one(s) of the multiple types of processor circuitry is/are best suited to execute the computing task(s).</p><p id="p-0071" num="0070">Terrestrial and non-terrestrial communication protocols, spectrums, connection technologies, etc., may be used to determine (e.g., continuously determine, periodically determine, aperiodically determine, etc.) locations of objects and/or or communication-enabled devices commonly referred to as user equipment (UE). In some disclosed examples, a device can be an electronic and/or computing device, such as a handset device (e.g., a smartphone), a tablet, an Internet-of-Things device, industrial equipment, a wearable device, a vehicle, etc., and/or any other physical or tangible items or assets. In some disclosed examples, a device can be active by being powered and/or enabled to transmit and/or receive data. In some disclosed examples, a device can be passive by being nonpowered, unpowered, and/or disabled to transmit and/or receive data. In some disclosed examples, a device that is nonpowered, unpowered, etc., can be an object. For example, a smartphone that is turned off, has a dead battery, has a battery removed, etc., can be a device and/or an object. In some disclosed examples, UEs can include wired or wireless-enabled devices such as smartphones, tablets or tablet computers, laptop computers, desktop computers, wearable devices, or any other device capable of transmitting or receiving data through a wired and/or wireless connection.</p><p id="p-0072" num="0071">In some disclosed examples, an object can be equipment (e.g., a bulldozer, a forklift, a robot, a vehicle, etc.), a person or living thing (e.g., pedestrians, humans, animals, etc.), a tool (e.g., a hammer, a screwdriver, etc.), etc., and/or any other physical or tangible items or assets. In some disclosed examples, an object can be an active object, such as an object that is in motion (e.g., equipment that is moving, a vehicle in motion, etc.). In some disclosed examples, an object can be a passive object, such as a tool that is not in use and/or in storage. In some disclosed examples, an object that is powered (e.g., powered on) can be a device. For example, a nonpowered, unpowered, etc., Bluetooth and/or Wi-Fi-capable screwdriver can be a device and/or an object. In some disclosed examples, a powered Bluetooth and/or Wi-Fi capable screwdriver can be a device and/or an object.</p><p id="p-0073" num="0072">Billions of devices rely on some form of location-aware capabilities instrumental to several industries and sectors that leverage terrestrial techniques in cellular networks and/or non-terrestrial techniques in satellite-based networks. Example devices can include fourth generation Long-Term Evolution (i.e., 4G LTE) enabled devices, fifth or sixth generation cellular (i.e., 5G or 6G) enabled devices, Citizens Broadband Radio Service (CBRS) enabled devices, category 1 (CAT-1) devices, category M (CAT-M) devices, Narrowband Internet of Things (NB-IoT) devices, etc., and/or any combination(s) thereof. Example terrestrial techniques may include time-of-arrival (TOA), time-difference-of-arrival (TDOA), angle-of-arrival (AOA), round-trip time (RTT), etc. Example non-terrestrial techniques may include sync pulse generator (SPG) techniques, global navigation satellite system (GNSS) techniques, etc.</p><p id="p-0074" num="0073">Location detection and/or determination capabilities have many shortcomings including varying signal strength of location devices associated with active or mobile objects, or executing continuous coverage of passive or non-moving objects. Such shortcomings may challenge positioning, navigation, and timing (PNT) resilience in important applications (e.g., asset inventory management, infrastructure (e.g., non-civilian, civilian, and commercial applications, systems, and infrastructure), manufacturing, transportation, etc.). For example, in applications that rely on Global Positioning System (GPS) services for location detection/determination, potential signal loss, unverified or unauthenticated receipt of GPS data and ranging signals, etc., may be detrimental to such applications with varying degrees of consequences. In some examples, applications relying on satellite GPS/GNSS location determination may be limited because of signal strength used for doppler frequency shift signatures. For example, weak signals from geosynchronous equatorial orbit (GEO) (also referred to as geostationary orbit) satellites may be susceptible to malicious activity (e.g., jamming and spoofing) or inherent electromagnetic challenges such as noise and/or interference. In some examples, terrestrial-based location determination may be limited by discontinuous global coverage (e.g., gaps between networks), local obstructions to sensors causing a break in device and/or object tracking, etc., and/or any combination(s) thereof.</p><p id="p-0075" num="0074">Examples disclosed herein utilize a new radio interface and radio access technology for fifth generation cellular networks commonly referred to as 5G NR for distributed and scalable high performance location and positioning. 5G new radio (5G NR) brings forward new radio sounding and beam forming technologies into mainstream service provider deployments that provide the infrastructure to break the reliance on satellite-based location technologies and move toward complete (i.e., 100%) terrestrial-based location capabilities. Specifically, 5G NR infrastructure together with the techniques disclosed herein enable service providers to move toward terrestrial indoor precise positioning using terrestrial radio techniques, such as location services that are calculated and computed from a network that utilize existing 5G user equipment (UE).</p><p id="p-0076" num="0075">Accurate, deterministic, robust, and precise location and positioning services are needed for a range of services including situational aware content, autonomous-remote-control vehicles, and new 911 regulatory requirements. Cellular-based location capabilities have evolved and improved from smaller cell context identifier (CID) based approaches to timing-based (e.g., TDOA, RTT, etc.) and angle-based (e.g., AOA) approaches. 4G LTE introduced and 5G NR improved reference signals dedicated to channel estimation, synchronization, and positioning. Such reference signals are referred to as sounding reference signals (SRSs). Sounding reference signals (SRS) are defined in Technical Specification (TS) 38.211 (&#x201c;NR; Physical channels and modulation&#x201d;) Section 6.4.1.4 of the 3rd Generation Partnership Project and include SRS configurations such as symbol and indices generation, OFDM resource grid mapping, and SRS waveform generation. An SRS signal, such as a 5G NR SRS signal, can be a reference signal transmitted by a UE to a base station. For example, an SRS signal can include data, information, etc., associated with the combined effect of multipath fading, scattering, doppler, and/or power loss of the transmitted signal. Specifically, 5G NR introduced the uplink sounding reference signal (UL-SRS). SRSs, such as UL-SRSs, can be used for channel sounding but their characteristics can be suitable for TOA estimation as disclosed herein.</p><p id="p-0077" num="0076">In some disclosed examples, a location engine, which can be implemented using hardware (e.g., location engine circuitry), software (e.g., a location engine application, kernel, software, and/or service), and/or firmware (e.g., location engine firmware, location engine embedded software, etc.), can use 5G NR SRS signaling correlation to determine TOA measurements between a UE and different antennas of a base station, such as a radio unit (RU) or a remote radio unit (RRU). In some disclosed examples, the location engine can use 5G NR SRS signaling correlation to determine TOA measurements between a UE and antenna(s) of multiple base stations.</p><p id="p-0078" num="0077">In some disclosed examples, the location engine can determine the location of the UE using TDOA techniques based on the TOA measurements. Example uplink time-difference-of-arrival (UL-TDOA) techniques as disclosed herein are radio access technology (RAT) dependent techniques that can utilize UL-SRS for positioning and/or location determination. Example UL-TDOA techniques as disclosed herein can implement high-quality synchronization between positioning anchors (e.g., gNBs) to correlate TOAs between positioning anchors. For example, a UL-TDOA technique as disclosed herein can be based on a UE and multiple antennas of the same gNB or a UE and multiple gNBs.</p><p id="p-0079" num="0078">In some disclosed examples, the location engine can process (e.g., pre-process) TOA data associated with a UE using SRS data (e.g., SRS measurement data), signal-to-noise ratio (SNR) data, channel impulse response (CIR) data, etc., and/or any combination(s) thereof, that exists and/or otherwise is available at the base station or multiple base stations. In some disclosed examples, the location engine can provide the TOA data to a location management function (LMF). In some disclosed examples, the LMF can execute one or more TDOA techniques based on the TOA data to output a location result, which can correspond to a location (e.g., an actual location within a distance range, an estimated location, a predicted location, etc.) of the UE. In some disclosed examples, the location result can be a visual output, such as an image of the location (e.g., a picture of an office building with an identifier (e.g., a dot, an outline of a person or device, a marker, etc.) to identify the location of a device and/or object to be located. In some disclosed examples, the location result can be updated in real-time, such as updating an image of the location periodically based on a measurement periodicity, an observation frequency, a sampling frequency, etc. In some disclosed examples, the location result can be a visual display based on augmented reality, virtual reality, etc., which can be representative of a tangible and/or physical environment (e.g., an augmented reality overlay of a warehouse that depicts a location of a forklift inside the warehouse, a virtual reality environment depicting aircraft at an airport, etc.). In some disclosed examples, the location result can be a device and/or object, such as a pictorial representation of the device and/or object, a device identifier and/or an object identifier, metadata associated with the device and/or object, location data (e.g., coordinates, a portion of a map, etc.) associated with the device and/or object, etc., and/or any combination(s) thereof. Advantageously, the example location engine can determine the location of the UE with lower overhead compared to conventional location determination techniques. For example, the location engine can reduce and/or otherwise eliminate a quantity of Layer 1 (L1) cellular data that is to be sent to the LMF by determining the TOA data at the base station or across multiple base stations.</p><p id="p-0080" num="0079">In some disclosed examples, 5G NR's advanced beam forming can also enable uplink angle-of-arrival (UL-AOA) techniques as disclosed herein, which can include the use of signal arrival angles (e.g., reception angles, reception angle data representative of signal arrival angles, AOA data, etc.) at the gNB especially in the millimeter wave (mmWave) domain. Example UL-AOA techniques as disclosed herein achieve high-precision, high-penetration indoor location capabilities. Example UL-AOA techniques as disclosed herein are RAT-dependent techniques that can use UL-SRS measurements for direction estimation. In some disclosed examples, the positioning procedure is similar to UL-TDOA, but measures angles instead of TOAs.</p><p id="p-0081" num="0080">As used herein, the terms &#x201c;location&#x201d; and &#x201c;position&#x201d; are used interchangeably and refer to at least one of a qualitative or quantitative description or representation of where a device, an object, etc., can be found. For example, a qualitative description or representation can be an address (e.g., a number, street name, city, state, country, and/or zip code), a description of a type of structure (e.g., an airport, a hangar, an office, a school, a warehouse, etc.) that houses a device, an object, etc., and/or any combination(s) thereof. In some examples, a quantitative description or representation can be array(s) including alphanumeric data, coordinates (e.g., Cartesian coordinates, celestial coordinates, geographic coordinates, GPS coordinates, N-sphere coordinates, spherical coordinates, etc.), vectors including alphanumeric data, etc., and/or any combination(s) thereof.</p><p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is an illustration of an example location determination system <b>100</b>. The location determination system <b>100</b> includes an example device environment <b>102</b>, an example edge network <b>104</b>, an example core network <b>106</b>, and an example cloud network <b>107</b>. In this example, the device environment <b>102</b> is a fifth generation cellular (i.e., 5G) device environment that facilitates the execution of computing and/or electronic tasks using a wireless network, such as a wireless network based on 5G (e.g., a 5G cellular network, a 5G wireless network, etc.). Additionally or alternatively, the device environment <b>102</b> may be implemented by any other generation of cellular technology such as 4G LTE and/or 6G.</p><p id="p-0083" num="0082">The device environment <b>102</b> includes example devices (e.g., computing devices, electronic devices, UEs, etc.) <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>. The devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> include a first example device <b>108</b>, a second example device <b>110</b>, a third example device <b>112</b>, a fourth example device <b>114</b>, and a fifth example device <b>116</b>. The first device <b>108</b> is a 5G-enabled smartphone. Alternatively, the first device <b>108</b> may be a tablet computer (e.g., a 5G-enabled tablet computer), a laptop (e.g., a 5G-enabled laptop), a wearable device (e.g., a 5G-enabled wearable device such as a smartwatch or headset), etc. The second device <b>110</b> is a vehicle (e.g., an automobile, a combustion engine vehicle, an electric vehicle, a hybrid-electric vehicle, an autonomous or autonomous capable vehicle, etc.). For example, the second device <b>110</b> can be an electronic control unit and/or any other hardware included the vehicle, which, in some examples, can be a self-driving, autonomous, or computer-assisted driving vehicle.</p><p id="p-0084" num="0083">The third device <b>112</b> is an aerial vehicle. For example, the third device <b>112</b> can be processor circuitry and/or any other type of hardware included in an unmanned aerial vehicle (UAV) (e.g., an autonomous UAV, a human or user-controlled UAV, etc.), such as a drone. The fourth device <b>114</b> is a robot. For example, the fourth device <b>114</b> can be a collaborative robot, a robot arm, and/or any other type of machinery used in assembly, emergency, lifting, manufacturing, etc., types of activities, tasks, or operations.</p><p id="p-0085" num="0084">The fifth device <b>116</b> is a healthcare associated device. For example, the fifth device <b>116</b> can be a server (e.g., a computer server, an edge server, a rack-mount server, etc.) that stores, analyzes, and/or otherwise processes health care records or health care related data. In some examples, the fifth device <b>116</b> can be a medical device, such as an infusion pump, a magnetic resonance imaging (MRI) machine, a surgical robot, a vital sign monitoring device, etc. In some examples, one or more of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> can be a different type of computing device, such as a server, a personal computer, a workstation, a self-learning machine (e.g., a neural network), a mobile device (e.g., a cell phone, a smart phone, a tablet), a personal digital assistant (PDA), an Internet appliance, a digital versatile disk (DVD) player, a compact disk (CD) player, a digital video recorder, a Blu-ray player, a gaming console, a personal video recorder, a set top box, a headset or other wearable device, or any other type of computing or electronic device. In some examples, the device environment <b>102</b> may include fewer or more devices and/or types of devices than depicted in the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0086" num="0085">The devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> and/or, more generally, the device environment <b>102</b>, are in communication with the edge network <b>104</b> via first example networks <b>118</b>. In the illustrated example, the first networks <b>118</b> are cellular networks (e.g., 5G cellular networks). For example, the first networks <b>118</b> can be implemented by antennas, radio towers, etc., and/or any combination(s) thereof. Additionally and/or alternatively, one or more of the first networks <b>118</b> may be implemented by an Ethernet connection, a digital subscriber line (DSL) connection, a telephone line connection, a coaxial cable system, a fiber optic system, a satellite system, a line-of-site wireless system, a beyond-line-of-site wireless system, a cellular telephone system, a terrestrial network, a non-terrestrial network, etc., and/or any combination(s) thereof.</p><p id="p-0087" num="0086">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the edge network <b>104</b> includes the first networks <b>118</b>, example remote radio units (RRUs) <b>120</b>, example distributed units (DUs) <b>122</b>, and example centralized units (CUs) <b>124</b>. In this example, the DUs <b>122</b> and/or the CUs <b>124</b> are multi-core computing or electronic systems. For example, one or more of the DUs <b>122</b> and/or one or more of the CUs <b>124</b> can include a plurality of processors (e.g., multi-core processors or multiple instances of multi-core processor circuitry) that can each include a plurality of cores (e.g., compute cores, processor cores, compute or processor core circuitry, etc.). In some examples, the DUs <b>122</b> and/or the CUs <b>124</b> are edge servers (e.g., 5G edge servers), such as multi-core edge servers, that can effectuate the distribution of data flows (e.g., communication flows, packet flows, a flow of one or more data packets, etc.) through the edge network <b>104</b> to a different destination (e.g., the 5G device environment <b>102</b>, the core network <b>106</b>, etc.). In some examples, the edge network <b>104</b> may include fewer or more of the first networks <b>118</b>, the RRUs <b>120</b>, the DUs <b>122</b>, and/or the CUs <b>124</b> than depicted in the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0088" num="0087">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the RRUs <b>120</b> are radio transceivers (e.g., remote radio transceivers, also referred to as remote radio heads (RRHs)) in a base station (e.g., a radio base station). For example, the RRUs <b>120</b> can be hardware, which can include radio-frequency (RF) circuitry, analog-to-digital/digital-to-analog converters, and/or up/down power converters, that connect to a network of an operator (e.g., a telecommunication service provider (&#x201c;telco&#x201d;, or &#x201c;TSP&#x201d;), a cellular operator or provider, etc.). In some examples, the RRUs <b>120</b> can convert a digital signal to an RF signal, amplify the RF signal to a desired power level, and radiate the amplified RF signal in air via one or more antennas. In some examples, the RRUs <b>120</b> can receive a desired band of signal from the air via the one or more antennas and amplify the received signal. The RRUs <b>120</b> are termed as remote because the RRUs <b>120</b> are typically installed on a mast-top, or tower-top location that is physically distant from base station hardware, which is often mounted in an indoor rack-mounted location or installation. In some examples, the RRUs <b>120</b> can be referred to as radio units (RUs).</p><p id="p-0089" num="0088">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the RRUs <b>120</b> are coupled to and/or otherwise in communication with a respective one of the DUs <b>122</b>. In some examples, the DUs <b>122</b> include hardware that implement real-time Layer 1 (L1) scheduling functions (e.g., physical layer control) and/or Layer 2 (L2) scheduling functions (e.g., radio link control (RLC), media or medium access control (MAC), etc.). In some examples, the CUs <b>124</b> include hardware that implement Layer 3 (L3) scheduling functions, such as packet data convergence control (PDCP) and/or radio resource control (RRC) functions. In some examples, a first one of the CUs <b>124</b> is a centralized unit control plane (CU-CP) and a second one of the CUs <b>124</b> is a centralized unit user plane (CU-UP).</p><p id="p-0090" num="0089">In some examples, the L1 data can correspond to L1 data of an OSI model. In some examples, the L1 data of an OSI model can correspond to the physical layer of the OSI model, L2 data of the OSI model can correspond to the data link layer of the OSI model, L3 data of the OSI model can correspond to the network layer of the OSI model, and so forth. In some examples, the L1 data can correspond to the transmitted raw bit stream over a physical medium (e.g., a wired line physical structure such as coax or fiber, an antenna, a receiver, a transmitter, a transceiver, etc.). In some examples, the L1 data can be implemented by signals, binary transmission, etc. In some examples, the L2 data can correspond to physical addressing of the data, which may include Ethernet data, MAC addresses, logical link control (LLC) data, etc. In some examples, the L3 data can correspond to the functional and procedural means of transferring variable-length data sequences from a source to a destination host via one or more networks, while maintaining the quality of service functions.</p><p id="p-0091" num="0090">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, at least one of (i) one or more of the DUs <b>122</b> or (ii) one or more of the CUs <b>124</b> implement a virtual radio access network (vRAN). For example, one or more of the DUs <b>122</b>, or portion(s) thereof, can be virtualized to implement one or more vRAN DUs. In some examples, one or more of the CUs <b>124</b>, or portion(s) thereof, can be virtualized to implement one or more vRAN CUs. In some examples, one or more of the DUs <b>122</b> and/or one or more of the CUs <b>124</b> can execute, run, and/or otherwise implement virtualized baseband functions on vendor-agnostic hardware (e.g., commodity server hardware) based on the principles of network function virtualization (NFV). NFV is a network architecture concept that uses the technologies of information technology (IT) virtualization to virtualize entire classes of network node functions into building blocks that may be connected, or chained together, to create communication services.</p><p id="p-0092" num="0091">RUs, RRUs, RANs, vRANs, DUs, CUs, and/or core servers as disclosed herein can be implemented by FLEXRAN&#x2122; Reference Architecture for Wireless Access provided by Intel&#xae; Corporation of Santa Clara, Calif. In some examples, FLEXRAN&#x2122; can be implemented by an off-the-shelf general-purpose Xeon&#xae; series processor with Intel Architecture server system and/or a virtualized platform including components of processors, input/output (I/O) circuitry, and/or accelerators (e.g., artificial intelligence and/or machine-learning accelerators, ASICs, FPGAs, GPUs, etc.) provided by Intel&#xae; Corporation. Additionally or alternatively, FLEXRAN&#x2122; can be implemented by a specialized and/or customized server system and/or a virtualized platform including components of processors, input/output (I/O) circuitry, and/or accelerators (e.g., artificial intelligence and/or machine-learning accelerators, ASICs, FPGAs, GPUs, etc.) provided by Intel&#xae; Corporation and/or any other manufacturer. Advantageously, in some examples, FlexRAN&#x2122; Reference Architecture can enable increased levels of flexibility with the programmable on-board features, memory, and I/O. Advantageously, in some examples, deployments based on the FlexRAN&#x2122; Reference Architecture can scale from small to large capacities with the same set of components running different applications or functions, ranging from the RAN to core network and data center including edge computing and media, enabling economies of scale.</p><p id="p-0093" num="0092">Advantageously, in some examples disclosed herein, architectures, deployments, and/or systems based on the 3rd Generation Partnership Project (3GPP) standard and/or the Open RAN standard can be implemented by hardware, software, and/or firmware associated with FLEXRAN&#x2122;. For example, a 3GPP system as disclosed herein can include a server including processor circuitry that can execute and/or instantiate machine-readable instructions to implement FLEXRAN&#x2122;.</p><p id="p-0094" num="0093">In some examples, hardware platforms, such as the IoT device <b>5450</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the processor platform <b>5500</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, etc., can include hardware accelerator(s), hardware accelerator or acceleration circuitry, etc., that can utilize FLEXRAN&#x2122; functionality with improved efficiency compared to non-accelerated deployments. For example, FLEXRAN&#x2122; can include functions implemented by different types of Instruction Set Architectures. In some examples, the functions can include Fast-Fourier Transform (FFT), Inverse-Fast-Fourier Transform (IFFT), etc., algorithms, calculations, computations, determinations, etc., which can be implemented by hardware executing and/or instantiating corresponding machine-readable instructions. For example, the IoT device <b>5450</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the processor platform <b>5500</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, etc., can include one or more hardware accelerators that can execute and/or instantiate FFT, IFFT, etc., machine-readable instructions to receive cellular data, calculate and/or determine measurements based on the cellular data, and/or output the measurements with increased efficiency, increased bandwidth, increased throughput, and/or reduced latency. In some examples, the IoT device <b>5450</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the processor platform <b>5500</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, etc., can include processor circuitry that can offload compute workloads, such as FFT, IFFT, etc., workloads, to the one or more hardware accelerators to process the compute workloads based on the FLEXRAN&#x2122; functions.</p><p id="p-0095" num="0094">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, first connection(s) or communication link(s) between the first networks <b>118</b> and the RRUs <b>120</b> implement(s) the fronthaul of the edge network <b>104</b>. Second connection(s) or communication link(s) between the DUs <b>122</b> and the CUs <b>124</b> implement(s) the midhaul of the edge network <b>104</b>. Third connection(s) or third communication link(s) between the CUs <b>124</b> and the core network <b>106</b> implement(s) the backhaul of the edge network <b>104</b>.</p><p id="p-0096" num="0095">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, the core network <b>106</b> includes example core devices <b>126</b>. In some examples, the core devices <b>126</b> are multi-core computing or electronic systems. For example, one or more of the core devices <b>126</b> can include a plurality of processors (e.g., multi-core processors, multiple instances of processor circuitry, etc.) that each include a plurality of cores (e.g., compute cores, processor cores, compute or processor core circuitry, etc.). For example, one or more of the core devices <b>126</b> can be servers (e.g., physical servers, virtual or virtualized servers, etc., and/or any combination(s) thereof). In some examples, one or more of the core devices <b>126</b> can be implemented with the same or substantially similar hardware as the DUs <b>122</b>, the CUs <b>124</b>, etc. Additionally or alternatively, one or more of the core devices <b>126</b> may be implemented by any other type of computing or electronic device.</p><p id="p-0097" num="0096">The core network <b>106</b> of the illustrated example is implemented by different logical layers including an example application layer <b>128</b>, an example virtualization layer <b>130</b>, and an example hardware layer <b>132</b>. In some examples, the core devices <b>126</b> of the hardware layer <b>132</b> implement core servers. In some examples, the application layer <b>128</b> (or portion(s) thereof), the virtualization layer <b>130</b> (or portion(s) thereof), and/or the hardware layer <b>132</b> (or portion(s) thereof), implement one or more core servers. For example, a core server can be implemented by the application layer <b>128</b>, the virtualization layer <b>130</b>, and/or the hardware layer <b>132</b> associated with a first one of the core devices <b>126</b>, a second one of the cores devices <b>126</b>, etc., and/or any combination(s) thereof.</p><p id="p-0098" num="0097">In some examples, the application layer <b>128</b> can include and/or implement business support systems (BSS), operations support systems (OSS), 5G core (5GC) systems, Internet Protocol multimedia core network subsystems (IMS), etc., in connection with operation of a telecommunications network, such as the location determination system <b>100</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, or portion(s) thereof. In some examples, the virtualization layer <b>130</b> can be representative of virtualizations of the physical hardware resources of the core devices <b>126</b>, such as virtualizations of processor circuitry resources (e.g., central processor units (CPUs), graphics processor units (GPUs), etc.), memory resources (e.g., non-volatile memory, volatile memory, etc.), storage resources (e.g., hard-disk drives (HDDs), solid-state disk (SSD) drives, etc.), network resources (e.g., network interface cards (NICs), network interface circuitry, gateways, routers, etc.), etc. In some examples, the virtualization layer <b>130</b> can control and/or otherwise manage the virtualizations of the physical hardware resources with a hypervisor that can run and/or otherwise instantiate one or more virtual machines (VMs), containers, etc., built and/or otherwise composed of the virtualizations of the physical hardware resources.</p><p id="p-0099" num="0098">The core network <b>106</b> of the illustrated example is in communication with the cloud network <b>107</b>. In some examples, the cloud network <b>107</b> can be implemented by a private and/or public cloud services provider. For example, the cloud network <b>107</b> can be implemented by virtual and/or physical hardware, software, and/or firmware resources to execute computing tasks or workloads. In some examples, the cloud network <b>107</b> can implement and/or otherwise effectuate Function-as-a-Service (FaaS), Infrastructure-as-a-Service (IaaS), Software-as-a-Service (SaaS), etc., systems.</p><p id="p-0100" num="0099">In the illustrated example of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, multiple example communication paths <b>134</b>, <b>136</b>, <b>138</b> are depicted including a first example communication path <b>134</b> (identified by PATH #1: DEVICE-TO-EDGE), a second example communication path <b>136</b> (identified by PATH #2: EDGE-TO-CORE), and a third example communication path <b>138</b> (identified by PATH #3: DEVICE-TO-EDGE-TO-CORE). In the illustrated example, the first communication path <b>134</b> is a device-to-edge communication path that corresponds to communication between one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of the 5G device environment <b>102</b> and one(s) of the first networks <b>118</b>, RRUs <b>120</b>, DUs <b>122</b>, and/or CUs <b>124</b> of the edge network <b>104</b>. The second communication path <b>136</b> of the illustrated example is an edge-to-core communication path that corresponds to communication between one(s) of the first networks <b>118</b>, RRUs <b>120</b>, DUs <b>122</b>, and/or CUs <b>124</b> of the edge network <b>104</b> and one(s) of the core devices <b>126</b> of the core network <b>106</b>. The third communication path <b>138</b> of the illustrated example is a device-to-edge-to-core communication path that corresponds to communication between one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> and one(s) of the core devices <b>126</b> via one(s) of the first networks <b>118</b>, RRUs <b>120</b>, DUs <b>122</b>, and/or CUs <b>124</b> of the edge network <b>104</b>.</p><p id="p-0101" num="0100"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is a block diagram of location engine circuitry <b>200</b> to determine a location of a device, an object, a UE, etc., based on cellular data, such as 5G NR SRS data (e.g., 5G NR SRS measurement data). The location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be instantiated (e.g., creating an instance of, bring into being for any length of time, materialize, implement, etc.) by processor circuitry such as a central processing unit executing instructions. Additionally or alternatively, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be instantiated (e.g., creating an instance of, bring into being for any length of time, materialize, implement, etc.) by an ASIC or an FPGA structured to perform operations corresponding to the instructions. It should be understood that some or all of the location engine circuitry <b>200</b> may, thus, be instantiated at the same or different times. Some or all of the location engine circuitry <b>200</b> may be instantiated, for example, in one or more threads executing concurrently on hardware and/or in series on hardware. Moreover, in some examples, some or all of the location engine circuitry <b>200</b> may be implemented by microprocessor circuitry executing instructions to implement one or more virtual machines and/or containers.</p><p id="p-0102" num="0101">In some examples, the location engine circuitry <b>200</b>, or portion(s) thereof, can implement a measurement engine (e.g., a cellular data measurement engine, a location measurement engine, etc.). For example, the location engine circuitry <b>200</b>, or portion(s) thereof, can implement a measurement engine based on FlexRAN&#x2122; Reference Architecture. In some examples, at least one of one(s) of the first networks <b>118</b>, one(s) of the RRUs <b>120</b>, one(s) of the DUs <b>122</b>, one(s) of the CUs <b>124</b>, one(s) of the core devices <b>126</b>, or the cloud network <b>107</b> can be implemented by the location engine circuitry <b>200</b>. For example, a first one and/or a second one of the first networks <b>118</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>. In some examples, a first one and/or a second one of the RRUs <b>120</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>. In some examples, a first one and/or a second one of the DUs <b>122</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>. In some examples, a first one and/or a second one of the CUs <b>124</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>. In some examples, a first one and/or a second one of the core devices <b>126</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>. In some examples, the cloud network <b>107</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b>.</p><p id="p-0103" num="0102">The location engine circuitry <b>200</b> of the illustrated example includes example interface circuitry <b>210</b>, example parser circuitry <b>220</b>, example device identification circuitry <b>230</b>, example time-of-arrival (TOA) determination circuitry <b>240</b>, example time-difference-of-arrival (TDOA) determination circuitry <b>250</b>, example angle-of-arrival (AOA) determination circuitry <b>260</b>, example event generation circuitry <b>270</b>, example direction determination circuitry <b>280</b>, example location determination circuitry <b>290</b>, an example datastore <b>292</b>, and an example bus <b>298</b>. In this example, the datastore <b>292</b> includes example cellular data <b>294</b> and example machine-learning (ML) model(s) <b>296</b>.</p><p id="p-0104" num="0103">In the illustrated example, the interface circuitry <b>210</b>, the parser circuitry <b>220</b>, the device identification circuitry <b>230</b>, the TOA determination circuitry <b>240</b>, the TDOA determination circuitry <b>250</b>, the AOA determination circuitry <b>260</b>, the event generation circuitry <b>270</b>, the direction determination circuitry <b>280</b>, the location determination circuitry <b>290</b>, and/or the datastore <b>292</b>, is/are in communication with one(s) of each other via the bus <b>298</b>. For example, the bus <b>298</b> can be implemented by at least one of an Inter-Integrated Circuit (I2C) bus, a Serial Peripheral Interface (SPI) bus, a Peripheral Component Interconnect (PCI) bus, or a Peripheral Component Interconnect Express (PCIe or PCI-E) bus. Additionally or alternatively, the bus <b>298</b> may be implemented by any other type of computing or electrical bus.</p><p id="p-0105" num="0104">The location engine circuitry <b>200</b> of the illustrated example includes the interface circuitry <b>210</b> to receive data from device(s). The location engine circuitry <b>200</b> of the illustrated example includes the interface circuitry <b>210</b> to transmit data to device(s). In some examples, the interface circuitry <b>210</b> stores received and/or transmitted data in the datastore <b>292</b> as the cellular data <b>294</b>. In some examples, the interface circuitry <b>210</b> is instantiated by processor circuitry executing interface instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0106" num="0105">In some examples, the interface circuitry <b>210</b> can receive data from one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, the first networks <b>118</b>, the RRUs <b>120</b>, the DUs <b>122</b>, the CUs <b>124</b>, the core devices <b>126</b>, 5G device environment <b>102</b>, the edge network <b>104</b>, the core network <b>106</b>, the cloud network <b>107</b>, etc., of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the interface circuitry <b>210</b> can transmit data to one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, the first networks <b>118</b>, the RRUs <b>120</b>, the DUs <b>122</b>, the CUs <b>124</b>, the core devices <b>126</b>, 5G device environment <b>102</b>, the edge network <b>104</b>, the core network <b>106</b>, the cloud network <b>107</b>, etc., of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0107" num="0106">In some examples, the interface circuitry <b>210</b> can be implemented by hardware in accordance with any type of interface standard, such as an Ethernet interface, a universal serial bus (USB) interface, a BLUETOOTH&#xae; interface, a near field communication (NFC) interface, a PCI interface, a PCIe interface, an SPG interface, a GNSS interface, a 4G/5G/6G interface, a CBRS interface, a CAT-1 interface, a CAT-M interface, an NB-IoT interface, etc., and/or any combination(s) thereof. In some examples, the interface circuitry <b>210</b> can be implemented by one or more communication devices such as one or more receivers, one or more transceivers, one or more modems, one or more gateways (e.g., residential, commercial, or industrial gateways), one or more wireless access points (WAPs), and/or one or more network interfaces to facilitate exchange of data with external machines (e.g., computing devices of any kind) by a network, such as the 5G device environment <b>102</b>, the edge network <b>104</b>, the core network <b>106</b>, the cloud network <b>107</b>, the first networks <b>118</b>, etc., of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the interface circuitry <b>210</b> can implement the communication by, for example, an Ethernet connection, a DSL connection, a telephone line connection, a coaxial cable system, a satellite system or network (e.g., a line-of-sight (LOS) satellite system or network, a beyond-line-of-sight (BLOS) satellite system or network, etc.), a cellular telephone system, an optical connection, etc., and/or any combination(s) thereof.</p><p id="p-0108" num="0107">The location engine circuitry <b>200</b> of the illustrated example includes the parser circuitry <b>220</b> to extract portion(s) of data received by the interface circuitry <b>210</b>. In some examples, the parser circuitry <b>220</b> is instantiated by processor circuitry executing parser instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0109" num="0108">In some examples, the parser circuitry <b>220</b> can extract portion(s) from data such as cell site or cell tower data, location data (e.g., coordinate data, such as azimuth, x-coordinate (horizontal), y-coordinate (vertical), and/or z-coordinate (altitude, elevation, height, etc.) coordinate data), registration data (e.g., cellular registration data), SRS data (e.g., SRS measurement data), signal-to-noise ratio (SNR) data, channel impulse response (CIR) data, device identifiers (e.g., vendor identifiers, manufacturer identifiers, device name identifiers, etc.), headers (e.g., Internet Protocol (IP) addresses and/or ports, media access control (MAC) addresses and/or ports, etc.), payloads (e.g., protocol data units (PDUs), Hypertext Transfer Protocol (HTTP) payloads, Hypertext Transfer Protocol Secure (HTTPs) payloads, etc.), cellular data (e.g., L1 data, L2 data, User Datagram Protocol/Internet Protocol (UDP/IP) data, General Packet Radio Services (GPRS) tunnel protocol user plane (GTP-U) data, SRS data, SNR data, CIR data, etc.), etc., and/or any combination(s) thereof. In some examples, the parser circuitry <b>220</b> can store one(s) of the extracted portion(s) in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0110" num="0109">In some examples, the parser circuitry <b>220</b> includes and/or implements a dynamic load balancer to extract data received by and/or otherwise associated with the interface circuitry <b>210</b>. In some examples, the dynamic load balancer can be implemented by a Dynamic Load Balancer provided by Intel&#xae; of Santa Clara, California. Additionally or alternatively, the parser circuitry <b>220</b> may implement a queue management service, which can be implemented by hardware, software, and/or firmware. In some examples, the parser circuitry <b>220</b> generates queue events (e.g., data queue events, enqueue events, dequeue events, etc.). In some examples, the queue events can be implemented by an array of data (e.g., a data array). Alternatively, the queue events may be implemented by any other data structure. For example, the parser circuitry <b>220</b> can generate a first queue event, which can include a data pointer that references data stored in memory, a priority (e.g., a value indicative of the priority, a data priority, etc.) of the data, etc., and/or any combination(s) thereof. In some examples, the events can correspond to, be indicative of, and/or otherwise be representative of workload(s) (e.g., compute or computational workload(s), data processing workload(s), etc.) to be facilitated by the DLB circuitry, which can be implemented by the parser circuitry <b>220</b>. For example, the parser circuitry <b>220</b> can generate a queue event as an indication of data to be enqueued to the DLB circuitry to generate output(s) based on the enqueued data.</p><p id="p-0111" num="0110">In some examples, a queue event, such as the first queue event, can be implemented by an interrupt (e.g., a hardware, software, and/or firmware interrupt) that, when generated and/or otherwise invoked, can indicate to the DLB circuitry (and/or DLB service) that there is/are workload(s) associated with the cellular data <b>294</b> to be performed or carried out. In some examples, the DLB circuitry can enqueue (e.g., add, insert, load, store, etc.) the queue event by adding, enqueueing, inserting, loading, and/or otherwise storing the data pointer, the priority, etc., into first hardware queue(s) (e.g., producer or data producer queue(s), load balancer queue(s), hardware implemented load balancer queue(s), etc.) included in and/or otherwise implemented by the DLB circuitry. Additionally or alternatively, the DLB service can enqueue the queue event by enqueueing, loading, and/or otherwise storing the data pointer, the priority, etc., into the first hardware queue(s).</p><p id="p-0112" num="0111">In some examples, the priority (e.g., the data priority) can be based on waiting for all antenna data (e.g., SRS data from all expected antenna(s)) or waiting for a minimum threshold of data and/or measurements. For example, different queues can have different priorities. In some examples, a first data queue maintained by the DLB circuitry can be associated with a first data priority in which SRS data is not to be enqueued to worker core(s) until the SRS data from all expected antenna(s) is received. In some examples, a second data queue maintained by the DLB circuitry can be associated with a second data priority in which SRS data is not to be enqueued to worker core(s) until a threshold amount of SRS data and/or associated measurements is received and/or determined.</p><p id="p-0113" num="0112">In some examples, a worker core can be a core of processor circuitry that is available to receive a workload to process. For example, the worker core can be idle or not executing a workload. In some examples, the worker core can be busy or executing a workload, but may not be busy or executing a workload when the worker core is needed to receive another workload. In some examples, a worker core can be a core of processor circuitry that is configured to handle a particular workload. For example, a workload to be processed can be a machine-learning workload. In some examples, a core of processor circuitry may not be a worker core if the core is not configured to execute and/or instantiate the machine-learning workload. In some examples, a core of processor circuitry may not be a worker core if the core is not configured to execute and/or instantiate the machine-learning workload with increased efficiency and thereby the core may be a sub-optimal or nonideal choice to execute and/or instantiate the machine-learning workload. In some examples, a core of processor circuitry can be a worker core if the core is configured for a particular workload, such as by having a configuration of an operating frequency (e.g., a clock frequency), access to instructions from an Instruction Set Architecture (ISA) (e.g., a machine-learning ISA, a 5G cellular related ISA, etc.), etc., and/or any combination(s) thereof, to execute the workload.</p><p id="p-0114" num="0113">In some examples, the DLB circuitry can dequeue the queue event by dequeuing, loading, and/or otherwise storing the data pointer, the priority, etc., into second hardware queue(s) (e.g., consumer or data consumer queue(s), load balancer queue(s), hardware implemented load balancer queue(s), etc.) that may be accessed by compute cores (e.g., consumer cores of processor circuitry, worker cores of processor circuitry, etc.) for subsequent processing. In some examples, the compute cores are included in and/or otherwise implemented by the parser circuitry <b>220</b>, and/or, more generally, the location engine circuitry <b>200</b>. In some examples, the compute cores are included in and/or otherwise implemented by the DLB circuitry. In some examples, one or more of the compute cores are separate from the DLB circuitry. Additionally or alternatively, the DLB service can dequeue the queue event by dequeuing, loading, and/or otherwise storing the data pointer, the priority, etc., into the second hardware queue(s).</p><p id="p-0115" num="0114">In some examples, a compute core can write data to the queue event. For example, the queue event can be implemented by a data array. In some examples, the compute core can write data into one or more positions of the data array. For example, the compute core can add data to one or more positions of the data array that does not include data, modify existing data of the data array, and/or remove existing data of the data array. By way of example, the parser circuitry <b>220</b> can dequeue a queue event from the DLB circuitry. The parser circuitry <b>220</b> can determine that the queue event includes a data pointer that references wireless data, such as SRS data. The parser circuitry <b>220</b> can complete (and/or cause completion of) a computation operation or workload on the wireless data, such as identifying data portion(s) of interest from the wireless data, extracting data portion(s) of interest from the wireless data, etc. After completion of the computation operation/workload, the parser circuitry <b>220</b> can cause a compute core to write a completion bit, byte, etc., into the queue event. After the completion bit, byte, etc., is written to the queue event, the parser circuitry <b>220</b> can enqueue the queue event back to the DLB circuitry. In some examples, the DLB circuitry can determine that the computation operation has been completed by identifying the completion bit, byte, etc., in the queue event.</p><p id="p-0116" num="0115">The location engine circuitry <b>200</b> of the illustrated example includes the device identification circuitry <b>230</b> to identify a device, such as an object that is adapted to effectuate wireless electronic communication. In some examples, the device identification circuitry <b>230</b> is instantiated by processor circuitry executing device identification instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0117" num="0116">In some examples, the device identification circuitry <b>230</b> can identify one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> based on the cellular data <b>294</b>. For example, the device identification circuitry <b>230</b> can identify the one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> based on an identifier (e.g., a universally unique identifier (UUID), a UE identifier, a manufacturer identifier, a vendor identifier, etc.), an address (e.g., an IP address, a MAC address, etc.), etc., and/or any combination(s) thereof. In some examples, the device identification circuitry <b>230</b> can store the device identification(s) in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0118" num="0117">In some examples, the device identification circuitry <b>230</b> can generate association(s) (e.g., data association(s)) of a device (e.g., an identification of a device), a measurement periodicity, and a location. For example, the device identification circuitry <b>230</b> can generate one or more data associations of the first device <b>108</b>, a measurement periodicity of determining a location of the first device <b>108</b> two times per second (i.e., 2 Hz), and a location of the first device <b>108</b> of in the 5G device environment <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> (e.g., a building, a campus, a residential home, a warehouse, etc.). In some examples, the measurement periodicity can be a data collection periodicity of obtaining cellular data from a device, such as obtaining cellular data from the first device <b>108</b> three times per second (i.e., 3 Hz). For example, the device identification circuitry <b>230</b> can generate one or more data associations of the first device <b>108</b>, a data collection periodicity of requesting and/or obtaining SRS data from the first device <b>108</b> three times per second (i.e., 3 Hz), and/or a location of the first device <b>108</b> of in the 5G device environment <b>102</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> (e.g., a building, a campus, a residential home, a warehouse, etc.). In some examples, the device identification circuitry <b>230</b> can store the one or more associations in the datastore <b>292</b> as the cellular data <b>294</b>. As used herein, the term &#x201c;measurement frequency&#x201d; may be used interchangeably with &#x201c;sampling frequency&#x201d; and/or &#x201c;data sampling frequency.&#x201d;</p><p id="p-0119" num="0118">The location engine circuitry <b>200</b> of the illustrated example includes the TOA determination circuitry <b>240</b> to determine a TOA associated with data (e.g., the cellular data <b>294</b>), or portion(s) thereof. In some examples, the TOA determination circuitry <b>240</b> is instantiated by processor circuitry executing TOA determination instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0120" num="0119">As used herein, &#x201c;time-of-arrival&#x201d; and &#x201c;TOA&#x201d; refer to the time instant (e.g., the absolute time instant) when a signal (e.g., a radio signal, an electromagnetic signal, an acoustic signal, an optical signal, etc.) emanating from a transmitter (e.g., transmitter circuitry, transmitter interface circuitry, etc.) reaches a remote receiver (e.g., a transmission reception point, remote receiver circuitry, receiver interface circuitry, etc.). For example, the TOA determination circuitry <b>240</b> can determine a TOA of portion(s) of the cellular data <b>294</b>.</p><p id="p-0121" num="0120">In some examples, the TOA determination circuitry <b>240</b> processes (e.g., pre-processes) TOA data associated with a UE using SRS data (e.g., SRS measurement data), SNR data, CIR data, etc., and/or any combination(s) thereof, that exists and/or otherwise is available at a base station. As used herein, &#x201c;channel impulse response&#x201d; and &#x201c;CIR&#x201d; refer to the bandwidth that is allocated to a logical connection. For example, the CIR associated with a UE and a base station can be a minimum data transmission speed to be maintained between the UE and the base station.</p><p id="p-0122" num="0121">In some examples, the TOA determination circuitry <b>240</b> can determine the TOA based on the time span that has elapsed since the time-of-transmission (TOT). In some examples, the time span that has elapsed since the TOT is referred to as the time-of-flight (TOF). For example, the TOA determination circuitry <b>240</b> can determine the TOA of data received by the interface circuitry <b>210</b> based on a first time at which a signal is sent from a device, a second time at which the signal is received at the interface circuitry <b>210</b>, and the speed at which the signal travels (e.g., the speed of light). In some examples, the first time and the second time is TOA data. In some examples, a difference between the first time and the second time and/or a data association of the difference and the device is/are TOA measurements. In some examples, the TOA determination circuitry <b>240</b> can store the TOA data, the TOA measurements, etc., and/or any combination(s) thereof, in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0123" num="0122">The location engine circuitry <b>200</b> of the illustrated example includes the TDOA determination circuitry <b>250</b> to determine a TDOA associated with TOA data, or portion(s) thereof. In some examples, the TDOA determination circuitry <b>250</b> is instantiated by processor circuitry executing TDOA determination instructions and/or configured to perform operations such as those represented by one(s) of the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0124" num="0123">As used herein, &#x201c;time-difference-of-arrival&#x201d; and &#x201c;TDOA&#x201d; refer to a difference of times (e.g., time values, timestamps, time signatures, etc.) at which signals (e.g., radio signals, electromagnetic signals, acoustic signals, optical signals, etc.) emanating from a transmitter (e.g., transmitter circuitry, transmitter interface circuitry, etc.) reach different remote receivers (e.g., multiple instances of remote receiver circuitry, receiver interface circuitry, base stations, anchor devices, etc.). By way of example, a UE can transmit cellular data, such as 5G NR SRS data, to at least three different 5G cellular base stations (e.g., ones of the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>). In some examples, the at least three different 5G cellular base stations are synchronized in time to capture the corresponding cellular data from the UE. In some examples, the TDOA determination circuitry <b>250</b> can shift the time signature of each set of cellular data received by the at least three different 5G cellular base stations to generate a set of curved lines, parabolas, curves, etc., that represent solutions to distance equations. For example, the actual location of the UE can sit and/or otherwise be located or positioned at the intersection of the set of curved lines, parabolas, curves, etc.</p><p id="p-0125" num="0124">In some examples, the TDOA determination circuitry <b>250</b> can determine TDOA between individual elements of a sensing array (e.g., an antenna array) of the same base station (e.g., the TDOA between multiple antennas of the same one of the first networks <b>118</b>). For example, the TDOA determination circuitry <b>250</b> can measure the difference in received phase at element(s) in the sensing array, and convert the delay of arrival at the element(s) to TDOA measurement(s). In some examples, the TDOA determination circuitry <b>250</b> can store the TDOA data in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0126" num="0125">In some examples, the time signatures of each set of cellular data is TDOA data. In some examples, first difference(s) between the time signatures and/or data association(s) of the first difference(s) and the device is/are TDOA measurements. In some examples, second difference(s) between the received phase(s) and/or data association(s) of the second difference(s) and the device is/are TDOA measurements. In some examples, the TDOA determination circuitry <b>250</b> can store the TDOA data, the TDOA measurements, etc., in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0127" num="0126">In some examples, the TDOA determination circuitry <b>250</b> can determine TDOA based on TOA data from different base stations and/or from different antennae of the same base station. For example, the TDOA determination circuitry <b>250</b> can obtain (i) a first TOA measurement associated with a UE, such as the first device <b>108</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, from a first base station, such as a first one of the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, (ii) a second TOA measurement associated with the UE from a second base station, such as a second one of the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, and (iii) a third TOA measurement associated with the UE from a third base station, such as a third one of the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. In some examples, the TDOA determination circuitry <b>250</b> can determine a TDOA based on the first through third TOA measurements.</p><p id="p-0128" num="0127">In some examples, the TDOA determination circuitry <b>250</b> can obtain (i) a first TOA measurement associated with a UE, such as the second device <b>110</b>, from a first antenna of a base station, such as a first antenna of a first one of the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, (ii) a second TOA measurement associated with the UE from a second antenna of the base station, and a third TOA measurement associated with the UE from a third antenna of the base station. In some examples, the TDOA determination circuitry <b>250</b> can determine a TDOA based on the first through third TOA measurements.</p><p id="p-0129" num="0128">The location engine circuitry <b>200</b> of the illustrated example includes the AOA determination circuitry <b>260</b> to determine an AOA associated with data, or portion(s) thereof. In some examples, the AOA determination circuitry <b>260</b> is instantiated by processor circuitry executing AOA determination instructions and/or configured to perform operations such as those represented by one(s) of the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0130" num="0129">As used herein, the &#x201c;angle-of-arrival&#x201d; and &#x201c;AOA&#x201d; of a signal refer to the direction from which the signal (e.g., a radio signal, an electromagnetic signal, an acoustic signal, an optical signal, etc.) is received. In some examples, the AOA determination circuitry <b>260</b> can determine the AOA of a signal based on a determination of the direction of propagation of the signal incident on a sensing array (e.g., an antenna array). In some examples, the AOA determination circuitry <b>260</b> can determine the AOA of a signal based on a signal strength (e.g., a maximum signal strength) during antenna rotation. In some examples, the AOA determination circuitry <b>260</b> can determine the AOA of a signal based on a TDOA between individual elements of a sensing array. In some examples, the AOA determination circuitry <b>260</b> can measure the difference in received phase at each element in the sensing array, and convert the delay of arrival at each element to an AOA measurement.</p><p id="p-0131" num="0130">In some examples, the direction of propagation of a signal incident on a sensing array, a signal strength measurement, etc., is/are AOA data. In some examples, the AOA of a signal, a TDOA between individual elements of a sensing array, a difference in received phase of element(s) in a sensing array, etc., is/are AOA measurements. In some examples, data association(s) of (i) AOA data, or portion(s) thereof, (ii) AOA measurement(s), or portion(s) thereof, and/or (iii) a device that transmitted cellular data leading to the AOA data and/or the AOA measurements is/are AOA measurements. In some examples, the AOA determination circuitry <b>260</b> can store the AOA data, the AOA measurements, etc., in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0132" num="0131">The location engine circuitry <b>200</b> of the illustrated example includes the event generation circuitry <b>270</b> to generate an event (e.g., data representative of an event, event data representative of an event, etc.) to cause action(s), operation(s), etc., to be executed. In some examples, the event generation circuitry <b>270</b> is instantiated by processor circuitry executing event generation instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0133" num="0132">In some examples, an event can be implemented by data representative of a command, a direction or directive, an instruction, etc. In some examples, an event can be implemented by data representative of an alert, an indication, a notification, a warning, etc. In some examples, the event generation circuitry <b>270</b> can generate an event to invoke one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> to execute action(s), operation(s), etc. For example, the event generation circuitry <b>270</b> can generate an event that, when received and/or otherwise identified by the second device <b>110</b>, causes the second device <b>110</b> to change direction, speed, etc. In some examples, the event generation circuitry <b>270</b> can generate an event that, when received by the fourth device <b>114</b>, instructs the fourth device <b>114</b> to adjust a position (e.g., a height, an angle, a position, etc.) of the robot arm of the fourth device <b>114</b>. In some examples, the event generation circuitry <b>270</b> can generate an event to be indicative of an alert, an indication, etc., of an abnormal condition (e.g., an anomaly, an intrusion, an obstruction, etc.) associated with the device environment <b>102</b>, and/or, more generally, the location determination system <b>100</b>. In some examples, the event generation circuitry <b>270</b> can store the event(s) in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0134" num="0133">The location engine circuitry <b>200</b> of the illustrated example includes the direction determination circuitry <b>280</b> to determine a direction of an object, a UE, etc. In some examples, the direction determination circuitry <b>280</b> is instantiated by processor circuitry executing direction determination instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0135" num="0134">In some examples, the direction determination circuitry <b>280</b> can determine a motion vector including a direction, a speed, etc., of one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the direction determination circuitry <b>280</b> can determine the direction, and/or, more generally, the motion vector, of one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> based on the cellular data <b>294</b>. For example, the direction determination circuitry <b>280</b> can determine the direction, and/or, more generally, the motion vector, based on TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, etc., associated with one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>. In some examples, the direction determination circuitry <b>280</b> can determine a motion vector including a direction, a speed, etc., of one(s) of the device(s) <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, by executing the ML model(s) <b>296</b> to generate output(s) (e.g., a direction, a speed, a motion vector, etc.) based on input(s) (e.g., the cellular data <b>294</b>). In some examples, the direction determination circuitry <b>280</b> can store the direction(s), and/or, more generally, the motion vector(s), in the datastore <b>292</b> as the cellular data <b>294</b>.</p><p id="p-0136" num="0135">The location engine circuitry <b>200</b> of the illustrated example includes the location determination circuitry <b>290</b> to determine a location (e.g., x-, y-, and/or z-coordinates in a geometric plane) of a device, an object, a UE, etc. In some examples, the location determination circuitry <b>290</b> is instantiated by processor circuitry executing location determination instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0137" num="0136">In some examples, the location determination circuitry <b>290</b> can determine a location (e.g., a location and/or position vector) of one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. For examples, the location determination circuitry <b>290</b> can determine a location of one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> based on the cellular data <b>294</b>. For example, the location determination circuitry <b>290</b> can determine a location based on TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, etc., associated with one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>. In some examples, the location determination circuitry <b>290</b> can determine a location of one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> by executing the ML model(s) <b>296</b> to generate output(s) (e.g., a location, a predicted location, an imminent location, etc.) based on input(s) (e.g., the cellular data <b>294</b>). In some examples, the location determination circuitry <b>290</b> can store the location(s) in the datastore <b>292</b> as the cellular data <b>294</b>. In some examples, the location is location data (e.g., coordinates, elevation, altitude, distance, etc.). In some examples, the location is a visual representation, such as a visual outline of a device and/or object, a reproduction of a device and/or object on a display device or GUI, a location of a device and/or object on a map or globe, etc. In some examples, the location is an augmented reality output, a virtual reality output, etc., of which a user can view, engage with, and/or interact with.</p><p id="p-0138" num="0137">In some examples, the location determination circuitry <b>290</b> determines reliability data associated with a location detection and/or determination. For example, the location determination circuitry <b>290</b> can identify an antenna and/or a receiver at which the cellular data <b>294</b> is received. In some examples, the location determination circuitry <b>290</b> can determine that antenna and/or the receiver have technical specifications such as an operating frequency, a bandwidth, a polarization, an antenna gain, a platform height, an incident angle, an azimuth beamwidth, an elevation beamwidth, a horizontal beamwidth, a vertical beam width, an electrical down tilt, an upper side lobe level, a front to back ratio, isolation between ports, a power rating, an impedance, an antenna configuration, a return loss, etc. For example, the location determination circuitry <b>290</b> can determine that the cellular data <b>294</b> from a first antenna with first technical specifications can have increased reliability and/or increased data integrity (and/or reduced uncertainty or data uncertainty or error rate) with respect to the cellular data <b>294</b> from a second antenna with second technical specifications. For example, the first antenna can have a higher power rating, azimuth beamwidth, etc., than the power rating, the azimuth beamwidth, etc., of the second antenna. In some examples, the technical specifications of the antennas and/or the receivers can be input to the ML model(s) <b>296</b> to improve an accuracy of the output(s). In some examples, the output(s) of the ML model(s) <b>296</b> can include reliability indicators, uncertainty values, etc., associated with the location determinations. For example, the output(s) of the ML model(s) <b>296</b> can include (i) location of a device and/or an object, (ii) a reliability indicator (e.g., a reliability indicator of 70% reliable where 100% is the most reliable and 0% is the least reliable, 85% reliable, 98% reliable, etc.) representative of the accuracy of the location and/or a reliability of the underlying data (e.g., a quantification of how reliable data from one or more first antennas of a first base station are). Additionally or alternatively, any other input to the ML model(s) <b>296</b>, such as sensor data from a device and/or an object, can be assigned reliability data or values to be evaluated by the ML model(s) <b>296</b>.</p><p id="p-0139" num="0138">The location engine circuitry <b>200</b> of the illustrated example includes the datastore <b>292</b> to record data (e.g., the cellular data <b>294</b>, the ML model(s) <b>296</b>, etc.). In some examples, the datastore <b>292</b> is instantiated by processor circuitry executing datastore instructions and/or configured to perform operations such as those represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>, <b>47</b>, <b>48</b>, <b>49</b>, <b>50</b>, <b>51</b>, <b>52</b></figref>, and/or <b>53</b>.</p><p id="p-0140" num="0139">The datastore <b>292</b> of the illustrated example can be implemented by a volatile memory and/or a non-volatile memory (e.g., flash memory). The datastore <b>292</b> may additionally or alternatively be implemented by one or more double data rate (DDR) memories, such as DDR, DDR2, DDR3, DDR4, DDR5, mobile double data rate (mDDR), etc. The datastore <b>292</b> may additionally or alternatively be implemented by one or more mass storage devices such as HDD(s), CD drive(s), DVD drive(s), SSD drive(s), etc. While in the illustrated example the datastore <b>292</b> is illustrated as a single datastore, the datastore <b>292</b> may be implemented by any number and/or type(s) of datastores. Furthermore, the data stored in the datastore <b>292</b> may be in any data format such as, for example, binary data, comma delimited data, tab delimited data, structured query language (SQL) structures, an executable (e.g., an executable binary, an ML configuration image, etc.), etc. In some examples, the datastore <b>292</b> can implement one or more databases. As used herein, &#x201c;database&#x201d; refers to an organized body of related data, regardless of the manner in which the data or the organized body thereof is represented. For example, the organized body of related data can be in the form of one or more of a table, a map, a grid, a packet, a datagram, a frame, a file, an e-mail, a message, a document, a report, a list or in any other form.</p><p id="p-0141" num="0140">In some examples, the cellular data <b>294</b> can include data received by the interface circuitry <b>210</b>. For example, the cellular data <b>294</b> can be data received from one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>, the first networks <b>118</b>, the RRUs <b>120</b>, the DUs <b>122</b>, the CUs <b>124</b>, the core devices <b>126</b>, the device environment <b>102</b>, the edge network <b>104</b>, the core network <b>106</b>, the cloud network <b>107</b>, etc., of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the cellular data <b>294</b> can include GPS data, 4G LTE/5G/6G data, location data, direction and/or speed data (e.g., direction and/or speed data associated with one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b>). In some examples, the cellular data <b>294</b> can include an identifier of an antenna and/or a receiver (e.g., a base station, an IoT device, a gateway, etc.) that received the cellular data <b>294</b>. For example, the location determination circuitry <b>290</b> can determine where the cellular data <b>294</b> is received and what hardware received the cellular data <b>294</b> based on the identifier of the antenna and/or the receiver. In some examples, the cellular data <b>294</b> can include device identification data, TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, event data, SRS data, CIR data, SNR data, etc., and/or any combination(s) thereof. In some examples, the cellular data <b>294</b> can be data obtained via a terrestrial network and/or a non-terrestrial network. For example, the cellular data <b>294</b> can be obtained by a terrestrial network, such as a wired Ethernet network or a 5G wireless network. In some examples, the cellular data <b>294</b> can be obtained by a non-terrestrial network, such as satellite network (e.g., a LOS satellite network, a BLOS satellite network, etc.).</p><p id="p-0142" num="0141">Artificial intelligence (AI), including machine learning (ML), deep learning (DL), and/or other artificial machine-driven logic, enables machines (e.g., computers, logic circuits, etc.) to use a model to process input data to generate an output based on patterns and/or associations previously learned by the model via a training process. For instance, the location engine circuitry <b>200</b> can train the ML model(s) <b>296</b> with data to recognize patterns and/or associations and follow such patterns and/or associations when processing input data such that other input(s) result in output(s) consistent with the recognized patterns and/or associations.</p><p id="p-0143" num="0142">Many different types of machine-learning models and/or machine-learning architectures exist. In some examples, the location engine circuitry <b>200</b> generates the ML model(s) <b>296</b> as neural network model(s). The location engine circuitry <b>200</b> can use a neural network model to execute an AI/ML workload, which, in some examples, may be executed using one or more hardware accelerators. In general, machine-learning models/architectures that are suitable to use in the example approaches disclosed herein include recurrent neural networks. However, other types of machine learning models could additionally or alternatively be used such as supervised learning ANN models, clustering models, classification models, etc., and/or a combination thereof. Example supervised learning ANN models can include two-layer (2-layer) radial basis neural networks (RBN), learning vector quantization (LVQ) classification neural networks, etc. Example clustering models can include k-means clustering, hierarchical clustering, mean shift clustering, density-based clustering, etc. Example classification models can include logistic regression, support-vector machine or network, Naive Bayes, etc. In some examples, the location engine circuitry <b>200</b> can compile, generate, and/or otherwise output one(s) of the ML model(s) <b>296</b> as lightweight machine-learning models.</p><p id="p-0144" num="0143">In general, implementing an ML/AI system involves two phases, a learning/training phase and an inference phase. In the learning/training phase, the location engine circuitry <b>200</b> uses a training algorithm to train the ML model(s) <b>296</b> to operate in accordance with patterns and/or associations based on, for example, training data. In general, the ML model(s) <b>296</b> include(s) internal parameters (e.g., configuration register data) that guide how input data is transformed into output data, such as through a series of nodes and connections within the ML model(s) <b>296</b> to transform input data into output data. Additionally, hyperparameters are used as part of the training process to control how the learning is performed (e.g., a learning rate, a number of layers to be used in the machine learning model, etc.). Hyperparameters are defined to be training parameters that are determined prior to initiating the training process.</p><p id="p-0145" num="0144">Different types of training may be performed based on the type of ML/AI model and/or the expected output. For example, the location engine circuitry <b>200</b> can invoke supervised training to use inputs and corresponding expected (e.g., labeled) outputs to select parameters (e.g., by iterating over combinations of select parameters) for the ML model(s) <b>296</b> that reduce model error. As used herein, &#x201c;labeling&#x201d; refers to an expected output of the machine learning model (e.g., a classification, an expected output value, etc.). Alternatively, the location engine circuitry <b>200</b> may invoke unsupervised training (e.g., used in deep learning, a subset of machine learning, etc.) that involves inferring patterns from inputs to select parameters for the ML model(s) <b>296</b> (e.g., without the benefit of expected (e.g., labeled) outputs).</p><p id="p-0146" num="0145">In some examples, the location engine circuitry <b>200</b> trains the ML model(s) <b>296</b> using unsupervised clustering of operating observables. For example, the operating observables can include SRS data (e.g., SRS measurement data), TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, a certificate (e.g., a digital certificate), an IP address, a manufacturer and/or vendor identifier, a MAC address, a serial number, a UUID, data associated with a UE, etc., and/or any combination(s) thereof. However, the location engine circuitry <b>200</b> may additionally or alternatively use any other training algorithm such as stochastic gradient descent, Simulated Annealing, Particle Swarm Optimization, Evolution Algorithms, Genetic Algorithms, Nonlinear Conjugate Gradient, etc.</p><p id="p-0147" num="0146">In some examples, the location engine circuitry <b>200</b> can train the ML model(s) <b>296</b> until the level of error is no longer reducing. In some examples, the location engine circuitry <b>200</b> can train the ML model(s) <b>296</b> locally on the location engine circuitry <b>200</b> and/or remotely at an external computing system communicatively coupled to a network. In some examples, the location engine circuitry <b>200</b> trains the ML model(s) <b>296</b> using hyperparameters that control how the learning is performed (e.g., a learning rate, a number of layers to be used in the machine learning model, etc.). In some examples, the location engine circuitry <b>200</b> can use hyperparameters that control model performance and training speed such as the learning rate and regularization parameter(s). The location engine circuitry <b>200</b> can select such hyperparameters by, for example, trial and error to reach an optimal model performance. In some examples, the location engine circuitry <b>200</b> utilizes Bayesian hyperparameter optimization to determine an optimal and/or otherwise improved or more efficient network architecture to avoid model overfitting and improve the overall applicability of the ML model(s) <b>296</b>. Alternatively, the location engine circuitry <b>200</b> may use any other type of optimization. In some examples, the location engine circuitry <b>200</b> can perform re-training. The location engine circuitry <b>200</b> can execute such re-training in response to override(s) by a user of the location engine circuitry <b>200</b>, a receipt of new training data, etc.</p><p id="p-0148" num="0147">In some examples, the location engine circuitry <b>200</b> facilitates the training of the ML model(s) <b>296</b> using training data. In some examples, the location engine circuitry <b>200</b> utilizes training data that originates from locally generated data, such as 5G L1 data, SRS data, TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, radio identifiers, CIR data, SNR data, etc. In some examples, the location engine circuitry <b>200</b> utilizes training data that originates from externally generated data. For example, the location engine circuitry <b>200</b> can utilize L1 data, L2 data, etc., from any data source (e.g., a RAN system, a satellite, etc.).</p><p id="p-0149" num="0148">In some examples where supervised training is used, the location engine circuitry <b>200</b> can label the training data (e.g., label training data or portion(s) thereof as object identification data, location data, etc.). Labeling is applied to the training data by a user manually or by an automated data pre-processing system. In some examples, the location engine circuitry <b>200</b> can pre-process the training data using, for example, an interface (e.g., interface circuitry, network interface circuitry, etc.) to extract and/or otherwise identify data of interest and discard data not of interest to improve computational efficiency. In some examples, the location engine circuitry <b>200</b> sub-divides the training data into a first portion of data for training the ML model(s) <b>296</b>, and a second portion of data for validating the ML model(s) <b>296</b>.</p><p id="p-0150" num="0149">Once training is complete, the location engine circuitry <b>200</b> can deploy the ML model(s) <b>296</b> for use as executable construct(s) that process(es) an input and provides output(s) based on the network of nodes and connections defined in the ML model(s) <b>296</b>. The location engine circuitry <b>200</b> can store the ML model(s) <b>296</b> in a datastore, such as the datastore <b>292</b>, that can be accessed by the location engine circuitry <b>200</b>, a cloud repository, etc. In some examples, the location engine circuitry <b>200</b> can transmit the ML model(s) <b>296</b> to external computing system(s) via a network. In some examples, in response to transmitting the ML model(s) <b>296</b> to the external computing system(s), the external computing system(s) can execute the ML model(s) <b>296</b> to execute AI/ML workloads with at least one of improved efficiency or performance to achieve improved object tracking, location detection and/or determination, etc., and/or any combination(s) thereof.</p><p id="p-0151" num="0150">Once trained, the deployed one(s) of the ML model(s) <b>296</b> can be operated in an inference phase to process data. In the inference phase, data to be analyzed (e.g., live data) is input to the ML model(s) <b>296</b>, and the ML model(s) <b>296</b> execute(s) to create output(s). This inference phase can be thought of as the AI &#x201c;thinking&#x201d; to generate the output based on what it learned from the training (e.g., by executing the ML model(s) <b>296</b> to apply the learned patterns and/or associations to the live data). In some examples, input data undergoes pre-processing before being used as an input to the ML model(s) <b>296</b>. Moreover, in some examples, the output data can undergo post-processing after it is generated by the ML model(s) <b>296</b> to transform the output into a useful result (e.g., a display of data, a detection and/or identification of an object, a location determination of an object, an instruction to be executed by a machine, etc.).</p><p id="p-0152" num="0151">In some examples, output of the deployed one(s) of the ML model(s) <b>296</b> can be captured and provided as feedback. By analyzing the feedback, an accuracy of the deployed one(s) of the ML model(s) <b>296</b> can be determined. If the feedback indicates that the accuracy of the deployed model is less than a threshold or other criterion, training of an updated model can be triggered using the feedback and an updated training data set, hyperparameters, etc., to generate an updated, deployed model.</p><p id="p-0153" num="0152">As used herein, &#x201c;data&#x201d; is information in any form that may be ingested, processed, interpreted and/or otherwise manipulated by processor circuitry to produce a result. The produced result may itself be data. As used herein, a &#x201c;dataset&#x201d; is a set of one or more collections of information (e.g., unprocessed and/or raw data, calculated and/or determined measurements based on the unprocessed and/or raw data, etc.) in any form that may be ingested, processed, interpreted and/or otherwise manipulated by processor circuitry to produce a result. The produced result may itself be data. As used herein, a &#x201c;model&#x201d; is a set of instructions and/or data that may be ingested, processed, interpreted and/or otherwise manipulated by processor circuitry to produce a result. Often, a model is operated using input data to produce output data in accordance with one or more relationships reflected in the model. The model may be based on training data. As used herein &#x201c;threshold&#x201d; is expressed as data such as a numerical value represented in any form, that may be used by processor circuitry as a reference for a comparison operation.</p><p id="p-0154" num="0153">In some examples, the location engine circuitry <b>200</b> includes means for receiving data and/or means for transmitting data. For example, the means for receiving and/or the means for transmitting may be implemented by the interface circuitry <b>210</b>. In some examples, the interface circuitry <b>210</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the interface circuitry <b>210</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the interface circuitry <b>210</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the interface circuitry <b>210</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the interface circuitry <b>210</b> may be implemented by at least a transmitter, a receiver, a transceiver, a modem, a residential gateway, a WAP, a network interface, one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0155" num="0154">In some examples, the location engine circuitry <b>200</b> includes means for extracting data and/or means for parsing data. For example, the means for extracting and/or the means for parsing may be implemented by the parser circuitry <b>220</b>. In some examples, the parser circuitry <b>220</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the parser circuitry <b>220</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of FIGS. <b>46</b>-<b>53</b>. In some examples, the parser circuitry <b>220</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the parser circuitry <b>220</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the parser circuitry <b>220</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0156" num="0155">In some examples, the location engine circuitry <b>200</b> includes means for identifying a device and/or an object. For example, the means for identifying may be implemented by the device identification circuitry <b>230</b>. In some examples, the device identification circuitry <b>230</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the device identification circuitry <b>230</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the device identification circuitry <b>230</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the device identification circuitry <b>230</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the device identification circuitry <b>230</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0157" num="0156">In some examples, the location engine circuitry <b>200</b> includes means for determining time-of-arrival (e.g., time-of-arrival data, time-of-arrival determinations, time-of-arrival outputs, etc.). For example, the means for determining time-of-arrival may be implemented by the TOA determination circuitry <b>240</b>. In some examples, the TOA determination circuitry <b>240</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the TOA determination circuitry <b>240</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the TOA determination circuitry <b>240</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the TOA determination circuitry <b>240</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the TOA determination circuitry <b>240</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0158" num="0157">In some examples, the location engine circuitry <b>200</b> includes means for determining time-difference-of-arrival (e.g., time-difference-of-arrival data, time-difference-of-arrival determinations, time-difference-of-arrival outputs, etc.). For example, the means for determining time-difference-of-arrival may be implemented by the TDOA determination circuitry <b>250</b>. In some examples, the TDOA determination circuitry <b>250</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the TDOA determination circuitry <b>250</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the TDOA determination circuitry <b>250</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the TDOA determination circuitry <b>250</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the TDOA determination circuitry <b>250</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0159" num="0158">In some examples, the location engine circuitry <b>200</b> includes means for determining angle-of-arrival (e.g., angle-of-arrival data, angle-of-arrival determinations, angle-of-arrival outputs, etc.). For example, the means for determining angle-of-arrival may be implemented by the AOA determination circuitry <b>260</b>. In some examples, the AOA determination circuitry <b>260</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the AOA determination circuitry <b>260</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the AOA determination circuitry <b>260</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the AOA determination circuitry <b>260</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the AOA determination circuitry <b>260</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0160" num="0159">In some examples, the location engine circuitry <b>200</b> includes means for generating an event (e.g., event data, a queue event, etc.). In some examples, the means for generating an event includes and/or implements means for publishing an event and/or a location to a datastore. In some examples, the means for generating an event includes means for causing an action associated with at least one of a target device or a target object based on an event. For example, the means for generating an event, the means for publishing a location, and/or the means for causing an action may be implemented by the event generation circuitry <b>270</b>. In some examples, the event generation circuitry <b>270</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the event generation circuitry <b>270</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the event generation circuitry <b>270</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the event generation circuitry <b>270</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the event generation circuitry <b>270</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0161" num="0160">In some examples, the location engine circuitry <b>200</b> includes means for determining a direction of a device and/or an object. For example, the means for determining a direction may be implemented by the direction determination circuitry <b>280</b>. In some examples, the means for determining a direction includes and/or implements means for executing a machine-learning model to determine a direction. For example, the means for determining a direction and/or means for executing a machine-learning model to determine a direction may be implemented by the direction determination circuitry <b>280</b>. In some examples, the direction determination circuitry <b>280</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the direction determination circuitry <b>280</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the direction determination circuitry <b>280</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the direction determination circuitry <b>280</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the direction determination circuitry <b>280</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0162" num="0161">In some examples, the location engine circuitry <b>200</b> includes means for determining a location of a device and/or an object. In some examples, the means for determining includes and/or implements means for executing a machine-learning model to determine a location. For example, the means for determining a location and/or means for executing a machine-learning model to determine a location may be implemented by the location determination circuitry <b>290</b>. In some examples, the location determination circuitry <b>290</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the location determination circuitry <b>290</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the location determination circuitry <b>290</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the location determination circuitry <b>290</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the location determination circuitry <b>290</b> may be implemented by at least one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0163" num="0162">In some examples, the location engine circuitry <b>200</b> includes means for storing data. For example, the means for storing data may be implemented by the datastore <b>292</b>. In some examples, the datastore <b>292</b> may be instantiated by processor circuitry such as the example processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the example processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, the example processor circuitry <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, and/or the FPGA <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. For instance, the datastore <b>292</b> may be instantiated by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing machine executable instructions such as those implemented by one or more blocks of one(s) of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In some examples, the datastore <b>292</b> may be instantiated by hardware logic circuitry, which may be implemented by an ASIC, XPU, or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> structured to perform operations corresponding to the machine readable instructions. Additionally or alternatively, the datastore <b>292</b> may be instantiated by any other combination of hardware, software, and/or firmware. For example, the datastore <b>292</b> may be implemented by at least memory, mass storage disc(s) or device(s), one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, an XPU, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to execute some or all of the machine readable instructions and/or to perform some or all of the operations corresponding to the machine readable instructions without executing software or firmware, but other structures are likewise appropriate.</p><p id="p-0164" num="0163">While an example manner of implementing the location engine circuitry <b>200</b> is illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, one or more of the elements, processes, and/or devices illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be combined, divided, re-arranged, omitted, eliminated, and/or implemented in any other way. Further, the example interface circuitry <b>210</b>, the example parser circuitry <b>220</b>, the example device identification circuitry <b>230</b>, the example TOA determination circuitry <b>240</b>, the example TDOA determination circuitry <b>250</b>, the example AOA determination circuitry <b>260</b>, the example event generation circuitry <b>270</b>, the example direction determination circuitry <b>280</b>, the example location determination circuitry <b>290</b>, the example datastore <b>292</b>, the example bus <b>298</b>, and/or, more generally, the example location engine circuitry <b>200</b>, may be implemented by hardware alone or by hardware in combination with software and/or firmware. Thus, for example, any of the example interface circuitry <b>210</b>, the example parser circuitry <b>220</b>, the example device identification circuitry <b>230</b>, the example TOA determination circuitry <b>240</b>, the example TDOA determination circuitry <b>250</b>, the example AOA determination circuitry <b>260</b>, the example event generation circuitry <b>270</b>, the example direction determination circuitry <b>280</b>, the example location determination circuitry <b>290</b>, the example datastore <b>292</b>, the example bus <b>298</b>, and/or, more generally, the example location engine circuitry <b>200</b>, could be implemented by processor circuitry, analog circuit(s), digital circuit(s), logic circuit(s), programmable processor(s), programmable microcontroller(s), GPU(s), digital signal processor(s) (DSP(s)), application specific integrated circuit(s) (ASIC(s)), programmable logic device(s) (PLD(s)), and/or field programmable logic device(s) (FPLD(s)) such as Field Programmable Gate Arrays (FPGAs). Further still, the example location engine circuitry <b>200</b> may include one or more elements, processes, and/or devices in addition to, or instead of, those illustrated in <figref idref="DRAWINGS">FIG. <b>2</b></figref>, and/or may include more than one of any or all of the illustrated elements, processes and devices.</p><p id="p-0165" num="0164"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is a first example environment <b>300</b> including the example location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object, such as an example device <b>302</b>, in the first environment <b>300</b>. The first environment <b>300</b> of the illustrated example is an automobile factory (e.g., an autonomous automobile factory, a smart automobile factory, etc.). The device <b>302</b> of the illustrated example is a robot (e.g., an autonomous robot, a robot arm, a robotic device, etc.) that can be utilized to manufacture (e.g., autonomously manufacture, collaboratively manufacture with humans or other robots, etc.) automobiles in a manufacturing assembly line. The device <b>302</b> of the illustrated example is a robot that can transmit and/or receive cellular data (e.g., 5G NR SRS data). For example, the device <b>302</b> can be a robot that includes processor circuitry and/or interface circuitry to transmit and/or receive cellular data.</p><p id="p-0166" num="0165">In example operation, the device <b>302</b> can transmit cellular data (e.g., 5G SRS data) to example base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> (e.g., cellular base stations, 5G cellular base stations, etc.). The base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> include a first example base station <b>304</b>, a second example base station <b>306</b>, a third example base station <b>308</b>, a fourth example base station <b>310</b>, and a fifth example base station <b>312</b>. The base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> of the illustrated example are radio units (RUs). For example, one(s) of the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> can be implemented by the first networks <b>118</b> and/or the RRUs <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. Alternatively, the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> may be and/or implemented by any other type of wireless interface (e.g., a wireless interface implemented by interface circuitry). Alternatively, one(s) of the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> may be any other device that can transmit and/or receive data, such as a gateway, a router, an IoT device, etc. Alternatively, the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> may be included in respective ones of the devices robots. For example, a first one of the robots can include and/or implement the first base station <b>304</b>, a second one of the robots can include and/or implement the second base station <b>306</b>, etc. In some examples, one or more of the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> can be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In some examples, one or more of the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b> can be separate and/or otherwise different from the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0167" num="0166">In example operation, the location engine circuitry <b>200</b> can determine TOA measurements based on cellular data received by the base stations <b>304</b>, <b>306</b>, <b>308</b>, <b>310</b>, <b>312</b>. For example, the first base station <b>304</b>, the second base station <b>306</b>, and the third base station <b>308</b> can obtain SRS data from the device <b>302</b>. In some examples, the first base station <b>304</b> can determine a first TOA measurement based on the SRS data, the second base station <b>306</b> can determine a second TOA measurement based on the SRS data, and the third base station <b>308</b> can determine a third TOA measurement based on the SRS data. In some examples, the location engine circuitry <b>200</b> can obtain the first, second, and/or third TOA measurements from respective ones of the first base station <b>304</b>, the second base station <b>306</b>, and the third base station <b>308</b>; determine a TDOA measurement based on the first, second, and/or third TOA measurements; and determine a location of the device <b>302</b> in the first environment <b>300</b> based on the TDOA measurement.</p><p id="p-0168" num="0167">In some examples, the location engine circuitry <b>200</b> can obtain the SRS data from at least one of the first base station <b>304</b>, the second base station <b>306</b>, or the third base station <b>308</b>. For example, the first base station <b>304</b>, the second base station <b>306</b>, and/or the third base station <b>308</b> can offload received SRS data to the location engine circuitry <b>200</b> for location determination of the device <b>302</b>. In some examples, the location engine circuitry <b>200</b> can determine the first, second, and/or third TOA measurements based on the SRS data. In some examples, the location engine circuitry <b>200</b> can determine a TDOA measurement based on the first, second, and/or third TOA measurements. In some examples, the location engine circuitry <b>200</b> can determine a location of the device <b>302</b> in the first environment <b>300</b> based on the TDOA measurement. Additionally or alternatively, the location engine circuitry <b>200</b> may determine a location of the device <b>302</b> in the first environment <b>300</b> based on the TOA measurements (e.g., the first TOA measurement, the second TOA measurement, etc.), and/or, more generally, the wireless data, from the device <b>302</b>.</p><p id="p-0169" num="0168">In some examples, the location engine circuitry <b>200</b> can determine TOA measurements based on reception of cellular data by different antennas of the same base station. For example, a first antenna, a second antenna, and a third antenna of the first base station <b>304</b> can obtain SRS data from the device <b>302</b>. In some examples, the first base station <b>304</b> can determine a first TOA measurement based on reception of the SRS data by the first antenna, a second TOA measurement based on reception of the SRS data by the second antenna, and a third TOA measurement based on reception of the SRS data by the third antenna. In some examples, the location engine circuitry <b>200</b> can obtain the first, second, and/or third TOA measurements from the first base station <b>304</b>, and determine a TDOA measurement based on the first, second, and/or third TOA measurements. In example operation, the location engine circuitry <b>200</b> can determine a location of the device <b>302</b> in the first environment <b>300</b> based on the TDOA measurement. Additionally or alternatively, the location engine circuitry <b>200</b> can obtain the SRS data received by the first, second, and third antennas; determine respective TOA measurements based on the SRS data; determine a TDOA measurement based on the TOA measurements; and determine a location of the device <b>302</b> based on the TDOA measurement.</p><p id="p-0170" num="0169">Advantageously, in some examples, the location engine circuitry <b>200</b> can achieve increased performance by obtaining cellular data from different antennas of the same base station. For example, the location engine circuitry <b>200</b> can achieve antenna diversity by obtaining cellular data from different antennas of the same base station. In some examples, the antenna diversity can reduce the number of SRS measurements needed for TOA, TDOA, and/or AOA measurement determination. For example, the increased performance associated with antenna diversity from a single base station can occur when the base station does not have to wait for SRS measurements to be calculated by other base stations. By way of example, the SRS data can sound out channels in a spectrum for a given carrier frequency. A single base station, such as the first base station <b>304</b>, can eliminate and/or reduce the existence of race conditions exist for other base stations since their SRS measurements may not be needed. The elimination of race conditions is advantageous in controlling safety related tasks, such as those described herein.</p><p id="p-0171" num="0170">In some examples, a device and/or object can include and/or the implement the location engine circuitry <b>200</b>. For example, the device <b>302</b> can be a primary location engine and other devices can be secondary location engines. In some examples, the primary location engine can obtain cellular data associated with the other devices; determine locations of respective ones of the other devices; and output the locations to the other devices or elsewhere, such as a server, a monitoring station, a control room, etc., associated with the first environment <b>300</b>. In some examples, the device <b>302</b> can be a primary location engine at a first time and become a secondary location engine at a second time after the first time. For example, one(s) of the robots in the first environment <b>300</b> can alternate, switch, take turns (e.g., via a round-robin selection technique), etc., of being a primary location engine to effectuate distributed and/or federated location detection and/or determination in the first environment <b>300</b>.</p><p id="p-0172" num="0171">In some examples, the robots of the first environment <b>300</b> can implement a hive architecture or schema. For example, one(s) of the robots of the first environment <b>300</b> can implement and/or effectuate a &#x201c;hive mind&#x201d; or a &#x201c;hive of robots&#x201d; to implement location detection and/or determination of devices and/or objects in the first environment <b>300</b>. For example, the robots can execute and/or instantiate respective portions of the location determination workloads. In some examples, a first one of the robots can be a primary location engine and instruct the other robots, which can be secondary location engines, to execute and/or instantiate location sub-tasks (e.g., calculate TOA data, TDOA data, AOA data, determine SRS measurements based on SRS data, etc.) and provide the outputs of the location sub-tasks to the primary location engine. In some examples, a first one of the secondary location engines (e.g., a second one of the robots) can assist other secondary location engines to complete their location sub-tasks to achieve increased efficiency with a distributed compute architecture.</p><p id="p-0173" num="0172">In some examples, the robots, such as the device <b>302</b>, of the first environment <b>300</b> can implement an overseer or observation architecture or schema. For example, the device <b>302</b> can be an overseer of the other robots. In some examples, an overseer can control the other robots by generating and/or transmitting commands to the other robots. In some examples, an overseer can monitor the other robots by querying the other robots for cellular data, prognostic health monitoring data, sensor data, actuator-related data, status data, etc.</p><p id="p-0174" num="0173"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is a second example environment <b>400</b> including the example location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object, such as an example device <b>402</b>, in the second environment <b>400</b>. The second environment <b>400</b> of the illustrated example is an office building. Alternatively, the second environment <b>400</b> may be any other type of environment, such as a commercial building, a hospital or other medical facility, a research facility, a school or other education facility, etc. The device <b>402</b> of the illustrated example is a UE, such as an Internet-enabled smartphone, associated with a person, a user, etc., associated with the office building.</p><p id="p-0175" num="0174">In example operation, the device <b>402</b> can transmit cellular data (e.g., 5G NR SRS data) to one or more example base stations <b>404</b>, <b>406</b>, <b>408</b>. The base stations <b>404</b>, <b>406</b>, <b>408</b> of the illustrated example are RUs, which can be implemented by one or more types of interface circuitry. The base stations <b>404</b>, <b>406</b>, <b>408</b> include a first example base station <b>404</b>, a second example base station <b>406</b>, and a third example base station <b>408</b>. The first base station <b>404</b> is on a top floor of the office building, the second base station <b>406</b> is on a floor beneath the top floor, and the third base station <b>408</b> is on a floor beneath the second base station <b>406</b>. Alternatively, one(s) of the base stations <b>404</b>, <b>406</b>, <b>408</b> may be any other type of wireless interface (e.g., a wireless interface implemented by interface circuitry).</p><p id="p-0176" num="0175">In some examples, the device <b>402</b> can transmit cellular data to multiple ones of the base stations <b>404</b>, <b>406</b>, <b>408</b>. In example operation, the multiple ones of the base stations <b>404</b>, <b>406</b>, <b>408</b> can determine a respective TOA measurement based on reception of the cellular data from the device <b>402</b>. The base stations <b>404</b>, <b>406</b>, <b>408</b> can provide the TOA measurements to the location engine circuitry <b>200</b>. The location engine circuitry <b>200</b> can determine a TDOA measurement based on the TOA measurements. In example operation, the location engine circuitry <b>200</b> can determine a location of the device <b>402</b> in the second environment <b>400</b> based on the TDOA measurement. For example, the location engine circuitry <b>200</b> can determine that the device <b>402</b> is on the top floor of the office building based on the TOA measurements, the TDOA measurement, and/or, more generally, the SRS data. Additionally or alternatively, one(s) of the base stations <b>404</b>, <b>406</b>, <b>408</b> may determine a location of the device <b>402</b> based on SRS data from the device <b>402</b>. For example, one or more of the base stations <b>404</b>, <b>406</b>, <b>408</b> can include and/or be implemented by the location engine circuitry <b>200</b>, or portion(s) thereof.</p><p id="p-0177" num="0176">In some examples, the first base station <b>404</b>, the second base station <b>406</b>, and/or the third base station <b>408</b> can transmit SRS data from the device <b>402</b> to the location engine circuitry <b>200</b>. For example, the location engine circuitry <b>200</b> can determine a first TOA measurement based on SRS data received by the first base station <b>404</b>, a second TOA measurement based on SRS data received by the second base station <b>406</b>, and/or a third TOA measurement based on SRS data received by the third base station <b>408</b>. In some examples, the location engine circuitry <b>200</b> can determine a location of the device <b>402</b> in the second environment <b>400</b> based on the TDOA measurement. For example, the location engine circuitry <b>200</b> can determine that the device <b>402</b> is on the top floor of the office building based on the first TOA measurement, the second TOA measurement, the third TOA measurement, the TDOA measurement, and/or, more generally, the SRS data.</p><p id="p-0178" num="0177">In example operation, the location engine circuitry <b>200</b> can provide the location result (e.g., data representative of the location of the device <b>402</b>, a visual representation of the location of the device <b>402</b>, etc.) to an example base transceiver station (BTS) <b>410</b>. In example operation, the BTS <b>410</b> can provide the location result to an example carrier central office <b>412</b> via an example backhaul network <b>414</b>. The backhaul network <b>414</b> of the illustrated example is a fiber backhaul network. Alternatively, the backhaul network <b>414</b> may be any other type of backhaul network. In some examples, the BTS <b>410</b> can be implemented by one(s) of the CUs <b>124</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the backhaul network <b>414</b> can be implemented by the backhaul of <figref idref="DRAWINGS">FIG. <b>1</b></figref>.</p><p id="p-0179" num="0178"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is a first example location determination architecture <b>500</b>. The first location determination architecture <b>500</b> of the illustrated example is based on the 3rd Generation Partnership Project (3GPP) standard. The first location determination architecture <b>500</b> includes an example UE <b>502</b>, an example RU <b>504</b>, an example DU <b>506</b>, an example CU <b>508</b>, an example core network (CN) <b>510</b>, an example access and mobility management function (AMF) <b>512</b>, an example data network (DN) <b>514</b>, example programmable location data collection (PLDC) circuitry <b>516</b>, and an example location management function (LMF) location engine (LE) <b>518</b>. The LMF LE <b>518</b> of the illustrated example can be based on the 3GPP standard. In some examples, the PLDC <b>516</b> and/or the LMF LE <b>518</b> can include and/or be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0180" num="0179">In example operation, the UE <b>502</b> transmits cellular data, such as SRS data, to the DU <b>506</b> via the RU <b>504</b>. In this example, the DU <b>506</b> implements a vRAN. The DU <b>506</b> can provide the SRS data to the CU <b>508</b>, which, in turn, can provide the SRS data to the CN <b>510</b>. The CN <b>510</b> can provide the SRS data to the AMF <b>512</b> and/or the DN <b>514</b>. In some examples, the LMF LE <b>518</b> can configure the DU <b>506</b> to obtain data from the UE <b>502</b> at a programmable and/or configurable rate. In some examples, the LMF LE <b>518</b> can configure the DU <b>506</b> to obtain a type and/or quantity of data from the UE <b>502</b>.</p><p id="p-0181" num="0180">In example operation, the PLDC <b>516</b> can provide data (e.g., TOA data, TOA measurements, TDOA data, TDOA measurements, AOA data, AOA measurements, etc.) to the LMF LE <b>518</b> based on the NR Positioning Protocol A (NRPPa). In some examples, NRPPa protocol is used to transfer location related L1 measurements (e.g., SRS measurements) and/or other information between the vRAN, and/or, more generally, the DU <b>506</b>, and the LMF LE <b>518</b>. For example, the vRAN of the DU <b>506</b> can output SRS data to the PLDC <b>516</b>, which, in turn, can output the SRS data to the LMF LE <b>518</b> via NRPPa. In example operation, the LMF LE <b>518</b> can output an example location result <b>520</b> based on the data from the PLDC <b>516</b>. For example, the location result <b>520</b> can be coordinates (e.g., x-, y-, and/or z-coordinates) of the UE <b>502</b> based on the SRS data.</p><p id="p-0182" num="0181">The PLDC <b>516</b> of the illustrated example can be implemented by hardware, software, and/or firmware to access data (e.g., cellular data, etc.) asynchronously or synchronously based on a policy, a service level agreement (SLA), etc. For example, the PLDC <b>516</b> can be instantiated on hardware (e.g., an FPGA configured to implement the PLDC <b>516</b>), software (e.g., an application, a VM, a container, etc., that, when executed and/or instantiated, implements the PLDC <b>516</b>), and/or firmware. In some examples, the PLDC <b>516</b> can be hardware (e.g., circuitry), such as register-transfer level or register-transfer logic (RTL) circuitry, a structured ASIC, etc., and/or any combination(s) thereof. For example, the PLDC <b>516</b> can be embedded into processor circuitry, such as a CPU. In some examples, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can include and/or implement the PLDC <b>516</b>.</p><p id="p-0183" num="0182">In some examples, the PLDC <b>516</b> is executed and/or instantiated as a service, a software task, etc., to obtain SRS data; extract portion(s) of the SRS data; and/or output the portion(s) of the SRS data to the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> and/or an LMF, such as the LMF LE <b>518</b>. In some examples, the location engine circuitry <b>200</b> configures the PLDC <b>516</b> to obtain the SRS data at a specified periodicity based on the policy, the SLA, etc. In some examples, the location engine circuitry <b>200</b> configures the PLDC <b>516</b> to obtain the SRS data at high frequency to ensure that the SRS data is stored prior to being overwritten by subsequently received SRS data. For example, SRS data obtained from a UE can be ephemeral, such as existing in a non-transitory computer- and/or machine-readable medium until new SRS data is received from the UE. For example, the SRS data can become stale and/or otherwise not current in less than 100 m from receipt of the SRS data. Advantageously, the PLDC <b>516</b> can obtain SRS data in accordance with policies, SLAs, etc., representative of time critical applications, such as increased safety or security applications.</p><p id="p-0184" num="0183"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is a second example location determination architecture <b>600</b> based on the Open Radio Access Network (O-RAN) standard. The second location determination architecture <b>600</b> includes an example UE <b>602</b>, an example RU <b>604</b>, an example DU <b>606</b>, an example CU <b>608</b>, an example CN <b>610</b>, an example DN <b>612</b>, example PLDC <b>616</b>, an example near-real-time radio access network intelligent controller (near-RT-RIC) <b>618</b>, and an example service management and orchestration (SMO) service <b>620</b>, which includes an example non-real-time radio access network intelligent controller (non-RT RIC) <b>622</b>. The near-RT-RIC <b>618</b> can include and/or otherwise implement xAPPs, such as a location engine xAPP, a first location-aware xAPP (identified by Location-Aware App1), and a second location-aware xAPP (identified by Location-Aware App2). The SMO service <b>620</b> can include and/or otherwise implement one or more rAPPs such as the non-RT RIC <b>622</b>.</p><p id="p-0185" num="0184">In some examples, the near-RT-RIC <b>618</b> can reside within a telecommunications (telco) edge cloud or regional cloud and is responsible for intelligent edge control of RAN nodes and resources. In some examples, the near-RT-RIC <b>618</b> can control RAN elements and their resources with optimization actions that may typically take 10 m to one second to complete. In some examples, the near-RT-RIC <b>618</b> can receive policy guidance from the non-RT RIC <b>622</b> and can provide policy feedback to the non-RT RIC <b>622</b> through specialized applications referred to as xAPPs.</p><p id="p-0186" num="0185">The non-RT RIC <b>622</b> of the illustrated example is part of the SMO framework <b>620</b>. In some examples, the non-RT RIC <b>622</b> can be centrally deployed in a service provider network to enable non-real time (e.g., greater than 1 second) control of RAN elements and their resources through specialized applications called rAPPs, such as a location determination rAPP. In some examples, the non-RT RIC <b>622</b> communicates with xAPPs running on the near-RT RIC <b>618</b> to provide policy-based guidance for edge control of RAN elements and their resources.</p><p id="p-0187" num="0186">In example operation, the UE <b>602</b> can provide cellular data, such as SRS data, to the RU <b>604</b>. The RU <b>604</b> can provide the cellular data to the DU <b>606</b>, which can implement a vRAN. The PLDC <b>616</b> can obtain the cellular data at a particular or specified frequency, rate, etc., and provide the cellular data to the near-RT-RIC <b>618</b>. The near-RT-RIC <b>618</b> can determine a location of the UE <b>602</b> based on the cellular data. The near-RT-RIC <b>618</b> can provide the location to one(s) of the other xAPPs and/or one(s) of the one or more rAPPs of the SMO service <b>620</b>.</p><p id="p-0188" num="0187"><figref idref="DRAWINGS">FIG. <b>7</b></figref> is a third example location determination architecture <b>700</b>. The third location determination architecture <b>700</b> includes an example UE <b>702</b>, an example next generation radio access network (NG RAN) <b>704</b>, an example next generation core network (NG CN) <b>706</b>, an example DN <b>708</b>, an example LMF <b>710</b>, an example near-RT RIC <b>712</b>, and example location applications <b>714</b>. The NG RAN <b>704</b> includes and/or implements an example RU <b>716</b>, an example DU <b>718</b>, an example CU-UP <b>720</b>, an example CU-CP <b>722</b>. The NG CN <b>706</b> includes and/or implements an example user plane function (UPF) <b>724</b> and an example AMF <b>726</b>. The DU <b>718</b> of the illustrated example implements a gNodeB (gNB) (e.g., a 5G gNB). The DU <b>718</b> includes and/or implements an example L1 interface <b>728</b>, an example PLDC <b>730</b>, and an example L2 interface <b>732</b>. For example, the L1 interface <b>728</b> can be implemented by a physical layer (PHY) (e.g., PHY hardware, PHY circuitry, etc.) that executes and/or instantiates a vRAN. The PLDC <b>730</b> can correspond to a PLDC as disclosed herein, such as the PLDC <b>516</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref> and/or the PLDC <b>616</b> of <figref idref="DRAWINGS">FIG. <b>6</b></figref>. The L2 interface <b>732</b> can be implemented by a MAC layer (e.g., MAC hardware, software, and/or firmware).</p><p id="p-0189" num="0188">The UE <b>702</b> of the illustrated example can correspond to one of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the RU <b>716</b> can correspond to the first networks <b>118</b> and/or the RRUs <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the DU <b>718</b> can correspond to one of the DUs <b>122</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the CU-UP <b>720</b> can correspond to the CU-UP of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the CU-CP <b>722</b> can correspond to the CU-CP of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the NG CN <b>706</b> can correspond to one of the core devices <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the DN <b>708</b> can correspond to the core network <b>106</b> and/or the cloud network <b>107</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the NG RAN <b>704</b>, or portion(s) thereof, can include and/or be implemented by the location engine circuitry <b>200</b>. For example, the RU <b>716</b>, the DU <b>718</b>, the CU-UP <b>720</b>, and/or the CU-CP <b>722</b> can include and/or be implemented by the location engine circuitry <b>200</b>.</p><p id="p-0190" num="0189">In example operation, the LMF <b>710</b> can receive locations requests (e.g., a request for a location of the UE <b>702</b>); configure the NG RAN <b>704</b> and the UE <b>702</b> for positioning; and calculate the location of the UE <b>702</b> based on UE and/or RAN measurements. In some examples, the LMF <b>710</b> receives SRS measurements and/or other information from a gNB, such as a gNB implemented by the NG RAN <b>704</b>, via the AMF <b>726</b>. In some examples, the LMF <b>710</b> can configure the UE <b>702</b> via the DU <b>718</b> to transmit SRS data based on a configuration periodicity and/or transmission comb.</p><p id="p-0191" num="0190">In some examples, the LMF <b>710</b> calculates and/or otherwise determines UE location(s) (e.g., a location of the UE <b>702</b>) using example location techniques disclosed herein, such as UL-TOA, UL-TDOA, UL-AOA, etc., based on data provided by the PLDC <b>730</b>. For example, the UE <b>702</b> can transmit SRS data to the L1 interface <b>728</b>. The L1 interface <b>728</b> can output the SRS data to the PLDC <b>730</b>. The PLDC <b>730</b> can provide the SRS data to at least one of the L2 interface <b>732</b> or the LMF <b>710</b>.</p><p id="p-0192" num="0191">In some examples, the LMF <b>710</b> publishes the location of the UE <b>702</b> to the location applications <b>714</b> (e.g., applications executed and/or instantiated by autonomous driving firmware and/or software, applications executed and/or instantiated by satellite positioning firmware and/or software, etc.) that can consume the location results to effectuate compute workloads (e.g., location-related workloads, AI/ML-related workloads, etc.). Advantageously, the PLDC <b>730</b> can configure a rate at which SRS data is obtained from the UE <b>702</b> and/or a rate at which SRS measurements (e.g., TOA, TDOA, AOA, etc., measurements) based on the SRS data can be available for storage, access, and/or transmission to other hardware, software, and/or firmware. For example, the LMF <b>710</b> can instruct the PLDC <b>730</b> to configure the UE <b>702</b> to transmit data from the UE <b>702</b> to the L1 interface <b>728</b> at a specified rate and/or using a specified configuration.</p><p id="p-0193" num="0192">In example operation, the LMF <b>710</b> can request a location of the UE <b>702</b> from the NG RAN <b>704</b>. The NG RAN <b>704</b> can configure the UE <b>702</b> for SRS transmissions with specific SRS periodicity, transmission comb, number of symbols, etc. The UE <b>702</b> can transmit the SRS data to the DU <b>718</b> via the RU <b>716</b>. The PLDC <b>730</b> can aggregate the SRS data from the DU <b>718</b> that is needed for location of the UE <b>702</b>, such as UE SRS reception angle (e.g., to determine a location based on UL-AOA technique(s)) and/or UE SRS TOA (e.g., to determine a location of the UE <b>702</b> based on UL-TOA and/or UL-TDOA technique(s)). The PLDC <b>730</b> can prioritize, queue, and/or format data and measurements for the location application(s) <b>714</b> via the LMF <b>710</b>. The location application(s) <b>714</b> can consume the location result. The LMF <b>710</b> can produce location report(s), which can include data representative of a location, a predicted location, etc., of the UE <b>702</b>. In some examples, the workflow depicted in the illustrated example can be repeated based on a measurement periodicity specified by the LMF <b>710</b>.</p><p id="p-0194" num="0193"><figref idref="DRAWINGS">FIG. <b>8</b></figref> is an example timing diagram <b>800</b> associated with the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The timing diagram <b>800</b> includes an example UE <b>802</b>, an example RU <b>804</b>, an example L1 interface <b>806</b> (identified by L1), an example DU <b>808</b>, an example PLDC <b>810</b>, and an example location engine (LE) <b>812</b>. In some examples, the RU <b>804</b>, the L1 interface <b>806</b>, the DU <b>808</b>, the PLDC <b>810</b>, and/or the LE <b>812</b> can include and/or be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0195" num="0194">In example operation, the DU <b>808</b> can configure the UE <b>802</b> to provide and/or otherwise transmit SRS data from the UE <b>802</b> to the RU <b>804</b>. In example operation, the UE <b>802</b> can send the SRS data to the L1 interface <b>806</b> via the RU <b>804</b>. In example operation, the L1 interface <b>806</b> can calculate and/or otherwise determine SRS measurements, which can include SNR data, channel quality indicator (CQI) data, etc. For example, CQI data can be <b>4</b>-bit values that indicate the highest modulation and code rate for a received transport block that meets a block error rate target (e.g., a block error rate target of at most 5%, 10%, 15%, etc., which can be estimated by the UE <b>802</b>). In example operation, the UE <b>802</b> can provide L1 raw data to the L1 interface <b>806</b> via the RU <b>804</b>. In example operation, the L1 interface <b>806</b> can aggregate and prioritize at least one of the SRS measurements or the L1 raw data. In example operation, the L1 interface <b>806</b> can provide the at least one of the SRS measurements or the L1 raw data to the PLDC <b>810</b>. In example operation, the PLDC <b>810</b> can format and stage the at least one of the SRS measurements or the L1 raw data for the LE <b>812</b>. In example operation, the LE <b>812</b> can determine a location result based on the at least one of the SRS measurements or the L1 raw data. In example operation, the LE <b>812</b> can output the location result associated with the UE <b>802</b> for access and/or consumption by a logical entity (e.g., hardware, software, and/or firmware).</p><p id="p-0196" num="0195"><figref idref="DRAWINGS">FIG. <b>9</b></figref> is an illustration of an example location determination technique <b>900</b> based on time-of-arrival. In the illustrated example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, an example UE <b>902</b> is in communication with at least one of a first example base station <b>904</b> (identified by BASE STATION #1), a second example base station <b>906</b> (identified by BASE STATION #2), or a third example base station <b>908</b> (identified by BASE STATION #3). In the illustrated example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, each depicted circle can represent possible locations of the UE <b>902</b>. In the illustrated example of <figref idref="DRAWINGS">FIG. <b>9</b></figref>, the intersection of the depicted circles can represent the location of the UE <b>902</b>.</p><p id="p-0197" num="0196">In some examples, the distance (d) between a serving base station (e.g., one of the base stations <b>904</b>, <b>906</b>, <b>908</b>) and the UE <b>902</b> is based on an exact time that a signal was sent (t<sub>sent</sub>) from a source (e.g., the UE <b>902</b>), an exact time a signal arrives (t<sub>arrival</sub>) at the destination (e.g., one of the base stations <b>904</b>, <b>906</b>, <b>908</b>), and the speed at which the signal travels (c=speed of light), which can be represented by the example of Equation (1) below:</p><p id="p-0198" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d=c</i>*(<i>t</i><sub>arrival</sub><i>&#x2212;t</i><sub>sent</sub>), &#x2003;&#x2003;Equation (1)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0199" num="0197">A further consideration is that two-dimensional (2D) (x,y) location as a circle can lead to the example of Equation (2) below:</p><p id="p-0200" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d=</i>&#x221a;{square root over ((<i>x</i>_BS&#x2212;<i>x</i>_UE)<sup>2</sup>+(<i>y</i>_BS&#x2212;<i>y</i>_UE)<sup>2</sup>)}, &#x2003;&#x2003;Equation (2)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0201" num="0198">For example, 2D coordinates (x,y) are planar or Cartesian coordinates. In the example of Equation (2) above, x_BS and y_BS are known because x_BS is the x-coordinate position of a serving base station and y_BS is the y-coordinate position of the serving base station. x_UE and y_UE in the example of Equation (2) above refer to the x- and y-coordinates of the UE <b>902</b>.</p><p id="p-0202" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?><i>d</i>1=&#x221a;{square root over ((<i>x</i>_BS1&#x2212;<i>x</i>_UE)<sup>2</sup>+(<i>y</i>_BS1<i>&#x2212;y</i>_UE)<sup>2</sup>)}, &#x2003;&#x2003;Equation (3)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0203" num="0199">For example, d<b>1</b> in the example of Equation (3) above can correspond to d<b>1</b> of the illustrated example, which is the radius of the 2D circle <b>910</b> that represents possible locations of the UE <b>902</b>. x_BS<b>1</b> and y_BS<b>1</b> of the example of Equation (3) above refer to the known x- and y-coordinates of the first base station <b>904</b>. x_UE and y_UE of the example of Equation (3) above refer to the x- and y-coordinates of the UE <b>902</b>. Similar equations can be generated to determine d<b>2</b> and d<b>3</b> of the illustrated example. In some examples, 2D location can need at least 3 reference points. In some examples, three-dimensional (3D) location can need at least 3 reference points. In some examples, three-dimensional (3D) location can need at least <b>3</b> reference points. For example, the at least 3 reference points can be 3D coordinates, spherical coordinates, N-sphere coordinates, etc.</p><p id="p-0204" num="0200">In some examples, the 2D circle <b>910</b> can be illustrated around the first base station <b>904</b>, which can be repeated for a minimum of three base stations for 2D location determination, four base stations for 3D location determination, etc. The illustrated example of <figref idref="DRAWINGS">FIG. <b>9</b></figref> can require a time synchronization between the UE <b>902</b> and corresponding base stations <b>904</b>, <b>906</b>, <b>908</b> when utilizing TOA techniques as disclosed herein. Advantageously, example TDOA techniques as disclosed herein do not require a time synchronization between the UE <b>902</b> and corresponding base stations <b>904</b>, <b>906</b>, <b>908</b> for location determination.</p><p id="p-0205" num="0201"><figref idref="DRAWINGS">FIG. <b>10</b></figref> is an illustration of an example location determination technique <b>1000</b> based on TDOA. The illustrated example of <figref idref="DRAWINGS">FIG. <b>10</b></figref> depicts an example UE <b>1002</b>, a first example base station <b>1004</b> (identified by BASE STATION #1), a second example base station <b>1006</b> (identified by BASE STATION #2), and a third example base station <b>1008</b> (identified by BASE STATION #3). Each parabola <b>1010</b> depicted in the illustrated example of <figref idref="DRAWINGS">FIG. <b>10</b></figref> can represent possible locations of the UE <b>1002</b>. The intersection of the parabolas <b>1010</b> can represent a location of the UE <b>1002</b>.</p><p id="p-0206" num="0202">Advantageously, the location determination technique <b>1000</b> depicted in the illustrated example of <figref idref="DRAWINGS">FIG. <b>10</b></figref> does not require a time synchronization between the UE <b>1002</b> and the base stations <b>1004</b>, <b>1006</b>, <b>1008</b> because a difference in arrival times (&#x394;t) at different reference points (e.g., two serving base stations) and a speed of transmission (c=speed of light) can yield a difference in distances (&#x394;d) between the UE <b>902</b> and the two reference points, which can be represented by the example of Equation (4) below:</p><p id="p-0207" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d=c</i>*(&#x394;<i>t</i>), &#x2003;&#x2003;Equation (4)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0208" num="0203">Determining a location of the UE <b>1002</b> in 2D yields the example of Equation (5) below:</p><p id="p-0209" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d=</i>&#x221a;{square root over ((<i>X</i><sub>BSA</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BSA</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}&#x2212;&#x221a;{square root over ((<i>X</i><sub>BSB</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BSB</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}, &#x2003;&#x2003;Equation (5)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0210" num="0204">In the example of Equation (5) above, Ad refers to the difference between the UE <b>1002</b> and two reference points (e.g., two of the base stations <b>1004</b>, <b>1006</b>, <b>1008</b>). For example, (X<sub>BSX</sub>, Y<sub>BSX</sub>) and (X<sub>BSC&#x2032;</sub>, Y<sub>BSX&#x2032;</sub>) are the known positions of two serving base stations (base station A (BSA) and base station B (BSB)). In the example of Equation (5) above, (X<sub>UE</sub>, Y<sub>UE</sub>) are the to be determined coordinates for the UE <b>1002</b>.</p><p id="p-0211" num="0205">By way of example, to determine the difference in positions between the UE <b>1002</b> and two serving base stations, such as the first base station <b>1004</b> and the second base station <b>1006</b>, the example of Equation (5) above can be adapted to yield the example of Equation (6) below:</p><p id="p-0212" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS1,BS2</sub>=&#x221a;{square root over ((<i>X</i><sub>BS2</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS2</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}&#x2212;&#x221a;{square root over ((<i>X</i><sub>BS1</sub>&#x2212;X<sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS1</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}, &#x2003;&#x2003;Equation (6)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0213" num="0206">In the example of Equation (6) above, (X<sub>BS1</sub>, Y<sub>BS1</sub>) refer to the known coordinates of the first base station <b>1004</b> and (X<sub>BS2</sub>, Y<sub>BS2</sub>) refer to the known coordinates of the second base station <b>1006</b>. In the example of Equation (6) above, (X<sub>UE</sub>, Y<sub>UE</sub>) refer to the desired coordinates of the UE <b>1002</b>. Similar equations can be generated as depicted in the examples of Equation (7) and Equation (8) below to determine &#x394;d<sub>BS1,BS3 </sub>(e.g., a difference in distances between the UE <b>1002</b> and the first base station <b>1004</b> and the third base station <b>1008</b>) and &#x394;d<sub>BS2,BS3 </sub>(e.g., a difference in distances between the UE <b>1002</b> and the second base station <b>1006</b> and the third base station <b>1008</b>).</p><p id="p-0214" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS1,BS3</sub>=&#x221a;{square root over ((<i>X</i><sub>BS3</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS3</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}&#x2212;&#x221a;{square root over ((<i>X</i><sub>BS1</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS1</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}, &#x2003;&#x2003;Equation (7)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0215" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS2,BS3</sub>=&#x221a;{square root over ((<i>X</i><sub>BS3</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS3</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}&#x2212;&#x221a;{square root over ((<i>X</i><sub>BS2</sub><i>&#x2212;X</i><sub>UE</sub>)<sup>2</sup>&#x2212;(<i>Y</i><sub>BS2</sub><i>&#x2212;Y</i><sub>UE</sub>)<sup>2</sup>)}, &#x2003;&#x2003;Equation (8)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0216" num="0207">In example operation, the UE <b>1002</b> can send an SRS signal at an unknown time to the first base station <b>1004</b> (t<sub>arrival1</sub>) and the second base station <b>1006</b> (t<sub>arrival2</sub>), where Ad of the first base station <b>1004</b> and the second base station <b>1006</b> is &#x394;d<sub>BS1,BS2 </sub>as represented by the example of Equation (9) below:</p><p id="p-0217" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS1,BS2</sub><i>=t</i><sub>arrival1</sub><i>&#x2212;t</i><sub>arrival2</sub>, &#x2003;&#x2003;Equation (9)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0218" num="0208">For example, the location engine circuitry <b>200</b> can determine &#x394;d<sub>BS1,BS2 </sub>based on the TDOA of t<sub>arrival1 </sub>and t<sub>arrival2</sub>. In some examples, the location engine circuitry <b>200</b> can determine (X<sub>UE</sub>, Y<sub>UE</sub>) using the example of Equation (6) above based on determining &#x394;d<sub>BS1,BS2 </sub>(e.g., utilizing the example of Equation (9) above) and (X<sub>BS1</sub>, Y<sub>BS1</sub>) and (X<sub>BS2</sub>, Y<sub>BS2</sub>) being known.</p><p id="p-0219" num="0209">In some examples, the UE <b>1002</b> sends an SRS signal at an unknown time to the first base station <b>1004</b> (t<sub>arrival1</sub>) and the third base station <b>1008</b> (t<sub>arrival3</sub>), where &#x394;d of the first base station <b>1004</b> and the third base station <b>1008</b> is &#x394;d<sub>BS1,BS3 </sub>as represented by the example of Equation (10) below:</p><p id="p-0220" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS1,BS3</sub><i>=t</i><sub>arrival1</sub><i>&#x2212;t</i><sub>arrival3</sub>, &#x2003;&#x2003;Equation (10)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0221" num="0210">For example, the location engine circuitry <b>200</b> can determine Ad<sub>BS1,BS3 </sub>based on the TDOA of t<sub>arrival1 </sub>and t<sub>arrival3</sub>. In some examples, the location engine circuitry <b>200</b> can determine (X<sub>UE</sub>, Y<sub>UE</sub>) using the example of Equation (7) above based on determining &#x394;d<sub>BS1,BS3 </sub>(e.g., utilizing the example of Equation (10) above) and (X<sub>BS1</sub>, Y<sub>BS1</sub>) and (X<sub>BS3</sub>, Y<sub>BS3</sub>) being known.</p><p id="p-0222" num="0211">In some examples, the UE <b>1002</b> can send an SRS signal at an unknown time to the second base station <b>1006</b> (t<sub>arrival2</sub>) and the third base station <b>1008</b> (t<sub>arrival3</sub>), where &#x394;d of the second base station <b>1006</b> and the third base station <b>1008</b> is &#x394;d<sub>BS2,BS3 </sub>represented by the example of Equation (11) below:</p><p id="p-0223" num="0000"><br/><?in-line-formulae description="In-line Formulae" end="lead"?>&#x394;<i>d</i><sub>BS2,BS3</sub><i>=t</i><sub>arrival2</sub><i>&#x2212;t</i><sub>arrival3</sub>, &#x2003;&#x2003;Equation (11)<?in-line-formulae description="In-line Formulae" end="tail"?></p><p id="p-0224" num="0212">For example, the location engine circuitry <b>200</b> can determine &#x394;d<sub>BS2,BS3 </sub>based on the TDOA of t<sub>arrival2 </sub>and t<sub>arrival3</sub>. In some examples, the location engine circuitry <b>200</b> can determine (X<sub>UE</sub>, Y<sub>UE</sub>) using the example of Equation (8) above based on determining &#x394;d<sub>BS2,BS3 </sub>(e.g., utilizing the example of Equation (11) above) and (X<sub>BS2</sub>, Y<sub>BS2</sub>) and (X<sub>BS3</sub>, Y<sub>BS3</sub>) being known.</p><p id="p-0225" num="0213">In some examples, the location engine circuitry <b>200</b> can generate respective ones of the parabolas <b>1010</b> for &#x394;d<sub>BS1,BS2</sub>, &#x394;d<sub>BS1,BS3</sub>, and &#x394;d<sub>BS2,BS3</sub>. In some examples, the location engine circuitry <b>200</b> can determine an intersection of the parabolas <b>1010</b>. In some examples, the location engine circuitry <b>200</b> can determine a location of the UE <b>1002</b> based on the intersection of the parabolas. In some examples, the location engine circuitry <b>200</b> can discard out-of-scope parabolas to achieve improved accuracy and/or reduced noise in the location determination of the UE <b>1002</b>.</p><p id="p-0226" num="0214"><figref idref="DRAWINGS">FIG. <b>11</b></figref> is a block diagram of an example location determination workflow <b>1100</b>. The location determination workflow <b>1100</b> includes an example UE <b>1102</b>, an example RU <b>1104</b>, an example DU and/or CU <b>1106</b>, an example location engine <b>1108</b>, an example location result <b>1110</b>, and an example location application <b>1112</b>. In this example, the DU/CU <b>1106</b> includes and/or implements an example L1 interface, a VRAN, etc., and/or any combination(s) thereof. In this example, the L1/VRAN includes and/or implements an example PLDC <b>1114</b>.</p><p id="p-0227" num="0215">In some examples, the UE <b>1102</b> of the illustrated example can correspond to one of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the RU <b>1104</b> can correspond to the first networks <b>118</b> and/or the RRUs <b>120</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the DU/CU <b>1106</b> can correspond to one(s) of the DUs <b>122</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and/or one(s) of the core devices <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>. In some examples, the DU/CU <b>1106</b> can include and/or implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, or portion(s) thereof. In some examples, the location engine <b>1108</b> can include and/or implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, or portion(s) thereof.</p><p id="p-0228" num="0216"><figref idref="DRAWINGS">FIG. <b>12</b></figref> depicts a first example stage <b>1202</b> of the example location determination workflow <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>. During the first stage <b>1202</b>, the DU/CU <b>1106</b> can aggregate data and measurements, such as RU data, SRS data, and/or L1 data. In some examples, this data aggregation is persistent in memory for a time period necessary to avoid memory copies during measurement and or location determinations. For example, a time period may be bound by specifying the number of 3GPP Transmission Time Interval (TTI) intervals. TTIs are composed of consecutive OFDM symbols in the time domain in a particular transmit direction.</p><p id="p-0229" num="0217">In example operation, the DU/CU <b>1106</b> can obtain data from the RU <b>1104</b>, which can include a number of RUs in communication with the DU/CU <b>1106</b>, an identifier and/or type of the RU <b>1104</b>, a number of receive antennas of the RU <b>1104</b>, a number of subcarriers per symbol, a number of symbols captured, etc. In some examples, the DU/CU <b>1106</b> can obtain SRS data and measurements such as a number of SRS symbols, a number of SRS transmit (TX) and/or receive (RX) antennas, a number of SRS RX ports, an SRS slot and/or frame number, SRS hopping data and/or type, SRS transmission comb data, SRS bandwidth indices, SRS periodicity, SRS power, etc. In some examples, the DU/CU <b>1106</b> can obtain L1 data and measurements such as a UE ID, a UE radio network temporary ID, a UE index, UE doppler shift measurements, UE carrier frequency offset measurements, physical uplink control channel (PUCCH) and physical uplink shared channel (PUSCH) timing advance measurements, mobile country and/or network codes, PHY layer cellular identifiers, subcarrier spacing data, a number of resource blocks in a resource grid, UL and/or DL frequencies, fast-Fourier Transform (FFT) sizes, timing intervals, etc. In some examples, the PLDC <b>1114</b> and/or, more generally, the DU/CU <b>1106</b>, can store at least one of the L1 data and measurements, the SRS data and measurements, or the RU data and measurements in the datastore <b>292</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> as the cellular data <b>294</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0230" num="0218"><figref idref="DRAWINGS">FIG. <b>13</b></figref> depicts a second example stage <b>1302</b> of the example location determination workflow <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>. During the second stage <b>1302</b>, the DU/CU <b>1106</b> prioritizes and/or enqueues data and measurements. In some examples, the DU/CU <b>1106</b> can implement a no-lock data stream based on an atomic data flow. An atomic data flow can refer to one core being allocated (e.g., temporarily allocated, ephemerally allocated, etc.) to process data from one UE. Advantageously, the DU/CU <b>1106</b> can implement the no-lock data stream based on the atomic data flow to preserve UE data flow order. In some examples, the DU/CU <b>1106</b> can implement an atomic data flow in which a portion, a slice, etc., of a workload capability of a compute core can be utilized to process data for a particular UE (e.g., a UE ID).</p><p id="p-0231" num="0219">During the second stage <b>1302</b>, the DU/CU <b>1106</b> can enqueue data for processing by a portion, a slice, etc., of a compute core based on at least one of a UE ID or a priority (e.g., a data priority). Example slices <b>1304</b> of an example compute core <b>1306</b> are depicted. In the illustrated example, the DU/CU <b>1106</b> can obtain first data from a first UE (identified by a UE having a UE identifier of 44), second data from a second UE (identified by a UE having a UE identifier of 56), third data from a third UE (identified by a UE having a UE identifier of 3), and fourth data from a fourth UE (identified by a UE having a UE identifier of 9). In the illustrated example, the first UE can be associated with a low priority (identified by L), the second UE can be associated with a medium priority (identified by M), the third UE can be associated with a high priority (identified by H), and the fourth UE can be associated with a high priority (identified by H). In some examples, the priorities associated with the UEs can be defined and/or included in a policy, such as an SLA. For example, an SLA can include a data association of the UE <b>1102</b> and a data priority of low, medium, or high.</p><p id="p-0232" num="0220">By way of example, assume that the UE <b>1102</b> of <figref idref="DRAWINGS">FIG. <b>13</b></figref> has a UE identifier of 44. In example operation, the UE <b>1102</b> can transmit cellular data to the RU <b>1104</b>. The cellular data can include SRS data (depicted in a first one of the slices <b>1304</b>), the UE identifier of 44, PUCCH data (depicted in a second one of the slices <b>1304</b>), mobile country code (MCC) data (depicted in a third one of the slices <b>1304</b>), and/or FFT data (depicted in a fourth one of the slices <b>1304</b>). The DU/CU <b>1106</b> can obtain the cellular data from the RU <b>1104</b>. The DU/CU <b>1106</b> can determine that the cellular data is from the UE <b>1102</b> based on the UE identifier of 44; determine that the SRS data is to be processed with low priority; and output the SRS data to the PLDC <b>1114</b>. In example operation, the PLDC <b>1114</b> can enqueue the cellular data to a compute core of processor circuitry. For example, after the enqueueing, the compute core can execute and/or instantiate one or more compute tasks on the cellular data, or portion(s) thereof.</p><p id="p-0233" num="0221"><figref idref="DRAWINGS">FIG. <b>14</b></figref> depicts a third example stage <b>1402</b> of the example location determination workflow <b>1100</b> of <figref idref="DRAWINGS">FIG. <b>11</b></figref>. During the third stage <b>1402</b>, the PLDC <b>1114</b> formats and/or dequeues data and measurements. For example, the PLDC <b>1114</b> can format cellular data and/or measurements for a specific location engine. In some examples, the format can be configurable, changeable, programmable, etc. In some examples, the PLDC <b>1114</b> can dequeue the formatted data from a portion, a slice, etc., of a first compute core to a portion, a slice, etc., of a second compute core for further processing. For example, the PLDC <b>1114</b> can dequeue the cellular data from a first compute core. In some examples, after the dequeuing, a second compute core can transmit the dequeued cellular data to other hardware, software, and/or firmware. In some examples, the PLDC <b>1114</b> can dequeue the data based on at least one of a UE ID or a priority (e.g., a data priority).</p><p id="p-0234" num="0222">Example slices <b>1404</b> of an example core <b>1406</b> are depicted. For example, respective ones of the slices <b>1404</b> can include data associated with a respective UE. In some examples, the formatted data can be implemented as one or more location engine specific data packets that cellular data and/or measurements for all or substantially all of the UEs in communication with the RU <b>1104</b>.</p><p id="p-0235" num="0223"><figref idref="DRAWINGS">FIG. <b>15</b></figref> depicts an example implementation of a resource grid <b>1500</b> to implement examples disclosed herein. The resource grid <b>1500</b> includes 14 slots where each slot can correspond to 14 orthogonal frequency-division multiplexing (OFDM) symbols. In some examples, the resource grid <b>1500</b> implements a 3GPP resource grid. In some examples, the resource grid <b>1500</b> can be used to implement a transmission comb technique in which SRS data is transmitted in every alternate (e.g., every even or every odd) subcarrier in an assigned SRS bandwidth. For example, the RU can execute a transmission comb (e.g., transmssionComb) function, which takes values 0 or 1 to inform whether to transmit SRS data in every even or odd subcarrier in the assigned SRS bandwidth. Advantageously, the RU can enable an eNodeB to multiplex two UEs with the same cyclicShift, frequency, and time resources but different transmissionComb (e.g., 0 or 1). For example, the location engine circuitry <b>200</b> as disclosed herein can utilize the resource grid <b>1500</b> to effectuate a transmission comb technique to multiplex multiple UEs to achieve scale in obtaining location data associated with the multiple UEs.</p><p id="p-0236" num="0224"><figref idref="DRAWINGS">FIG. <b>16</b></figref> depicts a first example data management workflow <b>1600</b> to process radio access network data. During the first data management workflow <b>1600</b>, example UEs <b>1602</b> generate SRS data at SRS ports and transmit the SRS data via example antennas <b>1604</b>. The antennas <b>1604</b> of example RUs <b>1606</b> receive the SRS data and provide the SRS data to an example NG RAN <b>1608</b>. In some examples, UE SRS Ports (e.g., SRS PORT 1, SRS PORT 2, etc.) is/are in communication with gNB antenna(s) (e.g., Run-ANT1, Run-ANT2, etc.) with the expected estimated SRS signal. In some examples, the NG RAN <b>1608</b> may select only the strongest TOA signal associated with the SRS data as measured by amplitude per sample number.</p><p id="p-0237" num="0225">The NG RAN <b>1608</b> includes and/or implements an example L1 interface and/or vRAN interface <b>1610</b>, a first example PLDC <b>1612</b>, and an example DU and/or CU <b>1614</b> as disclosed herein. The L1/vRAN interface <b>1610</b> can obtain the SRS data from the RU <b>1606</b>. The first PLDC <b>1612</b> can enqueue data pointers that reference the SRS data to a first core (or portion or slice thereof) of a plurality of compute cores of the DU/CU <b>1614</b>. For example, the first core can process (e.g., extract data of interest, calculate values or parameters based on the SRS data, etc.) the incoming SRS data utilizing a first example data structure <b>1616</b>. The first core of the DU/CU <b>1614</b> can notify the first PLDC <b>1612</b> after the processing (e.g., the pre-processing) is complete. The first PLDC <b>1612</b> can dequeue the data pointers that reference the SRS data from the first core of the DU/CU <b>1614</b>.</p><p id="p-0238" num="0226">The NG RAN <b>1608</b> can output the processed SRS data to an example NG CN <b>1618</b>. The NG CN <b>1618</b> includes an example SMF <b>1620</b> and an example AMF and/or UPF <b>1622</b>. The AMF/UPF <b>1622</b>, and/or, more generally, the NG CN <b>1618</b>, can output the SRS data to an example location engine <b>1624</b>. The location engine <b>1624</b> includes and/or implements an example LMF xAPP <b>1626</b> and a second example PLDC <b>1628</b> as disclosed herein. For example, the first PLDC <b>1612</b> and the second PLDC <b>1628</b> can be instances of each other. In some examples, the first PLDC <b>1612</b> and the second PLDC <b>1628</b> are not instances of each other.</p><p id="p-0239" num="0227">In some examples, the location engine <b>1624</b> is implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. In some examples, the location engine <b>1624</b> can include and/or implement multi-core processor circuitry with a plurality of compute cores. For example, a second core (or portion or slice thereof) of the location engine <b>1624</b> can process (e.g., extract data of interest, calculate values or parameters based on the SRS data, etc.) the SRS data from the NG CN <b>1618</b> by utilizing a second example data structure <b>1630</b>. The location engine <b>1624</b> can provide the processed data, which can include a location of the UEs <b>1602</b> and/or otherwise be used to determine a location of the UEs <b>1602</b>, to the LMF xAPP <b>1626</b>.</p><p id="p-0240" num="0228">In some examples, the first data structure <b>1616</b> and/or the second data structure <b>1630</b> is/are implemented by a linked list data structure or any other type of data structure. For example, a linked list data structure can be implemented by a sequence of links (e.g., data links, cellular data links, etc.) that include datums, items, etc., that are not stored at contiguous memory locations. In some examples, the elements in a linked list are linked and/or otherwise associated using pointers (e.g., data pointers, reference pointers, etc.). In some examples, each link in the linked-list data structure can include a connection or coupling to one or more other links in the linked-list data structure. In some examples, the linked-list data structure can be a random access data structure, such as a linear collection of data elements whose order is not given by their physical placement in storage (e.g., memory, mass storage, etc.).</p><p id="p-0241" num="0229">In some examples, the NG RAN <b>1608</b> can aggregate (i) UE data (e.g., L1 physical network layer data, L1 configurations, etc.) on a per-UE basis and/or (ii) ephemeral SRS measurements (e.g., data indicative of results of SRS signals from several antennas from one or more base stations). In some examples, the LMF xAPP <b>1626</b> can configure and/or otherwise set location measurement periodicity and quality level of location requests. In some examples, the LMF xAPP <b>1626</b> can prioritize accuracy over latency or vice versa. For example, the first PLDC <b>1612</b> (identified by PLDC PRODUCER) and/or the second PLDC <b>1628</b> (identified by PLDC CONSUMER) can wait (e.g., add latency) for SRS measurements to arrive from physically diverse antennas from different base stations that may take more time (e.g., one or more m) and thereby stall data aggregation.</p><p id="p-0242" num="0230">In some examples, the NG RAN <b>1608</b> can utilize the first data structure <b>1616</b> to implement per-UE queueing of UE data and measurement set as per LMF/xAPP policy (e.g., high priority, medium priority, low priority, etc.). For example, a group of UEs can be assigned high priority because there may be a safety concern associated with the group of UEs and thereby the location of the group of UEs may need to be prioritized above other UEs in communication with the controlling base station (e.g., the RU <b>1606</b>). In some examples, one UE data set can produce data and/or measurements specific to a particular base station antenna. For example, if the RU <b>1606</b> has four antennas then there may be at least four sets of SRS measurements at the RU <b>1606</b> resulting from the transmissions from the UE <b>1602</b> hitting the different antennas of the same RU <b>1606</b>. For example, the four antennas can be physically separated so the SRS measurements at each antenna are different and thusly create antenna diversity measurements data for the UE <b>1602</b>. For example, one UE (e.g., the UE <b>1602</b>) in communication with a four antenna base station (e.g., the RU <b>1606</b>) can have up to four ephemeral data and/or measurement sets that are to be transmitted before the data and/or measurement sets become stale and/or otherwise not current or usable. In some examples, location determination of the UE <b>1602</b> can be determined based on a measurement periodicity configured by the LMF xAPP <b>1626</b>.</p><p id="p-0243" num="0231">In some examples, the second PLDC <b>1628</b> can request a location packet (e.g., a location engine packet, a location engine data packet, etc.) that is to be formatted per UE. For example, each location packet can be specific to a particular location engine interface, organization, etc. In some examples, queueing, dequeuing, and/or formatting of a location packet can be different based on the type and/or configuration of the LMF xAPP <b>1626</b>. For example, a request from location engine #2 (identified by LOCATION ENGINE #2 REQ <b>22</b>) as depicted in the illustrated example of <figref idref="DRAWINGS">FIG. <b>16</b></figref> can be TDOA-based. For example, the location packet prepared for that UE can be created by a header describing the configuration of the L1 data (e.g., SRS periodicity) and then concatenating (e.g., formatting) the location packet with all (or substantial portion(s) thereof) associated with that UE related to TDOA.</p><p id="p-0244" num="0232">By way of another example, a request from a different location engine such as a request from location engine #5 (identified by LOCATION ENGINE #5 REQ 84) can be angle-based. For example, the location packet prepared for that UE can be created by a header describing the configuration of the L1 data (e.g., SRS periodicity) and then concatenating (e.g., formatting) the location packet with all (or substantial portion(s) thereof) associated with that UE related to AOA.</p><p id="p-0245" num="0233"><figref idref="DRAWINGS">FIG. <b>17</b>A</figref> is a block diagram of a second example data management workflow <b>1700</b> to determine a location of an object in a terrestrial environment. The second data management workflow <b>1700</b> includes example UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> and example multi-core processor circuitry <b>1708</b>. The UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> includes first example UE data <b>1702</b> generated by a first UE having a first UE identifier (identified by UE #1 ID), second example UE data <b>1704</b> generated by a second UE having a second UE identifier (identified by UE #2 ID), third example UE data <b>1706</b> generated by a third UE having a third UE identifier (identified by UE #N ID), fourth example UE data <b>1707</b> generated by a fourth UE having a fourth UE identifier (identified by UE #37 ID), and fifth example UE data <b>1709</b> generated by a fifth UE having a fifth UE identifier (identified by UE #89 ID). For example, the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> can include L1 SRS location data.</p><p id="p-0246" num="0234">In some examples, the multi-core processor circuitry <b>1708</b> can be implemented by a CPU, a DSP, a GPU, an FPGA, an Infrastructure Processing Unit (IPU), network interface circuitry (NIC) (e.g., a smart NIC), an XPU, etc., or any other type of processor circuitry. The multi-core processor circuitry <b>1708</b> includes a plurality of example cores <b>1710</b>, <b>1712</b>, which include an example receiver or receive (RX) core <b>1710</b> and an example transmitter or transmit (TX) core <b>1712</b>. The multi-core processor circuitry <b>1708</b> includes example DLB circuitry <b>1714</b>. For example, the DLB circuitry <b>1714</b> can dynamically balance workload(s) across one(s) of one or more second example cores <b>1722</b>. In some examples, one or more instances of the DLB circuitry <b>1714</b> can be included in respective ones of the cores <b>1710</b>, <b>1712</b>. For example, a core of the multi-core processor circuitry <b>1708</b> can include one or more instances of the DLB circuitry <b>1714</b> in an uncore region associated with the core. In some examples, the DLB circuitry <b>1714</b> can correspond to at least one of the first PLDC <b>1612</b> or the second PLDC <b>1628</b> of <figref idref="DRAWINGS">FIG. <b>16</b></figref>.</p><p id="p-0247" num="0235">In some examples, the RX core <b>1710</b> can implement a first example ring buffer <b>1716</b>. In some examples, the TX core <b>1712</b> can implement a second example ring buffer <b>1718</b>. In example operation, one or more first example cores <b>1720</b>, which include the RX core <b>1710</b>, can receive the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> from UEs. In some examples, the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> can be cleartext, ciphertext, etc. In some examples, the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> can be transmitted in 512 byte packets. Alternatively, the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> may be transmitted in any other byte sized packets and/or data forma. The one or more first cores <b>1720</b> can extract data of interest (e.g., extract subset(s) or portion(s) of the data) from the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>, such as the L1 SRS location data. In some examples, the one or more first cores <b>1720</b> can store the extracted data in the first ring buffer <b>1716</b>. For example, the one or more first cores <b>1720</b> can extract L1 SRS location data from the first UE data <b>1702</b> and add and/or insert the extracted L1 SRS location data into the first ring buffer <b>1716</b>. Advantageously, the RX core <b>1710</b> can extract subset(s) of incoming data based on a UE identifier.</p><p id="p-0248" num="0236">In example operation, the one or more first cores <b>1720</b> can generate queue events corresponding to respective ones of the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>. For example, the one or more first cores <b>1720</b> can generate a first queue event including the first UE identifier, a second queue event including the second UE identifier, and a third queue event including the third UE identifier. In some examples, the queue events can be implemented by an array of data. Alternatively, the queue events may be implemented by any other data structure. In some examples, the queue events can include data pointers that reference respective locations in memory at which the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> is stored. For example, the first queue event can include a first data pointer that corresponds to a memory address, a range of memory addresses, etc., at which the first UE data <b>1702</b>, or portion(s) thereof, are stored. The one or more first cores <b>1720</b> can enqueue the first through third queue events into the DLB circuitry <b>1714</b>. For example, the one or more first cores <b>1720</b> can enqueue the first through third queue events into hardware-managed queues (e.g., portion(s) of memory). In some examples, the DLB circuitry <b>1714</b> can select one of the identifiers to process based on a priority value, which may be included in the queue events.</p><p id="p-0249" num="0237">In example operation, the DLB circuitry <b>1714</b> can dequeue the first through third queue events to one or more of the second cores <b>1722</b> (cores identified by UE1, UE2, UEN), which can implement worker cores. The one or more second cores <b>1722</b> can execute computational task(s), operation(s), etc., on the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> associated with the respective dequeued queue events. For example, the one or more second cores <b>1722</b> can execute a cryptographic, encryption, etc., task (e.g., an IPsec task) on the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>. In response to completing the task(s), the one or more second cores <b>1722</b> can enqueue the queue events back to the DLB circuitry <b>1714</b>. For example, the DLB circuitry <b>1714</b> can reorder and/or otherwise re-assemble the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b> (e.g., data packets that include and/or otherwise implement the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>). In example operation, the DLB circuitry <b>1714</b> can dequeue the queue events to the TX core <b>1712</b>, which can cause the TX core <b>1712</b> to transmit the reordered and/or reassembled data packets (e.g., encrypted data packets) to different hardware, software, and/or firmware. In some examples, the TX core <b>1712</b> can provide the data packets to the second ring buffer <b>1718</b>. In some examples, the data included in the second ring buffer <b>1718</b> can include less data than data originally inserted in the first ring buffer <b>1716</b>. For example, UE #1 SRS data in the first ring buffer <b>1716</b> can include a first quantity of L1 SRS location data (e.g., a first number of parameters, a first number of bits, etc.) and UE #1 SRS subset in the second ring buffer <b>1718</b> can include a second quantity of L1 SRS location data less than the first quantity.</p><p id="p-0250" num="0238">In some examples, the TX core <b>1712</b> can transmit the data packets from the second ring buffer <b>1718</b> to the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. For example, the location engine circuitry <b>200</b> can execute the ML model(s) <b>296</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> utilizing the data packets as ML input(s) to generate ML output(s), which can include locations of the UEs that generated the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>. In some examples, the TX core <b>1712</b> can provide the data packets from the second ring buffer <b>1718</b> to the first ring buffer <b>1716</b>. For example, the data packets can be provided from the first ring buffer <b>1716</b> to the UEs that generated the UE data <b>1702</b>, <b>1704</b>, <b>1706</b>, <b>1707</b>, <b>1709</b>.</p><p id="p-0251" num="0239">In example operation, the multi-core processor circuitry <b>1708</b> can obtain first cellular data from a first antenna of a base station and second cellular data from a second antenna of the base station. For example, the first cellular data can be first UE #1 L1 SRS location data received at a first antenna of a base station from a UE and the second cellular data can be second UE #1 L1 SRS location data received at a second antenna of the same base station.</p><p id="p-0252" num="0240">In example operation, the multi-core processor circuitry <b>1708</b> can store the first cellular data in a first linked list, such as a first portion identified by UE #1 SRS Subset in the first ring buffer <b>1716</b>, which can be stored in memory associated with the multi-core processor circuitry <b>1708</b>. In example operation, the multi-core processor circuitry <b>1708</b> can store the second cellular data in a second linked list, such as a second portion of the first ring buffer <b>1716</b> (e.g., the first ring buffer <b>1716</b> can include multiple slices with each slice corresponding to SRS data from the UE). In some examples, the first linked list is associated with the first antenna and the second linked list is associated with the second antenna.</p><p id="p-0253" num="0241">In example operation, the location engine circuitry <b>200</b> can determine a location of the UE based on at least one of the first cellular data or the second cellular data. For example, the RX core <b>1710</b> can enqueue a first data pointer that references UE #1 L1 SRS Location data stored in memory in the first linked list, which can be included in and/or implemented by the DLB circuitry <b>1714</b>. The DLB circuitry <b>1714</b> can dequeue the first data pointer to the one or more second cores <b>1722</b>. The one or more second cores <b>1722</b> can determine TOA data, TDOA data, and/or AOA data based on the UE #1 L1 SRS Location data. After the determination(s), the one or more second cores <b>1722</b> can provide the first data pointer back to the DLB circuitry <b>1714</b>. For example, the first data pointer can reference the TOA data, the TDOA data, and/or the AOA data stored in memory associated with the multi-core processor circuitry <b>1708</b>. Additionally or alternatively, the one or more second cores <b>1722</b> can provide a second data pointer to the DLB circuitry <b>1714</b>. For example, the second data pointer can reference the TOA data, the TDOA data, and/or the AOA data stored in memory associated with the multi-core processor circuitry <b>1708</b>. In some examples, the DLB circuitry <b>1714</b> can store the first data pointer and/or the second data pointer in a third linked list, such as a slice of the second ring buffer <b>1718</b> identified by UE #1 SRS Subset. In some examples, the location engine circuitry <b>200</b> can access the TOA data, the TDOA data, and/or the AOA data based on the first data pointer (e.g., accessing memory location(s) identified by the first data pointer) and/or the second data pointer (e.g., accessing memory location(s) identified by the second data pointer). In some examples, the location engine circuitry <b>200</b> can determine a location of the UE based on the TOA data, the TDOA data, and/or the AOA data. In some examples, the location engine circuitry <b>200</b> can determine the location with an accuracy of one meter or less, one centimeter or less, etc. In some examples, the multi-core processor circuitry <b>1708</b> can obtain the first cellular data at a first time, obtain the second cellular data at a second time, and determine the location at a third time. In some examples, a time duration based on a difference between the third time and the first time or the second time is ten or less milliseconds, twenty or less milliseconds, etc.</p><p id="p-0254" num="0242">In some examples, the multi-core processor circuitry <b>1708</b> and/or the location engine circuitry <b>200</b> can obtain at least one of the first cellular data or the second cellular data based on Intel&#xae; FLEXRAN&#x2122; Reference Architecture. In some examples, the multi-core processor circuitry <b>1708</b> and/or the location engine circuitry <b>200</b> can store the at least one of the first cellular data or the second cellular data based on Intel&#xae; FLEXRAN&#x2122; Reference Architecture.</p><p id="p-0255" num="0243">In some examples, the multi-core processor circuitry <b>1708</b> and/or the location engine circuitry <b>200</b> can determine the location based on Intel&#xae; FLEXRAN&#x2122; Reference Architecture.</p><p id="p-0256" num="0244">In some examples, the multi-core processor circuitry <b>1708</b> can aggregate a plurality of cellular data sets associated with a UE using a linked list. For example, the first ring buffer <b>1716</b> and/or the second ring buffer <b>1718</b> can include multiple slices, each of which can be associated with the same UE. For example, the first ring buffer <b>1716</b> can include multiple UE #1 SRS Subset slices, where a first slice (e.g., a first data slice, a first portion, a first data portion, a first data buffer portion, etc.) can be first SRS data received by a first antenna of a first base station, a second slice can be second SRS data received by a second antenna of the first base station or a different base station, etc.</p><p id="p-0257" num="0245">In some examples, the multi-core processor circuitry <b>1708</b> can identify respective priorities of portions of the plurality of cellular data sets with a linked list associated with a UE. For example, each slice of the first ring buffer <b>1716</b> and/or the second ring buffer <b>1718</b> can have a different data or data handling priority, processing priority, etc.</p><p id="p-0258" num="0246">In some examples, the multi-core processor circuitry <b>1708</b> can format the portions of the plurality of cellular data sets from a first data format to a second data format with a linked list. For example, cellular data stored in the first ring buffer <b>1716</b> can have a first data format and cellular data stored in the second ring buffer <b>1718</b> can have a second data format different from the first data format. In some examples, the second data format is based on a type of measurement engine and/or location engine utilized to determine a location of a UE. In some examples, cellular data can be converted from the first data format into the second data format when moved from the first ring buffer <b>1716</b> to the second ring buffer <b>1718</b>. In some examples, cellular data can be converted from the second data format into the first data format when moved from the second ring buffer <b>1718</b> to the first ring buffer <b>1716</b>.</p><p id="p-0259" num="0247">In some examples, the multi-core processor circuitry <b>1708</b> can generate a location engine packet based on the portions of the plurality of cellular data sets in the second data format, and the location of the UE can be based on the location engine packet. For example, the location engine circuitry <b>200</b> can obtain cellular data from the second ring buffer <b>1718</b> in the second data format; generate a location engine packet including the cellular data in the second data format; and determine a location of the UE based on the location engine packet. In some examples, the location engine packet can be a data packet that can be transmitted to an electronic device, a UE, etc. In some examples, the location engine packet can be consumed by an application and/or a service. For example, the location engine circuitry <b>200</b> can generate a GUI after a consumption (e.g., execution of an application and/or a service based on data included in the location engine packet) of the location engine packet.</p><p id="p-0260" num="0248"><figref idref="DRAWINGS">FIG. <b>17</b>B</figref> is an example workflow <b>1730</b> to enqueue and/or dequeue data using the dynamic load balancers of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. The workflow <b>1730</b> of the illustrated example of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref> includes first example DLB circuitry <b>1732</b> and second example DLB circuitry <b>1734</b>. In some examples, the first DLB circuitry <b>1732</b> and/or the second DLB circuitry <b>1734</b> can implement the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b></figref>. In some examples, the first DLB circuitry <b>1732</b> and/or the second DLB circuitry <b>1734</b> can implement the parser circuitry <b>420</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>, or portion(s) thereof. In some examples, the first DLB circuitry <b>1732</b> and/or the second DLB circuitry <b>1734</b> can implement the first ring buffer <b>1716</b> and/or the second ring buffer <b>1718</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0261" num="0249">The workflow <b>1730</b> of the illustrated example includes first example producer cores <b>1736</b> and second example producer cores <b>1738</b> that are in communication with a respective one of the DLB circuitry <b>1732</b>, <b>1734</b>. For example, the first producer cores <b>1736</b> and/or the second producer cores <b>1738</b> can be cores of multi-core processor circuitry as disclosed herein, such as the one or more first cores <b>1720</b> and/or the RX core <b>1710</b> of the multi-core processor circuitry <b>1708</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. In this example, first example consumer cores <b>1740</b> and second example consumer cores <b>1742</b> are in communication with a respective one of the DLB circuitry <b>1732</b>, <b>1734</b>. For example, the first consumer cores <b>1740</b> and/or the second consumer cores <b>1742</b> can be cores of multi-core processor circuitry as disclosed herein, such as the one or more second cores <b>1722</b> of the multi-core processor circuitry <b>1708</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0262" num="0250">In some examples, fewer or more than instances of the DLB circuitry <b>1732</b>, <b>1734</b> and/or fewer or more than the producer cores <b>1736</b>, <b>1738</b> and/or consumer cores <b>1740</b>, <b>1742</b> depicted in the illustrated example may be used. In this example, there is no cross-device arbitration (e.g., DEVICE 0 does not arbitrate for DEVICE N), however, in other examples, there may be cross-device arbitration.</p><p id="p-0263" num="0251">In some examples, the DLB circuitry <b>1732</b>, <b>1734</b> correspond to a hardware-managed system of queues (e.g., hardware-implemented queues, hardware-implemented data queues, etc.) and arbiters (e.g., hardware-implemented arbiters) that link the producer cores <b>1736</b>, <b>1738</b> and the consumer cores <b>1740</b>, <b>1742</b>. In some examples, one or both of the DLB circuitry <b>1732</b>, <b>1734</b> can be a PCI or PCI-E device in processor circuitry. For example, one or both of the DLB circuitry <b>1732</b>, <b>1734</b> can be an accelerator (e.g., a hardware accelerator) included either in processor circuitry or in communication with the processor circuitry.</p><p id="p-0264" num="0252">The DLB circuitry <b>1732</b>, <b>1734</b> of the illustrated example includes example reorder logic circuitry <b>1744</b>, example queueing logic circuitry <b>1746</b>, and example arbitration logic circuitry <b>1748</b>. In this example, the reorder logic circuitry <b>1744</b>, the queueing logic circuitry <b>1746</b>, and/or the arbitration logic circuitry <b>1748</b> can be implemented with hardware. In some examples, the reorder logic circuitry <b>1744</b>, the queueing logic circuitry <b>1746</b>, and/or the arbitration logic circuitry <b>1748</b> can be implemented by hardware, software, firmware and/or any combination of hardware, software and/or firmware. In some examples, the reorder logic circuitry <b>1744</b>, the queueing logic circuitry <b>1746</b>, and/or the arbitration logic circuitry <b>1748</b> can implement the first ring buffer <b>1716</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. In some examples, the reorder logic circuitry <b>1744</b>, the queueing logic circuitry <b>1746</b>, and/or the arbitration logic circuitry <b>1748</b> can implement the second ring buffer <b>1718</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0265" num="0253">In example operation, the reorder logic circuitry <b>1744</b> can obtain data from one or more of the producer cores <b>1736</b>, <b>1738</b> and facilitate reordering operations. For example, the reorder logic circuitry <b>1744</b> can inspect a data pointer from one of the producer cores <b>1736</b>, <b>1738</b>. In some examples, the data pointer can be associated with wireless data, or portion(s) thereof. For example, the data pointer can reference a UE identifier, such as UE #1 of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>, and/or, more generally, wireless data associated with the UE identifier. In some examples, the reorder logic circuitry <b>1744</b> can determine that the data pointer is associated with a known data sequence. In some examples, the producer cores <b>1736</b>, <b>1738</b> can enqueue the data pointer with the queueing logic circuitry <b>1746</b> because the data pointer is not associated with a known data flow and may not be needed to be reordered and/or otherwise processed by the reorder logic circuitry <b>1744</b>.</p><p id="p-0266" num="0254">In some examples, the reorder logic circuitry <b>1744</b> stores the data pointer and other data pointers associated with data packets in the known data flow in a buffer (e.g., a ring buffer, a first-in first-out (FIFO) buffer, etc.) until a portion of or an entirety of the data pointers in connection with the known data flow are obtained and/or otherwise identified. The reorder logic circuitry <b>1744</b> can transmit the data pointers to one or more of the queues maintained by the queueing logic circuitry <b>1746</b> to maintain an order of the known data sequence. For example, the queues can store the data pointers as queue elements (QEs).</p><p id="p-0267" num="0255">The queueing logic circuitry <b>1746</b> of the illustrated example implements a plurality of queues (e.g., hardware-implemented queues, hardware-implemented data queues, etc.) or buffers (e.g., hardware-implemented buffers, hardware-implemented data buffers, etc.) to store data pointers or other information. In some examples, the queueing logic circuitry <b>1746</b> transmits data pointers in response to filling an entirety of the queue(s). In some examples, the queueing logic circuitry <b>1746</b> transmits data pointers from one or more of the queues to the arbitration logic circuitry <b>1748</b> on an asynchronous or synchronous basis.</p><p id="p-0268" num="0256">In some examples, the arbitration logic circuitry <b>1748</b> can be configured and/or instantiated to perform an arbitration by selecting a given one of the consumer cores <b>1740</b>, <b>1742</b>. For example, the arbitration logic circuitry <b>1748</b> can implement one or more arbiters, sets of arbitration logic circuitry (e.g., first arbitration logic circuitry, second arbitration logic circuitry, etc.), etc., where each of the one or more arbiters, each of the sets of arbitration logic circuitry, etc., can correspond to a respective one of the consumer cores <b>1740</b>, <b>1742</b>. In some examples, the arbitration logic circuitry <b>1748</b> is based on consumer readiness (e.g., a consumer core having space available for an execution or completion of a task), task availability, etc. In example operation, the arbitration logic circuitry <b>1748</b> transmits and/or otherwise facilitates a passage of data pointers from the queueing logic circuitry <b>1746</b> to example consumer queues <b>1750</b>.</p><p id="p-0269" num="0257">In example operation, the consumer cores <b>1740</b>, <b>1742</b> are in communication with the consumer queues <b>1750</b> to obtain data pointers for subsequent processing. In some examples, a length (e.g., a data length) of one or more of the consumer queues <b>1750</b> are programmable and/or otherwise configurable. In some examples, the DLB circuitry <b>1732</b>, <b>1734</b> generate an interrupt (e.g., a hardware interrupt) to one(s) of the consumer cores <b>1740</b>, <b>1742</b> in response to a status, a change in status, etc., of the consumer queues <b>1750</b>. Responsive to the interrupt, the one(s) of the consumer cores <b>1740</b>, <b>1742</b> can retrieve the data pointer(s) from the consumer queues <b>1750</b>.</p><p id="p-0270" num="0258">The DLB circuitry <b>1732</b>, <b>1734</b> of the illustrated example can check a status (e.g., full, not full, not empty, etc.) of the consumer queues <b>1750</b>. In some examples, the DLB circuitry <b>1732</b>, <b>1734</b> can track fullness of the consumer queues <b>1750</b> by observing enqueues on an associated producer port (e.g., a hardware port) of the DLB circuitry <b>1732</b>, <b>1734</b>. For example, in response to each enqueueing, the DLB circuitry <b>1732</b>, <b>1734</b> can determine that a corresponding one of the consumer cores <b>1740</b>, <b>1742</b> has completed work on a QE and, thus, a location of the QE is now available in the queues maintained by the queueing logic circuitry <b>1746</b>. For example, a format of the QE can include a bit (e.g., a data bit) that is indicative whether a consumer queue token, which can represent a location of the QE in the consumer queues <b>1750</b>, is being returned. In some examples, new enqueues that are not completions of prior dequeues do not return consumer queue tokens because there is no associated entry in the consumer queues <b>1750</b>.</p><p id="p-0271" num="0259"><figref idref="DRAWINGS">FIG. <b>17</b>C</figref> depicts an example implementation of the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and/or the DLB circuitry <b>1732</b>, <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. The illustrated example of <figref idref="DRAWINGS">FIG. <b>17</b>C</figref> depicts a first example system-on-a-chip (SoC) <b>1760</b>. For example, the first SoC <b>1760</b> can be processor circuitry implemented by a semiconductor package including a plurality of example semiconductor tiles (or dies) <b>1761</b>. In some examples, the first SoC <b>1760</b> can implement the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>, the first DLB circuitry <b>1732</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>, and/or the second DLB circuitry <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. The first SoC <b>1760</b> includes a plurality of example cores <b>1762</b>, example mesh circuitry (e.g., mesh fabric circuitry) <b>1764</b>, example memory channels <b>1766</b>, <b>1768</b>, example memory controllers <b>1770</b>, Ultra Path Interconnects (UPIs) <b>1772</b>, example PCIe interconnects <b>1774</b>, example accelerators <b>1776</b>, and example mesh stops <b>1778</b>.</p><p id="p-0272" num="0260">The accelerators <b>1776</b> of the illustrated example can be implemented by one or more Data Streaming Accelerators (DSAs) (e.g., one or more DSAs provided by Intel&#xae;), one or more Analytics Accelerators (e.g., one or more Intel Analytics Accelerators (IAX) provided by Intel&#xae;), one or more QuickAssist Technology (QAT) accelerators (e.g., one or more QAT accelerators provided by Intel&#xae;), and/or one or more instances of DLB circuitry as disclosed herein, etc. In some examples, the accelerators <b>1776</b> can be implemented by the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>, the first DLB circuitry <b>1732</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>, and/or the second DLB circuitry <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. For example, the DLB circuitry of the accelerators <b>1776</b> can implement uncore accelerators because the DLB circuitry is in an uncore region of the first SoC <b>1760</b>. Advantageously, in some examples, the cores <b>1762</b> can offload scheduling tasks to the DLB circuitry of the accelerators <b>1776</b> to increase the availability of the cores <b>1762</b> for other high-value added application workload processing, such as AI/ML application workload processing.</p><p id="p-0273" num="0261"><figref idref="DRAWINGS">FIG. <b>17</b>D</figref> depicts another example implementation of the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and/or the DLB circuitry <b>1732</b>, <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. The illustrated example of <figref idref="DRAWINGS">FIG. <b>17</b>D</figref> depicts a second example SoC <b>1780</b>. For example, the second SoC <b>1780</b> can be processor circuitry implemented by a semiconductor package, which may be implemented as a single semiconductor tile or die. Alternatively, the second SoC <b>1780</b> may be implemented by more than one tile or die. In some examples, the second SoC <b>1780</b> can implement the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>, the first DLB circuitry <b>1732</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>, and/or the second DLB circuitry <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. The second SoC <b>1780</b> includes a plurality of example cores <b>1782</b>, example mesh circuitry (e.g., mesh fabric circuitry) <b>1784</b>, example memory channels <b>1786</b>, <b>1788</b>, example memory controllers <b>1790</b>, example UPIs <b>1792</b>, example PCIe interconnects <b>1794</b>, example accelerators <b>1796</b>, and example mesh stops <b>1798</b>.</p><p id="p-0274" num="0262">The accelerators <b>1796</b> of the illustrated example can be implemented by one or more DSAs (e.g., one or more DSAs provided by Intel&#xae;), one or more Analytics Accelerators (e.g., one or more IAX provided by Intel&#xae;), one or more QAT accelerators (e.g., one or more QAT accelerators provided by Intel&#xae;), and/or one or more instances of DLB circuitry as disclosed herein. The cores <b>1782</b> of the illustrated example share the same one(s) of the accelerators <b>1796</b> while one or more of the cores <b>1762</b> of <figref idref="DRAWINGS">FIG. <b>17</b>C</figref> access their own respective accelerators <b>1776</b>.</p><p id="p-0275" num="0263">In some examples, the accelerators <b>1796</b> can be implemented by the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>, the first DLB circuitry <b>1732</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>, and/or the second DLB circuitry <b>1734</b> of <figref idref="DRAWINGS">FIG. <b>17</b>B</figref>. The DLB circuitry of the accelerators <b>1796</b> can implement uncore accelerators because the DLB circuitry is in an uncore region of the second SoC <b>1780</b>. Advantageously, in some examples, the cores <b>1782</b>, can offload scheduling tasks to the DLB circuitry of the accelerators <b>1796</b> to increase the availability of the cores <b>1782</b> for other high-value added application workload processing, such as AI/ML application workload processing.</p><p id="p-0276" num="0264"><figref idref="DRAWINGS">FIG. <b>18</b></figref> depicts a third example data management workflow <b>1800</b> to process radio access network data. The third data management workflow <b>1800</b> includes a first example data structure <b>1802</b> and a second example data structure <b>1804</b>. In example operation, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can store data from a UE and/or RU and/or L1 (e.g., an L1 interface) <b>1806</b> in the first data structure <b>1802</b>. For example, the data can be TOA data in three nanoseconds (ns) steps or any other step size. Additionally or alternatively, the data may be TDOA data and/or AOA data.</p><p id="p-0277" num="0265">In the illustrated example, the first data structure <b>1802</b> can store data associated with <b>100</b> UEs, although any other number of UEs are contemplated. In the illustrated example, there are four gNB per UE, although any other number gNBs per UE are contemplated. In the illustrated example, the measurement frequency and/or the sampling frequency is 60 Megahertz (MHz) with <b>16</b> reference blocks (RBs) (e.g., 1 RB can be equivalent to 12 subcarriers in the frequency domain at a specified frequency) per UE, although any other frequency and/or number of RB per UE is contemplated. In the illustrated example, the observation frequency is every 100 milliseconds (ms) although any other observation frequency is contemplated. In some examples, the observation frequency can implement measurement periodicities as disclosed herein.</p><p id="p-0278" num="0266">In example operation, an LMF as disclosed herein can obtain the data from the first data structure <b>1802</b> and determine a location using TDOA techniques based on the TOA data. In example operation, an LMF as disclosed herein can store the location in the second data structure <b>1804</b>. In example operation, the location can be provided to the first data structure <b>1802</b> and/or to an example application <b>1810</b> (identified by APP) (e.g., a location request application, a location determination application, an IoT application, an application associated with one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, etc.).</p><p id="p-0279" num="0267"><figref idref="DRAWINGS">FIG. <b>19</b></figref> is an example timing diagram <b>1900</b> to process cellular data. The timing diagram <b>1900</b> includes an example UE <b>1902</b>, an example gNB <b>1904</b>, an example LMF LE <b>1906</b>, and an example application <b>1908</b>. In some examples, the LMF LE <b>1906</b> can include and/or implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. At a first time (identified by T<b>1</b>) of the timing diagram <b>1900</b>, the UE <b>1902</b> transmits SRS and/or L1 data to example gNBs <b>1904</b>, which can include gNB1, gNB2, and gNB3. The gNBs <b>1904</b> receive the SRS and/or L1 data at a second time (identified by T<b>2</b>). The time-of-flight (TOF) of the SRS and/or L1 data is a time difference between the first time and the second time.</p><p id="p-0280" num="0268">At a third time (identified by T<b>3</b>) of the timing diagram <b>1900</b>, the gNBs <b>1904</b> process the SRS and/or L1 data using a first example data structure <b>1910</b>. For example, the UE <b>1902</b> can transmit at the first time the SRS and/or L1 data to a first antenna of gNB1 (identified by gNB1), a second antenna of gNB2 (identified by gNB2), and a third antenna of gNB3 (identified by gNB3). In some examples, the gNBs <b>1904</b> can receive the SRS and/or L1 data at the second time. In some examples, the gNBs <b>1904</b> can store the SRS and/or L1 data associated with the three antennas in the first data structure <b>1910</b> at the third time.</p><p id="p-0281" num="0269">At a fourth time (identified by T<b>4</b>) of the timing diagram <b>1900</b>, the LMF LE <b>1906</b> determines a first time-of-flight (TOF) (identified by TOF<b>1</b>) based on the SRS and/or L1 data received at gNB1. At a fifth time (identified by T<b>5</b>) of the timing diagram <b>1900</b>, the LMF LE <b>1906</b> determines a second TOF (identified by TOF<b>2</b>) based on the SRS and/or L1 data received at gNB2. At a sixth time (identified by T<b>6</b>) of the timing diagram <b>1900</b>, the LMF LE <b>1906</b> determines a third TOF (identified by TOF<b>3</b>) based on the SRS and/or L1 data received at gNB3. For example, the LMF LE <b>1906</b> can obtain the SRS and/or L1 data from the first data structure <b>1910</b>, and determine TOF data based on the SRS and/or L1 data.</p><p id="p-0282" num="0270">At a seventh time (identified by T<b>7</b>) of the timing diagram <b>1900</b>, the LMF LE <b>1906</b> determines a location of the UE <b>1902</b> based on the TOF data. For example, the LMF LE <b>1906</b> can determine a TDOA associated with the SRS and/or L1 data based on the TOF data (e.g., TOF<b>1</b>, TOF<b>2</b>, TOF<b>3</b>) at which the SRS and/or L1 data arrived at the antennas of the gNBs <b>1904</b>. At an eighth time (identified by T<b>8</b>) of the timing diagram <b>1900</b>, the LMF LE <b>1906</b> provides the location result (e.g., a location of the UE <b>1902</b>) to the application <b>1908</b> for consumption and/or otherwise to cause an effectuation of one or more compute workloads based on the location result.</p><p id="p-0283" num="0271"><figref idref="DRAWINGS">FIG. <b>20</b></figref> is an illustration of an example location determination technique <b>2000</b> based on TDOA. The illustrated example of <figref idref="DRAWINGS">FIG. <b>20</b></figref> includes an example UE <b>2002</b>, a first example antenna (identified by ANT #1) <b>2004</b>, a second example antenna (identified by ANT #2) <b>2006</b>, and a third example antenna (identified by ANT #3) <b>2008</b>. In example operation, the UE <b>2002</b> can transmit SRS data to the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>. In some examples, the antennas <b>2004</b> can be co-located, such as being a part of the same base station. In some examples, the antennas <b>2004</b> are not co-located, such as being part of different base stations.</p><p id="p-0284" num="0272">In example operation, an example RU <b>2010</b> can obtain the SRS data from the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>. The RU <b>2010</b> can provide the SRS data to an example DU <b>2012</b>, which can implement an example L1 interface and/or an example vRAN (identified by DU/L1-VRAN). The DU <b>2012</b> can determine TOA data based on the SRS data from the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>. The DU <b>2012</b> can provide the TOA data to an example PLDC <b>2014</b> as disclosed herein. In some examples, the PLDC <b>2014</b> can configure (e.g., via at least one of the RU <b>2010</b> or the DU <b>2012</b>) a rate at which the UE <b>2002</b> transmits SRS data to the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>, a rate at which the DU/L1-vRAN <b>2012</b> obtains SRS data from the RU <b>2010</b>, etc., and/or any combination(s) thereof. In example operation, the PLDC <b>2014</b> can obtain the TOA data from the DU/L1-vRAN <b>2012</b> and provide the TOA data to at least one of an example CN <b>2016</b> or an example LMF <b>2018</b>. In example operation, the LMF <b>2018</b> can determine TDOA based on the TOA data. In some examples, the PLDC <b>2014</b> and/or the LMF <b>2018</b> can include, implement, and/or be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0285" num="0273">In some examples, the LMF <b>2018</b> can determine a first TDOA based on determining &#x394;d<sub>BS1,BS2 </sub>in the example of Equation (6) above. For example, &#x394;d<sub>BS1,BS2 </sub>is represented by a first example parabola <b>2022</b> in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. In some examples, the LMF <b>2018</b> can determine a second TDOA based on determining &#x394;d<sub>BS1,BS3 </sub>in the example of Equation (7) above. For example, &#x394;d<sub>BS1,BS3 </sub>is represented by a second example parabola <b>2024</b> in <figref idref="DRAWINGS">FIG. <b>20</b></figref>. In some examples, the LMF <b>2018</b> can determine a third TDOA based on determining &#x394;d<sub>BS2,BS3 </sub>in the example of Equation (8) above. For example, &#x394;d<sub>BS2,BS3 </sub>is represented by a third example parabola <b>2026</b> in <figref idref="DRAWINGS">FIG. <b>20</b></figref>.</p><p id="p-0286" num="0274">In example operation, the LMF <b>2018</b> can determine a location of the UE <b>2002</b> based on the TDOA. For example, the LMF <b>2018</b> can determine a location of the UE <b>2002</b> based on an intersection of at least one of the first parabola <b>2022</b>, the second parabola <b>2024</b>, or the third parabola <b>2026</b>. In example operation, the LMF <b>2018</b> can provide output the location as an example location result <b>2020</b>. For example, the location result <b>2020</b> can itself be data that, when consumed, analyzed, and/or otherwise processed by an application, can be identified as the location of the UE <b>2002</b>.</p><p id="p-0287" num="0275"><figref idref="DRAWINGS">FIG. <b>21</b></figref> is a timing diagram <b>2100</b> of an example location determination technique based on TDOA. The timing diagram <b>2100</b> includes the UE <b>2002</b>, the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>, the RU <b>2010</b>, the DU/L1-vRAN <b>2012</b>, the PLDC <b>2014</b>, the CN <b>2016</b>, the LMF <b>2018</b>, and the location result <b>2020</b> of <figref idref="DRAWINGS">FIG. <b>20</b></figref>. At a first time (identified by time-of-departure (TOD)) of the timing diagram <b>2100</b>, the UE <b>2002</b> transmits SRS data to the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>. The antennas <b>2004</b>, <b>2006</b>, <b>2008</b> generate and/or otherwise determine TOA data (identified by TOA<b>1</b>, TOA<b>2</b>, TOA<b>3</b>) based on TOF measurements and/or the TOD. In example operation, the antennas <b>2004</b>, <b>2006</b>, <b>2008</b> provide the TOA data to the RU <b>2010</b> to cause the generation and/or otherwise output of the location result <b>2020</b>. Advantageously, absolute UE to RU and/or antenna distances are not needed to effectuate the location determination technique of <figref idref="DRAWINGS">FIG. <b>21</b></figref> and/or, more generally, TDOA techniques disclosed herein. Advantageously, instead of absolute distances, multiple TDOA distances can be utilized to determine a location of the UE <b>2002</b>.</p><p id="p-0288" num="0276">In some examples, the DU/L1-vRAN <b>2012</b> can provide the SRS data that can be used to determine the TOA data points between the UE <b>2002</b> and each RU antenna (e.g., the antennas <b>2004</b>, <b>2006</b>, <b>2008</b>). In some examples, the SRS data includes the SRS configuration required to identify the resource elements of a UE's SRS transmission. For example, the SRS data can include information about bandwidth, transmission comb, periodicity, and the like. In some examples, the SRS data can include the estimated SNR for a UE's SRS transmission that is estimated by the PHY layer of the DU/L1-vRAN <b>2012</b>.</p><p id="p-0289" num="0277">In some examples, the DU/L1-vRAN <b>2012</b> can SRS data to generate the TOA measurements needed for later or subsequent TDOA-based processing, instead of processing the data later or subsequently in the LMF <b>2018</b>. Advantageously, generating the TOA measurements at the DU/L1-vRAN <b>2012</b> can achieve the effect of reducing the latency required to generate the actual location estimate and also reduce the amount of data and overhead that would have otherwise been sent to the LMF <b>2018</b>. Advantageously, such reducing of latency can realize use cases and performance as described in Table 1 below.</p><p id="p-0290" num="0000"><tables id="TABLE-US-00001" num="00001"><table frame="none" colsep="0" rowsep="0"><tgroup align="left" colsep="0" rowsep="0" cols="1"><colspec colname="1" colwidth="217pt" align="center"/><thead><row><entry namest="1" nameend="1" rowsep="1">TABLE 1</entry></row></thead><tbody valign="top"><row><entry namest="1" nameend="1" align="center" rowsep="1"/></row><row><entry>Example use cases and performance requirements</entry></row></tbody></tgroup><tgroup align="left" colsep="0" rowsep="0" cols="4"><colspec colname="1" colwidth="56pt" align="left"/><colspec colname="2" colwidth="49pt" align="left"/><colspec colname="3" colwidth="63pt" align="left"/><colspec colname="4" colwidth="49pt" align="left"/><tbody valign="top"><row><entry>USE CASE</entry><entry>ACCURACY</entry><entry>LATENCY</entry><entry>AVAILABILITY</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row><row><entry>EMERGENCY</entry><entry>1 METER (M)</entry><entry>1 SECOND (S)</entry><entry>95%</entry></row><row><entry>INDUSTRIAL</entry><entry>0.5 M</entry><entry>20 MILLISECONDS</entry><entry>99%</entry></row><row><entry>LOCATION-</entry><entry>&#x2002;&#x2009;3 M</entry><entry>60 S</entry><entry>90%</entry></row><row><entry>BASED</entry><entry/><entry/><entry/></row><row><entry>ADVERTISING</entry></row><row><entry namest="1" nameend="4" align="center" rowsep="1"/></row></tbody></tgroup></table></tables></p><p id="p-0291" num="0278"><figref idref="DRAWINGS">FIG. <b>22</b></figref> is an example implementation of a distributed antenna system (DAS) <b>2200</b> to implement examples disclosed herein. The DAS <b>2200</b> includes example antennas <b>2202</b>, an example RU <b>2204</b>, an example DU and/or example vRAN <b>2206</b>, an example PLDC <b>2208</b>, an example CN <b>2210</b>, an example LMF <b>2212</b>, and an example location result. In the illustrated example, the antennas <b>2202</b> are communicatively coupled (e.g., via a wired and/or wireless connection) to the RU <b>2204</b>. The RU <b>2204</b> is coupled to the DU/vRAN <b>2206</b>. The DU/vRAN <b>2206</b> is coupled to the PLDC <b>2208</b>. The PLDC <b>2208</b> is coupled to at least one of the CN <b>2210</b> or the LMF <b>2212</b>.</p><p id="p-0292" num="0279">TOA location determination techniques can require high-precision (e.g., nanosecond precision) clock synchronization between UE and gNB (or DAS antennas). In some examples, this time synchronization is required in order for the receiver to know the exact time the signal was sent from the transmitter. In some examples, out-of-sync clocks (e.g., drifts) is a major source of error for TOA-based systems. In some examples, a few nanoseconds sync error could result in meters of location estimation errors. Advantageously, TDOA systems and techniques as disclosed herein avoid the need to have high-precision clock synchronization between the UE and the gNB and, instead, TOA of signals that arrive at different reference points (e.g., physically different gNBs locations) can be used as reference points. Advantageously, different TOA based on different reference points can be used to remove the requirement of the time sync at the UE. In some examples, TDOA calculations correlate different TOA signals to determine the location of a UE. In some examples, TDOA systems and techniques as disclosed herein can require high-precision clock synchronization, in this case among the gNB nodes (positioning anchors). In some examples, 2D location determination may need a minimum of 3 gNB positioning anchors. In some examples, 3D (e.g., azimuth, elevation, and distance) may need 4 gNB anchors.</p><p id="p-0293" num="0280"><figref idref="DRAWINGS">FIG. <b>23</b></figref> is an example architecture <b>2300</b> to implement examples disclosed herein. The architecture <b>2300</b> of the illustrated example is based on at least one of the 3GPP standard or the O-RAN standard (e.g., an RU based on the O-RAN protocol is an O-RU, a DU based on the O-RAN protocol is a O-DU, etc.). In the illustrated example, a location engine (LE) xAPP is an application configured and/or otherwise adapted to run on a near-RT RIC that identifies data to consume via a PLDC and provide location results. In the illustrated example, the LE xAPP can be independent of the near-RT RIC. In the illustrated example, an example E2 interface can get data into the xAPP via the PLDC from O-RU, O-DU, O-CU, etc.</p><p id="p-0294" num="0281">In the illustrated example, the near-RT RIC can be the logical node that enables near-RT control and/or optimization of RAN elements and resources via fine-grained data collection via the PLDC and actions over the E2 interface. In the illustrated example, interfaces can be specified by the 3GPP standard (e.g., F1-c, F1-u, and E1 interfaces). In the illustrated example, interfaces can be specified by the O-RAN standard (e.g., A1, E2, O1, Open Fronthaul Interface, etc.). In the illustrated example, O1 and Open-Fronthaul (FH) interfaces FCAPS (Fault, Configuration, Accounting, Performance, Security) interface with configuration, reconfiguration, registration, security, performance, monitoring aspects exchange with individual nodes (e.g., O-CU-UP, O-CU-CP, O-DU, O-RU, as well as near-RT RIC).</p><p id="p-0295" num="0282"><figref idref="DRAWINGS">FIG. <b>24</b></figref> is an example data flow diagram <b>2400</b> to effectuate location determination of a device and/or an object, such as an example UE <b>2402</b>. The data flow diagram <b>2400</b> includes the UE <b>2402</b>, an example RU <b>2404</b>, an example vRAN <b>2406</b>, an example DU <b>2408</b>, an example CU <b>2410</b>, an example NG RAN <b>2412</b>, an example CN <b>2414</b>, an example location data server <b>2416</b>, an example location engine <b>2418</b>, an example result <b>2420</b>, and an example location request <b>2422</b>. In some examples, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can implement at least one of the RU <b>2404</b>, the vRAN <b>2406</b>, the DU <b>2408</b>, the CU <b>2410</b>, the CN <b>2414</b>, the location data server <b>2416</b>, or the location engine <b>2418</b>, or portion(s) thereof. In the illustrated example, the NG RAN <b>2412</b> implements and/or includes the vRAN <b>2406</b>, the DU <b>2408</b>, and the CU <b>2410</b>.</p><p id="p-0296" num="0283">At a first operation of the data flow diagram <b>2400</b>, the CN <b>2414</b>, which can implement an AMF, connects the CU <b>2410</b> to a core (e.g., a core server, core hardware, one of the core devices <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, etc.). At a second operation of the data flow diagram <b>2400</b>, the AMF-SMF-UPF UE IMSI registration occurs and establishes a packet data network (PDN) session, where SMF is a session management function, UPF is a user plane function (UPF), and IMSI is an international mobile subscriber identity. At a third operation of the data flow diagram <b>2400</b>, the DU <b>2408</b> configures the UE <b>2402</b> SRS transmission parameters, which can include a periodicity (e.g., a measurement periodicity), a number of symbols, etc. At a fourth operation of the data flow diagram <b>2400</b>, the DU <b>2408</b> tells and/or indicates to the vRAN <b>2406</b> that the DU <b>2408</b> is to receive SRS data from the UE <b>2402</b>.</p><p id="p-0297" num="0284">At a fifth operation of the data flow diagram <b>2400</b>, the UE <b>2402</b> transmits SRS data to the vRAN <b>2406</b> via the RU <b>2404</b>. At a sixth operation of the data flow diagram <b>2400</b>, the vRAN <b>2406</b> formats the received SRS data into a format particular to the location engine <b>2418</b>. At the sixth operation, the vRAN <b>2406</b> provides the formatted SRS data to the location data server <b>2416</b>. At a seventh operation of the data flow diagram <b>2400</b>, the location data server <b>2416</b> sends the formatted data to the location engine <b>2418</b>. At an eighth operation of the data flow diagram <b>2400</b>, the location engine <b>2418</b> outputs a location result based on the formatted data. At a ninth operation of the data flow diagram <b>2400</b>, the location request from a client device, application, etc., is completed by providing the location result to a graphical user interface (GUI) for consumption by an application, presentation to a user, etc.</p><p id="p-0298" num="0285"><figref idref="DRAWINGS">FIGS. <b>25</b>-<b>26</b></figref> depict another example data flow diagram <b>2500</b> to effectuate location determination of a device and/or an object, such as an example UE <b>2502</b>. The data flow diagram <b>2500</b> includes the UE <b>2502</b>, an example RU <b>2504</b>, an example vRAN <b>2506</b>, an example PLDC <b>2508</b>, an example DU <b>2510</b>, an example NG RAN <b>2512</b>, an example CU <b>2514</b>, an example CN <b>2516</b>, an example location engine <b>2518</b>, an example RAN analytics engine <b>2520</b>, an example location request <b>2522</b>, and an example GUI and/or AI engine <b>2524</b>. In some examples, the location engine circuitry <b>200</b> can implement at least one of the RU <b>2504</b>, the vRAN <b>2506</b>, the PLDC <b>2508</b>, the DU <b>2510</b>, the NG RAN <b>2512</b>, the CU <b>2514</b>, the CN <b>2516</b>, the location engine <b>2518</b>, the RAN analytics engine <b>2520</b>, or the GUI and/or AI engine <b>2524</b>, or portion(s) thereof. In the illustrated example, the NG RAN <b>2512</b> implements and/or includes the vRAN <b>2506</b>, the PLDC <b>2508</b>, and the DU <b>2510</b>.</p><p id="p-0299" num="0286">At a first operation of the data flow diagram <b>2500</b>, the CN <b>2516</b>, which can implement an AMF, connects the CU <b>2514</b> to a core (e.g., a core server, core hardware, one of the core devices <b>126</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref>, etc.). At a second operation of the data flow diagram <b>2500</b>, the AMF-SMF-UPF UE IMSI registration occurs and establishes a PDN session. At a third operation of the data flow diagram <b>2500</b>, the DU <b>2510</b> configures the UE <b>2502</b> SRS transmission parameters, which can include a periodicity (e.g., a measurement periodicity), a number of symbols, etc. At a fourth operation of the data flow diagram <b>2500</b>, the DU <b>2510</b> tells and/or informs the vRAN <b>2506</b> that the DU <b>2510</b> is to receive SRS data from the UE <b>2502</b>.</p><p id="p-0300" num="0287">At a fifth operation of the data flow diagram <b>2500</b>, the UE <b>2502</b> transmits SRS data to the vRAN <b>2506</b> via the RU <b>2504</b>. At a sixth operation of the data flow diagram <b>2500</b>, the PLDC <b>2508</b> formats the received SRS data into a format particular to the location engine <b>2518</b>. At the sixth operation, the vRAN <b>2506</b> provides the formatted SRS data to the PLDC <b>2508</b>.</p><p id="p-0301" num="0288">At a seventh operation of the data flow diagram <b>2500</b>, the UE <b>2502</b> transmits SRS data to the vRAN <b>2506</b> via the RU <b>2504</b>. At an eighth operation of the data flow diagram <b>2500</b>, the PLDC <b>2508</b> formats the received SRS data into a format particular to the location engine <b>2518</b>. At the eighth operation, the vRAN <b>2506</b> streams the formatted SRS data to the PLDC <b>2508</b>.</p><p id="p-0302" num="0289">At a ninth operation of the data flow diagram <b>2500</b>, L1 RAN stats, parameters, values, etc., are received at L1 (e.g., an L1 interface of the vRAN <b>2506</b>) and then streamed to the PLDC <b>2508</b>. At a tenth operation of the data flow diagram <b>2500</b>, the location engine <b>2518</b> outputs a location result based on the formatted data. At the tenth operation of the data flow diagram <b>2500</b>, the location request from a client device, application, etc., is completed by providing the location result to the GUI and/or AI engine <b>2524</b> for consumption by an application and/or service and/or one(s) of the ML model(s) <b>296</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, presentation to a user, etc. For example, the GUI can be an augmented reality GUI, a virtual reality GUI, a GUI on a heads-up display or other wearable device, etc. In some examples, the location result can be a map, an image, a picture, a video, etc., representative of a location of a device and/or an object in a frame of reference.</p><p id="p-0303" num="0290">In some examples, an SRS signal is an uplink (UL) only signal transmitted by the UE <b>2502</b> to assist the gNB obtain the channel state information (CSI) associated with the UE <b>2502</b>. In some examples, CSI can describe how the NR signal propagates from the UE <b>2502</b> to the gNB and can represent the combined effect of scattering, fading, and power decay with respect to distance including Channel Estimation using MMSE, DFT, FFT algorithms, Receive Channel Quality and Power, and Timing Advance Indicators. In some examples, the gNB uses the SRS signal for resource scheduling, link adaptation, traditional MIMO (MIMO), massive MIMO (mMIMO), and/or beam management. In some examples, the SRS signal can be UE specific. In some examples, the SRS signal when represented in the time domain can span 1, 2, or 4 consecutive symbols.</p><p id="p-0304" num="0291"><figref idref="DRAWINGS">FIG. <b>27</b></figref> is yet another example data flow diagram <b>2700</b> to effectuate location determination of a device and/or an object, such as an example UE <b>2702</b>. The data flow diagram <b>2700</b> includes the UE <b>2702</b>, an example RU <b>2704</b>, an example vRAN <b>2706</b>, an example DU <b>2708</b>, an example CU <b>2710</b>, an example NG RAN <b>2712</b>, an example CN <b>2714</b>, an example location data server <b>2716</b>, an example location engine and result server <b>2718</b>, and an example location request <b>2720</b>. In some examples, the location engine circuitry <b>200</b> can implement at least one of the RU <b>2704</b>, the vRAN <b>2706</b>, the DU <b>2708</b>, the CU <b>2710</b>, the NG RAN <b>2712</b>, the CN <b>2714</b>, the location data server <b>2716</b>, or the location engine and result server <b>2718</b>, or portion(s) thereof. In the illustrated example, the NG RAN <b>2712</b> includes and/or implements the vRAN <b>2706</b>, the DU <b>2708</b>, and the CU <b>2710</b>. In the illustrated example, the vRAN <b>2706</b> includes and/or implements an L1 interface. In the illustrated example, the vRAN <b>2706</b> includes and/or implements a PLDC as disclosed herein.</p><p id="p-0305" num="0292">At a first operation of the data flow diagram <b>2700</b>, the DU <b>2708</b> enables periodic SRS transmission with the UE <b>2702</b>. At a second operation of the data flow diagram <b>2700</b>, the CN <b>2714</b> validates the subscriber identity module (SIM) associated with the UE <b>2702</b>. At a third operation of the data flow diagram <b>2700</b>, the UE <b>2702</b> transmits SRS data to the vRAN <b>2706</b> via the RU <b>2704</b>. At a fourth operation of the data flow diagram <b>2700</b>, the vRAN <b>2706</b> sends SRS data periodically to the DU <b>2708</b>.</p><p id="p-0306" num="0293">At a fifth operation of the data flow diagram <b>2700</b>, the vRAN <b>2706</b> sends SRS data to the location data server <b>2716</b>. At a sixth operation of the data flow diagram <b>2700</b>, the PLDC processes data, which can be provided to the DU <b>2708</b>. At a seventh operation of the data flow diagram <b>2700</b>, the location request <b>2720</b> is representative of data that requests the location data server <b>2716</b> for PLDC L1 RAN stats, which can include TOA data, TDOA data, AOA data, a location of the UE <b>2702</b>, etc., and/or any combination(s) thereof.</p><p id="p-0307" num="0294">At an eighth operation of the data flow diagram <b>2700</b>, the location request <b>2720</b> is representative of data that requests the location of the UE <b>2702</b> from the CN <b>2714</b>. At a ninth operation of the data flow diagram <b>2700</b>, a network triggered location request occurs in response to the location request from the location request <b>2720</b>. At a tenth operation of the data flow diagram <b>2700</b>, the CN <b>2714</b> calculates and/or otherwise determines a location of the UE <b>2702</b> based on the SRS data. At an eleventh operation of the data flow diagram <b>2700</b>, the location engine and result server <b>2718</b> obtains the location from the location data server <b>2716</b>. At a twelfth operation of the data flow diagram <b>2700</b>, the location engine and result server <b>2718</b> outputs the location result to the location requester.</p><p id="p-0308" num="0295"><figref idref="DRAWINGS">FIG. <b>28</b></figref> is an illustration of an example architecture <b>2800</b> to implement examples disclosed herein. The architecture <b>2800</b> includes an example UE <b>2802</b>, which can implement an example control plane (identified by CONTROL UE) <b>2804</b> and an example data plane (identified by DATA UE) <b>2806</b>. The architecture <b>2800</b> includes an example multi-radio access technology (mRAT) <b>2808</b>. For example, the mRAT <b>2808</b> can include and/or otherwise implement a satellite base station (e.g., an sNB), a gNB, an eNB (e.g., a radio base station in 4G LTE networks), a non-3GPP inter-working function (N3IWF), and/or a trusted non-3GPP gateway function (TNGF). The architecture <b>2800</b> includes an example CN <b>2810</b>, which includes an example UPF <b>2812</b> and an example AMF <b>2814</b>. The architecture <b>2800</b> includes an example gNB <b>2816</b>, which includes an example AMF <b>2818</b>, an example UPF <b>2820</b>, and an example DU <b>2822</b>. The architecture <b>2800</b> includes example near real-time RICs (identified by NRT-RIC) <b>2824</b>, <b>2826</b> in communication with the gNB <b>2816</b>.</p><p id="p-0309" num="0296">In example operation, the AMF <b>2814</b> of the CN <b>2810</b> can transmit example control data <b>2828</b> to the mRAT <b>2808</b>. In some examples, the control data <b>2828</b> can include SRS configuration required to identify the resource elements of a UE's SRS transmission. For example, the control data <b>2828</b> can include configuration data such as bandwidth, transmission comb, periodicity, and the like associated with communication between the UE <b>2802</b> and the mRAT <b>2808</b>. In example operation, the mRAT <b>2808</b> can configure the UE <b>2802</b> based on the control data <b>2828</b>. For example, the mRAT <b>2808</b> can transmit the control data <b>2828</b>, or portion(s) thereof, to the UE <b>2802</b>. In some examples, the UE <b>2802</b> can configure itself based on the control data <b>2828</b>, or portion(s) thereof, from the mRAT <b>2808</b>.</p><p id="p-0310" num="0297">In example operation, the UE <b>2802</b> can transmit example cellular data <b>2830</b>, which can include data and/or control data, to at least one of the sNB, the gNB, the eNB, the N<b>3</b>IWF, or the TNGF of the mRAT <b>2808</b>. For example, the cellular data <b>2830</b> can include PUCCH data, PUSCH data, SRS data, etc. In example operation, the mRAT <b>2808</b> can output example L1 data and/or measurements <b>2832</b>, which can be a subset of the cellular data <b>2830</b>, to the UPF <b>2812</b>. In some examples, the UPF <b>2812</b> can output the L1 data and/or measurements to a location engine, such as the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, to determine a location of the UE <b>2802</b> based on the L1 data and/or measurements.</p><p id="p-0311" num="0298"><figref idref="DRAWINGS">FIG. <b>29</b></figref> is an illustration of an example implementation of the example gNodeB (gNB) <b>2816</b> of <figref idref="DRAWINGS">FIG. <b>28</b></figref>. Further depicted are the NRT-RICs <b>2824</b>, <b>2826</b> of <figref idref="DRAWINGS">FIG. <b>28</b></figref>. In the illustrated example of <figref idref="DRAWINGS">FIG. <b>28</b></figref>, the gNB <b>2816</b> includes an example CU <b>2902</b> and an example DU <b>2904</b>. The CU <b>2902</b> of the illustrated example includes and/or implements an example IP layer <b>2906</b>, an example 5G NR Priority-Based Congestion Control Protocol (PCCP) layer <b>2908</b>, an example 5G NR Radio Resource Control (RRC) layer <b>2910</b>, an example CU applications <b>2912</b>. In some examples, the CU applications <b>2912</b> can include and/or implement rAPPs, xAPPs, etc. The DU <b>2904</b> of the illustrated example includes an example IP layer <b>2914</b>, an example 5G NR MAC layer <b>2916</b>, an example 5G NR Radio Link Control (RLC) layer <b>2918</b>, an example DU applications <b>2220</b>. In some examples, the DU applications <b>2920</b> can include and/or implement rAPPs, xAPPs, etc. In some examples, the IP layer <b>2906</b> of the CU <b>2902</b> and/or the IP layer <b>2914</b> of the DU <b>2904</b> implement an L1 PHY layer. In the illustrated example, the IP layer <b>2906</b> of the CU <b>2902</b> is coupled to the IP layer <b>2914</b> of the DU <b>2904</b> via an F1 interface.</p><p id="p-0312" num="0299"><figref idref="DRAWINGS">FIG. <b>30</b></figref> is an example data flow diagram <b>3000</b> to implement examples disclosed herein. The data flow diagram <b>3000</b> includes an example UE <b>3002</b>, an example NG RAN <b>3004</b>, an example AMF <b>3006</b>, and an example LMF <b>3008</b>. In some examples, at least one of the NG RAN <b>3004</b>, the AMF <b>3006</b>, or the LMF <b>3008</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0313" num="0300">The data flow diagram <b>3000</b> of the illustrated example can be implemented by at least one of example 3GG access positioning <b>3010</b> or example non-3GPP access positioning <b>3012</b>. In the illustrated example, 3GPP access positioning <b>3010</b> can be effectuated by at least one of UE assisted and UE based positioning, network assisted positioning, or obtaining non-UE associated network assistance data. For example, the UE <b>3002</b>, the NG RAN <b>3004</b>, the AMF <b>3006</b>, and the LMF <b>3008</b> can effectuate UE assisted and UE based positioning and network assisted positioning in the 3GPP access positioning <b>3010</b>. In some examples, the NG RAN <b>3004</b>, the AMF <b>3006</b>, and the LMF <b>3008</b> can effectuate obtaining non-UE associated network assistance data in the 3GPP access positioning <b>3010</b>.</p><p id="p-0314" num="0301">In the illustrated example, non-3GPP access positioning <b>3012</b> can be effectuated by at least one of UE assisted and UE based positioning or network assisted positioning. For example, the UE <b>3002</b>, the NG RAN <b>3004</b>, the AMF <b>3006</b>, and the LMF <b>3008</b> can effectuate UE assisted and UE based positioning in non-3GPP access positioning. In some examples, the NG RAN <b>3004</b>, the AMF <b>3006</b>, and the LMF <b>3008</b> can effectuate network assisted positioning in non-3GPP access positioning.</p><p id="p-0315" num="0302">In some examples, the AMF <b>3006</b> can request a location of the UE <b>3002</b>. The request is identified in the illustrated example as Nlmf_Location_DetermineLocation, which can be representative of an application programming interface (API) call, a software call, a function call, a service call, etc. In example the LMF <b>3008</b> can determine the positioning methods and/or access node, such as one(s) of the positioning methods of 3GPP access positioning <b>3010</b> or non-3GPP access positioning <b>3012</b>.</p><p id="p-0316" num="0303"><figref idref="DRAWINGS">FIG. <b>31</b></figref> is an illustration of an example workflow <b>3100</b> to implement 5G positioning as disclosed herein. The workflow <b>3100</b> includes an example UE <b>3102</b> and an example gNB <b>3104</b>. In some examples, the gNB <b>3104</b>, or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0317" num="0304">At a first operation of the workflow <b>3100</b>, the gNB enables the UE <b>3102</b> to transmit SRS data to the gNB <b>3104</b>. For example, the gNB <b>3104</b> can tell and/or instruct the UE <b>3102</b> at which slot ID and which symbol(s) (e.g., symbol(s) of PUCCH and/or PUSCH) to transmit positioning SRS data. At a second operation of the workflow <b>3100</b>, the gNB <b>3104</b> tells and/or instructs the UE <b>3102</b> to allocate SRS positioning resources into a flexible slot within an NR subframe within an NR frame (e.g., a subframe of a PUCCH, a subframe of a PUSCH, etc.).</p><p id="p-0318" num="0305">At a third operation of the workflow <b>3100</b>, the UE <b>3102</b> transmits positioning SRS data for a specific antenna of the gNB <b>3104</b> for a specific periodicity. For example, the UE <b>3102</b> can transmit positioning SRS data to an antenna of the gNB <b>3104</b> at a periodicity of five times per second (i.e., 5 Hz), ten times per second (i.e., 10 Hz), etc. At a fourth operation of the workflow <b>3100</b>, the gNB <b>3104</b> receives the positioning SRS transmission on a set of symbols. At a fifth operation of the workflow <b>3100</b>, the gNB <b>3104</b> transmits the positioning SRS data to an LMF, which can include and/or be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, to cause a determination of an example positioning result <b>3106</b>. In some examples, the positioning result <b>3106</b> can correspond to a position, a location, etc., of the UE <b>3102</b>.</p><p id="p-0319" num="0306">In some examples, the SRS data can include reference signal power, timing differences, angles, etc., that can be used for multiple techniques (e.g., TOA techniques, TDOA techniques, AOA techniques, etc., as disclosed herein) to generate the positioning result <b>3106</b>. In some examples, the gNB <b>3104</b>, the LMF, etc., can determine round-trip time (RTT) measurements based on the SRS data to determine a distance between the UE <b>3102</b> and the gNB <b>3104</b> using a known location of the gNB <b>3104</b>. In some examples, the gNB <b>3104</b>, the LMF, etc., can determine TDOA based on the SRS data. For example, the gNB <b>3104</b> and/or the LMF can determine a distance between the UE <b>3102</b> and each gNB <b>3104</b> based on a comparison of time differences among each signal received for each UE-gNB antenna pairing and triangulated to determine the positioning result <b>3106</b>. In some examples, the gNB <b>3104</b>, the LMF, etc., can determine AOA based on the SRS data. For example, the gNB <b>3104</b> and/or the LMF can calculate an angle at which each SRS signal is received at an antenna of the gNB <b>3104</b> and each UE-gNB pair can be triangulated to determine the positioning result <b>3106</b>.</p><p id="p-0320" num="0307"><figref idref="DRAWINGS">FIG. <b>32</b></figref> depicts plots of example performance plots <b>3202</b>, <b>3204</b>, <b>3206</b>, <b>3208</b> associated with examples disclosed herein. The performance plots <b>3202</b>, <b>3204</b>, <b>3206</b>, <b>3208</b> include a first example performance plot <b>3202</b>, a second example performance plot <b>3204</b>, a third example performance plot <b>3206</b>, and a fourth example performance plot <b>3208</b> associated with transmission of a first type of data packet (identified by PKT#1), a second type of data packet (identified by PKT #2), and a third type of data packet (identified by PKT#3). The first performance plot <b>3202</b> depicts location accuracy with respect to sub-carrier frequency. The second performance plot <b>3204</b> depicts location accuracy with respect to signal-to-noise ratio (SNR). The third performance plot <b>3206</b> depicts location accuracy with respect to SRS periodicity. The fourth performance plot <b>3208</b> depicts location accuracy with respect to a number of antennas (e.g., a number of antennas associated with one or more base stations utilizing LOS UE communication).</p><p id="p-0321" num="0308"><figref idref="DRAWINGS">FIG. <b>33</b></figref> depicts example configurations <b>3302</b>, <b>3304</b> for location determination techniques disclosed herein. The configurations <b>3302</b>, <b>3304</b> include a first example configuration <b>3302</b> and a second example configuration <b>3304</b>. In some examples, the first configuration <b>3302</b> and/or the second configuration <b>3304</b> can be used to implement a system as disclosed herein, such as the system depicted in connection with the location determination technique <b>1000</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. The first configuration <b>3302</b> can correspond to a single RU with four antennas and a use of two SRS symbols. For example, 131 kilobytes (kB) can be transmitted every 540 m based on the first configuration <b>3302</b> (e.g., 131 kB=(4096 samples/symbol&#xd7;(4 antennas/RU&#xd7;1 RU)&#xd7;4 bytes IQ data per sample&#xd7;2 SRS symbols)&#xf7;1000). The second configuration <b>3304</b> can correspond to three RUs with four antennas per RU and a use of two SRS symbols. For example, 393 kB can be transmitted every 540 m based on the second configuration <b>3304</b> (e.g., 131 kB=(4096 samples/symbol&#xd7;(4 antennas/RU&#xd7;3 RU)&#xd7;4 bytes IQ data per sample&#xd7;2 SRS symbols)&#xf7;1000). Additionally and/or alternatively, any other configuration may be utilized.</p><p id="p-0322" num="0309"><figref idref="DRAWINGS">FIG. <b>34</b></figref> is a table <b>3400</b> of example bandwidth configurations utilized by examples disclosed herein. For example, the table <b>3400</b> includes four example configurations <b>3402</b>, <b>3404</b>, <b>3406</b>, <b>3408</b> (e.g., B<sub>SRS</sub>=0, B<sub>SRS</sub>=1, B<sub>SRS</sub>=2, B<sub>SRS</sub>=3) although any other number of configurations are contemplated. In some examples, the first configuration <b>3302</b> and/or the second configuration <b>3304</b> can correspond to one(s) of the configurations <b>3402</b>, <b>3404</b>, <b>3406</b>, <b>3408</b> of the table <b>3400</b> of the illustrated example of <figref idref="DRAWINGS">FIG. <b>34</b></figref>.</p><p id="p-0323" num="0310"><figref idref="DRAWINGS">FIG. <b>35</b></figref> is an illustration of an example server <b>3500</b> determining a location of an object, a UE, etc., based on SRS data. The server <b>3500</b> of the illustrated example is an edge server. Alternatively, the server <b>3500</b> may be any other type of server. In the illustrated example, the server <b>3500</b> implements a location server. For example, the server <b>3500</b>, or portion(s) thereof, can be a location server that includes and/or is implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0324" num="0311">The server <b>3500</b> of the illustrated example includes an example wireless interface <b>3502</b>, example memory <b>3504</b>, an example CPU <b>3506</b>, example accelerators <b>3508</b>, and an example wired interface <b>3510</b>. For example, the accelerators <b>3508</b> can include one or more FPGAs, one or more GPUs, one or more ASICs, one or more AI/ML hardware accelerators, etc., and/or any combination(s) thereof. In example operation, the wireless interface <b>3502</b> and/or the wired interface <b>3510</b> can obtain example SRS data <b>3512</b> from a UE or any other type of communication-enabled device as disclosed herein. In some examples, the SRS data <b>3512</b> can include a UE ID, a UE radio network temporary ID, a UE index, etc., associated with a UE or any other type of communication-enabled device.</p><p id="p-0325" num="0312">In example operation, the wireless interface <b>3502</b> and/or the wired interface <b>3510</b> can store the SRS data <b>3512</b>, or portion(s) thereof, in the memory <b>3504</b> or any other type of storage such as one or more mass storage devices. In example operation, at least one of the CPU <b>3506</b> or the accelerators <b>3508</b> can generate an example positioning result <b>3514</b> based on the SRS data. For example, the at least one of the CPU <b>3506</b> or the accelerators <b>3508</b> can determine a UL-TOA, UL-TDOA, RTT, and/or UL-AOA based on the SRS data <b>3512</b>. In some examples, the at least one of the CPU <b>3506</b> or the accelerators <b>3508</b> can determine the positioning result <b>3514</b> of the UE or any other type of communication-enabled device based on at least one of the UL-TOA, UL-TDOA, the RTT, or the UL-AOA.</p><p id="p-0326" num="0313"><figref idref="DRAWINGS">FIG. <b>36</b></figref> is an illustration of another example server <b>3600</b> determining a location of an object based on SRS data. The server <b>3600</b> of the illustrated example is an edge server. Alternatively, the server <b>3600</b> may be any other type of server. In the illustrated example, the server <b>3600</b> implements a base band unit (BBU). For example, the server <b>3600</b>, or portion(s) thereof, can be a BBU that includes and/or is implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0327" num="0314">The server <b>3600</b> of the illustrated example includes an example wireless interface <b>3601</b>, example memory <b>3604</b>, an example CPU <b>3606</b>, example accelerators <b>3608</b>, and an example wired interface <b>3610</b>. For example, the accelerators <b>3608</b> can include one or more FPGAs, one or more GPUs, one or more ASICs, one or more AI/ML hardware accelerators, etc., and/or any combination(s) thereof. In example operation, the wireless interface <b>3602</b> and/or the wired interface <b>3610</b> can obtain example parameters <b>3612</b> associated with an example UE <b>3614</b> or any other type of communication-enabled device via an example RU <b>3616</b>. For example, the parameters <b>3612</b> can include user statistics with uplink and downlink scheduling information, radio layer (L1) statistics, vRAN DU statistics, O-RAN statistics, platform statistics, IQ samples, etc., and/or any combination(s) thereof, associated with a UE or any other type of communication-enabled device. In some examples, one(s) of the parameters <b>3612</b> can be determined by the RU <b>3616</b> and/or the server <b>3600</b> based on the SRS data <b>3512</b> of <figref idref="DRAWINGS">FIG. <b>35</b></figref>. For example, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can determine one(s) of the parameters <b>3612</b> of <figref idref="DRAWINGS">FIG. <b>36</b></figref> based on the SRS data <b>3512</b> of <figref idref="DRAWINGS">FIG. <b>35</b></figref>. In the illustrated example, the parameters <b>3612</b> can include user statistics with uplink and downlink scheduling information, radio layer statistics (e.g., L1 statistics), vRAN distributed unit statistics, open RAN (O-RAN) statistics, platform statistics, IQ samples (e.g., quadrature samples), etc.</p><p id="p-0328" num="0315">Advantageously, the server <b>3600</b> can utilize the parameters <b>3612</b> to effectuate uplink and/or downlink scheduling of wireless communication. For example, the server <b>3600</b> can identify an example wireless communication type selection <b>3618</b> based on the parameters <b>3612</b>. In some examples, the server <b>3600</b> can determine based on the parameters <b>3612</b> that an application executed and/or instantiated by the UE <b>3614</b> is to switch or transition from a first type of wireless communication (e.g., 4G LTE, 5G, Wireless Fidelity (Wi-Fi), etc.) to a second type of wireless communication (e.g., 4G LTE, 5G, Wi-Fi, etc.), which can have increased bandwidth. In some examples, a user associated with the UE <b>3614</b>, an SLA associated with the UE <b>3614</b>, etc., can specify that an application executed and/or instantiated by the UE <b>3614</b> is to run with reduced data usage on a wireless connection (e.g., a 4G LTE data plan, a 5G data plan, a Wi-Fi hotspot data plan, etc.). For example, the server <b>3600</b> can instruct the UE <b>3614</b> to switch from a first type of wireless communication to a second type of wireless communication based on the specification to run with reduced data usage, the parameters <b>3612</b>, etc., and/or any combination(s) thereof. In some examples, a user associated with the UE <b>3614</b>, an SLA associated with the UE <b>3614</b>, etc., can determine to enable the UE <b>3614</b> to connect a video call on a specific cellular network (e.g., 4G LTE, 5G, etc.) instead of a different type of wireless network (e.g., Wi-Fi). For example, the server <b>3600</b> can instruct the UE <b>3614</b> to switch from 5G to Wi-Fi based on the parameters <b>3612</b>, which can include application-focused RAN statistics data.</p><p id="p-0329" num="0316"><figref idref="DRAWINGS">FIG. <b>37</b></figref> is a table <b>3700</b> of example configurations <b>3702</b>, <b>3704</b>, <b>3706</b> for location determination techniques disclosed herein. The configurations <b>3702</b>, <b>3704</b>, <b>3706</b> include a first example configuration <b>3702</b>, a second example configuration <b>3704</b>, and a third example configuration <b>3706</b>. The first configuration <b>3702</b> can be implemented based on the 3GPP standard with an LMF that can be executed and/or instantiated at the edge and/or the cloud. The second configuration <b>3704</b> can be implemented by an O-RAN RIC with a near-RT xAPP. The third configuration <b>3706</b> can be implemented by a vRAN DU-based schema. Any other configuration is contemplated. In some examples, the location engine circuitry <b>200</b> can be implemented based on the first configuration <b>3702</b>, the second configuration <b>3704</b>, or the third configuration <b>3706</b>.</p><p id="p-0330" num="0317"><figref idref="DRAWINGS">FIG. <b>38</b></figref> depicts example data <b>3800</b> that may be utilized for example location determination techniques disclosed herein. In some examples, the data <b>3800</b> can be representative of source code, such as human-readable instructions that, when compiled by a code compiler, can output machine-readable instructions to be executed and/or instantiated by processor circuitry. The data <b>3800</b> of the illustrated example includes a plurality of variables, data structures, etc., that can store portion(s) of SRS data associated with one or more UEs. For example, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> can determine a location of a UE based on the data <b>3800</b>.</p><p id="p-0331" num="0318"><figref idref="DRAWINGS">FIG. <b>39</b></figref> depicts an example implementation of communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b>. For example, the communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b> can be representative of cellular data as disclosed herein. For example, the communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b> can implement communication between one(s) of the devices <b>108</b>, <b>110</b>, <b>112</b>, <b>114</b>, <b>116</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> and the first networks <b>118</b> of <figref idref="DRAWINGS">FIG. <b>1</b></figref> as disclosed herein.</p><p id="p-0332" num="0319">The communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b> are 0.2 m subframes. Alternatively, one(s) of the communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b> may have any other duration. The communication subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b>, <b>3910</b>, <b>3912</b>, <b>3914</b> include example downlink (DL) subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b> and example uplink (UL) subframes <b>3910</b>, <b>3912</b>, <b>3914</b>. The DL subframes <b>3902</b>, <b>3904</b>, <b>3906</b>, <b>3908</b> include a first example DL subframe <b>3902</b>, a second example DL subframe <b>3904</b>, a third example DL subframe <b>3906</b>, and a fourth example DL subframe <b>3908</b>.</p><p id="p-0333" num="0320">The first DL subframe <b>3902</b> of the illustrated example includes a physical downlink control channel (PDCCH) (identified by xPDCCH), a plurality of physical downlink shared channels (PDSCHs) (identified by xPDSCH), and a PDSCH demodulation reference signal (DMRS). The second DL subframe <b>3904</b> includes two PDCCHs, a PDSCH DMRS, and a plurality of PDSCHs. The third DL subframe <b>3906</b> includes a PDCCH, a PDSCH DMRS, a plurality of PDSCHs, a guard channel (identified by GUARD), and a PUCCH. In some examples, an SRS signal is transmitted in the PUCCH slot of the third DL subframe <b>3906</b> and/or the fourth DL subframe <b>3908</b> when the PUCCH is not scheduled.</p><p id="p-0334" num="0321">The UL subframes <b>3910</b>, <b>3912</b>, <b>3914</b> include a first example UL subframe <b>3910</b>, a second example UL subframe <b>3912</b>, and a third example UL subframe <b>3914</b>. The first UL subframe <b>3910</b> includes a PDCCH, a GUARD, a PUSCH DMRS, and a plurality of PUSCHs. In some examples, an SRS signal is transmitted in the PUCCH slot of the first UL subframe <b>3910</b> when the PUCCH is not scheduled. The second UL subframe <b>3912</b> includes a PDCCH, a GUARD, a PUSCH DMRS, and a plurality of PUSCHs. In some examples, an SRS signal is transmitted in the PUCCH slot of the second UL subframe <b>3912</b> when the PUCCH is not scheduled. The third UL subframe <b>3914</b> includes a PDCCH, a GUARD, a PUSCH DMRS, and a plurality of PUSCHs.</p><p id="p-0335" num="0322">In the illustrated example, PDCCHs implement DL control channels. In the illustrated example, PDSCH DMRS and/or PDSCH implement DL data channels. In the illustrated example, PUCCH and/or SRS implement UL control channels. In the illustrated example, PUSCH DMRS and/or PUSCH implement UL data channels.</p><p id="p-0336" num="0323">In some examples, the SRS is a reference signal for a base station (e.g., a gNB, an eNB, etc.) to determine channel quality of an uplink path for subsection frequency region(s). For example, if configured, a UE can transmit the SRS in the last symbol slot in the uplink frame structure (e.g., the last symbol slot in the third DL subframe <b>3906</b>, the fourth DL subframe <b>3908</b>, the first UL subframe <b>3910</b>, the second UL subframe <b>3912</b>, etc.). In some examples, a PDSCH can include the DMRS for demodulating the plurality of PDSCHs. In some examples, without the PDSCHs, a base station may not detect an SRS.</p><p id="p-0337" num="0324">In some examples, a PUSCH can include the DMRS for demodulating the plurality of PUSCHs. In some examples, without the PUSCHs, a base station may not detect an SRS. In some examples, a PUSCH can carry Uplink Control Information (UCI) information including acknowledgment (ACK) or no acknowledgment (NACK) for the received PDSCH data, CQI data, rank indicator (RI) data (e.g., a number of possible transmission layers for the DL transmission under specific channel conditions, a maximum number of uncorrelated paths that can be used for the DL transmission, etc.), and/or precoding matrix indicator (PMI) data. In some examples, CQI data can be 4-bit values that indicate the highest modulation and code rate for a received transport block that meets a block error rate target (e.g., a block error rate target of at most 5%, 10%, 15%, etc., which can be estimated by a UE).</p><p id="p-0338" num="0325"><figref idref="DRAWINGS">FIG. <b>40</b></figref> is a block diagram <b>4000</b> showing an overview of a configuration for edge computing, which includes a layer of processing referred to in many of the following examples as an &#x201c;edge cloud&#x201d;. As shown, the edge cloud <b>4010</b> is co-located at an edge location, such as an access point or base station <b>4040</b>, a local processing hub <b>4050</b>, or a central office <b>4020</b>, and thus may include multiple entities, devices, and equipment instances. The edge cloud <b>4010</b> is located much closer to the endpoint (consumer and producer) data sources <b>4060</b> (e.g., autonomous vehicles <b>4061</b>, user equipment <b>4062</b>, business and industrial equipment <b>4063</b>, video capture devices <b>4064</b>, drones <b>4065</b>, smart cities and building devices <b>4066</b>, sensors and Internet-of-Things (IoT) devices <b>4067</b>, etc.) than the cloud data center <b>4030</b>. Compute, memory, and storage resources that are offered at the edges in the edge cloud <b>4010</b> are critical to providing ultra-low latency response times for services and functions used by the endpoint data sources <b>4060</b> as well as reduce network backhaul traffic from the edge cloud <b>4010</b> toward cloud data center <b>4030</b> thus improving energy consumption and overall network usages among other benefits.</p><p id="p-0339" num="0326">In some examples, the edge cloud <b>4010</b>, the central office <b>4020</b>, the cloud data center <b>4030</b>, and/or portion(s) thereof, may implement one or more location engines that locate and/or otherwise identify positions of devices of the endpoint (consumer and producer) data sources <b>4060</b> (e.g., autonomous vehicles <b>4061</b>, user equipment <b>4062</b>, business and industrial equipment <b>4063</b>, video capture devices <b>4064</b>, drones <b>4065</b>, smart cities and building devices <b>4066</b>, sensors and IoT devices <b>4067</b>, etc.). In some examples, the edge cloud <b>4010</b>, the central office <b>4020</b>, the cloud data center <b>4030</b>, and/or portion(s) thereof, may implement one or more location engines to execute location determination operations with improved accuracy. For example, the edge cloud <b>4010</b>, the central office <b>4020</b>, the cloud data center <b>4030</b>, and/or portion(s) thereof, can be implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0340" num="0327">Compute, memory, and storage are scarce resources, and generally decrease depending on the edge location (e.g., fewer processing resources being available at consumer endpoint devices, than at a base station, than at a central office). However, the closer that the edge location is to the endpoint (e.g., user equipment (UE)), the more that space and power is often constrained. Thus, edge computing attempts to reduce the amount of resources needed for network services, through the distribution of more resources which are located closer both geographically and in network access time. In this manner, edge computing attempts to bring the compute resources to the workload data where appropriate, or bring the workload data to the compute resources.</p><p id="p-0341" num="0328">The following describes aspects of an edge cloud architecture that covers multiple potential deployments and addresses restrictions that some network operators or service providers may have in their own infrastructures. These include, variation of configurations based on the edge location (because edges at a base station level, for instance, may have more constrained performance and capabilities in a multi-tenant scenario); configurations based on the type of compute, memory, storage, fabric, acceleration, or like resources available to edge locations, tiers of locations, or groups of locations; the service, security, and management and orchestration capabilities; and related objectives to achieve usability and performance of end services. These deployments may accomplish processing in network layers that may be considered as &#x201c;near edge&#x201d;, &#x201c;close edge&#x201d;, &#x201c;local edge&#x201d;, &#x201c;middle edge&#x201d;, or &#x201c;far edge&#x201d; layers, depending on latency, distance, and timing characteristics.</p><p id="p-0342" num="0329">Edge computing is a developing paradigm where computing is performed at or closer to the &#x201c;edge&#x201d; of a network, typically through the use of a compute platform (e.g., Intel Architecture or ARM compute hardware architecture) implemented at base stations, gateways, network routers, or other devices which are much closer to endpoint devices producing and consuming the data. For example, edge gateway servers may be equipped with pools of memory and storage resources to perform computation in real-time for low latency use-cases (e.g., autonomous driving or video surveillance) for connected client devices. Or as an example, base stations may be augmented with compute and acceleration resources to directly process service workloads for connected user equipment, without further communicating data via backhaul networks. Or as another example, central office network management hardware may be replaced with standardized compute hardware that performs virtualized network functions and offers compute resources for the execution of services and consumer functions for connected devices. Within edge computing networks, there may be scenarios in services which the compute resource will be &#x201c;moved&#x201d; to the data, as well as scenarios in which the data will be &#x201c;moved&#x201d; to the compute resource. Or as an example, base station compute, acceleration and network resources can provide services in order to scale to workload demands on an as needed basis by activating dormant capacity (subscription, capacity on demand) in order to manage corner cases, emergencies or to provide longevity for deployed resources over a significantly longer implemented lifecycle.</p><p id="p-0343" num="0330">In contrast to the network architecture of <figref idref="DRAWINGS">FIG. <b>40</b></figref>, traditional endpoint (e.g., UE, vehicle-to-vehicle (V2V), vehicle-to-everything (V2X), etc.) applications are reliant on local device or remote cloud data storage and processing to exchange and coordinate information. A cloud data arrangement allows for long-term data collection and storage, but is not optimal for highly time varying data, such as a collision, traffic light change, etc. and may fail in attempting to meet latency challenges.</p><p id="p-0344" num="0331">Depending on the real-time requirements in a communications context, a hierarchical structure of data processing and storage nodes may be defined in an edge computing deployment. For example, such a deployment may include local ultra-low-latency processing, regional storage and processing as well as remote cloud data-center based storage and processing. Key performance indicators (KPIs) may be used to identify where sensor data is best transferred and where it is processed or stored. This typically depends on the ISO layer dependency of the data. For example, lower layer (PHY, MAC, routing, etc.) data typically changes quickly and is better handled locally in order to meet latency requirements. Higher layer data such as Application Layer data is typically less time critical and may be stored and processed in a remote cloud data-center. At a more generic level, an edge computing system may be described to encompass any number of deployments operating in the edge cloud <b>4010</b>, which provide coordination from client and distributed computing devices.</p><p id="p-0345" num="0332"><figref idref="DRAWINGS">FIG. <b>41</b></figref> illustrates operational layers among endpoints, an edge cloud, and cloud computing environments. Specifically, <figref idref="DRAWINGS">FIG. <b>41</b></figref> depicts examples of computational use cases <b>4105</b>, utilizing the edge cloud <b>4010</b> of <figref idref="DRAWINGS">FIG. <b>40</b></figref> among multiple illustrative layers of network computing. The layers begin at an endpoint (devices and things) layer <b>4100</b>, which accesses the edge cloud <b>4010</b> to conduct data creation, analysis, and data consumption activities. The edge cloud <b>4010</b> may span multiple network layers, such as an edge devices layer <b>4110</b> having gateways, on-premise servers, or network equipment (nodes <b>4115</b>) located in physically proximate edge systems; a network access layer <b>4120</b>, encompassing base stations, radio processing units, network hubs, regional data centers (DC), or local network equipment (equipment <b>4125</b>); and any equipment, devices, or nodes located therebetween (in layer <b>4112</b>, not illustrated in detail). The network communications within the edge cloud <b>4010</b> and among the various layers may occur via any number of wired or wireless mediums, including via connectivity architectures and technologies not depicted.</p><p id="p-0346" num="0333">Examples of latency, resulting from network communication distance and processing time constraints, may range from less than a millisecond (ms) when among the endpoint layer <b>4100</b>, under 5 m at the edge devices layer <b>4110</b>, to even between 10 to 40 ms when communicating with nodes at the network access layer <b>4120</b>. Beyond the edge cloud <b>4010</b> are core network <b>4130</b> and cloud data center <b>4132</b> layers, each with increasing latency (e.g., between 50-60 m at the core network layer <b>4130</b>, to 100 or more ms at the cloud data center layer <b>4140</b>). As a result, operations at a core network data center <b>4135</b> or a cloud data center <b>4145</b>, with latencies of at least 50 to 100 m or more, will not be able to accomplish many time-critical functions of the use cases <b>4105</b>. Each of these latency values are provided for purposes of illustration and contrast; it will be understood that the use of other access network mediums and technologies may further reduce the latencies. In some examples, respective portions of the network may be categorized as &#x201c;close edge&#x201d;, &#x201c;local edge&#x201d;, &#x201c;near edge&#x201d;, &#x201c;middle edge&#x201d;, or &#x201c;far edge&#x201d; layers, relative to a network source and destination. For instance, from the perspective of the core network data center <b>4135</b> or a cloud data center <b>4145</b>, a central office or content data network may be considered as being located within a &#x201c;near edge&#x201d; layer (&#x201c;near&#x201d; to the cloud, having high latency values when communicating with the devices and endpoints of the use cases <b>4105</b>), whereas an access point, base station, on-premise server, or network gateway may be considered as located within a &#x201c;far edge&#x201d; layer (&#x201c;far&#x201d; from the cloud, having low latency values when communicating with the devices and endpoints of the use cases <b>4105</b>). It will be understood that other categorizations of a particular network layer as constituting a &#x201c;close&#x201d;, &#x201c;local&#x201d;, &#x201c;near&#x201d;, &#x201c;middle&#x201d;, or &#x201c;far&#x201d; edge may be based on latency, distance, number of network hops, or other measurable characteristics, as measured from a source in any of the network layers <b>4100</b>-<b>4140</b>.</p><p id="p-0347" num="0334">The various use cases <b>4105</b> may access resources under usage pressure from incoming streams, due to multiple services utilizing the edge cloud. For example, location determination of devices associated with such incoming streams of the various use cases <b>4105</b> is desired and may be achieved with example location engines (e.g., the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) as disclosed herein. To achieve results with low latency, the services executed within the edge cloud <b>4010</b> balance varying requirements in terms of: (a) Priority (throughput or latency) and Quality of Service (QoS) (e.g., traffic for an autonomous car may have higher priority than a temperature sensor in terms of response time requirement; or, a performance sensitivity/bottleneck may exist at a compute/accelerator, memory, storage, or network resource, depending on the application); (b) Reliability and Resiliency (e.g., some input streams need to be acted upon and the traffic routed with mission-critical reliability, where as some other input streams may be tolerate an occasional failure, depending on the application); and (c) Physical constraints (e.g., power, cooling and form-factor).</p><p id="p-0348" num="0335">The end-to-end service view for these use cases involves the concept of a service-flow and is associated with a transaction. The transaction details the overall service requirement for the entity consuming the service, as well as the associated services for the resources, workloads, workflows, and business functional and business level requirements. The services executed with the &#x201c;terms&#x201d; described may be managed at each layer in a way to assure real time, and runtime contractual compliance for the transaction during the lifecycle of the service. When a component in the transaction is missing its agreed to service level agreement (SLA), the system as a whole (components in the transaction) may provide the ability to (1) understand the impact of the SLA violation, and (2) augment other components in the system to resume overall transaction SLA, and (3) implement steps to remediate.</p><p id="p-0349" num="0336">Thus, with these variations and service features in mind, edge computing within the edge cloud <b>4010</b> may provide the ability to serve and respond to multiple applications of the use cases <b>4105</b> (e.g., object tracking, location determination, video surveillance, connected cars, etc.) in real-time or near real-time, and meet ultra-low latency requirements for these multiple applications. These advantages enable a whole new class of applications (VNFs), Function-as-a-Service (FaaS), Edge-as-a-Service (EaaS), standard processes, etc.), which cannot leverage conventional cloud computing due to latency or other limitations.</p><p id="p-0350" num="0337">However, with the advantages of edge computing comes the following caveats. The devices located at the edge are often resource constrained and therefore there is pressure on usage of edge resources. Typically, this is addressed through the pooling of memory and storage resources for use by multiple users (tenants) and devices. The edge may be power and cooling constrained and therefore the power usage needs to be accounted for by the applications that are consuming the most power. There may be inherent power-performance tradeoffs in these pooled memory resources, as many of them are likely to use emerging memory technologies, where more power requires greater memory bandwidth. Likewise, improved security of hardware and root of trust trusted functions are also required, because edge locations may be unmanned and may even need permissioned access (e.g., when housed in a third-party location). Such issues are magnified in the edge cloud <b>4010</b> in a multi-tenant, multi-owner, or multi-access setting, where services and applications are requested by many users, especially as network usage dynamically fluctuates and the composition of the multiple stakeholders, use cases, and services changes.</p><p id="p-0351" num="0338">At a more generic level, an edge computing system may be described to encompass any number of deployments at the previously discussed layers operating in the edge cloud <b>4010</b> (network layers <b>4110</b>-<b>4130</b>), which provide coordination from client and distributed computing devices. One or more edge gateway nodes, one or more edge aggregation nodes, and one or more core data centers may be distributed across layers of the network to provide an implementation of the edge computing system by or on behalf of a telecommunication service provider (&#x201c;telco&#x201d;, or &#x201c;TSP&#x201d;), internet-of-things service provider, cloud service provider (CSP), enterprise entity, or any other number of entities. Various implementations and configurations of the edge computing system may be provided dynamically, such as when orchestrated to meet service objectives.</p><p id="p-0352" num="0339">Consistent with the examples provided herein, a client compute node may be embodied as any type of endpoint component, device, appliance, or other thing capable of communicating as a producer or consumer of data. Further, the label &#x201c;node&#x201d; or &#x201c;device&#x201d; as used in the edge computing system does not necessarily mean that such node or device operates in a client or agent/minion/follower role; rather, any of the nodes or devices in the edge computing system refer to individual entities, nodes, or subsystems which include discrete or connected hardware or software configurations to facilitate or use the edge cloud <b>4010</b>.</p><p id="p-0353" num="0340">As such, the edge cloud <b>4010</b> is formed from network components and functional features operated by and within edge gateway nodes, edge aggregation nodes, or other edge compute nodes among network layers <b>4110</b>-<b>4130</b>. The edge cloud <b>4010</b> thus may be embodied as any type of network that provides edge computing and/or storage resources which are proximately located to RAN capable endpoint devices (e.g., mobile computing devices, IoT devices, smart devices, etc.), which are discussed herein. In other words, the edge cloud <b>4010</b> may be envisioned as an &#x201c;edge&#x201d; which connects the endpoint devices and traditional network access points that serve as an ingress point into service provider core networks, including mobile carrier networks (e.g., Global System for Mobile Communications (GSM) networks, Long-Term Evolution (LTE) networks, 5G/6G networks, etc.), while also providing storage and/or compute capabilities. Other types and forms of network access (e.g., Wi-Fi, long-range wireless, wired networks including optical networks) may also be utilized in place of or in combination with such 3GPP carrier networks.</p><p id="p-0354" num="0341">The network components of the edge cloud <b>4010</b> may be servers, multi-tenant servers, appliance computing devices, and/or any other type of computing devices. For example, the edge cloud <b>4010</b> may include an appliance computing device that is a self-contained electronic device including a housing, a chassis, a case or a shell. In some examples, the edge cloud <b>4010</b> may include an appliance to be operated in harsh environmental conditions (e.g., extreme heat or cold ambient temperatures, strong wind conditions, wet or frozen environments, and the like). In some circumstances, the housing may be dimensioned for portability such that it can be carried by a human and/or shipped. Example housings may include materials that form one or more exterior surfaces that partially or fully protect contents of the appliance, in which protection may include weather protection, hazardous environment protection (e.g., electromagnetic interference, vibration, extreme temperatures), and/or enable submergibility. Example housings may include power circuitry to provide power for stationary and/or portable implementations, such as AC power inputs, DC power inputs, AC/DC or DC/AC converter(s), power regulators, transformers, charging circuitry, batteries, wired inputs and/or wireless power inputs. Example housings and/or surfaces thereof may include or connect to mounting hardware to enable attachment to structures such as buildings, telecommunication structures (e.g., poles, antenna structures, etc.) and/or racks (e.g., server racks, blade mounts, etc.). Example housings and/or surfaces thereof may support one or more sensors (e.g., temperature sensors, vibration sensors, light sensors, acoustic sensors, capacitive sensors, proximity sensors, etc.). One or more such sensors may be contained in, carried by, or otherwise embedded in the surface and/or mounted to the surface of the appliance. Example housings and/or surfaces thereof may support mechanical connectivity, such as propulsion hardware (e.g., wheels, propellers, etc.) and/or articulating hardware (e.g., robot arms, pivotable appendages, etc.). In some circumstances, the sensors may include any type of input devices such as user interface hardware (e.g., buttons, switches, dials, sliders, etc.). In some circumstances, example housings include output devices contained in, carried by, embedded therein and/or attached thereto. Output devices may include displays, touchscreens, lights, light emitting diodes (LEDs), speakers, I/O ports (e.g., universal serial bus (USB)), etc. In some circumstances, edge devices are devices presented in the network for a specific purpose (e.g., a traffic light), but may have processing and/or other capacities that may be utilized for other purposes. Such edge devices may be independent from other networked devices and may be provided with a housing having a form factor suitable for its primary purpose; yet be available for other compute tasks that do not interfere with its primary task. Edge devices include IoT devices. The appliance computing device may include hardware and software components to manage local issues such as device temperature, vibration, resource utilization, updates, power issues, physical and network security, etc. The example processor systems of at least <figref idref="DRAWINGS">FIGS. <b>54</b>, <b>55</b>, <b>56</b></figref>, and/or <b>57</b> illustrate example hardware for implementing an appliance computing device. The edge cloud <b>4010</b> may also include one or more servers and/or one or more multi-tenant servers. Such a server may include an operating system and a virtual computing environment. A virtual computing environment may include a hypervisor managing (spawning, deploying, destroying, etc.) one or more virtual machines, one or more containers, etc. Such virtual computing environments provide an execution environment in which one or more applications and/or other software, code or scripts may execute while being isolated from one or more other applications, software, code or scripts.</p><p id="p-0355" num="0342">In <figref idref="DRAWINGS">FIG. <b>42</b></figref>, various client endpoints <b>4210</b> (in the form of mobile devices, computers, autonomous vehicles, business computing equipment, industrial processing equipment) exchange requests and responses that are specific to the type of endpoint network aggregation. For instance, client endpoints <b>4210</b> may obtain network access via a wired broadband network, by exchanging requests and responses <b>4222</b> through an on-premise network system <b>4232</b>. Some client endpoints <b>4210</b>, such as mobile computing devices, may obtain network access via a wireless broadband network, by exchanging requests and responses <b>4224</b> through an access point (e.g., cellular network tower) <b>4234</b>. Some client endpoints <b>4210</b>, such as autonomous vehicles may obtain network access for requests and responses <b>4226</b> via a wireless vehicular network through a street-located network system <b>4236</b>. However, regardless of the type of network access, the TSP may deploy aggregation points <b>4242</b>, <b>4244</b> within the edge cloud <b>4010</b> of <figref idref="DRAWINGS">FIG. <b>40</b></figref> to aggregate traffic and requests. Thus, within the edge cloud <b>4010</b>, the TSP may deploy various compute and storage resources, such as at edge aggregation nodes <b>4240</b>, to provide requested content. The edge aggregation nodes <b>4240</b> and other systems of the edge cloud <b>4010</b> are connected to a cloud or data center (DC) <b>4260</b>, which uses a backhaul network <b>4250</b> to fulfill higher-latency requests from a cloud/data center for websites, applications, database servers, etc. Additional or consolidated instances of the edge aggregation nodes <b>4240</b> and the aggregation points <b>4242</b>, <b>4244</b>, including those deployed on a single server framework, may also be present within the edge cloud <b>4010</b> or other areas of the TSP infrastructure. Advantageously, example location engines (e.g., the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) as disclosed herein may detect and/or otherwise determine locations of the client endpoints <b>4210</b> with improved performance and accuracy and reduced latency.</p><p id="p-0356" num="0343"><figref idref="DRAWINGS">FIG. <b>43</b></figref> depicts an example edge computing system <b>4300</b> for providing edge services and applications to multi-stakeholder entities, as distributed among one or more client compute platforms <b>4302</b>, one or more edge gateway platforms <b>4312</b>, one or more edge aggregation platforms <b>4322</b>, one or more core data centers <b>4332</b>, and a global network cloud <b>4342</b>, as distributed across layers of the edge computing system <b>4300</b>. The implementation of the edge computing system <b>4300</b> may be provided at or on behalf of a telecommunication service provider (&#x201c;telco&#x201d;, or &#x201c;TSP&#x201d;), internet-of-things service provider, cloud service provider (CSP), enterprise entity, or any other number of entities. Various implementations and configurations of the edge computing system <b>4300</b> may be provided dynamically, such as when orchestrated to meet service objectives.</p><p id="p-0357" num="0344">Individual platforms or devices of the edge computing system <b>4300</b> are located at a particular layer corresponding to layers <b>4320</b>, <b>4330</b>, <b>4340</b>, <b>4350</b>, and <b>4360</b>. For example, the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>are located at an endpoint layer <b>4320</b>, while the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>are located at an edge devices layer <b>4330</b> (local level) of the edge computing system <b>4300</b>. Additionally, the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>(and/or fog platform(s) <b>4324</b>, if arranged or operated with or among a fog networking configuration <b>4326</b>) are located at a network access layer <b>4340</b> (an intermediate level). Fog computing (or &#x201c;fogging&#x201d;) generally refers to extensions of cloud computing to the edge of an enterprise's network or to the ability to manage transactions across the cloud/edge landscape, typically in a coordinated distributed or multi-node network. Some forms of fog computing provide the deployment of compute, storage, and networking services between end devices and cloud computing data centers, on behalf of the cloud computing locations. Some forms of fog computing also provide the ability to manage the workload/workflow level services, in terms of the overall transaction, by pushing certain workloads to the edge or to the cloud based on the ability to fulfill the overall service level agreement.</p><p id="p-0358" num="0345">Fog computing in many scenarios provides a decentralized architecture and serves as an extension to cloud computing by collaborating with one or more edge node devices, providing the subsequent amount of localized control, configuration and management, and much more for end devices. Furthermore, fog computing provides the ability for edge resources to identify similar resources and collaborate to create an edge-local cloud which can be used solely or in conjunction with cloud computing to complete computing, storage or connectivity related services. Fog computing may also allow the cloud-based services to expand their reach to the edge of a network of devices to offer local and quicker accessibility to edge devices. Thus, some forms of fog computing provide operations that are consistent with edge computing as discussed herein; the edge computing aspects discussed herein are also applicable to fog networks, fogging, and fog configurations. Further, aspects of the edge computing systems discussed herein may be configured as a fog, or aspects of a fog may be integrated into an edge computing architecture.</p><p id="p-0359" num="0346">The core data center <b>4332</b> is located at a core network layer <b>4350</b> (a regional or geographically central level), while the global network cloud <b>4342</b> is located at a cloud data center layer <b>4360</b> (a national or world-wide layer). The use of &#x201c;core&#x201d; is provided as a term for a centralized network location&#x2014;deeper in the network&#x2014;which is accessible by multiple edge platforms or components; however, a &#x201c;core&#x201d; does not necessarily designate the &#x201c;center&#x201d; or the deepest location of the network. Accordingly, the core data center <b>4332</b> may be located within, at, or near the edge cloud <b>4310</b>. Although an illustrative number of client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f; </i>edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c; </i>edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b; </i>edge core data centers <b>4332</b>; and global network clouds <b>4342</b> are shown in <figref idref="DRAWINGS">FIG. <b>43</b></figref>, it should be appreciated that the edge computing system <b>4300</b> may include any number of devices and/or systems at each layer. Devices at any layer can be configured as peer nodes and/or peer platforms to each other and, accordingly, act in a collaborative manner to meet service objectives. For example, in additional or alternative examples, the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>can be configured as an edge of edges such that the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>communicate via peer to peer connections. In some examples, the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>and/or the fog platform(s) <b>4324</b> can be configured as an edge of edges such that the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>and/or the fog platform(s) communicate via peer to peer connections. Additionally, as shown in <figref idref="DRAWINGS">FIG. <b>43</b></figref>, the number of components of respective layers <b>4320</b>, <b>4330</b>, <b>4340</b>, <b>4350</b>, and <b>4360</b> generally increases at each lower level (e.g., when moving closer to endpoints (e.g., client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f</i>). As such, one edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>may service multiple ones of the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f, </i>and one edge aggregation platform (e.g., one of the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b</i>) may service multiple ones of the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c. </i></p><p id="p-0360" num="0347">Consistent with the examples provided herein, a client compute platform (e.g., one of the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>may be implemented as any type of endpoint component, device, appliance, or other thing capable of communicating as a producer or consumer of data. For example, a client compute platform can include a mobile phone, a laptop computer, a desktop computer, a processor platform in an autonomous vehicle, etc. In additional or alternative examples, a client compute platform can include a camera, a sensor, etc. Further, the label &#x201c;platform,&#x201d; &#x201c;node,&#x201d; and/or &#x201c;device&#x201d; as used in the edge computing system <b>4300</b> does not necessarily mean that such platform, node, and/or device operates in a client or slave role; rather, any of the platforms, nodes, and/or devices in the edge computing system <b>4300</b> refer to individual entities, platforms, nodes, devices, and/or subsystems which include discrete and/or connected hardware and/or software configurations to facilitate and/or use the edge cloud <b>4310</b>. Advantageously, example location engines (e.g., the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) as disclosed herein may detect and/or otherwise determine locations of the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>with improved performance and accuracy as well as with reduced latency.</p><p id="p-0361" num="0348">As such, the edge cloud <b>4310</b> is formed from network components and functional features operated by and within the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>and the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>of layers <b>4330</b>, <b>4340</b>, respectively. The edge cloud <b>4310</b> may be implemented as any type of network that provides edge computing and/or storage resources which are proximately located to RAN capable endpoint devices (e.g., mobile computing devices, IoT devices, smart devices, etc.), which are shown in <figref idref="DRAWINGS">FIG. <b>43</b></figref> as the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>In other words, the edge cloud <b>4310</b> may be envisioned as an &#x201c;edge&#x201d; which connects the endpoint devices and traditional network access points that serves as an ingress point into service provider core networks, including mobile carrier networks (e.g., GSM networks, Long-Term Evolution (LTE) networks, 5G/6G networks, etc.), while also providing storage and/or compute capabilities. Other types and forms of network access (e.g., Wi-Fi, long-range wireless, wired networks including optical networks) may also be utilized in place of or in combination with such 3GPP carrier networks.</p><p id="p-0362" num="0349">In some examples, the edge cloud <b>4310</b> may form a portion of, or otherwise provide, an ingress point into or across a fog networking configuration <b>4326</b> (e.g., a network of fog platform(s) <b>4324</b>, not shown in detail), which may be implemented as a system-level horizontal and distributed architecture that distributes resources and services to perform a specific function. For instance, a coordinated and distributed network of fog platform(s) <b>4324</b> may perform computing, storage, control, or networking aspects in the context of an IoT system arrangement. Other networked, aggregated, and distributed functions may exist in the edge cloud <b>4310</b> between the core data center <b>4332</b> and the client endpoints (e.g., client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f. </i>Some of these are discussed in the following sections in the context of network functions or service virtualization, including the use of virtual edges and virtual services which are orchestrated for multiple tenants.</p><p id="p-0363" num="0350">As discussed in more detail below, the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>and the edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>cooperate to provide various edge services and security to the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>Furthermore, because a client compute platforms (e.g., one of the client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>may be stationary or mobile, a respective edge gateway platform <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>may cooperate with other edge gateway platforms to propagate presently provided edge services, relevant service data, and security as the corresponding client compute platforms <b>4302</b><i>a, </i><b>4302</b><i>b, </i><b>4302</b><i>c, </i><b>4302</b><i>d, </i><b>4302</b><i>e, </i><b>4302</b><i>f </i>moves about a region. To do so, the edge gateway platforms <b>4312</b><i>a, </i><b>4312</b><i>b, </i><b>4312</b><i>c </i>and/or edge aggregation platforms <b>4322</b><i>a, </i><b>4322</b><i>b </i>may support multiple tenancy and multiple tenant configurations, in which services from (or hosted for) multiple service providers, owners, and multiple consumers may be supported and coordinated across a single or multiple compute devices.</p><p id="p-0364" num="0351">In examples disclosed herein, edge platforms in the edge computing system <b>4300</b> includes meta-orchestration functionality. For example, edge platforms at the far-edge (e.g., edge platforms closer to edge users, the edge devices layer <b>4330</b>, etc.) can reduce the performance or power consumption of orchestration tasks associated with far-edge platforms so that the execution of orchestration components at far-edge platforms consumes a small fraction of the power and performance available at far-edge platforms.</p><p id="p-0365" num="0352">The orchestrators at various far-edge platforms participate in an end-to-end orchestration architecture. Examples disclosed herein anticipate that the comprehensive operating software framework (such as, open network automation platform (ONAP) or similar platform) will be expanded, or options created within it, so that examples disclosed herein can be compatible with those frameworks. For example, orchestrators at edge platforms implementing examples disclosed herein can interface with ONAP orchestration flows and facilitate edge platform orchestration and telemetry activities. Orchestrators implementing examples disclosed herein act to regulate the orchestration and telemetry activities that are performed at edge platforms, including increasing or decreasing the power and/or resources expended by the local orchestration and telemetry components, delegating orchestration and telemetry processes to a remote computer and/or retrieving orchestration and telemetry processes from the remote computer when power and/or resources are available.</p><p id="p-0366" num="0353">The remote devices described above are situated at alternative locations with respect to those edge platforms that are offloading telemetry and orchestration processes. For example, the remote devices described above can be situated, by contrast, at a near-edge platforms (e.g., the network access layer <b>4340</b>, the core network layer <b>4350</b>, a central office, a mini-datacenter, etc.). By offloading telemetry and/or orchestration processes at a near edge platforms, an orchestrator at a near-edge platform is assured of (comparatively) stable power supply, and sufficient computational resources to facilitate execution of telemetry and/or orchestration processes. An orchestrator (e.g., operating according to a global loop) at a near-edge platform can take delegated telemetry and/or orchestration processes from an orchestrator (e.g., operating according to a local loop) at a far-edge platform. For example, if an orchestrator at a near-edge platform takes delegated telemetry and/or orchestration processes, then at some later time, the orchestrator at the near-edge platform can return the delegated telemetry and/or orchestration processes to an orchestrator at a far-edge platform as conditions change at the far-edge platform (e.g., as power and computational resources at a far-edge platform satisfy a threshold level, as higher levels of power and/or computational resources become available at a far-edge platform, etc.).</p><p id="p-0367" num="0354">A variety of security approaches may be utilized within the architecture of the edge cloud <b>4310</b>. In a multi-stakeholder environment, there can be multiple loadable security modules (LSMs) used to provision policies that enforce the stakeholder's interests including those of tenants. In some examples, other operators, service providers, etc. may have security interests that compete with the tenant's interests. For example, tenants may prefer to receive full services (e.g., provided by an edge platform) for free while service providers would like to get full payment for performing little work or incurring little costs. Enforcement point environments could support multiple LSMs that apply the combination of loaded LSM policies (e.g., where the most constrained effective policy is applied, such as where if any of A, B or C stakeholders restricts access then access is restricted). Within the edge cloud <b>4310</b>, each edge entity can provision LSMs that enforce the Edge entity interests. The cloud entity can provision LSMs that enforce the cloud entity interests. Likewise, the various fog and IoT network entities can provision LSMs that enforce the fog entity's interests.</p><p id="p-0368" num="0355">In these examples, services may be considered from the perspective of a transaction, performed against a set of contracts or ingredients, whether considered at an ingredient level or a human-perceivable level. Thus, a user who has a service agreement with a service provider, expects the service to be delivered under terms of the SLA. Although not discussed in detail, the use of the edge computing techniques discussed herein may play roles during the negotiation of the agreement and the measurement of the fulfillment of the agreement (e.g., to identify what elements are required by the system to conduct a service, how the system responds to service conditions and changes, and the like).</p><p id="p-0369" num="0356">Additionally, in examples disclosed herein, edge platforms and/or orchestration components thereof may consider several factors when orchestrating services and/or applications in an edge environment. These factors can include next-generation central office smart network functions virtualization and service management, improving performance per watt at an edge platform and/or of orchestration components to overcome the limitation of power at edge platforms, reducing power consumption of orchestration components and/or an edge platform, improving hardware utilization to increase management and orchestration efficiency, providing physical and/or end to end security, providing individual tenant quality of service and/or service level agreement satisfaction, improving network equipment-building system compliance level for each use case and tenant business model, pooling acceleration components, and billing and metering policies to improve an edge environment.</p><p id="p-0370" num="0357">A &#x201c;service&#x201d; is a broad term often applied to various contexts, but in general, it refers to a relationship between two entities where one entity offers and performs work for the benefit of another. However, the services delivered from one entity to another must be performed with certain guidelines, which ensure trust between the entities and manage the transaction according to the contract terms and conditions set forth at the beginning, during, and end of the service.</p><p id="p-0371" num="0358">An example relationship among services for use in an edge computing system is described below. In scenarios of edge computing, there are several services, and transaction layers in operation and dependent on each other &#x2014; these services create a &#x201c;service chain&#x201d;. At the lowest level, ingredients compose systems. These systems and/or resources communicate and collaborate with each other in order to provide a multitude of services to each other as well as other permanent or transient entities around them. In turn, these entities may provide human-consumable services. With this hierarchy, services offered at each tier must be transactionally connected to ensure that the individual component (or sub-entity) providing a service adheres to the contractually agreed to objectives and specifications. Deviations at each layer could result in overall impact to the entire service chain.</p><p id="p-0372" num="0359">One type of service that may be offered in an edge environment hierarchy is Silicon Level Services. For instance, Software Defined Silicon (SDSi)-type hardware provides the ability to ensure low level adherence to transactions, through the ability to intra-scale, manage and assure the delivery of operational service level agreements. Use of SDSi and similar hardware controls provide the capability to associate features and resources within a system to a specific tenant and manage the individual title (rights) to those resources. Use of such features is among one way to dynamically &#x201c;bring&#x201d; the compute resources to the workload.</p><p id="p-0373" num="0360">For example, an operational level agreement and/or service level agreement could define &#x201c;transactional throughput&#x201d; or &#x201c;timeliness&#x201d;&#x2014;in case of SDSi, the system and/or resource can sign up to guarantee specific service level specifications (SLS) and objectives (SLO) of a service level agreement (SLA). For example, SLOs can correspond to particular key performance indicators (KPIs) (e.g., frames per second, floating point operations per second, latency goals, etc.) of an application (e.g., service, workload, etc.) and an SLA can correspond to a platform level agreement to satisfy a particular SLO (e.g., one gigabyte of memory for 10 frames per second). SDSi hardware also provides the ability for the infrastructure and resource owner to empower the silicon component (e.g., components of a composed system that produce metric telemetry) to access and manage (add/remove) product features and freely scale hardware capabilities and utilization up and down. Furthermore, it provides the ability to provide deterministic feature assignments on a per-tenant basis. It also provides the capability to tie deterministic orchestration and service management to the dynamic (or subscription based) activation of features without the need to interrupt running services, client operations or by resetting or rebooting the system.</p><p id="p-0374" num="0361">At the lowest layer, SDSi can provide services and guarantees to systems to ensure active adherence to contractually agreed-to service level specifications that a single resource has to provide within the system. Additionally, SDSi provides the ability to manage the contractual rights (title), usage and associated financials of one or more tenants on a per component, or even silicon level feature (e.g., SKU features). Silicon level features may be associated with compute, storage or network capabilities, performance, determinism or even features for security, encryption, acceleration, etc. These capabilities ensure not only that the tenant can achieve a specific service level agreement, but also assist with management and data collection, and assure the transaction and the contractual agreement at the lowest manageable component level.</p><p id="p-0375" num="0362">At a higher layer in the services hierarchy, Resource Level Services, includes systems and/or resources which provide (in complete or through composition) the ability to meet workload demands by either acquiring and enabling system level features via SDSi, or through the composition of individually addressable resources (compute, storage and network). At yet a higher layer of the services hierarchy, Workflow Level Services, is horizontal, since service-chains may have workflow level requirements. Workflows describe dependencies between workloads in order to deliver specific service level objectives and requirements to the end-to-end service. These services may include features and functions like high-availability, redundancy, recovery, fault tolerance or load-leveling (we can include lots more in this). Workflow services define dependencies and relationships between resources and systems, describe requirements on associated networks and storage, as well as describe transaction level requirements and associated contracts in order to assure the end-to-end service. Workflow Level Services are usually measured in Service Level Objectives and have mandatory and expected service requirements.</p><p id="p-0376" num="0363">At yet a higher layer of the services hierarchy, Business Functional Services (BFS) are operable, and these services are the different elements of the service which have relationships to each other and provide specific functions for the customer. In the case of Edge computing and within the example of Autonomous Driving, business functions may be composing the service, for instance, of a &#x201c;timely arrival to an event&#x201d;&#x2014;this service would require several business functions to work together and in concert to achieve the goal of the user entity: GPS guidance, RSU (Road Side Unit) awareness of local traffic conditions, Payment history of user entity, Authorization of user entity of resource(s), etc. Furthermore, as these BFS(s) provide services to multiple entities, each BFS manages its own SLA and is aware of its ability to deal with the demand on its own resources (Workload and Workflow). As requirements and demand increases, it communicates the service change requirements to Workflow and resource level service entities, so they can, in-turn provide insights to their ability to fulfill. This step assists the overall transaction and service delivery to the next layer.</p><p id="p-0377" num="0364">At the highest layer of services in the service hierarchy, Business Level Services (BLS), is tied to the capability that is being delivered. At this level, the customer or entity might not care about how the service is composed or what ingredients are used, managed, and/or tracked to provide the service(s). The primary objective of business level services is to attain the goals set by the customer according to the overall contract terms and conditions established between the customer and the provider at the agreed to a financial agreement. BLS(s) are comprised of several Business Functional Services (BFS) and an overall SLA.</p><p id="p-0378" num="0365">This arrangement and other service management features described herein are designed to meet the various requirements of edge computing with its unique and complex resource and service interactions. This service management arrangement is intended to inherently address several of the resource basic services within its framework, instead of through an agent or middleware capability. Services such as: locate, find, address, trace, track, identify, and/or register may be placed immediately in effect as resources appear on the framework, and the manager or owner of the resource domain can use management rules and policies to ensure orderly resource discovery, registration and certification.</p><p id="p-0379" num="0366">Moreover, any number of edge computing architectures described herein may be adapted with service management features. These features may enable a system to be constantly aware and record information about the motion, vector, and/or direction of resources as well as fully describe these features as both telemetry and metadata associated with the devices. These service management features can be used for resource management, billing, and/or metering, as well as an element of security. The same functionality also applies to related resources, where a less intelligent device, like a sensor, might be attached to a more manageable resource, such as an edge gateway. The service management framework is made aware of change of custody or encapsulation for resources. Since nodes and components may be directly accessible or be managed indirectly through a parent or alternative responsible device for a short duration or for its entire lifecycle, this type of structure is relayed to the service framework through its interface and made available to external query mechanisms.</p><p id="p-0380" num="0367">Additionally, this service management framework is always service aware and naturally balances the service delivery requirements with the capability and availability of the resources and the access for the data upload the data analytics systems. If the network transports degrade, fail or change to a higher cost or lower bandwidth function, service policy monitoring functions provide alternative analytics and service delivery mechanisms within the privacy or cost constraints of the user. With these features, the policies can trigger the invocation of analytics and dashboard services at the edge ensuring continuous service availability at reduced fidelity or granularity. Once network transports are re-established, regular data collection, upload and analytics services can resume.</p><p id="p-0381" num="0368">The deployment of a multi-stakeholder edge computing system may be arranged and orchestrated to enable the deployment of multiple services and virtual edge instances, among multiple edge platforms and subsystems, for use by multiple tenants and service providers. In a system example applicable to a cloud service provider (CSP), the deployment of an edge computing system may be provided via an &#x201c;over-the-top&#x201d; approach, to introduce edge computing platforms as a supplemental tool to cloud computing. In a contrasting system example applicable to a telecommunications service provider (TSP), the deployment of an edge computing system may be provided via a &#x201c;network-aggregation&#x201d; approach, to introduce edge computing platforms at locations in which network accesses (from different types of data access networks) are aggregated. However, these over-the-top and network aggregation approaches may be implemented together in a hybrid or merged approach or configuration.</p><p id="p-0382" num="0369"><figref idref="DRAWINGS">FIG. <b>44</b></figref> illustrates a drawing of a cloud computing network, or cloud <b>4400</b>, in communication with a number of IoT devices. The cloud <b>4400</b> may represent the Internet, or may be a local area network (LAN), or a wide area network (WAN), such as a proprietary network for a company. The IoT devices may include any number of different types of devices, grouped in various combinations. For example, a traffic control group <b>4406</b> may include IoT devices along streets in a city. These IoT devices may include stoplights, traffic flow monitors, cameras, weather sensors, and the like. The traffic control group <b>4406</b>, or other subgroups, may be in communication with the cloud <b>4400</b> through wired or wireless links <b>4408</b>, such as LPWA links, and the like. Further, a wired or wireless sub-network <b>4412</b> may allow the IoT devices to communicate with each other, such as through a local area network, a wireless local area network, and the like. The IoT devices may use another device, such as a gateway <b>4410</b> or <b>4428</b> to communicate with remote locations such as the cloud <b>4400</b>; the IoT devices may also use one or more servers <b>4430</b> to facilitate communication with the cloud <b>4400</b> or with the gateway <b>4410</b>. For example, the one or more servers <b>4430</b> may operate as an intermediate network node to support a local Edge cloud or fog implementation among a local area network. Further, the gateway <b>4428</b> that is depicted may operate in a cloud-to-gateway-to-many Edge devices configuration, such as with the various IoT devices <b>4414</b>, <b>4420</b>, <b>4424</b> being constrained or dynamic to an assignment and use of resources in the cloud <b>4400</b>.</p><p id="p-0383" num="0370">Other example groups of IoT devices may include remote weather stations <b>4414</b>, local information terminals <b>4416</b>, alarm systems <b>4418</b>, automated teller machines <b>4420</b>, alarm panels <b>4422</b>, or moving vehicles, such as emergency vehicles <b>4424</b> or other vehicles <b>4426</b>, among many others. Each of these IoT devices may be in communication with other IoT devices, with servers <b>4404</b>, with another IoT fog device or system (not shown), or a combination therein. The groups of IoT devices may be deployed in various residential, commercial, and industrial settings (including in both private or public environments). Advantageously, example location engines (e.g., a location engine that includes and/or is implemented by the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>) as disclosed herein may achieve location determination of one(s) of the IoT devices of the traffic control group <b>4406</b>, one(s) of the IoT devices <b>4414</b>, <b>4416</b>, <b>4418</b>, <b>4420</b>, <b>4422</b>, <b>4424</b>, <b>4426</b>, etc., and/or a combination thereof with improved performance, improved accuracy, and/or reduced latency.</p><p id="p-0384" num="0371">As may be seen from <figref idref="DRAWINGS">FIG. <b>44</b></figref>, a large number of IoT devices may be communicating through the cloud <b>4400</b>. This may allow different IoT devices to request or provide information to other devices autonomously. For example, a group of IoT devices (e.g., the traffic control group <b>4406</b>) may request a current weather forecast from a group of remote weather stations <b>4414</b>, which may provide the forecast without human intervention. Further, an emergency vehicle <b>4424</b> may be alerted by an automated teller machine <b>4420</b> that a burglary is in progress. As the emergency vehicle <b>4424</b> proceeds towards the automated teller machine <b>4420</b>, it may access the traffic control group <b>4406</b> to request clearance to the location, for example, by lights turning red to block cross traffic at an intersection in sufficient time for the emergency vehicle <b>4424</b> to have unimpeded access to the intersection.</p><p id="p-0385" num="0372">Clusters of IoT devices, such as the remote weather stations <b>4414</b> or the traffic control group <b>4406</b>, may be equipped to communicate with other IoT devices as well as with the cloud <b>4400</b>. This may allow the IoT devices to form an ad-hoc network between the devices, allowing them to function as a single device, which may be termed a fog device or system (e.g., as described above with reference to <figref idref="DRAWINGS">FIG. <b>43</b></figref>).</p><p id="p-0386" num="0373"><figref idref="DRAWINGS">FIG. <b>45</b></figref> illustrates network connectivity in non-terrestrial (satellite) and terrestrial (mobile cellular network) settings, according to an example. As shown, a satellite constellation (e.g., a Low Earth Orbit constellation) may include multiple satellites <b>4501</b>, <b>4502</b>, which are connected to each other and to one or more terrestrial networks. Specifically, the satellite constellation is connected to a backhaul network, which is in turn connected to a 5G core network <b>4540</b>. The 5G core network is used to support 5G communication operations at the satellite network and at a terrestrial 5G RAN <b>4530</b>.</p><p id="p-0387" num="0374"><figref idref="DRAWINGS">FIG. <b>45</b></figref> also depicts the use of the terrestrial 5G RAN <b>4530</b>, to provide radio connectivity to a UE <b>4520</b> via a massive multiple input, multiple output (MIMO) antenna <b>4550</b>. It will be understood that a variety of network communication components and units are not depicted in <figref idref="DRAWINGS">FIG. <b>45</b></figref> for purposes of simplicity. With these basic entities in mind, the following techniques describe ways in which terrestrial and satellite networks can be extended for various Edge computing scenarios. Alternatively, the illustrated example of <figref idref="DRAWINGS">FIG. <b>45</b></figref> may be applicable to other cellular technologies (e.g., 6G and the like).</p><p id="p-0388" num="0375">Flowcharts representative of example machine-readable instructions, which may be executed to configure processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>, are shown in <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. The machine-readable instructions may be one or more executable programs or portion(s) of an executable program for execution by processor circuitry, such as the processor <b>5452</b> shown in the example IoT device <b>5450</b> discussed below in connection with <figref idref="DRAWINGS">FIG. <b>54</b></figref>, the processor circuitry <b>5512</b> shown in the example processor platform <b>5500</b> discussed below in connection with <figref idref="DRAWINGS">FIG. <b>55</b></figref>, and/or the example processor circuitry discussed below in connection with <figref idref="DRAWINGS">FIGS. <b>56</b> and/or <b>57</b></figref>. The program may be embodied in software stored on one or more non-transitory computer-readable storage media such as a CD, a floppy disk, an HDD, an SSD, a DVD, a Blu-ray disk, a volatile memory (e.g., Random Access Memory (RAM) of any type, etc.), or a non-volatile memory (e.g., electrically erasable programmable read-only memory (EEPROM), FLASH memory, an HDD, an SSD, etc.) associated with processor circuitry located in one or more hardware devices, but the entire program and/or parts thereof could alternatively be executed by one or more hardware devices other than the processor circuitry and/or embodied in firmware or dedicated hardware. The machine-readable instructions may be distributed across multiple hardware devices and/or executed by two or more hardware devices (e.g., a server and a client hardware device). For example, the client hardware device may be implemented by an endpoint client hardware device (e.g., a hardware device associated with a user) or an intermediate client hardware device (e.g., a RAN) gateway that may facilitate communication between a server and an endpoint client hardware device). Similarly, the non-transitory computer-readable storage media may include one or more mediums located in one or more hardware devices. Further, although the example program is described with reference to the flowcharts illustrated in <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>, many other methods of implementing the example location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may alternatively be used. For example, the order of execution of the blocks may be changed, and/or some of the blocks described may be changed, eliminated, or combined. Additionally or alternatively, any or all of the blocks may be implemented by one or more hardware circuits (e.g., processor circuitry, discrete and/or integrated analog and/or digital circuitry, an FPGA, an ASIC, a comparator, an operational-amplifier (op-amp), a logic circuit, etc.) structured to perform the corresponding operation without executing software or firmware. The processor circuitry may be distributed in different network locations and/or local to one or more hardware devices (e.g., a single-core processor (e.g., a single core CPU), a multi-core processor (e.g., a multi-core CPU, an XPU, etc.) in a single machine, multiple processors distributed across multiple servers of a server rack, multiple processors distributed across one or more server racks, a CPU and/or a FPGA located in the same package (e.g., the same integrated circuit (IC) package or in two or more separate housings, etc.).</p><p id="p-0389" num="0376">The machine-readable instructions described herein may be stored in one or more of a compressed format, an encrypted format, a fragmented format, a compiled format, an executable format, a packaged format, etc. Machine-readable instructions as described herein may be stored as data or a data structure (e.g., as portions of instructions, code, representations of code, etc.) that may be utilized to create, manufacture, and/or produce machine executable instructions. For example, the machine-readable instructions may be fragmented and stored on one or more storage devices and/or computing devices (e.g., servers) located at the same or different locations of a network or collection of networks (e.g., in the cloud, in edge devices, etc.). The machine-readable instructions may require one or more of installation, modification, adaptation, updating, combining, supplementing, configuring, decryption, decompression, unpacking, distribution, reassignment, compilation, etc., in order to make them directly readable, interpretable, and/or executable by a computing device and/or other machine. For example, the machine-readable instructions may be stored in multiple parts, which are individually compressed, encrypted, and/or stored on separate computing devices, wherein the parts when decrypted, decompressed, and/or combined form a set of machine executable instructions that implement one or more operations that may together form a program such as that described herein.</p><p id="p-0390" num="0377">In another example, the machine-readable instructions may be stored in a state in which they may be read by processor circuitry, but require addition of a library (e.g., a dynamic link library (DLL)), a software development kit (SDK), an API, etc., in order to execute the machine-readable instructions on a particular computing device or other device. In another example, the machine-readable instructions may need to be configured (e.g., settings stored, data input, network addresses recorded, etc.) before the machine-readable instructions and/or the corresponding program(s) can be executed in whole or in part. Thus, machine-readable media, as used herein, may include machine-readable instructions and/or program(s) regardless of the particular format or state of the machine-readable instructions and/or program(s) when stored or otherwise at rest or in transit.</p><p id="p-0391" num="0378">The machine-readable instructions described herein can be represented by any past, present, or future instruction language, scripting language, programming language, etc. For example, the machine-readable instructions may be represented using any of the following languages: C, C++, Java, C#, Perl, Python, JavaScript, HyperText Markup Language (HTML), Structured Query Language (SQL), Swift, etc.</p><p id="p-0392" num="0379">As mentioned above, the example operations of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> may be implemented using executable instructions (e.g., computer and/or machine-readable instructions) stored on one or more non-transitory computer and/or machine-readable media such as optical storage devices, magnetic storage devices, an HDD, a flash memory, a read-only memory (ROM), a CD, a DVD, a cache, a RAM of any type, a register, and/or any other storage device or storage disk in which information is stored for any duration (e.g., for extended time periods, permanently, for brief instances, for temporarily buffering, and/or for caching of the information). As used herein, the terms non-transitory computer-readable medium, non-transitory computer-readable storage medium, non-transitory machine-readable medium, and non-transitory machine-readable storage medium are expressly defined to include any type of computer-readable storage device and/or storage disk and to exclude propagating signals and to exclude transmission media. As used herein, the terms &#x201c;computer-readable storage device&#x201d; and &#x201c;machine-readable storage device&#x201d; are defined to include any physical (mechanical and/or electrical) structure to store information, but to exclude propagating signals and to exclude transmission media. Examples of computer-readable storage devices and machine-readable storage devices include random access memory of any type, read only memory of any type, solid state memory, flash memory, optical discs, magnetic disks, disk drives, and/or redundant array of independent disks (RAID) systems. As used herein, the term &#x201c;device&#x201d; refers to physical structure such as mechanical and/or electrical equipment, hardware, and/or circuitry that may or may not be configured by computer-readable instructions, machine-readable instructions, etc., and/or manufactured to execute computer-readable instructions, machine-readable instructions, etc.</p><p id="p-0393" num="0380">&#x201c;Including&#x201d; and &#x201c;comprising&#x201d; (and all forms and tenses thereof) are used herein to be open ended terms. Thus, whenever a claim employs any form of &#x201c;include&#x201d; or &#x201c;comprise&#x201d; (e.g., comprises, includes, comprising, including, having, etc.) as a preamble or within a claim recitation of any kind, it is to be understood that additional elements, terms, etc., may be present without falling outside the scope of the corresponding claim or recitation. As used herein, when the phrase &#x201c;at least&#x201d; is used as the transition term in, for example, a preamble of a claim, it is open-ended in the same manner as the term &#x201c;comprising&#x201d; and &#x201c;including&#x201d; are open ended. The term &#x201c;and/or&#x201d; when used, for example, in a form such as A, B, and/or C refers to any combination or subset of A, B, C such as (1) A alone, (2) B alone, (3) C alone, (<b>4</b>) A with B, (5) A with C, (6) B with C, or (7) A with B and with C. As used herein in the context of describing structures, components, items, objects and/or things, the phrase &#x201c;at least one of A and B&#x201d; is intended to refer to implementations including any of (1) at least one A, (2) at least one B, or (3) at least one A and at least one B. Similarly, as used herein in the context of describing structures, components, items, objects and/or things, the phrase &#x201c;at least one of A or B&#x201d; is intended to refer to implementations including any of (1) at least one A, (2) at least one B, or (3) at least one A and at least one B. As used herein in the context of describing the performance or execution of processes, instructions, actions, activities and/or steps, the phrase &#x201c;at least one of A and B&#x201d; is intended to refer to implementations including any of (1) at least one A, (2) at least one B, or (3) at least one A and at least one B. Similarly, as used herein in the context of describing the performance or execution of processes, instructions, actions, activities and/or steps, the phrase &#x201c;at least one of A or B&#x201d; is intended to refer to implementations including any of (1) at least one A, (2) at least one B, or (3) at least one A and at least one B. As used herein, singular references (e.g., &#x201c;a&#x201d;, &#x201c;an&#x201d;, &#x201c;first&#x201d;, &#x201c;second&#x201d;, etc.) do not exclude a plurality. The term &#x201c;a&#x201d; or &#x201c;an&#x201d; object, as used herein, refers to one or more of that object. The terms &#x201c;a&#x201d; (or &#x201c;an&#x201d;), &#x201c;one or more&#x201d;, and &#x201c;at least one&#x201d; are used interchangeably herein. Furthermore, although individually listed, a plurality of means, elements or method actions may be implemented by, e.g., the same entity or object. Additionally, although individual features may be included in different examples or claims, these may possibly be combined, and the inclusion in different examples or claims does not imply that a combination of features is not feasible and/or advantageous.</p><p id="p-0394" num="0381"><figref idref="DRAWINGS">FIG. <b>46</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>4600</b> that may be executed and/or instantiated by the processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object based on cellular data. The example machine-readable instructions and/or example operations <b>4600</b> of <figref idref="DRAWINGS">FIG. <b>46</b></figref> begin at block <b>4602</b>, at which the location engine circuitry <b>200</b> enqueues a data pointer into a first data queue. In some examples, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can receive wireless data, which can include SRS data, from the device <b>302</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>. For example, the RX core <b>1710</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> can receive the wireless data identified by UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. In some examples, the wireless data identified by UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> can be the wireless data transmitted by the device <b>302</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref> to the first base station <b>304</b> of <figref idref="DRAWINGS">FIG. <b>3</b></figref>.</p><p id="p-0395" num="0382">In some examples, the parser circuitry <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can enqueue a data pointer that references and/or otherwise is associated with the SRS data into a first data queue. In some examples, the first data queue is associated with a first core of multi-core processor circuitry. For example, the DLB circuitry <b>1714</b>, which can be included in and/or implemented by the parser circuitry <b>220</b>, can enqueue the data pointer into a first data queue that is associated with a first core of the multi-core processor circuitry <b>1708</b>, such as one of the one or more second cores <b>1722</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0396" num="0383">At block <b>4604</b>, the location engine circuitry <b>200</b> generates at least one of a reception angle dataset or a time-of-arrival dataset based on sounding reference signal measurement data from the device. For example, the TOA determination circuitry <b>240</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine and/or generate a TOA dataset including one or more sets of TOA data based on SRS data received at one or more base stations, such as the first base station <b>304</b>, that is transmitted from the device <b>302</b>. In some examples, the one of the one or more second cores <b>1722</b> can determine TOA data based on the UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0397" num="0384">In some examples, the AOA determination circuitry <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine and/or generate a reception angle dataset (e.g., an AOA dataset) including one or more sets of AOA data based on the SRS data received at one or more base stations, such as the first base station <b>304</b>, that is transmitted from the device <b>302</b>. In some examples, the one of the one or more second cores <b>1722</b> can determine AOA data based on the UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. In some examples, a first one of the second cores <b>1722</b> can determine TOA data UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> and a second one of the second cores <b>1722</b> can determine AOA data based on the UE #1 L1 SRS location data in <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. For example, the parser circuitry <b>220</b> can enqueue a first data pointer associated with the TOA data in a first data queue associated with the first one of the second cores <b>1722</b> and enqueue a second data pointer associated with the AOA data in a second data queue associated with the second one of the second cores <b>1722</b>.</p><p id="p-0398" num="0385">At block <b>4606</b>, the location engine circuitry <b>200</b> dequeues the data pointer from the first data queue to a second data queue. For example, the parser circuitry <b>220</b> can dequeue the data pointer from the first data queue to a second data queue associated with a second core of the multi-core processor circuitry. For example, the DLB circuitry <b>1714</b>, which can be included in and/or implemented by the parser circuitry <b>220</b>, can dequeue the data pointer from the first data queue to a second data queue that is associated with a second core of the multi-core processor circuitry <b>1708</b>, such as the TX core <b>1712</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>.</p><p id="p-0399" num="0386">At block <b>4608</b>, the location engine circuitry <b>200</b> determines a location of the device based on the at least one of the reception angle data or the time-of-arrival data. For example, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a location of the device <b>302</b> based on at least one of AOA data or TOA data associated with the device <b>302</b>. In some examples, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can generate a command, an instruction, etc., based on the location. In some examples, the command, the instruction, etc., can cause the device <b>302</b> to change a direction, a position, a speed, etc. After determining the location of the device at block <b>4608</b>, the example machine-readable instructions and/or the example operations <b>4600</b> of <figref idref="DRAWINGS">FIG. <b>46</b></figref> conclude.</p><p id="p-0400" num="0387"><figref idref="DRAWINGS">FIG. <b>47</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>4700</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on at least one of time-of-arrival data or time-difference-of-arrival data associated with different base stations. The example machine-readable instructions and/or the example operations <b>4700</b> of <figref idref="DRAWINGS">FIG. <b>47</b></figref> begin at block <b>4702</b>, at which the location engine circuitry <b>200</b> receives a request to locate user equipment (UE) based on a location service level agreement (SLA). For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can receive a request to locate the UE <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In some examples, the interface circuitry <b>210</b> can receive the request at an LMF as disclosed herein.</p><p id="p-0401" num="0388">At block <b>4704</b>, the location engine circuitry <b>200</b> configures the UE to transmit sounding reference signal (SRS) data to satisfy the location SLA. For example, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can configure the UE <b>1002</b> to operate in a manner to satisfy an SLA, which can include accuracy requirements (e.g., location accuracy requirements), latency requirements, bandwidth or throughput requirements, etc., and/or any combination(s) thereof. In some examples, the event generation circuitry <b>270</b> can configure the UE <b>1002</b> via at least one of a DU or an RU as disclosed herein.</p><p id="p-0402" num="0389">At block <b>4706</b>, the location engine circuitry <b>200</b> causes the UE to transmit SRS data with a periodicity, transmission comb, frequency, and/or bandwidth based on the configuration. For example, the event generation circuitry <b>270</b> can cause the UE <b>1002</b> to schedule and transmit the SRS data to one(s) of the base stations <b>1004</b>, <b>1006</b>, <b>1008</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0403" num="0390">At block <b>4708</b>, the location engine circuitry <b>200</b> receives the UE SRS data at a first antenna of a first base station and a second antenna of a second base station. For example, the interface circuitry <b>210</b> can receive the SRS data from the UE <b>1002</b> via a first antenna of the first base station <b>1004</b> and a second antenna of the second base station <b>1006</b>.</p><p id="p-0404" num="0391">At block <b>4710</b>, the location engine circuitry <b>200</b> determines time-of-arrival (TOA) values between UE and each receiving antenna pair. For example, the TOA determination circuitry <b>240</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first TOA value based on a first timestamp at which the first antenna of the first base station <b>1004</b> received the SRS data. In some examples, the TOA determination circuitry <b>240</b> can determine a second TOA value based on a second timestamp at which the second antenna of the second base station <b>1006</b> received the SRS data.</p><p id="p-0405" num="0392">At block <b>4712</b>, the location engine circuitry <b>200</b> determines a TDOA value based on the TOA values. For example, the TDOA determination circuitry <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine the parabolas <b>1010</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> based on the TOA values. In some examples, the TDOA determination circuitry <b>250</b> determines the TDOA values at the LMF.</p><p id="p-0406" num="0393">At block <b>4714</b>, the location engine circuitry <b>200</b> determines an intersection of the TDOA values to determine a location of the UE. For example, the TDOA determination circuitry <b>250</b> can determine an intersection of the parabolas <b>1010</b> to determine a location of the UE <b>1002</b>. In some examples, the TDOA determination circuitry <b>250</b> determines the intersection of the TDOA values at the LMF.</p><p id="p-0407" num="0394">At block <b>4716</b>, the location engine circuitry <b>200</b> publishes location results for access by at least one of electronic device(s) or service(s). For example, the interface circuitry <b>210</b> can publish, provide, and/or transmit the location of the UE <b>1002</b> to other hardware (e.g., electronic device(s)), software (e.g., service(s), application(s), etc.), and/or firmware.</p><p id="p-0408" num="0395">At block <b>4718</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring the location of the UE. For example, the interface circuitry <b>210</b> can determine whether additional SRS data is to be received from the UE <b>1002</b>. In some examples, the determination can be based on the SLA. If, at block <b>4718</b>, the location engine circuitry <b>200</b> determines to continue monitoring the location of the UE, control returns to block <b>4702</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>4700</b> of <figref idref="DRAWINGS">FIG. <b>47</b></figref> conclude.</p><p id="p-0409" num="0396"><figref idref="DRAWINGS">FIG. <b>48</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>4800</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine a location of a device and/or an object based on at least one of time-of-arrival data or time-difference-of-arrival data associated with the same base station. The example machine-readable instructions and/or the example operations <b>4800</b> of <figref idref="DRAWINGS">FIG. <b>48</b></figref> begin at block <b>4802</b>, at which the location engine circuitry <b>200</b> receives a request to locate user equipment (UE) based on a location service level agreement (SLA). For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can receive a request to locate the UE <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In some examples, the interface circuitry <b>210</b> can receive the request at an LMF as disclosed herein.</p><p id="p-0410" num="0397">At block <b>4804</b>, the location engine circuitry <b>200</b> configures the UE to transmit sounding reference signal (SRS) data to satisfy the location SLA. For example, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can configure the UE <b>1002</b> to operate in a manner to satisfy an SLA, which can include accuracy requirements (e.g., location accuracy requirements), latency requirements, bandwidth or throughput requirements, etc., and/or any combination(s) thereof. In some examples, the event generation circuitry <b>270</b> can configure the UE <b>1002</b> via at least one of a DU or an RU as disclosed herein.</p><p id="p-0411" num="0398">At block <b>4806</b>, the location engine circuitry <b>200</b> causes the UE to transmit SRS data with a periodicity, transmission comb, frequency, and/or bandwidth based on the configuration. For example, the event generation circuitry <b>270</b> can cause the UE <b>1002</b> to schedule and transmit the SRS data to the first base station <b>1004</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0412" num="0399">At block <b>4808</b>, the location engine circuitry <b>200</b> receives the UE SRS data at a first antenna and a second antenna of a first base station. For example, the interface circuitry <b>210</b> can receive the SRS data from the UE <b>1002</b> via a first antenna of the first base station <b>1004</b> and a second antenna of the first base station <b>1004</b>.</p><p id="p-0413" num="0400">At block <b>4810</b>, the location engine circuitry <b>200</b> determines time-of-arrival (TOA) values between the UE and respective ones of the first and second antenna. For example, the TOA determination circuitry <b>240</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first TOA value based on a first timestamp at which the first antenna of the first base station <b>1004</b> received the SRS data. In some examples, the TOA determination circuitry <b>240</b> can determine a second TOA value based on a second timestamp at which the second antenna of the first base station <b>1004</b> received the SRS data.</p><p id="p-0414" num="0401">At block <b>4812</b>, the location engine circuitry <b>200</b> determines a TDOA value based on the TOA values. For example, the TDOA determination circuitry <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine the parabolas <b>1010</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> based on the TOA values. In some examples, the TDOA determination circuitry <b>250</b> determines the TDOA values at the LMF.</p><p id="p-0415" num="0402">At block <b>4814</b>, the location engine circuitry <b>200</b> determines an intersection of the TDOA value(s) to determine a location of the UE. For example, the TDOA determination circuitry <b>250</b> can determine an intersection of the parabolas <b>1010</b> to determine a location of the UE <b>1002</b>. In some examples, the TDOA determination circuitry <b>250</b> determines the intersection of the TDOA values at the LMF.</p><p id="p-0416" num="0403">At block <b>4816</b>, the location engine circuitry <b>200</b> publishes a location of the UE for access by at least one of electronic device(s) or service(s). For example, the interface circuitry <b>210</b> can publish, provide, and/or transmit the location of the UE <b>1002</b> to other hardware (e.g., electronic device(s)), software (e.g., service(s), application(s), etc.), and/or firmware.</p><p id="p-0417" num="0404">At block <b>4818</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring the location of the UE. For example, the interface circuitry <b>210</b> can determine whether additional SRS data is to be received from the UE <b>1002</b> by the first base station <b>1004</b>. In some examples, the determination can be based on the location SLA. If, at block <b>4818</b>, the location engine circuitry <b>200</b> determines to continue monitoring the location of the UE, control returns to block <b>4802</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>4800</b> of <figref idref="DRAWINGS">FIG. <b>48</b></figref> conclude.</p><p id="p-0418" num="0405"><figref idref="DRAWINGS">FIG. <b>49</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>4900</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on angle-of-arrival data associated with different base stations. The example machine-readable instructions and/or the example operations <b>4900</b> of <figref idref="DRAWINGS">FIG. <b>49</b></figref> begin at block <b>4902</b>, at which the location engine circuitry <b>200</b> receives a request to locate user equipment (UE) based on a location service level agreement (SLA). For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can receive a request to locate the UE <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>. In some examples, the interface circuitry <b>210</b> can receive the request at an LMF as disclosed herein.</p><p id="p-0419" num="0406">At block <b>4904</b>, the location engine circuitry <b>200</b> configures the UE to transmit sounding reference signal (SRS) data in accordance with the location SLA. For example, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can configure the UE <b>1002</b> to operate in a manner to satisfy an SLA associated with location determination, which can include accuracy requirements (e.g., location accuracy requirements), latency requirements, bandwidth or throughput requirements, etc., and/or any combination(s) thereof. In some examples, the event generation circuitry <b>270</b> can configure the UE <b>1002</b> via at least one of a DU or an RU as disclosed herein.</p><p id="p-0420" num="0407">At block <b>4906</b>, the location engine circuitry <b>200</b> causes the UE to transmit SRS data with a periodicity, transmission comb, frequency, and/or bandwidth based on the configuration. For example, the event generation circuitry <b>270</b> can cause the UE <b>1002</b> to schedule and transmit the SRS data to one(s) of the base stations <b>1004</b>, <b>1006</b>, <b>1008</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0421" num="0408">At block <b>4908</b>, the location engine circuitry <b>200</b> receives the UE SRS data at a first antenna of a first base station and a second antenna of a second base station. For example, the interface circuitry <b>210</b> can receive the SRS data from the UE <b>1002</b> via a first antenna of the first base station <b>1004</b> and a second antenna of the second base station <b>1006</b>.</p><p id="p-0422" num="0409">At block <b>4910</b>, the location engine circuitry <b>200</b> determines an angle-of-arrival (AOA) value for each UE and receiving antenna pair. For example, the AOA determination circuitry <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first AOA value based on a first reception angle at which the first antenna of the first base station <b>1004</b> received the SRS data. In some examples, the AOA determination circuitry <b>260</b> can determine a second AOA value based on a second reception angle at which the second antenna of the second base station <b>1006</b> received the SRS data.</p><p id="p-0423" num="0410">At block <b>4912</b>, the location engine circuitry <b>200</b> determines a location of the UE based on the AOA values. For example, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a location of the UE <b>1002</b> based on at least one of the first reception angle or the second reception angle.</p><p id="p-0424" num="0411">At block <b>4914</b>, the location engine circuitry <b>200</b> publishes a location of the UE for access by at least one of electronic device(s) or service(s). For example, the interface circuitry <b>210</b> can publish, provide, and/or transmit the location of the UE <b>1002</b> to other hardware (e.g., electronic device(s)), software (e.g., service(s), application(s), etc.), and/or firmware.</p><p id="p-0425" num="0412">At block <b>4916</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring the location of the UE. For example, the interface circuitry <b>210</b> can determine whether additional SRS data is to be received from the UE <b>1002</b> by the first base station <b>1004</b> and/or the second base station <b>1006</b>. In some examples, the determination can be based on the location SLA. If, at block <b>4916</b>, the location engine circuitry <b>200</b> determines to continue monitoring the location of the UE, control returns to block <b>4902</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>4900</b> of <figref idref="DRAWINGS">FIG. <b>49</b></figref> conclude.</p><p id="p-0426" num="0413"><figref idref="DRAWINGS">FIG. <b>50</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>5000</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on angle-of-arrival data associated with the same base station. The example machine-readable instructions and/or the example operations <b>5000</b> of <figref idref="DRAWINGS">FIG. <b>50</b></figref> begin at block <b>5002</b>, at which the location engine circuitry <b>200</b> receives a request to locate a device based on a location service level agreement (SLA). For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can receive a request to locate the device <b>402</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0427" num="0414">At block <b>5004</b>, the location engine circuitry <b>200</b> configures the device to transmit sounding reference signal (SRS) data in accordance with the location SLA. For example, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can configure the device <b>402</b> to operate in a manner to satisfy an SLA associated with location determination, which can include accuracy requirements (e.g., location accuracy requirements), latency requirements, bandwidth or throughput requirements, etc., and/or any combination(s) thereof. In some examples, the SLA is based on an assigned or expected location of the device <b>402</b>. In some examples, the event generation circuitry <b>270</b> can configure the device <b>402</b> via at least one of a DU or an RU as disclosed herein.</p><p id="p-0428" num="0415">At block <b>5006</b>, the location engine circuitry <b>200</b> causes the device to transmit SRS data with a periodicity, transmission comb, frequency, and/or bandwidth based on the configuration. For example, the event generation circuitry <b>270</b> can cause the device <b>402</b> to schedule and transmit the SRS data to the first base station <b>404</b> of <figref idref="DRAWINGS">FIG. <b>4</b></figref>.</p><p id="p-0429" num="0416">At block <b>5008</b>, the location engine circuitry <b>200</b> receives the device SRS data at a first antenna and a second antenna of a base station. For example, the interface circuitry <b>210</b> can receive the SRS data from the device <b>402</b> via a first antenna of the first base station <b>404</b> and a second antenna of the first base station <b>404</b>.</p><p id="p-0430" num="0417">At block <b>5010</b>, the location engine circuitry <b>200</b> determines an angle-of-arrival (AOA) value between the device and respective ones of the first and second antenna. For example, the AOA determination circuitry <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first AOA value based on a first reception angle at which the first antenna of the first base station <b>404</b> received the SRS data. In some examples, the AOA determination circuitry <b>260</b> can determine a second AOA value based on a second reception angle at which the second antenna of the first base station <b>404</b> received the SRS data.</p><p id="p-0431" num="0418">At block <b>5012</b>, the location engine circuitry <b>200</b> determines a location of the device based on the AOA values. For example, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a location of the device <b>402</b> based on at least one of the first reception angle or the second reception angle.</p><p id="p-0432" num="0419">At block <b>5014</b>, the location engine circuitry <b>200</b> publishes a location of the device for access by at least one of electronic device(s) or service(s). For example, the interface circuitry <b>210</b> can publish, provide, and/or transmit the location of the device <b>402</b> to other hardware (e.g., electronic device(s)), software (e.g., service(s), application(s), etc.), and/or firmware.</p><p id="p-0433" num="0420">At block <b>5016</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring the location of the device. For example, the interface circuitry <b>210</b> can determine whether additional SRS data is to be received from the device <b>402</b> by the first base station <b>404</b>. In some examples, the determination can be based on the location SLA, the location of the device <b>402</b>, a change in location of the device <b>402</b>, etc., and/or any combination(s) thereof. If, at block <b>5016</b>, the location engine circuitry <b>200</b> determines to continue monitoring the location of the UE, control returns to block <b>5002</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>5000</b> of <figref idref="DRAWINGS">FIG. <b>50</b></figref> conclude.</p><p id="p-0434" num="0421"><figref idref="DRAWINGS">FIG. <b>51</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>5100</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s). The example machine-readable instructions and/or the example operations <b>5100</b> of <figref idref="DRAWINGS">FIG. <b>51</b></figref> begin at block <b>5102</b>, at which the location engine circuitry <b>200</b> parses cellular data obtained from device(s). For example, the parser circuitry <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can parse the SRS data <b>3512</b> of <figref idref="DRAWINGS">FIG. <b>35</b></figref> to identify parameters, statistics, and/or otherwise portion(s) of SRS data received from the UE <b>1002</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref>.</p><p id="p-0435" num="0422">At block <b>5104</b>, the location engine circuitry <b>200</b> verifies device(s) are trusted device(s). For example, the device identification circuitry <b>230</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine whether the UE <b>1002</b> is a trusted device, an authorized device, etc. In some examples, the device identification circuitry <b>230</b> can determine that the UE <b>1002</b> is an authorized device based on authentication data, authorization data, security data, validation data, etc., in the SRS data <b>3512</b> as associated with an SLA.</p><p id="p-0436" num="0423">At block <b>5106</b>, the location engine circuitry <b>200</b> identifies the device(s). For example, the device identification circuitry <b>230</b> can identify the UE <b>1002</b> based on an SRS parameter associated with the UE <b>1002</b>, such as a UE identifier of the SRS data <b>3512</b>.</p><p id="p-0437" num="0424">At block <b>5108</b>, the location engine circuitry <b>200</b> determines at least one of time-of-arrival (TOA) data or time-difference-of-arrival (TDOA) data associated with the cellular data. For example, the TOA determination circuitry <b>240</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first TOA value associated with the UE <b>1002</b> transmitting SRS data to the first base station <b>1004</b>, a second TOA value associated with the UE <b>1002</b> transmitting SRS data to the second base station <b>1006</b>, etc. In some examples, the TDOA determination circuitry <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can generate the parabolas <b>1010</b> of <figref idref="DRAWINGS">FIG. <b>10</b></figref> based on the first TOA value, the second TOA value, etc.</p><p id="p-0438" num="0425">At block <b>5110</b>, the location engine circuitry <b>200</b> determines angle-of-arrival (AOA) data associated with the cellular data. For example, the AOA determination circuitry <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine a first AOA value associated with the UE <b>1002</b> transmitting SRS data to the first base station <b>1004</b>, a second AOA value associated with the UE <b>1002</b> transmitting SRS data to the second base station <b>1006</b>, etc.</p><p id="p-0439" num="0426">At block <b>5112</b>, the location engine circuitry <b>200</b> determines at least one of a direction or a location of the device(s) using machine-learning model(s). For example, the direction determination circuitry <b>280</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can execute and/or instantiate the ML model(s) <b>296</b> using the AOA values as model inputs to generate model output(s), which can include a direction of the UE <b>1002</b>. In some examples, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can execute and/or instantiate the ML model(s) <b>296</b> using the TOA values as model inputs to generate model output(s), which can include a location of the UE <b>1002</b>.</p><p id="p-0440" num="0427">At block <b>5114</b>, the location engine circuitry <b>200</b> generates event(s) to cause action(s) based on at least one of the direction or the location. For example, the event generation circuitry <b>270</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can generate one or more events, which can cause the UE <b>1002</b> to carry out and/or otherwise perform one or more actions, activities, operations, tasks, etc. In some examples, the UE <b>1002</b> is an autonomous vehicle and the event generation circuitry <b>270</b> can generate an event to be representative of an instruction that, when received by the autonomous vehicle, can cause the autonomous vehicle to change speed, direction, etc. For example, the event can be based on at least one of the direction or the location of the autonomous vehicle or an object, a pedestrian, and/or a vehicle proximate to the autonomous vehicle.</p><p id="p-0441" num="0428">At block <b>5116</b>, the location engine circuitry <b>200</b> stores the at least one of the direction or the location of the device(s) in a datastore for application access. For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can store the at least one of the direction or the location of the UE <b>1002</b> in the datastore <b>292</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) as the cellular data <b>294</b> <figref idref="DRAWINGS">FIG. <b>2</b></figref>). In some examples, hardware (e.g., electronic device(s)), software (e.g., service(s), application(s), etc.), and/or firmware can access the at least one of the direction or the location of the UE <b>1002</b> in the datastore <b>292</b>.</p><p id="p-0442" num="0429">At block <b>5118</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring a location of the device(s). For example, the interface circuitry <b>210</b> can determine whether additional SRS data is to be received from the UE <b>1002</b>. In some examples, the determination can be based on an SLA associated with the UE <b>1002</b>. If, at block <b>5118</b>, the location engine circuitry <b>200</b> determines to continue monitoring a location of the device(s), control returns to block <b>5102</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>5100</b> of <figref idref="DRAWINGS">FIG. <b>51</b></figref> conclude.</p><p id="p-0443" num="0430"><figref idref="DRAWINGS">FIG. <b>52</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>4700</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to determine location(s) of device(s) and/or object(s) based on data queue management. The example machine-readable instructions and/or the example operations <b>5200</b> of <figref idref="DRAWINGS">FIG. <b>52</b></figref> begin at block <b>5202</b>, at which the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> determines whether to poll new complete user equipment SRS data. For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine whether to poll new complete SRS data associated with one or more UEs.</p><p id="p-0444" num="0431">If, at block <b>5202</b>, the location engine circuitry <b>200</b> determines not to poll new complete user equipment SRS data, control waits at block <b>5202</b>. Otherwise, control proceeds to block <b>5204</b>.</p><p id="p-0445" num="0432">At block <b>5204</b>, the location engine circuitry <b>200</b> determines whether a fast path is enabled by a service level agreement. For example, the parser circuitry <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine whether an SLA that is in effect for a particular application allows and/or unlocks (e.g., unlocks via an SDSi technique as disclosed herein) the processing of SRS data with improved efficiency and throughput with reduced latency. In some examples, the parser circuitry <b>220</b> can determine that the fast path is enabled and corresponds to a hardware efficient SRS data processing feature, which can be implemented by DLB circuitry as disclosed herein.</p><p id="p-0446" num="0433">If, at block <b>5204</b>, the location engine circuitry <b>200</b> determines that a fast path is enabled by a service level agreement, control proceeds to block <b>5206</b>. At block <b>5206</b>, the location engine circuitry <b>200</b> enqueues the UE SRS data with dynamic load balancer (DLB) circuitry. For example, the parser circuitry <b>220</b> can enqueue the UE SRS data using hardware. In some examples, the DLB circuitry <b>1714</b> of <figref idref="DRAWINGS">FIG. <b>14</b></figref>, which can be included in and/or implemented by the parser circuitry <b>220</b>, can enqueue the UE #2 L1 SRS location data of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> into a first data queue. In some examples, the first data queue can be associated with one of the worker cores of the multi-core processor circuitry <b>1708</b>, such as the worker core identified as UE1.</p><p id="p-0447" num="0434">At block <b>5208</b>, the location engine circuitry <b>200</b> determines location data based on the UE SRS data. For example, the TOA determination circuitry <b>240</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine location data, such as TOA data, based on the UE #2 L1 SRS location data of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. In some examples, worker core UE<b>1</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> can execute and/or instantiate one or more computing tasks, instructions, etc., on the UE #2 L1 SRS location data of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> to output the TOA data. Additionally or alternatively, the AOA determination circuitry <b>260</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) may determine location data, such as AOA data, based on the UE #2 L1 SRS location data of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. For example, worker core UE<b>1</b> (or different worker core(s)) of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> can execute and/or instantiate one or more computing tasks, instructions, etc., on the UE #2 L1 SRS location data of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> to output the AOA data. Additionally or alternatively, the TDOA determination circuitry <b>250</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) may determine location data, such as TDOA data, based on the TOA data and/or the AOA data. For example, worker core UE<b>1</b> (or different worker core(s)) of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref> can execute and/or instantiate one or more computing tasks, instructions, etc., on the TOA data and/or the AOA data to output the TDOA data.</p><p id="p-0448" num="0435">At block <b>5210</b>, the location engine circuitry <b>200</b> dequeues the location data with the DLB circuitry. For example, the parser circuitry <b>220</b> can dequeue the location data from the first data queue to a second data queue using hardware. In some examples, the second data queue can be associated with a core of the multi-core processor circuitry <b>1708</b>, such as the TX core <b>1712</b> of <figref idref="DRAWINGS">FIG. <b>17</b>A</figref>. After dequeuing the location data with the DLB circuitry at block <b>5210</b>, control proceeds to block <b>5214</b>.</p><p id="p-0449" num="0436">If, at block <b>5204</b>, the location engine circuitry <b>200</b> determines that a fast path is not enabled by a service level agreement, control proceeds to block <b>5212</b>. At block <b>5212</b>, the location engine circuitry <b>200</b> executes an instruction to copy the UE SRS data to a new memory location, which may be carried out with reduced efficiency with respect to the fast path as described above. For example, the parser circuitry <b>220</b> can execute a MEMCPY instruction to copy the UE SRS data, or portion(s) thereof, to memory in the multi-core processor circuitry <b>1708</b> and/or memory not included in the multi-core processor circuitry <b>1708</b>.</p><p id="p-0450" num="0437">At block <b>5214</b>, the location engine circuitry <b>200</b> determines a location of a UE. For example, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine an estimate of a location of a UE that supplied the SRS data based on the UE SRS data. In some examples, the location determination circuitry <b>290</b> can determine a location, a predicted location, etc., of a UE that supplied the SRS data based on the location data. In some examples, the location determination circuitry <b>290</b> can estimate, determine, and/or predict the location of the UE by executing and/or instantiating the ML model(s) <b>296</b> with the UE SRS data and/or the location data as input(s) to generate output(s), which can include the location of the UE.</p><p id="p-0451" num="0438">At block <b>5216</b>, the location engine circuitry <b>200</b> outputs the location to a location service. For example, the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can provide the estimate, determination, prediction, etc., of the location of the UE to a GUI executed and/or instantiated by an application/service as disclosed herein.</p><p id="p-0452" num="0439">At block <b>5218</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring a network environment. If, at block <b>5218</b>, the location engine circuitry <b>200</b> determines to continue monitoring the network environment, control returns to block <b>5202</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>5200</b> of <figref idref="DRAWINGS">FIG. <b>52</b></figref> conclude.</p><p id="p-0453" num="0440"><figref idref="DRAWINGS">FIG. <b>53</b></figref> is a flowchart representative of example machine-readable instructions and/or example operations <b>5300</b> that may be executed and/or instantiated by processor circuitry to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> to obtain cellular data based on a programmable configuration. The example machine-readable instructions and/or the example operations <b>5300</b> of <figref idref="DRAWINGS">FIG. <b>53</b></figref> begin at block <b>5302</b>, at which the location engine circuitry <b>200</b> initializes a programmable location data collector (PLDC). For example, the location engine circuitry <b>200</b> can execute, instantiate and/or implement the PLDC <b>516</b> of <figref idref="DRAWINGS">FIG. <b>5</b></figref>, or any other PLDC as disclosed herein.</p><p id="p-0454" num="0441">At block <b>5306</b>, the location engine circuitry <b>200</b> configures the PLDC based on a policy. For example, the parser circuitry <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can be configured to parse 5G L1 data (e.g., SRS data) substantially instantaneously with the receipt of the 5G L1 data by the interface circuitry <b>210</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) based on an SLA. In some examples, the parser circuitry <b>220</b> can be configured and/or programmed to parse 5G L1 data periodically (e.g., every minute, every hour, every day, etc.) based on an SLA.</p><p id="p-0455" num="0442">At block <b>5306</b>, the location engine circuitry <b>200</b> determines whether a time period based on the policy to access cellular data has elapsed. For example, the parser circuitry <b>220</b> can determine that the time period to access 5G L1 data indicated by the SLA is one hour. In some examples, the parser circuitry <b>220</b> can determine that one hour has elapsed since the last access of the 5G L1 data and thereby the parser circuitry <b>220</b> is to access the available 5G L1 data received by the interface circuitry <b>210</b>. In some examples, the parser circuitry <b>220</b> can access the 5G L1 data substantially instantaneously with the receipt of new 5G L1 data (e.g., the parser circuitry <b>220</b> can access the 5G L1 data every clock and/or processor clock cycle, computational cycle, etc.).</p><p id="p-0456" num="0443">If, at block <b>5306</b>, the location engine circuitry <b>200</b> determines that the time period based on the policy to access cellular data has not elapsed, control proceeds to block <b>5314</b>. If, at block <b>5306</b>, the location engine circuitry <b>200</b> determines that the time period based on the policy to access cellular data has elapsed, then, at block <b>5308</b>, the location engine circuitry <b>200</b> enqueues the cellular data with dynamic load balancer (DLB) circuitry. For example, the parser circuitry <b>220</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can enqueue the 5G L1 data using hardware to cause one or more worker compute cores to carry out processing tasks on the 5G L1 data with reduced latency and/or increased throughput. In some examples, the parser circuitry <b>220</b> can enqueue the 5G L1 data by enqueuing a data pointer to a queue implemented using hardware with the data pointer referencing a UE associated with the 5G L1 data, the 5G L1 data, and/or a combination thereof. In some examples, the data pointer can point, correspond to, and/or otherwise reference a memory location at which the 5G L1 data associated with the UE is stored and can be accessed by worker compute core(s).</p><p id="p-0457" num="0444">At block <b>5310</b>, the location engine circuitry <b>200</b> stores the cellular data for access by a logical entity. For example, the parser circuitry <b>220</b> can store and/or otherwise copy the 5G L1 data to a new memory or mass storage location. In some examples, a logical entity such as other hardware, software, and/or firmware can access the copied 5G L1 data. For example, an API can be invoked by an application to access the copied 5G L1 data for location determination operations in connection with one or more UEs. In some examples, a VM instantiated by a RAN server can poll and/or otherwise request the copied 5G L1 data for location determination operations in connection with one or more UEs.</p><p id="p-0458" num="0445">At block <b>5312</b>, the location engine circuitry <b>200</b> dequeues the cellular data with the DLB circuitry. For example, the parser circuitry <b>220</b> can dequeue the 5G L1 data by dequeuing the data pointer from the queue in response to receiving an indication that the 5G L1 data has been stored in the new memory or mass storage location. In some examples, the indication (e.g., an alert, a data bit written into a data structure, a hardware interrupt, data generation representative of the indication, etc.) is generated after the worker compute core(s) completed processing task(s) on the 5G L1 data.</p><p id="p-0459" num="0446">At block <b>5314</b>, the location engine circuitry <b>740</b> determines whether to change the policy based on a machine learning recommendation. For example, the location determination circuitry <b>290</b> (<figref idref="DRAWINGS">FIG. <b>2</b></figref>) can determine using the ML model(s) <b>296</b> that, based on the 5G L1 data and/or location based on thereof, a change to the SLA is needed for improved efficiency and/or accuracy of location determination operations in connection with one or more UEs.</p><p id="p-0460" num="0447">If, at block <b>5314</b>, the location engine circuitry <b>200</b> determines to change the policy based on a machine learning recommendation, control returns to block <b>5304</b> to configure the PLDC based on the AI/ML recommended change to the policy. Otherwise, control proceeds to block <b>5316</b>. At block <b>5316</b>, the location engine circuitry <b>200</b> determines whether to continue monitoring for new cellular data. If, at block <b>5316</b>, the location engine circuitry <b>200</b> determines to continue monitoring for new cellular data, control returns to block <b>5306</b>. Otherwise, the example machine-readable instructions and/or the example operations <b>5300</b> of <figref idref="DRAWINGS">FIG. <b>53</b></figref> conclude.</p><p id="p-0461" num="0448"><figref idref="DRAWINGS">FIG. <b>54</b></figref> is a block diagram of an example of components that may be present in an IoT device <b>5450</b> for implementing the techniques described herein. In some examples, the IoT device <b>5450</b> may include and/or implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The IoT device <b>5450</b> may include any combinations of the components shown in the example or referenced in the disclosure above. The components may be implemented as ICs, portions thereof, discrete electronic devices, or other modules, logic, hardware, software, firmware, or a combination thereof adapted in the IoT device <b>5450</b>, or as components otherwise incorporated within a chassis of a larger system. Additionally, the block diagram of <figref idref="DRAWINGS">FIG. <b>54</b></figref> is intended to depict a high-level view of components of the IoT device <b>5450</b>. However, some of the components shown may be omitted, additional components may be present, and different arrangement of the components shown may occur in other implementations.</p><p id="p-0462" num="0449">The IoT device <b>5450</b> may include processor circuitry in the form of, for example, a processor <b>5452</b>, which may be a microprocessor, a multi-core processor, a multithreaded processor, an ultra-low voltage processor, an embedded processor, or other known processing elements. The processor <b>5452</b> may be a part of a system on a chip (SoC) in which the processor <b>5452</b> and other components are formed into a single integrated circuit, or a single package, such as the Edison&#x2122; or Galileo&#x2122; SoC boards from Intel. As an example, the processor <b>5452</b> may include an Intel&#xae; Architecture Core&#x2122; based processor, such as a Quark&#x2122;, an Atom&#x2122;, an i3, an i5, an i7, or an MCU-class processor, or another such processor available from Intel&#xae; Corporation, Santa Clara, Calif. However, any number other processors may be used, such as available from Advanced Micro Devices, Inc. (AMD) of Sunnyvale, Calif., a MIPS-based design from MIPS Technologies, Inc. of Sunnyvale, Calif., an ARM-based design licensed from ARM Holdings, Ltd. or customer thereof, or their licensees or adopters. The processors may include units such as an A5-A14 processor from Apple&#xae; Inc., a Snapdragon&#x2122; processor from Qualcomm&#xae; Technologies, Inc., or an OMAP&#x2122; processor from Texas Instruments, Inc.</p><p id="p-0463" num="0450">The processor <b>5452</b> may communicate with a system memory <b>5454</b> over an interconnect <b>5456</b> (e.g., a bus). Any number of memory devices may be used to provide for a given amount of system memory. As examples, the memory may be random access memory (RAM) in accordance with a Joint Electron Devices Engineering Council (JEDEC) design such as the DDR or mobile DDR standards (e.g., LPDDR, LPDDR2, LPDDR3,or LPDDR4). In various implementations the individual memory devices may be of any number of different package types such as single die package (SDP), dual die package (DDP) or quad die package (Q17P). These devices, in some examples, may be directly soldered onto a motherboard to provide a lower profile solution, while in other examples the devices are configured as one or more memory modules that in turn couple to the motherboard by a given connector. Any number of other memory implementations may be used, such as other types of memory modules, e.g., dual inline memory modules (DIMMs) of different varieties including but not limited to microDlMMs or MiniDIMMs.</p><p id="p-0464" num="0451">To provide for persistent storage of information such as data, applications, operating systems and so forth, a storage <b>5458</b> may also couple to the processor <b>5452</b> via the interconnect <b>5456</b>. In an example the storage <b>5458</b> may be implemented via a solid state disk drive (SSDD). Other devices that may be used for the storage <b>5458</b> include flash memory cards, such as SD cards, microSD cards, xD picture cards, and the like, and USB flash drives. In low power implementations, the storage <b>5458</b> may be on-die memory or registers associated with the processor <b>5452</b>. However, in some examples, the storage <b>5458</b> may be implemented using a micro hard disk drive (HDD). Further, any number of new technologies may be used for the storage <b>5458</b> in addition to, or instead of, the technologies described, such resistance change memories, phase change memories, holographic memories, or chemical memories, among others.</p><p id="p-0465" num="0452">The components may communicate over the interconnect <b>5456</b>. The interconnect <b>5456</b> may include any number of technologies, including industry standard architecture (ISA), extended ISA (EISA), peripheral component interconnect (PCI), peripheral component interconnect extended (PCIx), PCI express (PCIe), or any number of other technologies. The interconnect <b>5456</b> may be a proprietary bus, for example, used in a SoC based system. Other bus systems may be included, such as an I2C interface, an SPI interface, point to point interfaces, and a power bus, among others.</p><p id="p-0466" num="0453">Given the variety of types of applicable communications from the device to another component or network, applicable communications circuitry used by the device may include or be embodied by any one or more of components <b>5462</b>, <b>5466</b>, <b>5468</b>, or <b>5470</b>. Accordingly, in various examples, applicable means for communicating (e.g., receiving, transmitting, etc.) may be embodied by such communications circuitry.</p><p id="p-0467" num="0454">The interconnect <b>5456</b> may couple the processor <b>5452</b> to a mesh transceiver <b>5462</b>, for communications with other mesh devices <b>5464</b>. The mesh transceiver <b>5462</b> may use any number of frequencies and protocols, such as 24 Gigahertz (GHz) transmissions under the IEEE 802.15.4 standard, using the Bluetooth&#xae; low energy (BLE) standard, as defined by the Bluetooth&#xae; Special Interest Group, or the ZigBee&#xae; standard, among others. Any number of radios, configured for a particular wireless communication protocol, may be used for the connections to the mesh devices <b>5464</b>. For example, a WLAN unit may be used to implement Wi-Fi&#x2122; communications in accordance with the Institute of Electrical and Electronics Engineers (IEEE) 802.11 standard. In addition, wireless wide area communications, e.g., according to a cellular or other wireless wide area protocol, may occur via a WWAN unit.</p><p id="p-0468" num="0455">The mesh transceiver <b>5462</b> may communicate using multiple standards or radios for communications at different range. For example, the IoT device <b>5450</b> may communicate with close devices, e.g., within about 10 meters, using a local transceiver based on BLE, or another low power radio, to save power. More distant mesh devices <b>5464</b>, e.g., within about 50 meters, may be reached over ZigBee or other intermediate power radios. Both communications techniques may take place over a single radio at different power levels, or may take place over separate transceivers, for example, a local transceiver using BLE and a separate mesh transceiver using ZigBee.</p><p id="p-0469" num="0456">A wireless network transceiver <b>5466</b> may be included to communicate with devices or services in the cloud <b>5400</b> via local or wide area network protocols. The wireless network transceiver <b>5466</b> may be a LPWA transceiver that follows the IEEE 802.15.4, or IEEE 802.15.4g standards, among others. The IoT device <b>5450</b> may communicate over a wide area using LoRaWAN&#x2122; (Long Range Wide Area Network) developed by Semtech and the LoRa Alliance. The techniques described herein are not limited to these technologies, but may be used with any number of other cloud transceivers that implement long range, low bandwidth communications, such as Sigfox, and other technologies. Further, other communications techniques, such as time-slotted channel hopping, described in the IEEE 802.15.4e specification may be used.</p><p id="p-0470" num="0457">Any number of other radio communications and protocols may be used in addition to the systems mentioned for the mesh transceiver <b>5462</b> and wireless network transceiver <b>5466</b>, as disclosed herein. For example, the radio transceivers <b>5462</b> and <b>5466</b> may include an LTE or other cellular transceiver that uses spread spectrum (SPA/SAS) communications for implementing high speed communications. Further, any number of other protocols may be used, such as Wi-Fi&#xae; networks for medium speed communications and provision of network communications.</p><p id="p-0471" num="0458">The radio transceivers <b>5462</b> and <b>5466</b> may include radios that are compatible with any number of 3GPP (Third Generation Partnership Project) specifications, notably Long Term Evolution (LTE), Long Term Evolution-Advanced (LTE-A), and Long Term Evolution-Advanced Pro (LTE-A Pro). It may be noted that radios compatible with any number of other fixed, mobile, or satellite communication technologies and standards may be selected. These may include, for example, any Cellular Wide Area radio communication technology, which may include e.g. a 5th Generation (5G) communication systems, a Global System for Mobile Communications (GSM) radio communication technology, a General Packet Radio Service (GPRS) radio communication technology, or an Enhanced Data Rates for GSM Evolution (EDGE) radio communication technology, a UMTS (Universal Mobile Telecommunications System) communication technology, In addition to the standards listed above, any number of satellite uplink technologies may be used for the wireless network transceiver <b>5466</b>, including, for example, radios compliant with standards issued by the ITU (International Telecommunication Union), or the ETSI (European Telecommunications Standards Institute), among others. The examples provided herein are thus understood as being applicable to various other communication technologies, both existing and not yet formulated.</p><p id="p-0472" num="0459">A network interface controller (NIC) <b>5468</b> may be included to provide a wired communication to the cloud <b>5400</b> or to other devices, such as the mesh devices <b>5464</b>. The wired communication may provide an Ethernet connection, or may be based on other types of networks, such as Controller Area Network (CAN), Local Interconnect Network (LIN), DeviceNet, ControlNet, Data Highway+, PROFIBUS, or PROFINET, among many others. An additional NIC <b>5468</b> may be included to allow connect to a second network, for example, a NIC <b>5468</b> providing communications to the cloud over Ethernet, and a second NIC <b>5468</b> providing communications to other devices over another type of network.</p><p id="p-0473" num="0460">The interconnect <b>5456</b> may couple the processor <b>5452</b> to an external interface <b>5470</b> that is used to connect external devices or subsystems. The external devices may include sensors <b>5472</b>, such as accelerometers, level sensors, flow sensors, optical light sensors, camera sensors, temperature sensors, a global positioning system (GPS) sensors, pressure sensors, barometric pressure sensors, and the like. The external interface <b>5470</b> further may be used to connect the IoT device <b>5450</b> to actuators <b>5474</b>, such as power switches, valve actuators, an audible sound generator, a visual warning device, and the like.</p><p id="p-0474" num="0461">In some optional examples, various input/output (I/O) devices may be present within, or connected to, the IoT device <b>5450</b>. For example, a display or other output device <b>5484</b> may be included to show information, such as sensor readings or actuator position. An input device <b>5486</b>, such as a touch screen or keypad may be included to accept input. An output device <b>5486</b> may include any number of forms of audio or visual display, including simple visual outputs such as binary status indicators (e.g., LEDs) and multi-character visual outputs, or more complex outputs such as display screens (e.g., LCD screens), with the output of characters, graphics, multimedia objects, and the like being generated or produced from the operation of the IoT device <b>5450</b>.</p><p id="p-0475" num="0462">A battery <b>5476</b> may power the IoT device <b>5450</b>, although in examples in which the IoT device <b>5450</b> is mounted in a fixed location, it may have a power supply coupled to an electrical grid. The battery <b>5476</b> may be a lithium ion battery, or a metal-air battery, such as a zinc-air battery, an aluminum-air battery, a lithium-air battery, and the like.</p><p id="p-0476" num="0463">A battery monitor/charger <b>5478</b> may be included in the IoT device <b>5450</b> to track the state of charge (SoCh) of the battery <b>5476</b>. The battery monitor/charger <b>5478</b> may be used to monitor other parameters of the battery <b>5476</b> to provide failure predictions, such as the state of health (SoH) and the state of function (SoF) of the battery <b>5476</b>. The battery monitor/charger <b>5478</b> may include a battery monitoring integrated circuit, such as an LTC4020 or an LTC2990 from Linear Technologies, an ADT7488A from ON Semiconductor of Phoenix, Ariz., or an IC from the UCD90xxx family from Texas Instruments of Dallas, Tex. The battery monitor/charger <b>5478</b> may communicate the information on the battery <b>5476</b> to the processor <b>5452</b> over the interconnect <b>5456</b>. The battery monitor/charger <b>5478</b> may also include an analog-to-digital (ADC) convertor that allows the processor <b>5452</b> to directly monitor the voltage of the battery <b>5476</b> or the current flow from the battery <b>5476</b>. The battery parameters may be used to determine actions that the IoT device <b>5450</b> may perform, such as transmission frequency, mesh network operation, sensing frequency, and the like.</p><p id="p-0477" num="0464">A power block <b>5480</b>, or other power supply coupled to a grid, may be coupled with the battery monitor/charger <b>5478</b> to charge the battery <b>5476</b>. In some examples, the power block <b>5480</b> may be replaced with a wireless power receiver to obtain the power wirelessly, for example, through a loop antenna in the IoT device <b>5450</b>. A wireless battery charging circuit, such as an LTC4020 chip from Linear Technologies of Milpitas, Calif., among others, may be included in the battery monitor/charger <b>5478</b>. The specific charging circuits chosen depends on the size of the battery <b>5476</b>, and thus, the current required. The charging may be performed using the Airfuel standard promulgated by the Airfuel Alliance, the Qi wireless charging standard promulgated by the Wireless Power Consortium, or the Rezence charging standard, promulgated by the Alliance for Wireless Power, among others.</p><p id="p-0478" num="0465">The storage <b>5458</b> may include instructions <b>5482</b> in the form of software, firmware, or hardware commands to implement the techniques described herein. Although such instructions <b>5482</b> are shown as code blocks included in the memory <b>5454</b> and the storage <b>5458</b>, it may be understood that any of the code blocks may be replaced with hardwired circuits, for example, built into an ASIC.</p><p id="p-0479" num="0466">In an example, the instructions <b>5482</b> provided via the memory <b>5454</b>, the storage <b>5458</b>, or the processor <b>5452</b> may be embodied as a non-transitory, machine-readable medium <b>5460</b> including code to direct the processor <b>5452</b> to perform electronic operations in the IoT device <b>5450</b>. The processor <b>5452</b> may access the non-transitory, machine-readable medium <b>5460</b> over the interconnect <b>5456</b>. For instance, the non-transitory, machine-readable medium <b>5460</b> may be embodied by devices described for the storage <b>5458</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> or may include specific storage units such as optical disks, flash drives, or any number of other hardware devices. The non-transitory, machine-readable medium <b>5460</b> may include instructions to direct the processor <b>5452</b> to perform a specific sequence or flow of actions, for example, as described with respect to the flowchart(s) and block diagram(s) of operations and functionality depicted above.</p><p id="p-0480" num="0467">Also in a specific example, the instructions <b>5482</b> on the processor <b>5452</b> (separately, or in combination with the instructions <b>5482</b> of the machine-readable medium <b>5460</b>) may configure execution or operation of a trusted execution environment (TEE) <b>5490</b>. In an example, the TEE <b>5490</b> operates as a protected area accessible to the processor <b>5452</b> for secure execution of instructions and secure access to data. Various implementations of the TEE <b>5490</b>, and an accompanying secure area in the processor <b>5452</b> or the memory <b>5454</b> may be provided, for instance, through use of Intel&#xae; Software Guard Extensions (SGX) or ARM&#xae; TrustZone&#xae; hardware security extensions, Intel&#xae; Management Engine (ME), or Intel&#xae; Converged Security Manageability Engine (CSME). Other aspects of security hardening, hardware roots-of-trust, and trusted or protected operations may be implemented in the IoT device <b>5450</b> through the TEE <b>5490</b> and the processor <b>5452</b>.</p><p id="p-0481" num="0468"><figref idref="DRAWINGS">FIG. <b>55</b></figref> is a block diagram of an example processor platform <b>5500</b> structured to execute and/or instantiate the example machine-readable instructions and/or the example operations of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> to implement the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The processor platform <b>5500</b> can be, for example, a server, a radio unit (e.g., a remote radio unit), a radio access network device, a distributed unit, a centralized unit, a core device or server, a personal computer, a workstation, a self-learning machine (e.g., a neural network), a mobile device (e.g., a cell phone, a smart phone, a tablet such as an iPad), or any other type of computing device.</p><p id="p-0482" num="0469">The processor platform <b>5500</b> of the illustrated example includes processor circuitry <b>5512</b>. The processor circuitry <b>5512</b> of the illustrated example is hardware. For example, the processor circuitry <b>5512</b> can be implemented by one or more integrated circuits, logic circuits, FPGAs, microprocessors, CPUs, GPUs, DSPs, and/or microcontrollers from any desired family or manufacturer. The processor circuitry <b>5512</b> may be implemented by one or more semiconductor based (e.g., silicon based) devices. In this example, the processor circuitry <b>5512</b> implements the parser circuitry <b>220</b>, the device identification circuitry <b>230</b> (identified by DEVICE ID CIRCUITRY), the TOA determination circuitry <b>240</b> (identified by TOA DETER CIRCUITRY), the TDOA determination circuitry <b>250</b> (identified by TDOA DETER CIRCUITRY), the AOA determination circuitry <b>260</b> (identified by AOA DETER CIRCUITRY), the event generation circuitry <b>270</b> (identified by EVENT GEN CIRCUITRY), the direction determination circuitry <b>280</b> (identified by DIRECTION DETER CIRCUITRY), and the location determination circuitry <b>290</b> (identified by LOCATION DETER CIRCUITRY) of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0483" num="0470">The processor circuitry <b>5512</b> of the illustrated example includes a local memory <b>5513</b> (e.g., a cache, registers, etc.). The processor circuitry <b>5512</b> of the illustrated example is in communication with a main memory including a volatile memory <b>5514</b> and a non-volatile memory <b>5516</b> by a bus <b>5518</b>. In some examples, the bus <b>5518</b> can implement the bus <b>298</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>. The volatile memory <b>5514</b> may be implemented by Synchronous Dynamic Random Access Memory (SDRAM), Dynamic Random Access Memory (DRAM), RAMBUS&#xae; Dynamic Random Access Memory (RDRAM&#xae;), and/or any other type of RAM device. The non-volatile memory <b>5516</b> may be implemented by flash memory and/or any other desired type of memory device. Access to the main memory <b>5514</b>, <b>5516</b> of the illustrated example is controlled by a memory controller <b>5517</b>.</p><p id="p-0484" num="0471">The processor platform <b>5500</b> of the illustrated example also includes interface circuitry <b>5520</b>. The interface circuitry <b>5520</b> may be implemented by hardware in accordance with any type of interface standard, such as an Ethernet interface, a universal serial bus (USB) interface, a Bluetooth&#xae; interface, a near field communication (NFC) interface, a Peripheral Component Interconnect (PCI) interface, and/or a Peripheral Component Interconnect Express (PCIe) interface. In this example, the interface circuitry <b>5520</b> implements the interface circuitry <b>210</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0485" num="0472">In the illustrated example, one or more input devices <b>5522</b> are connected to the interface circuitry <b>5520</b>. The input device(s) <b>5522</b> permit(s) a user to enter data and/or commands into the processor circuitry <b>5512</b>. The input device(s) <b>5522</b> can be implemented by, for example, an audio sensor, a microphone, a camera (still or video), a keyboard, a button, a mouse, a touchscreen, a track-pad, a trackball, an isopoint device, and/or a voice recognition system.</p><p id="p-0486" num="0473">One or more output devices <b>5524</b> are also connected to the interface circuitry <b>5520</b> of the illustrated example. The output device(s) <b>5524</b> can be implemented, for example, by display devices (e.g., a light emitting diode (LED), an organic light emitting diode (OLED), a liquid crystal display (LCD), a cathode ray tube (CRT) display, an in-place switching (IPS) display, a touchscreen, etc.), a tactile output device, a printer, and/or speaker. The interface circuitry <b>5520</b> of the illustrated example, thus, typically includes a graphics driver card, a graphics driver chip, and/or graphics processor circuitry such as a GPU.</p><p id="p-0487" num="0474">The interface circuitry <b>5520</b> of the illustrated example also includes a communication device such as a transmitter, a receiver, a transceiver, a modem, a residential gateway, a wireless access point, and/or a network interface to facilitate exchange of data with external machines (e.g., computing devices of any kind) by a network <b>5526</b>. The communication can be by, for example, an Ethernet connection, a digital subscriber line (DSL) connection, a telephone line connection, a coaxial cable system, a satellite system, a line-of-site wireless system, a cellular telephone system, an optical connection, etc.</p><p id="p-0488" num="0475">The processor platform <b>5500</b> of the illustrated example also includes one or more mass storage devices <b>5528</b> to store software and/or data. Examples of such mass storage devices <b>5528</b> include magnetic storage devices, optical storage devices, floppy disk drives, HDDs, CDs, Blu-ray disk drives, redundant array of independent disks (RAID) systems, solid state storage devices such as flash memory devices and/or SSDs, and DVD drives. In this example, the one or more mass storage devices <b>5528</b> implement the datastore <b>292</b>, the cellular data <b>294</b> (identified by CELL DATA), and the ML model(s) <b>296</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref>.</p><p id="p-0489" num="0476">The machine-readable instructions <b>5532</b>, which may be implemented by the machine-readable instructions of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>, may be stored in the mass storage device <b>5528</b>, in the volatile memory <b>5514</b>, in the non-volatile memory <b>5516</b>, and/or on a removable non-transitory computer-readable storage medium such as a CD or DVD. Additionally and/or alternatively, the processor platform <b>5500</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> may include any other type and/or quantity of hardware circuitry, such as acceleration circuitry (e.g., FPGAs, GPUs, neural network accelerators, vision processing units, etc.).</p><p id="p-0490" num="0477"><figref idref="DRAWINGS">FIG. <b>56</b></figref> is a block diagram of an example implementation of the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>. In this example, the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> is implemented by a microprocessor <b>5600</b>. For example, the microprocessor <b>5600</b> may be a general purpose microprocessor (e.g., general purpose microprocessor circuitry). The microprocessor <b>5600</b> executes some or all of the machine-readable instructions of the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> to effectively instantiate the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> as logic circuits to perform the operations corresponding to those machine-readable instructions. In some such examples, the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> is instantiated by the hardware circuits of the microprocessor <b>5600</b> in combination with the instructions. For example, the microprocessor <b>5600</b> may be implemented by multi-core hardware circuitry such as a CPU, a DSP, a GPU, an XPU, etc. Although it may include any number of example cores <b>5602</b> (e.g., 1 core), the microprocessor <b>5600</b> of this example is a multi-core semiconductor device including N cores. The cores <b>5602</b> of the microprocessor <b>5600</b> may operate independently or may cooperate to execute machine-readable instructions. For example, machine code corresponding to a firmware program, an embedded software program, or a software program may be executed by one of the cores <b>5602</b> or may be executed by multiple ones of the cores <b>5602</b> at the same or different times. In some examples, the machine code corresponding to the firmware program, the embedded software program, or the software program is split into threads and executed in parallel by two or more of the cores <b>5602</b>. The software program may correspond to a portion or all of the machine-readable instructions and/or operations represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>.</p><p id="p-0491" num="0478">The cores <b>5602</b> may communicate by a first example bus <b>5604</b>. In some examples, the first bus <b>5604</b> may be implemented by a communication bus to effectuate communication associated with one(s) of the cores <b>5602</b>. For example, the first bus <b>5604</b> may be implemented by at least one of an Inter-Integrated Circuit (I2C) bus, a Serial Peripheral Interface (SPI) bus, a PCI bus, or a PCIe bus. Additionally or alternatively, the first bus <b>5604</b> may be implemented by any other type of computing or electrical bus. The cores <b>5602</b> may obtain data, instructions, and/or signals from one or more external devices by example interface circuitry <b>5606</b>. The cores <b>5602</b> may output data, instructions, and/or signals to the one or more external devices by the interface circuitry <b>5606</b>. Although the cores <b>5602</b> of this example include example local memory <b>5620</b> (e.g., Level 1 (L1) cache that may be split into an L1 data cache and an L1 instruction cache), the microprocessor <b>5600</b> also includes example shared memory <b>5610</b> that may be shared by the cores (e.g., Level 2 (L2 cache)) for high-speed access to data and/or instructions. Data and/or instructions may be transferred (e.g., shared) by writing to and/or reading from the shared memory <b>5610</b>. The local memory <b>5620</b> of each of the cores <b>5602</b> and the shared memory <b>5610</b> may be part of a hierarchy of storage devices including multiple levels of cache memory and the main memory (e.g., the main memory <b>5514</b>, <b>5516</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>). Typically, higher levels of memory in the hierarchy exhibit lower access time and have smaller storage capacity than lower levels of memory. Changes in the various levels of the cache hierarchy are managed (e.g., coordinated) by a cache coherency policy.</p><p id="p-0492" num="0479">Each core <b>5602</b> may be referred to as a CPU, DSP, GPU, etc., or any other type of hardware circuitry. Each core <b>5602</b> includes control unit circuitry <b>5614</b>, arithmetic and logic (AL) circuitry (sometimes referred to as an ALU) <b>5616</b>, a plurality of registers <b>5618</b>, the local memory <b>5620</b>, and a second example bus <b>5622</b>. Other structures may be present. For example, each core <b>5602</b> may include vector unit circuitry, single instruction multiple data (SIMD) unit circuitry, load/store unit (LSU) circuitry, branch/jump unit circuitry, floating-point unit (FPU) circuitry, etc. The control unit circuitry <b>5614</b> includes semiconductor-based circuits structured to control (e.g., coordinate) data movement within the corresponding core <b>5602</b>. The AL circuitry <b>5616</b> includes semiconductor-based circuits structured to perform one or more mathematic and/or logic operations on the data within the corresponding core <b>5602</b>. The AL circuitry <b>5616</b> of some examples performs integer based operations. In other examples, the AL circuitry <b>5616</b> also performs floating point operations. In yet other examples, the AL circuitry <b>5616</b> may include first AL circuitry that performs integer based operations and second AL circuitry that performs floating point operations. In some examples, the AL circuitry <b>5616</b> may be referred to as an Arithmetic Logic Unit (ALU). The registers <b>5618</b> are semiconductor-based structures to store data and/or instructions such as results of one or more of the operations performed by the AL circuitry <b>5616</b> of the corresponding core <b>5602</b>. For example, the registers <b>5618</b> may include vector register(s), SIMD register(s), general purpose register(s), flag register(s), segment register(s), machine specific register(s), instruction pointer register(s), control register(s), debug register(s), memory management register(s), machine check register(s), etc. The registers <b>5618</b> may be arranged in a bank as shown in <figref idref="DRAWINGS">FIG. <b>56</b></figref>. Alternatively, the registers <b>5618</b> may be organized in any other arrangement, format, or structure including distributed throughout the core <b>5602</b> to shorten access time. The second bus <b>5622</b> may be implemented by at least one of an I2C bus, a SPI bus, a PCI bus, or a PCIe bus</p><p id="p-0493" num="0480">Each core <b>5602</b> and/or, more generally, the microprocessor <b>5600</b> may include additional and/or alternate structures to those shown and described above. For example, one or more clock circuits, one or more power supplies, one or more power gates, one or more cache home agents (CHAs), one or more converged/common mesh stops (CMSs), one or more shifters (e.g., barrel shifter(s)) and/or other circuitry may be present. The microprocessor <b>5600</b> is a semiconductor device fabricated to include many transistors interconnected to implement the structures described above in one or more integrated circuits (ICs) contained in one or more packages. The microprocessor <b>5600</b> may include and/or cooperate with one or more accelerators. In some examples, accelerators are implemented by logic circuitry to perform certain tasks more quickly and/or efficiently than can be done by a general purpose processor. Examples of accelerators include ASICs and FPGAs such as those discussed herein. A GPU or other programmable device can also be an accelerator. Accelerators may be on-board the processor circuitry, in the same chip package as the processor circuitry and/or in one or more separate packages from the processor circuitry.</p><p id="p-0494" num="0481"><figref idref="DRAWINGS">FIG. <b>57</b></figref> is a block diagram of another example implementation of the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>. In this example, the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> is implemented by FPGA circuitry <b>5700</b>. For example, the FPGA circuitry <b>5700</b> may be implemented by an FPGA. The FPGA circuitry <b>5700</b> can be used, for example, to perform operations that could otherwise be performed by the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> executing corresponding machine-readable instructions. However, once configured, the FPGA circuitry <b>5700</b> instantiates the machine-readable instructions in hardware and, thus, can often execute the operations faster than they could be performed by a general purpose microprocessor executing the corresponding software.</p><p id="p-0495" num="0482">More specifically, in contrast to the microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> described above (which is a general purpose device that may be programmed to execute some or all of the machine-readable instructions represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> but whose interconnections and logic circuitry are fixed once fabricated), the FPGA circuitry <b>5700</b> of the example of <figref idref="DRAWINGS">FIG. <b>57</b></figref> includes interconnections and logic circuitry that may be configured and/or interconnected in different ways after fabrication to instantiate, for example, some or all of the machine-readable instructions represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. In particular, the FPGA circuitry <b>5700</b> may be thought of as an array of logic gates, interconnections, and switches. The switches can be programmed to change how the logic gates are interconnected by the interconnections, effectively forming one or more dedicated logic circuits (unless and until the FPGA circuitry <b>5700</b> is reprogrammed). The configured logic circuits enable the logic gates to cooperate in different ways to perform different operations on data received by input circuitry. Those operations may correspond to some or all of the software represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>. As such, the FPGA circuitry <b>5700</b> may be structured to effectively instantiate some or all of the machine-readable instructions of the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> as dedicated logic circuits to perform the operations corresponding to those software instructions in a dedicated manner analogous to an ASIC. Therefore, the FPGA circuitry <b>5700</b> may perform the operations corresponding to the some or all of the machine-readable instructions of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> faster than the general purpose microprocessor can execute the same.</p><p id="p-0496" num="0483">In the example of <figref idref="DRAWINGS">FIG. <b>57</b></figref>, the FPGA circuitry <b>5700</b> is structured to be programmed (and/or reprogrammed one or more times) by an end user by a hardware description language (HDL) such as Verilog. The FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>, includes example input/output (I/O) circuitry <b>5702</b> to obtain and/or output data to/from example configuration circuitry <b>5704</b> and/or external hardware <b>5706</b>. For example, the configuration circuitry <b>5704</b> may be implemented by interface circuitry that may obtain machine-readable instructions to configure the FPGA circuitry <b>5700</b>, or portion(s) thereof. In some such examples, the configuration circuitry <b>5704</b> may obtain the machine-readable instructions from a user, a machine (e.g., hardware circuitry (e.g., programmed or dedicated circuitry) that may implement an Artificial Intelligence/Machine Learning (AI/ML) model to generate the instructions), etc. In some examples, the external hardware <b>5706</b> may be implemented by external hardware circuitry. For example, the external hardware <b>5706</b> may be implemented by the microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>. The FPGA circuitry <b>5700</b> also includes an array of example logic gate circuitry <b>5708</b>, a plurality of example configurable interconnections <b>5710</b>, and example storage circuitry <b>5712</b>. The logic gate circuitry <b>5708</b> and the configurable interconnections <b>5710</b> are configurable to instantiate one or more operations that may correspond to at least some of the machine-readable instructions of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> and/or other desired operations. The logic gate circuitry <b>5708</b> shown in <figref idref="DRAWINGS">FIG. <b>57</b></figref> is fabricated in groups or blocks. Each block includes semiconductor-based electrical structures that may be configured into logic circuits. In some examples, the electrical structures include logic gates (e.g., And gates, Or gates, Nor gates, etc.) that provide basic building blocks for logic circuits. Electrically controllable switches (e.g., transistors) are present within each of the logic gate circuitry <b>5708</b> to enable configuration of the electrical structures and/or the logic gates to form circuits to perform desired operations. The logic gate circuitry <b>5708</b> may include other electrical structures such as look-up tables (LUTs), registers (e.g., flip-flops or latches), multiplexers, etc.</p><p id="p-0497" num="0484">The configurable interconnections <b>5710</b> of the illustrated example are conductive pathways, traces, vias, or the like that may include electrically controllable switches (e.g., transistors) whose state can be changed by programming (e.g., using an HDL instruction language) to activate or deactivate one or more connections between one or more of the logic gate circuitry <b>5708</b> to program desired logic circuits.</p><p id="p-0498" num="0485">The storage circuitry <b>5712</b> of the illustrated example is structured to store result(s) of the one or more of the operations performed by corresponding logic gates. The storage circuitry <b>5712</b> may be implemented by registers or the like. In the illustrated example, the storage circuitry <b>5712</b> is distributed amongst the logic gate circuitry <b>5708</b> to facilitate access and increase execution speed.</p><p id="p-0499" num="0486">The example FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> also includes example Dedicated Operations Circuitry <b>5714</b>. In this example, the Dedicated Operations Circuitry <b>5714</b> includes special purpose circuitry <b>5716</b> that may be invoked to implement commonly used functions to avoid the need to program those functions in the field. Examples of such special purpose circuitry <b>5716</b> include memory (e.g., DRAM) controller circuitry, PCIe controller circuitry, clock circuitry, transceiver circuitry, memory, and multiplier-accumulator circuitry. Other types of special purpose circuitry may be present. In some examples, the FPGA circuitry <b>5700</b> may also include example general purpose programmable circuitry <b>5718</b> such as an example CPU <b>5720</b> and/or an example DSP <b>5722</b>. Other general purpose programmable circuitry <b>5718</b> may additionally or alternatively be present such as a GPU, an XPU, etc., that can be programmed to perform other operations.</p><p id="p-0500" num="0487">Although <figref idref="DRAWINGS">FIGS. <b>56</b> and <b>57</b></figref> illustrate two example implementations of the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, many other approaches are contemplated. For example, as mentioned above, modern FPGA circuitry may include an on-board CPU, such as one or more of the example CPU <b>5720</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. Therefore, the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> may additionally be implemented by combining the example microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and the example FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>. In some such hybrid examples, a first portion of the machine-readable instructions represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> may be executed by one or more of the cores <b>5602</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, a second portion of the machine-readable instructions represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> may be executed by the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref>, and/or a third portion of the machine-readable instructions represented by the flowcharts of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref> may be executed by an ASIC. It should be understood that some or all of the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may, thus, be instantiated at the same or different times. Some or all of the location engine circuitry <b>200</b> may be instantiated, for example, in one or more threads executing concurrently and/or in series. Moreover, in some examples, some or all of the location engine circuitry <b>200</b> of <figref idref="DRAWINGS">FIG. <b>2</b></figref> may be implemented within one or more virtual machines and/or containers executing on the microprocessor.</p><p id="p-0501" num="0488">In some examples, the processor <b>5452</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the processor circuitry <b>5512</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> may be in one or more packages. For example, the microprocessor <b>5600</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref> and/or the FPGA circuitry <b>5700</b> of <figref idref="DRAWINGS">FIG. <b>57</b></figref> may be in one or more packages. In some examples, an XPU may be implemented by the processor <b>5452</b> and/or the processor circuitry <b>5612</b> of <figref idref="DRAWINGS">FIG. <b>56</b></figref>, which may be in one or more packages. For example, the XPU may include a CPU in one package, a DSP in another package, a GPU in yet another package, and an FPGA in still yet another package.</p><p id="p-0502" num="0489">A block diagram illustrating an example software distribution platform <b>5805</b> to distribute software such as the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> to hardware devices owned and/or operated by third parties is illustrated in <figref idref="DRAWINGS">FIG. <b>58</b></figref>. The example software distribution platform <b>5805</b> may be implemented by any computer server, data facility, cloud service, etc., capable of storing and transmitting software to other computing devices. The third parties may be customers of the entity owning and/or operating the software distribution platform <b>5805</b>. For example, the entity that owns and/or operates the software distribution platform <b>5805</b> may be a developer, a seller, and/or a licensor of software such as the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>. The third parties may be consumers, users, retailers, OEMs, etc., who purchase and/or license the software for use and/or re-sale and/or sub-licensing. In the illustrated example, the software distribution platform <b>5805</b> includes one or more servers and one or more storage devices. The storage devices store the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, which may correspond to the example machine-readable instructions <b>4600</b>, <b>4700</b>, <b>4800</b>, <b>4900</b>, <b>5000</b>, <b>5100</b>, <b>5200</b>, <b>5300</b> of <figref idref="DRAWINGS">FIGS. <b>46</b>-<b>53</b></figref>, as described above. The one or more servers of the example software distribution platform <b>5805</b> are in communication with an example network <b>5810</b>, which may correspond to any one or more of the Internet and/or any of the example networks <b>104</b>, <b>106</b>, <b>107</b>, <b>118</b>, <b>4010</b>, <b>5400</b>, <b>5526</b> described above. In some examples, the one or more servers are responsive to requests to transmit the software to a requesting party as part of a commercial transaction. Payment for the delivery, sale, and/or license of the software may be handled by the one or more servers of the software distribution platform and/or by a third party payment entity. The servers enable purchasers and/or licensors to download the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref> from the software distribution platform <b>5805</b>. For example, the software, which may correspond to the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>, may be downloaded to the example IoT device <b>5450</b>, which is to execute the machine-readable instructions <b>5482</b> to implement the location engine circuitry <b>200</b>, and/or the example processor platform <b>5500</b>, which is to execute the machine-readable instructions <b>5532</b> to implement the location engine circuitry <b>200</b>. In some examples, one or more servers of the software distribution platform <b>5805</b> periodically offer, transmit, and/or force updates to the software (e.g., the example machine-readable instructions <b>5482</b> of <figref idref="DRAWINGS">FIG. <b>54</b></figref> and/or the example machine-readable instructions <b>5532</b> of <figref idref="DRAWINGS">FIG. <b>55</b></figref>) to ensure improvements, patches, updates, etc., are distributed and applied to the software at the end user devices.</p><p id="p-0503" num="0490">From the foregoing, it will be appreciated that example systems, apparatus, articles of manufacture, and methods have been disclosed for distributed and scalable high performance location and positioning. Disclosed example systems, apparatus, articles of manufacture, and methods improve location determination of objects based on cellular data, which can include SRS data. Disclosed example systems, apparatus, articles of manufacture, and methods determine TOA data based on the SRS data; determine TDOA data based on the TOA data; determine AOA data based on the SRS data, and/or determine a location of the objects based on at least one of the TDOA or the AOA data. Disclosed systems, apparatus, articles of manufacture, and methods improve the efficiency of computing devices adapted, configured, and/or otherwise instantiated for location determination of objects by using less total time and/or resources by implementing the location determination on reduced information and/or without requiring time synchronization between objects and corresponding base stations. Disclosed systems, apparatus, articles of manufacture, and methods are accordingly directed to one or more improvement(s) in the operation of a machine such as a computer or other electronic and/or mechanical device.</p><p id="p-0504" num="0491">Example systems, articles of manufacture, apparatus, and methods for distributed and scalable high performance location and positioning are disclosed herein. Further examples and combinations thereof include the following:</p><p id="p-0505" num="0492">Example 1 includes an apparatus for location determination comprising at least one memory, machine-readable instructions, and processor circuitry to at least one of execute or instantiate the machine-readable instructions to at least enqueue a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first worker core of the processor circuitry, generate, with the first worker core, at least one of reception angle measurement dataset or time-of-arrival measurement dataset based on the sounding reference signal measurement data, dequeue the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset, the second data queue associated with a second worker core of the processor circuitry, and determine, with the second worker core, a location of the device based on the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset.</p><p id="p-0506" num="0493">In Example 2, the subject matter of Example 1 can optionally include that the processor circuitry is to generate the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset based on a data format associated with a location engine.</p><p id="p-0507" num="0494">In Example 3, the subject matter of Examples 1-2 can optionally include that the device is a first device, and the processor circuitry is to generate event data representative of an operation to be performed by the first device or a second device associated with the first device, and transmit the event data to at least one of the first device or the second device to cause the operation to be performed.</p><p id="p-0508" num="0495">In Example 4, the subject matter of Examples 1-3 can optionally include that the processor circuitry includes dynamic load balancer circuitry separate from the first worker core and the second worker core, the dynamic load balancer circuitry to include the first data queue and the second data queue, and the dynamic load balancer circuitry is to enqueue the data pointer into the first data queue and dequeue the data pointer in the second data queue.</p><p id="p-0509" num="0496">In Example 5, the subject matter of Examples 1-4 can optionally include that the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0510" num="0497">In Example 6, the subject matter of Examples 1-5 can optionally include that the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0511" num="0498">In Example 7, the subject matter of Examples 1-6 can optionally include that the processor circuitry is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0512" num="0499">In Example 8, the subject matter of Examples 1-7 can optionally include that the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0513" num="0500">In Example 9, the subject matter of Examples 1-8can optionally include that the processor circuitry is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0514" num="0501">In Example 10, the subject matter of Examples 1-9 can optionally include that the time-of-arrival measurement dataset includes first time-of-arrival data, second time-of-arrival data, third time-of-arrival data, and fourth time-of-arrival data, and the processor circuitry is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, determine that the third time-of-arrival data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, determine that the fourth time-of-arrival data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and determine the location of the device based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data.</p><p id="p-0515" num="0502">In Example 11, the subject matter of Examples 1-10 can optionally include that the processor circuitry is to determine time-difference-of-arrival data based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data, and determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0516" num="0503">In Example 12, the subject matter of Examples 1-11 can optionally include that the reception angle measurement dataset includes first reception angle data and second reception angle data, and the processor circuitry is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and determine the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0517" num="0504">In Example 13, the subject matter of Examples 1-12 can optionally include that the reception angle measurement dataset includes first reception angle data and second reception angle data, and the processor circuitry is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and determine the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0518" num="0505">In Example 14, the subject matter of Examples 1-13 can optionally include that the reception angle measurement dataset includes first reception angle data, second reception angle data, third reception angle data, and fourth reception angle data, and the processor circuitry is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, determine that the third reception angle data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, determine that the fourth reception angle data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and determine the location of the device based on at least one of the first reception angle data, the second reception angle data, the third reception angle data, or the fourth reception angle data.</p><p id="p-0519" num="0506">Example 15 includes an apparatus for location determination comprising at least one persistent memory, machine-readable instructions, and processor circuitry to at least one of execute or instantiate the machine-readable instructions to at least obtain first cellular data from one or more first antennas of a first base station and second cellular data from one or more second antennas of the first base station or a second base station, the first cellular data and the second cellular data from a device, store the first cellular data in a first linked list in the at least one persistent memory and the second cellular data in a second linked list in the at least one persistent memory, the first linked list associated with the one or more first antennas and the second linked list associated with the one or more second antennas, and determine a location of the device based on at least one of the first cellular data or the second cellular data.</p><p id="p-0520" num="0507">In Example 16, the subject matter of Example 15 can optionally include that the first cellular data and the second cellular data includes sounding reference signal measurement data associated with the device, the sounding reference signal measurement data from a plurality of antennas of one or more base stations including at least one of the first base station or the second base station, the plurality of antennas including the one or more first antennas and the one or more second antennas.</p><p id="p-0521" num="0508">In Example 17, the subject matter of Examples 15-16 can optionally include that the processor circuitry is to obtain sounding reference signal measurement data from the device, store a first data pointer corresponding to the sounding reference signal measurement data in the first linked list, determine time-of-arrival data associated with the sounding reference signal measurement data based on the sounding reference signal measurement data, store a second data pointer corresponding to the time-of-arrival data in a third linked list associated with the device, and after an access of the time-of-arrival data based on the second data pointer, determine the location based on the time-of-arrival data.</p><p id="p-0522" num="0509">In Example 18, the subject matter of Examples 15-17 can optionally include that the processor circuitry is to determine time-difference-of-arrival data based on the time-of-arrival data, and determine the location based on the time-difference-of-arrival data.</p><p id="p-0523" num="0510">In Example 19, the subject matter of Examples 15-18 can optionally include that the processor circuitry is to obtain sounding reference signal measurement data from the device, store a first data pointer corresponding to the sounding reference signal measurement data in the first linked list, determine angle-of-arrival data associated with the sounding reference signal measurement data based on the sounding reference signal measurement data, store a second data pointer corresponding to the angle-of-arrival data in a third linked list associated with the device, and after an access of the angle-of-arrival data based on the second data pointer, determine the location based on the angle-of-arrival data.</p><p id="p-0524" num="0511">In Example 20, the subject matter of Examples 15-19 can optionally include that the processor circuitry is to obtain the first cellular data at a first time, obtain the second cellular data at a second time, and determine the location at a third time, and a time duration based on a difference between the third time and the first time or the second time is ten or less milliseconds.</p><p id="p-0525" num="0512">In Example 21, the subject matter of Examples 15-20 can optionally include that the processor circuitry is to determine the location with an accuracy of one meter or less.</p><p id="p-0526" num="0513">In Example 22, the subject matter of Examples 15-21 can optionally include that the processor circuitry is to aggregate a plurality of cellular data sets associated with the device with a third linked list, the plurality of the cellular data including the first cellular data and the second cellular data, the third linked list associated with the device, identify respective priorities of portions of the plurality of cellular data sets with a fourth linked list, the fourth linked list associated with the device, format the portions of the plurality of cellular data sets from a first data format to a second data format with a fifth linked list, the fifth linked list associated with the device, and generate a location engine packet based on the portions of the plurality of cellular data sets in the second data format, the location of the device based on the location engine packet.</p><p id="p-0527" num="0514">In Example 23, the subject matter of Examples 15-22 can optionally include that the processor circuitry is to determine the location as a two-dimension location based on the first cellular data, the second cellular data, and third cellular data from one or more third antennas of the first base station, the second base station, or a third base station.</p><p id="p-0528" num="0515">In Example 24, the subject matter of Examples 15-23 can optionally include that the processor circuitry is to determine the location as a three-dimension location based on the first cellular data, the second cellular data, third cellular data from one or more third antennas of the first base station, the second base station, or a third base station, and fourth cellular data from one or more fourth antennas of the first base station, the second base station, the third base station, or a fourth base station.</p><p id="p-0529" num="0516">In Example 25, the subject matter of Examples 15-24 can optionally include that the processor circuitry is to determine the location based on an output from a measurement engine based on FlexRAN&#x2122; Reference Architecture.</p><p id="p-0530" num="0517">In Example 26, the subject matter of Examples 15-25 can optionally include that the processor circuitry is to obtain at least one of the first cellular data or the second cellular data based on FlexRAN&#x2122; Reference Architecture, the first cellular data or the second cellular data to be obtained from a plurality of antennas from one or more base stations including at least one of the first base station or the second base station, the plurality of antennas including the one or more first antennas and the one or more second antennas.</p><p id="p-0531" num="0518">In Example 27, the subject matter of Examples 15-26 can optionally include that the processor circuitry is to store the at least one of the first cellular data or the second cellular data based on FlexRAN&#x2122; Reference Architecture, the first cellular data or the second cellular data to be obtained from a plurality of antennas from one or more base stations including at least one of the first base station or the second base station, the plurality of antennas including the one or more first antennas and the one or more second antennas.</p><p id="p-0532" num="0519">In Example 28, the subject matter of Examples 15-27 can optionally include that the processor circuitry is to determine the location based on FlexRAN&#x2122; Reference Architecture, the first cellular data or the second cellular data to be obtained from a plurality of antennas from one or more base stations including at least one of the first base station or the second base station, the plurality of antennas including the one or more first antennas and the one or more second antennas.</p><p id="p-0533" num="0520">In Example 29, the subject matter of Examples 15-28 can optionally include that the apparatus includes a radio access network device.</p><p id="p-0534" num="0521">In Example 30, the subject matter of Examples 15-29 can optionally include that the processor circuitry is to at least one of execute or instantiate the instructions to implement a virtual radio access network.</p><p id="p-0535" num="0522">Example 31 includes at least one non-transitory computer readable storage medium comprising instructions that, when executed, cause programmable circuitry to at least add a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first core of the programmable circuitry, generate, with the first core, at least one of reception angle data or time-of-arrival data based on the sounding reference signal measurement data, add the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle data or the time-of-arrival data, the second data queue associated with a second core of the programmable circuitry, and output, with the second core, a location of the device based on the at least one of the reception angle data or the time-of-arrival data.</p><p id="p-0536" num="0523">In Example 32, the subject matter of Example 31 can optionally include that the programmable circuitry is to output the at least one of the reception angle data or the time-of-arrival data based on a data format associated with a location engine.</p><p id="p-0537" num="0524">In Example 33, the subject matter of Examples 31-32 can optionally include that the device is a first device, and the programmable circuitry is to output event data representative of an operation to be performed by the first device or a second device associated with the first device, and cause transmission of the event data to at least one of the first device or the second device to cause the operation to be performed.</p><p id="p-0538" num="0525">In Example 34, the subject matter of Examples 31-33 can optionally include that the programmable circuitry includes dynamic load balancer circuitry separate from the first core and the second core, the dynamic load balancer circuitry to include the first data queue and the second data queue, and the dynamic load balancer circuitry is to enqueue the data pointer into the first data queue and dequeue the data pointer in the second data queue.</p><p id="p-0539" num="0526">In Example 35, the subject matter of Examples 31-34 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the programmable circuitry is to generate time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and output the location of the device based on the time-difference-of-arrival data.</p><p id="p-0540" num="0527">In Example 36, the subject matter of Examples 31-35 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the programmable circuitry is to detect that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, detect that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and output the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0541" num="0528">In Example 37, the subject matter of Examples 31-36 can optionally include that the programmable circuitry is to generate time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and output the location of the device based on the time-difference-of-arrival data.</p><p id="p-0542" num="0529">In Example 38, the subject matter of Examples 31-37 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the programmable circuitry is to detect that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, detect that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and output the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0543" num="0530">In Example 39, the subject matter of Examples 31-38 can optionally include that the programmable circuitry is to generate time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and output the location of the device based on the time-difference-of-arrival data.</p><p id="p-0544" num="0531">In Example 40, the subject matter of Examples 31-39 can optionally include that the time-of-arrival data includes first time-of-arrival data, second time-of-arrival data, third time-of-arrival data, and fourth time-of-arrival data, and the programmable circuitry is to detect that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, detect that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, detect that the third time-of-arrival data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, detect that the fourth time-of-arrival data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and output the location of the device based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data.</p><p id="p-0545" num="0532">In Example 41, the subject matter of Examples 31-40 can optionally include that the programmable circuitry is to generate time-difference-of-arrival data based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data, and output the location of the device based on the time-difference-of-arrival data.</p><p id="p-0546" num="0533">In Example 42, the subject matter of Examples 31-41 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and the programmable circuitry is to detect that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, detect that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and output the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0547" num="0534">In Example 43, the subject matter of Examples 31-42 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and the programmable circuitry is to detect that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, detect that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and output the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0548" num="0535">In Example 44, the subject matter of Examples 31-43 can optionally include that the reception angle data includes first reception angle data, second reception angle data, third reception angle data, and fourth reception angle data, and the programmable circuitry is to detect that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, detect that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, detect that the third reception angle data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, detect that the fourth reception angle data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and output the location of the device based on at least one of the first reception angle data, the second reception angle data, the reception angle data, or the fourth reception angle data.</p><p id="p-0549" num="0536">In Example 45 includes an apparatus for location determination comprising means for parsing sounding reference signal measurement data from a device, the means for parsing to enqueue a data pointer into a first data queue, the data pointer associated with the sounding reference signal measurement data from a device, first means for determining at least one of reception angle data or time-of-arrival data based on the sounding reference signal measurement data, the means for parsing to dequeue the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle data or the time-of-arrival data, and second means for determining a location of the device based on the at least one of the reception angle data or the time-of-arrival data.</p><p id="p-0550" num="0537">In Example 46, the subject matter of Example 45 can optionally include that the first means for determining is to generate the at least one of the reception angle data or the time-of-arrival data based on a data format associated with a location engine.</p><p id="p-0551" num="0538">In Example 47, the subject matter of Examples 45-46 can optionally include that the device is a first device, and the apparatus further including means for generating to generate event data representative of an operation to be performed by the first device or a second device associated with the first device, and cause transmission of the event data to at least one of the first device or the second device to cause the operation to be performed.</p><p id="p-0552" num="0539">In Example 48, the subject matter of Examples 45-47 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and wherein the first means for determining is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and the second means for determining is to determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0553" num="0540">In Example 49, the subject matter of Examples 45-48 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, the first means for determining is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, and determine that the second time-of-arrival data is associated with the sounding reference signal measurement data received at a second antenna of the base station, and the second means for determining is to determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0554" num="0541">In Example 50, the subject matter of Examples 45-49 can optionally include the first means for determining is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and the second means for determining is to determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0555" num="0542">In Example 51, the subject matter of Examples 45-50 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and wherein the first means for determining is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, and determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and the second means for determining is to determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0556" num="0543">In Example 52, the subject matter of Examples 45-51 can optionally include the first means for determining is to determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and the second means for determining is to determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0557" num="0544">In Example 53, the subject matter of Examples 45-52 can optionally include that the time-of-arrival data includes first time-of-arrival data, second time-of-arrival data, third time-of-arrival data, and fourth time-of-arrival data, and wherein the first means for determining is to determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, determine that the third time-of-arrival data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, and determine that the fourth time-of-arrival data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and the second means for determining is to determine the location of the device based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data.</p><p id="p-0558" num="0545">In Example 54, the subject matter of Examples 45-53 can optionally include the first means for determining is to determine time-difference-of-arrival data based on the at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data, and the second means for determining is to determine the location of the device based on the time-difference-of-arrival data.</p><p id="p-0559" num="0546">In Example 55, the subject matter of Examples 45-54 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and wherein the first means for determining is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, and determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and the second means for determining is to determine the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0560" num="0547">In Example 56, the subject matter of Examples 45-55 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and wherein the first means for determining is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, and determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and the second means for determining is to determine the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0561" num="0548">In Example 57, the subject matter of Examples 45-56 can optionally include that the reception angle data includes first reception angle data, second reception angle data, third reception angle data, and fourth reception angle data, and wherein the first means for determining is to determine that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determine that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, determine that the third reception angle data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, and determine that the fourth reception angle data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and the second means for determining is to determine the location of the device based on at least one of the first reception angle data, the second reception angle data, the third reception angle data, or the fourth reception angle data.</p><p id="p-0562" num="0549">Example 58 includes a method for location determination comprising inserting a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first core of processor circuitry, generating, with the first core, at least one of reception angle data or time-of-arrival data based on the sounding reference signal measurement data, inserting the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle data or the time-of-arrival data, the second data queue associated with a second core of the processor circuitry, and identifying, with the second core, a location of the device based on the at least one of the reception angle data or the time-of-arrival data.</p><p id="p-0563" num="0550">In Example 59, the subject matter of Example 58 can optionally include generating the at least one of the reception angle data or the time-of-arrival data based on a data format associated with a location engine.</p><p id="p-0564" num="0551">In Example 60, the subject matter of Examples 58-59 can optionally include that the device is a first device, and the method further includes generating event data representative of an operation to be performed by the first device or a second device associated with the first device, and transmitting the event data to at least one of the first device or the second device to cause the operation to be performed.</p><p id="p-0565" num="0552">In Example 61, the subject matter of Examples 58-60 can optionally include that the processor circuitry includes dynamic load balancer circuitry separate from the first core and the second core, the dynamic load balancer circuitry to include the first data queue and the second data queue, and the dynamic load balancer circuitry is to enqueue the data pointer into the first data queue and dequeue the data pointer in the second data queue.</p><p id="p-0566" num="0553">In Example 62, the subject matter of Examples <b>58</b>-<b>61</b> can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further includes determining time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and detecting the location of the device based on the time-difference-of-arrival data.</p><p id="p-0567" num="0554">In Example 63, the subject matter of Examples 58-62 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further includes determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station, determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station, and detecting the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0568" num="0555">In Example 64, the subject matter of Examples 58-63 can optionally include determining time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and detecting the location of the device based on the time-difference-of-arrival data.</p><p id="p-0569" num="0556">In Example 65, the subject matter of Examples 58-64 can optionally include that the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further includes determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station, and detecting the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</p><p id="p-0570" num="0557">In Example 66, the subject matter of Examples 58-65 can optionally include determining time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data, and detecting the location of the device based on the time-difference-of-arrival data.</p><p id="p-0571" num="0558">In Example 67, the subject matter of Examples 58-66 can optionally include that the time-of-arrival data includes first time-of-arrival data, second time-of-arrival data, third time-of-arrival data, and fourth time-of-arrival data, and the method further includes determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station, determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station, determining that the third time-of-arrival data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station, determining that the fourth time-of-arrival data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and detecting the location of the device based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data.</p><p id="p-0572" num="0559">In Example 68, the subject matter of Examples 58-67 can optionally include determining time-difference-of-arrival data based on the at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data, and detecting the location of the device based on the time-difference-of-arrival data.</p><p id="p-0573" num="0560">In Example 69, the subject matter of Examples 58-68 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and the method further includes associating the first reception angle data with reception of the sounding reference signal measurement data at a first antenna of a base station, associating the second reception angle data with reception of the sounding reference signal measurement data at a second antenna of the base station, and outputting the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0574" num="0561">In Example 70, the subject matter of Examples 58-69 can optionally include that the reception angle data includes first reception angle data and second reception angle data, and the method further includes generating a first association of the first reception angle data and reception of the sounding reference signal measurement data at a first antenna of a first base station, generating a second association of the second reception angle data and reception of the sounding reference signal measurement data at a second antenna of a second base station, and outputting the location of the device based on at least one of the first reception angle data or the second reception angle data.</p><p id="p-0575" num="0562">In Example 71, the subject matter of Examples 58-70 can optionally include that the reception angle data includes first reception angle data, second reception angle data, third reception angle data, and fourth reception angle data, and the method further includes generating a first association of the first reception angle data and reception of the sounding reference signal measurement data at a first antenna of a first base station, generating a second association of the second reception angle data and reception of the sounding reference signal measurement data at a second antenna of the first base station, generating a third association of the third reception angle data and reception of the sounding reference signal measurement data at a third antenna of a second base station, generating a fourth association of the fourth reception angle data and reception of the sounding reference signal measurement data at a fourth antenna of the second base station, and outputting the location of the device based on at least one of the first reception angle data, the second reception angle data, the third reception angle data, or the fourth reception angle data.</p><p id="p-0576" num="0563">Example 72 is at least one computer readable medium comprising instructions to perform the method of any of Examples 58-71.</p><p id="p-0577" num="0564">Example 73 is at least one machine readable medium comprising instructions to perform the method of any of Examples 58-71.</p><p id="p-0578" num="0565">Example 74 is edge server processor circuitry to perform the method of any of Examples 58-71.</p><p id="p-0579" num="0566">Example 75 is an edge cloud processor circuitry to perform the method of any of Examples 58-71.</p><p id="p-0580" num="0567">Example 76 is edge node processor circuitry to perform the method of any of Examples 58-71.</p><p id="p-0581" num="0568">Example 77 is location engine circuitry to perform the method of any of Examples 58-71.</p><p id="p-0582" num="0569">Example 78 is a programmable location data collector to perform the method of any of Examples 58-71.</p><p id="p-0583" num="0570">Example 79 is programmable location data collection circuitry to perform the method of any of Examples 58-71.</p><p id="p-0584" num="0571">Example 80 is an apparatus comprising processor circuitry to perform the method of any of Examples 58-71.</p><p id="p-0585" num="0572">Example 81 is an apparatus comprising programmable circuitry to perform the method of any of Examples 58-71.</p><p id="p-0586" num="0573">Example 82 is an apparatus comprising one or more edge gateways to perform the method of any of Examples 58-71.</p><p id="p-0587" num="0574">Example 83 is an apparatus comprising one or more edge switches to perform the method of any of Examples 58-71.</p><p id="p-0588" num="0575">Example 84 is an apparatus comprising at least one of one or more edge gateways or one or more edge switches to perform the method of any of Examples 58-71.</p><p id="p-0589" num="0576">Example 85 is an apparatus comprising accelerator circuitry to perform the method of any of Examples 58-71.</p><p id="p-0590" num="0577">Example 86 is an apparatus comprising one or more graphics processor units to perform the method of any of Examples 58-71.</p><p id="p-0591" num="0578">Example 87 is an apparatus comprising one or more Artificial Intelligence processors to perform the method of any of Examples 58-71.</p><p id="p-0592" num="0579">Example 87 is an apparatus comprising one or more machine learning processors to perform the method of any of Examples 58-71.</p><p id="p-0593" num="0580">Example 88 is an apparatus comprising one or more neural network processors to perform the method of any of Examples 58-71.</p><p id="p-0594" num="0581">Example 89 is an apparatus comprising one or more digital signal processors to perform the method of any of Examples 58-71.</p><p id="p-0595" num="0582">Example 90 is an apparatus comprising one or more general purpose processors to perform the method of any of Examples 58-71.</p><p id="p-0596" num="0583">Example 91 is an apparatus comprising network interface circuitry to perform the method of any of Examples 58-71.</p><p id="p-0597" num="0584">Example 92 is an Infrastructure Processor Unit to perform the method of any of Examples 58-71.</p><p id="p-0598" num="0585">Example 93 is dynamic load balancer circuitry to perform the method of any of Examples 58-71.</p><p id="p-0599" num="0586">Example 94 is radio unit circuitry to perform the method of any of Examples 58-71.</p><p id="p-0600" num="0587">Example 95 is remote radio unit circuitry to perform the method of any of Examples 58-71.</p><p id="p-0601" num="0588">Example 96 is radio access network circuitry to perform the method of any of Examples 58-71.</p><p id="p-0602" num="0589">Example 97 is one or more base stations to perform the method of any of Examples 58-71.</p><p id="p-0603" num="0590">Example 98 is base station circuitry to perform the method of any of Examples 58-71.</p><p id="p-0604" num="0591">Example 99 is user equipment circuitry to perform the method of any of Examples 58-71.</p><p id="p-0605" num="0592">Example 100 is one or more Internet-of-Things devices to perform the method of any of Examples 58-71.</p><p id="p-0606" num="0593">Example 101 is one or more fog devices to perform the method of any of Examples 58-71.</p><p id="p-0607" num="0594">Example 102 is a software distribution platform to distribute machine-readable instructions that, when executed by processor circuitry, cause the processor circuitry to perform the method of any of Examples 58-71.</p><p id="p-0608" num="0595">Example 103 is edge cloud circuitry to perform the method of any of Examples 58-71.</p><p id="p-0609" num="0596">Example 104 is distributed unit circuitry to perform the method of any of Examples 58-71.</p><p id="p-0610" num="0597">Example 105 is central or centralized unit circuitry to perform the method of any of Examples 58-71.</p><p id="p-0611" num="0598">Example 106 is core server circuitry to perform the method of any of Examples 58-71.</p><p id="p-0612" num="0599">Example 107 is satellite circuitry to perform the method of any of Examples 58-71.</p><p id="p-0613" num="0600">Example 108 is at least one of one more GEO satellites or one or more LEO satellites to perform the method of any of Examples 58-71.</p><p id="p-0614" num="0601">Example 109 is an autonomous vehicle to perform the method of any of Examples 58-71.</p><p id="p-0615" num="0602">Example 110 is a robot to perform the method of any of Examples 58-71.</p><p id="p-0616" num="0603">Example 111 is circuitry to execute and/or instantiate instructions to implement FLEXRAN&#x2122; protocol to perform the method of any of Examples 58-71.</p><p id="p-0617" num="0604">Example 112 is circuitry to execute and/or instantiate instructions to implement a virtual radio access network protocol to perform the method of any of Examples 58-71.</p><p id="p-0618" num="0605">The following claims are hereby incorporated into this Detailed Description by this reference. Although certain example systems, methods, apparatus, and articles of manufacture have been disclosed herein, the scope of coverage of this patent is not limited thereto. On the contrary, this patent covers all systems, methods, apparatus, and articles of manufacture fairly falling within the scope of the claims of this patent.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. An apparatus for location determination comprising:<claim-text>at least one memory;</claim-text><claim-text>machine-readable instructions; and</claim-text><claim-text>processor circuitry to at least one of execute or instantiate the machine-readable instructions to at least:<claim-text>enqueue a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first worker core of the processor circuitry;</claim-text><claim-text>generate, with the first worker core, at least one of reception angle measurement dataset or time-of-arrival measurement dataset based on the sounding reference signal measurement data;</claim-text><claim-text>dequeue the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset, the second data queue associated with a second worker core of the processor circuitry; and</claim-text><claim-text>determine, with the second worker core, a location of the device based on the at least one of the reception angle measurement dataset or the time-of-arrival measurement dataset.</claim-text></claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. (canceled)</claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the device is a first device, and the processor circuitry is to:<claim-text>generate event data representative of an operation to be performed by the first device or a second device associated with the first device; and</claim-text><claim-text>transmit the event data to at least one of the first device or the second device to cause the operation to be performed.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the processor circuitry includes dynamic load balancer circuitry separate from the first worker core and the second worker core, the dynamic load balancer circuitry to include the first data queue and the second data queue, and the dynamic load balancer circuitry is to enqueue the data pointer into the first data queue and dequeue the data pointer in the second data queue.</claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to:<claim-text>determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data; and</claim-text><claim-text>determine the location of the device based on the time-difference-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to:<claim-text>determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station;</claim-text><claim-text>determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station; and</claim-text><claim-text>determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data. (Original) The apparatus of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the processor circuitry is to:</claim-text><claim-text>determine time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data; and</claim-text><claim-text>determine the location of the device based on the time-difference-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the time-of-arrival measurement dataset includes first time-of-arrival data and second time-of-arrival data, and the processor circuitry is to:<claim-text>determine that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>determine that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station; and</claim-text><claim-text>determine the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-09-14" num="09-14"><claim-text><b>9</b>-<b>14</b>. (canceled)</claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. An apparatus for location determination comprising:<claim-text>at least one persistent memory;</claim-text><claim-text>machine-readable instructions; and</claim-text><claim-text>processor circuitry to at least one of execute or instantiate the machine-readable instructions to at least:<claim-text>obtain first cellular data from one or more first antennas of a first base station and second cellular data from one or more second antennas of the first base station or a second base station, the first cellular data and the second cellular data from a device;</claim-text><claim-text>store the first cellular data in a first linked list in the at least one persistent memory and the second cellular data in a second linked list in the at least one persistent memory, the first linked list associated with the one or more first antennas and the second linked list associated with the one or more second antennas; and</claim-text><claim-text>determine a location of the device based on at least one of the first cellular data or the second cellular data.</claim-text></claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. (canceled)</claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor circuitry is to:<claim-text>obtain sounding reference signal measurement data from the device;</claim-text><claim-text>store a first data pointer corresponding to the sounding reference signal measurement data in the first linked list;</claim-text><claim-text>determine time-of-arrival data associated with the sounding reference signal measurement data based on the sounding reference signal measurement data;</claim-text><claim-text>store a second data pointer corresponding to the time-of-arrival data in a third linked list associated with the device; and</claim-text><claim-text>after an access of the time-of-arrival data based on the second data pointer, determine the location based on the time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. (canceled)</claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor circuitry is to:<claim-text>obtain sounding reference signal measurement data from the device;</claim-text><claim-text>store a first data pointer corresponding to the sounding reference signal measurement data in the first linked list;</claim-text><claim-text>determine angle-of-arrival data associated with the sounding reference signal measurement data based on the sounding reference signal measurement data;</claim-text><claim-text>store a second data pointer corresponding to the angle-of-arrival data in a third linked list associated with the device; and</claim-text><claim-text>after an access of the angle-of-arrival data based on the second data pointer, determine the location based on the angle-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. (canceled)</claim-text></claim><claim id="CLM-00021" num="00021"><claim-text><b>21</b>. (canceled)</claim-text></claim><claim id="CLM-00022" num="00022"><claim-text><b>22</b>. The apparatus of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processor circuitry is to:<claim-text>aggregate a plurality of cellular data sets associated with the device with a third linked list, the plurality of the cellular data including the first cellular data and the second cellular data, the third linked list associated with the device;</claim-text><claim-text>identify respective priorities of portions of the plurality of cellular data sets with a fourth linked list, the fourth linked list associated with the device;</claim-text><claim-text>format the portions of the plurality of cellular data sets from a first data format to a second data format with a fifth linked list, the fifth linked list associated with the device; and</claim-text><claim-text>generate a location engine packet based on the portions of the plurality of cellular data sets in the second data format, the location of the device based on the location engine packet.</claim-text></claim-text></claim><claim id="CLM-23-30" num="23-30"><claim-text><b>23</b>-<b>30</b>. (canceled)</claim-text></claim><claim id="CLM-00031" num="00031"><claim-text><b>31</b>. At least one non-transitory computer readable storage medium comprising instructions that, when executed, cause programmable circuitry to at least:<claim-text>add a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first core of the programmable circuitry;</claim-text><claim-text>generate, with the first core, at least one of reception angle data or time-of-arrival data based on the sounding reference signal measurement data;</claim-text><claim-text>add the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle data or the time-of-arrival data, the second data queue associated with a second core of the programmable circuitry; and</claim-text><claim-text>output, with the second core, a location of the device based on the at least one of the reception angle data or the time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-32-41" num="32-41"><claim-text><b>32</b>-<b>41</b>. (canceled)</claim-text></claim><claim id="CLM-00042" num="00042"><claim-text><b>42</b>. The at least one non-transitory computer readable storage medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the reception angle data includes first reception angle data and second reception angle data, and the programmable circuitry is to:<claim-text>detect that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station;</claim-text><claim-text>detect that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station; and</claim-text><claim-text>output the location of the device based on at least one of the first reception angle data or the second reception angle data.</claim-text></claim-text></claim><claim id="CLM-00043" num="00043"><claim-text><b>43</b>. The at least one non-transitory computer readable storage medium of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the reception angle data includes first reception angle data and second reception angle data, and the programmable circuitry is to:<claim-text>detect that the first reception angle data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>detect that the second reception angle data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station; and</claim-text><claim-text>output the location of the device based on at least one of the first reception angle data or the second reception angle data.</claim-text></claim-text></claim><claim id="CLM-44-57" num="44-57"><claim-text><b>44</b>-<b>57</b>. (canceled)</claim-text></claim><claim id="CLM-00058" num="00058"><claim-text><b>58</b>. A method for location determination comprising:<claim-text>inserting a data pointer into a first data queue, the data pointer associated with sounding reference signal measurement data from a device, the first data queue associated with a first core of processor circuitry;</claim-text><claim-text>generating, with the first core, at least one of reception angle data or time-of-arrival data based on the sounding reference signal measurement data;</claim-text><claim-text>inserting the data pointer from the first data queue into a second data queue, the data pointer associated with the at least one of the reception angle data or the time-of-arrival data, the second data queue associated with a second core of the processor circuitry; and</claim-text><claim-text>identifying, with the second core, a location of the device based on the at least one of the reception angle data or the time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00059" num="00059"><claim-text><b>59</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, further including generating the at least one of the reception angle data or the time-of-arrival data based on a data format associated with a location engine.</claim-text></claim><claim id="CLM-00060" num="00060"><claim-text><b>60</b>. (canceled)</claim-text></claim><claim id="CLM-00061" num="00061"><claim-text><b>61</b>. (canceled)</claim-text></claim><claim id="CLM-00062" num="00062"><claim-text><b>62</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further including:<claim-text>determining time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data; and</claim-text><claim-text>detecting the location of the device based on the time-difference-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00063" num="00063"><claim-text><b>63</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further including:<claim-text>determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a base station;</claim-text><claim-text>determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the base station; and</claim-text><claim-text>detecting the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00064" num="00064"><claim-text><b>64</b>. (canceled)</claim-text></claim><claim id="CLM-00065" num="00065"><claim-text><b>65</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the time-of-arrival data includes first time-of-arrival data and second time-of-arrival data, and the method further including:<claim-text>determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of a second base station; and</claim-text><claim-text>detecting the location of the device based on at least one of the first time-of-arrival data or the second time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00066" num="00066"><claim-text><b>66</b>. The method of <claim-ref idref="CLM-00065">claim 65</claim-ref>, further including:<claim-text>determining time-difference-of-arrival data based on the first time-of-arrival data and the second time-of-arrival data; and</claim-text><claim-text>detecting the location of the device based on the time-difference-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00067" num="00067"><claim-text><b>67</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the time-of-arrival data includes first time-of-arrival data, second time-of-arrival data, third time-of-arrival data, and fourth time-of-arrival data, and the method further including:<claim-text>determining that the first time-of-arrival data is associated with reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>determining that the second time-of-arrival data is associated with reception of the sounding reference signal measurement data at a second antenna of the first base station;</claim-text><claim-text>determining that the third time-of-arrival data is associated with reception of the sounding reference signal measurement data at a third antenna of a second base station;</claim-text><claim-text>determining that the fourth time-of-arrival data is associated with reception of the sounding reference signal measurement data at a fourth antenna of the second base station; and</claim-text><claim-text>detecting the location of the device based on at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00068" num="00068"><claim-text><b>68</b>. The method of <claim-ref idref="CLM-00067">claim 67</claim-ref>, further including:<claim-text>determining time-difference-of-arrival data based on the at least one of the first time-of-arrival data, the second time-of-arrival data, the third time-of-arrival data, or the fourth time-of-arrival data; and</claim-text><claim-text>detecting the location of the device based on the time-difference-of-arrival data.</claim-text></claim-text></claim><claim id="CLM-00069" num="00069"><claim-text><b>69</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the reception angle data includes first reception angle data and second reception angle data, and the method further including:<claim-text>associating the first reception angle data with reception of the sounding reference signal measurement data at a first antenna of a base station;</claim-text><claim-text>associating the second reception angle data with reception of the sounding reference signal measurement data at a second antenna of the base station; and</claim-text><claim-text>outputting the location of the device based on at least one of the first reception angle data or the second reception angle data.</claim-text></claim-text></claim><claim id="CLM-00070" num="00070"><claim-text><b>70</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the reception angle data includes first reception angle data and second reception angle data, and the method further including:<claim-text>generating a first association of the first reception angle data and reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>generating a second association of the second reception angle data and reception of the sounding reference signal measurement data at a second antenna of a second base station; and</claim-text><claim-text>outputting the location of the device based on at least one of the first reception angle data or the second reception angle data.</claim-text></claim-text></claim><claim id="CLM-00071" num="00071"><claim-text><b>71</b>. The method of <claim-ref idref="CLM-00058">claim 58</claim-ref>, wherein the reception angle data includes first reception angle data, second reception angle data, third reception angle data, and fourth reception angle data, and the method further including:<claim-text>generating a first association of the first reception angle data and reception of the sounding reference signal measurement data at a first antenna of a first base station;</claim-text><claim-text>generating a second association of the second reception angle data and reception of the sounding reference signal measurement data at a second antenna of the first base station;</claim-text><claim-text>generating a third association of the third reception angle data and reception of the sounding reference signal measurement data at a third antenna of a second base station;</claim-text><claim-text>generating a fourth association of the fourth reception angle data and reception of the sounding reference signal measurement data at a fourth antenna of the second base station; and</claim-text><claim-text>outputting the location of the device based on at least one of the first reception angle data, the second reception angle data, the third reception angle data, or the fourth reception angle data.</claim-text></claim-text></claim></claims></us-patent-application>