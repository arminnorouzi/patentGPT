<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE us-patent-application SYSTEM "us-patent-application-v46-2022-02-17.dtd" [ ]><us-patent-application lang="EN" dtd-version="v4.6 2022-02-17" file="US20230004579A1-20230105.XML" status="PRODUCTION" id="us-patent-application" country="US" date-produced="20221221" date-publ="20230105"><us-bibliographic-data-application lang="EN" country="US"><publication-reference><document-id><country>US</country><doc-number>20230004579</doc-number><kind>A1</kind><date>20230105</date></document-id></publication-reference><application-reference appl-type="utility"><document-id><country>US</country><doc-number>17568271</doc-number><date>20220104</date></document-id></application-reference><us-application-series-code>17</us-application-series-code><priority-claims><priority-claim sequence="01" kind="national"><country>VN</country><doc-number>1-2021-04075</doc-number><date>20210702</date></priority-claim></priority-claims><classifications-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>28</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr><classification-ipcr><ipc-version-indicator><date>20060101</date></ipc-version-indicator><classification-level>A</classification-level><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>54</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source></classification-ipcr></classifications-ipcr><classifications-cpc><main-cpc><classification-cpc><cpc-version-indicator><date>20190101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>16</main-group><subgroup>285</subgroup><symbol-position>F</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></main-cpc><further-cpc><classification-cpc><cpc-version-indicator><date>20130101</date></cpc-version-indicator><section>G</section><class>06</class><subclass>F</subclass><main-group>9</main-group><subgroup>542</subgroup><symbol-position>L</symbol-position><classification-value>I</classification-value><action-date><date>20230105</date></action-date><generating-office><country>US</country></generating-office><classification-status>B</classification-status><classification-data-source>H</classification-data-source><scheme-origination-code>C</scheme-origination-code></classification-cpc></further-cpc></classifications-cpc><invention-title id="d2e61">METHOD OF CONTROLLING AND HANDLING A SET OF CONDITIONS IN AN EVENT HANDLING SYSTEM WITH MANY COMPLEX INTERNAL CONDITIONS</invention-title><us-parties><us-applicants><us-applicant sequence="00" app-type="applicant" designation="us-only" applicant-authority-category="assignee"><addressbook><orgname>VIETTEL GROUP</orgname><address><city>Ha Noi City</city><country>VN</country></address></addressbook><residence><country>VN</country></residence></us-applicant></us-applicants><inventors><inventor sequence="00" designation="us-only"><addressbook><last-name>Trinh</last-name><first-name>Van Chung</first-name><address><city>Ha Noi City</city><country>VN</country></address></addressbook></inventor><inventor sequence="01" designation="us-only"><addressbook><last-name>Nguyen</last-name><first-name>Duc Hai</first-name><address><city>Tien Du District</city><country>VN</country></address></addressbook></inventor><inventor sequence="02" designation="us-only"><addressbook><last-name>Pham</last-name><first-name>Tuan Anh</first-name><address><city>Ha Noi City</city><country>VN</country></address></addressbook></inventor><inventor sequence="03" designation="us-only"><addressbook><last-name>Phan</last-name><first-name>Van Manh</first-name><address><city>Ha Noi City</city><country>VN</country></address></addressbook></inventor><inventor sequence="04" designation="us-only"><addressbook><last-name>Nguyen</last-name><first-name>Dinh Hung</first-name><address><city>Ha Nam Province</city><country>VN</country></address></addressbook></inventor></inventors></us-parties><assignees><assignee><addressbook><orgname>VIETTEL GROUP</orgname><role>03</role><address><city>Ha Noi City</city><country>VN</country></address></addressbook></assignee></assignees></us-bibliographic-data-application><abstract id="abstract"><p id="p-0001" num="0000">The present invention provides a method to control and process a set of conditions in an event handling system with many complex intrinsic conditions, including: step 1: receive the list of conditions; step 2: use the list data structure; step 3: break down the conditions; step 4: Classification; step 5: link the clauses.</p></abstract><drawings id="DRAWINGS"><figure id="Fig-EMI-D00000" num="00000"><img id="EMI-D00000" he="116.42mm" wi="158.75mm" file="US20230004579A1-20230105-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00001" num="00001"><img id="EMI-D00001" he="129.29mm" wi="164.76mm" file="US20230004579A1-20230105-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00002" num="00002"><img id="EMI-D00002" he="192.11mm" wi="162.39mm" file="US20230004579A1-20230105-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00003" num="00003"><img id="EMI-D00003" he="222.50mm" wi="163.83mm" file="US20230004579A1-20230105-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure><figure id="Fig-EMI-D00004" num="00004"><img id="EMI-D00004" he="133.18mm" wi="152.65mm" file="US20230004579A1-20230105-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/></figure></drawings><description id="description"><?summary-of-invention description="Summary of Invention" end="lead"?><heading id="h-0001" level="1">TECHNICAL AREA</heading><p id="p-0002" num="0001">The present invention provides a method for controlling and handling a set of conditions in an event handling system with many complex intrinsic conditions. Specifically, the method of controlling and handling a set of conditions in an event handling system with many complex conditions helps to simplify complex conditions for the fastest and most accurate execution time, avoiding taking time to process and cumbersome and complicated conditional logic.</p><heading id="h-0002" level="1">THE TECHNICAL STATUS OF THE INVENTION</heading><p id="p-0003" num="0002">With a system consisting of many complex rules, it is common to follow the following stages:</p><p id="p-0004" num="0003">Stage 1: the mining operator creates a new set of rules;</p><p id="p-0005" num="0004">B1: select clauses including left hand side, comparison operator, right side;</p><p id="p-0006" num="0005">B2: select the operator to join the clauses;</p><p id="p-0007" num="0006">B3: select the result if the condition is true.</p><p id="p-0008" num="0007">Stage 2: implementation;</p><p id="p-0009" num="0008">B1: system to receive and preprocess the information to be included in the condition;</p><p id="p-0010" num="0009">B2: put information in each clause in each condition;</p><p id="p-0011" num="0010">B3: execute the clauses and give the results of the conditional.</p><p id="p-0012" num="0011">In which, step B1 in stage 1 is the step where the operator is prone to making mistakes due to: it is possible that previous conditions have been duplicated or conflicted, needing to be reviewed very carefully</p><p id="p-0013" num="0012">In which, step B3 in stage 2 is the most time-consuming step because there exist complex conditional sentences including AND operator and OR operator. The system needs to execute all the clauses in the conditional before giving the result.</p><p id="p-0014" num="0013">Currently in the world there is no technical solution to solve the limitations listed above.</p><heading id="h-0003" level="1">THE TECHNICAL NATURE OF THE INVENTION</heading><p id="p-0015" num="0014">The object of the present invention is to propose a method to control and handle a set of conditions in a complex event-handling system with many intrinsic conditions that address the limitations set forth above.</p><p id="p-0016" num="0015">The principle of implementation of the method mentioned in the present invention is as follows: receiving a set of filter conditions, separating conditions, classification, reconstructing conditions, filtering input data according to set of conditions reconstructed.</p><p id="p-0017" num="0016">Specifically, the method mentioned in the present invention consists of steps:</p><p id="p-0018" num="0017">Step 1: receive the list of management execution conditions and save the filter conditions from the system operator; the input of this step is a list of management execution conditions from the system operator's request, the output of this step is the digitized filter conditions and the initial version is saved to the database.</p><p id="p-0019" num="0018">Step 2: store and handle the problem of conditional sentence separation; At this step, with the input filter condition digitized in step 1, the method uses a list data structure to store and handle the problem of conditional sentence separation. The output of step 2 is a list data structure consisting of a set of simple conditional statements that are separated.</p><p id="p-0020" num="0019">Step 3: break down the conditions into clauses; Each clause consists of a left hand side, a right hand side and a comparison operator, separating complex conditions into simpler conditions, the output is a set of conditions converted to simple form, with input as a data structure. Whether the list consists of a simple set of conditional sentences extracted in step 2. The output of step 3 is the delimited clauses from the conditional.</p><p id="p-0021" num="0020">Step 4: Classification; At this step, proceed to group the left sides of the conditional expression into classes according to a common feature, from which we find the output is a list of classes of the left-hand side with the same value, each group is called is a class, whose input is the set of left-hand sides of the proposition retrieved in step 3.</p><p id="p-0022" num="0021">Step 5: link clauses each class is considered a node; At this step, proceed to link the clauses each class is considered as a node from the classes defined to produce the output of the corresponding nodes, connecting the nodes together to form a new structure, a conditional sentence. The event will consist of nodes linked together, with as input the KEY-VALUE data structure generated in step 4.</p><p id="p-0023" num="0022">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0024" num="0023">In step 1, the preprocessor module receives the initial condition list, uses a database interaction method supported by the programming language to store the initial version history of the condition list get the initial condition list, use the database interaction method supported by the programming language to save the initial version history of the condition list.</p><p id="p-0025" num="0024">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0026" num="0025">In step 1, the list data is digitized in preparation for the next step.</p><p id="p-0027" num="0026">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0028" num="0027">In step 2, from the set of filter conditions, the condition decomposition subsystem is obtained through each filter condition.</p><p id="p-0029" num="0028">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0030" num="0029">In step 2, a conditional has the following form: if cause then effect.</p><p id="p-0031" num="0030">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0032" num="0031">In step 2, the cause part of the condition includes clauses, by convention the clauses outside the round brackets the linking operator is AND, all conditions in the parentheses then the binding operator is OR.</p><p id="p-0033" num="0032">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0034" num="0033">In step 2, browse the filter clause from left to right, splitting it into combinations, each of which is separated by an operator and, thus, there are combinations that are propositions and there are combinations that are clusters of clauses in brackets circle.</p><p id="p-0035" num="0034">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0036" num="0035">In step 2, make the split clauses into a separate list data structure.</p><p id="p-0037" num="0036">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0038" num="0037">In step 2, the combinations are the set of conditions in parentheses, continue to separate the sub-conditions in the combinations in brackets, each condition is separated by OR, put these conditions in List structure so that each parenthesis combination is a list.</p><p id="p-0039" num="0038">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions where:</p><p id="p-0040" num="0039">In step 2, new conditional expressions are generated in the following way: concatenate the clauses in the operator's own data structure and, then take this set, concatenate with k1 conditions of the list in turn a combination or any, gets new clauses (k1), these clauses are concatenated with the list in a combination or any other next (k2) gets (k1&#xd7;k2) clauses, continue until all combinations OR.</p><p id="p-0041" num="0040">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0042" num="0041">In step 2, let's call the total number of split conditionals s, the value of s is calculated as the product of the number of split conditions in combinations OR.</p><p id="p-0043" num="0042">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0044" num="0043">In step 2, put all the newly extracted conditions into the list data structure.</p><p id="p-0045" num="0044">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0046" num="0045">In step 3, the condition decomposition module after splitting the condition, produces a new set of list of propositions.</p><p id="p-0047" num="0046">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0048" num="0047">In step 3, browse each clause, perform a second split, and split according to the logical operator AND in the conditional.</p><p id="p-0049" num="0048">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0050" num="0049">In step 3, browse each clause, perform split according to the logical operator AND in the conditional.</p><p id="p-0051" num="0050">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0052" num="0051">In step 4, the Classification generation submodule grouping the left-hand side expressions that are the same is put into the same class.</p><p id="p-0053" num="0052">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0054" num="0053">In step 4, Classification generation submodule supports grouping conditions with the same class, so that if a set of conditions has the same set of classes, it only needs to be checked once for all conditions in the set there.</p><p id="p-0055" num="0054">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0056" num="0055">In step 4, within the same class there are different values describing the corresponding right-hand side expression of the class.</p><p id="p-0057" num="0056">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0058" num="0057">In step 4, use key-value data structures and set data structures to represent.</p><p id="p-0059" num="0058">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0060" num="0059">In step 4, the KEY-VALUE data structure describes the information of the divided classes, the key is the names of the classes, and the value is the set of right-hand expressions corresponding to the class.</p><p id="p-0061" num="0060">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0062" num="0061">In step 4, the set data structure includes objects that describe the information of each right-hand expression.</p><p id="p-0063" num="0062">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0064" num="0063">In step 5, use the serial and branch model to describe.</p><p id="p-0065" num="0064">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0066" num="0065">In step 5, the refactoring module implements each built-in class into an object, in the object describing the identifying information of the condition containing that class, the value of the expression on the left side corresponding to each class.</p><p id="p-0067" num="0066">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0068" num="0067">In step 5, each layer is considered a node in the model.</p><p id="p-0069" num="0068">In another embodiment, the present invention relates to a method of controlling and processing a set of conditions in an event handling system with complex intrinsic conditions in which:</p><p id="p-0070" num="0069">In step 5, the clauses are described in the node, a large conditional will include the clause nodes connected together, finally to the right of the conditional clause, which is also the result to be taken.</p><?summary-of-invention description="Summary of Invention" end="tail"?><?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?><description-of-drawings><heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading><p id="p-0071" num="0070">In order for the invention to be described more clearly, the figures below describe parts of the invention:</p><p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. <b>1</b></figref> is model of the processing blocks according to the invention;</p><p id="p-0073" num="0072"><figref idref="DRAWINGS">FIG. <b>2</b></figref> is model of processing flow according to the invention;</p><p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. <b>3</b></figref> is model for storing new conditionals in a data structure according to the invention;</p><p id="p-0075" num="0074"><figref idref="DRAWINGS">FIG. <b>4</b></figref> is model of simple conditions according to the invention;</p><p id="p-0076" num="0075"><figref idref="DRAWINGS">FIG. <b>5</b></figref> is model of key-value classification description according to the invention;</p><p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. <b>6</b></figref> is model of sequential or branch clauses according to the invention.</p></description-of-drawings><?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?><?detailed-description description="Detailed Description" end="lead"?><heading id="h-0005" level="1">DETAILED DESCRIPTION</heading><p id="p-0078" num="0077">The invention detailed below is based on the accompanying drawings, which are intended to illustrate variations of the present invention without limiting the scope of the patent.</p><p id="p-0079" num="0078">Referring to <figref idref="DRAWINGS">FIG. <b>1</b></figref>, model of the processing blocks according to the invention:</p><p id="p-0080" num="0079">Preprocessor submodule (1) is responsible for managing and saving filter conditions from system operators, the output of which is digitized filter conditions and saving the initial version in the database;</p><p id="p-0081" num="0080">Condition Separation submodule (2) is responsible for separating complex conditions into simpler conditions, the output is a set of conditions converted to simple form;</p><p id="p-0082" num="0081">Classification generation submodule (3) is responsible for grouping the left sides of the conditional expression into classes according to a common characteristic, from which a list of classes of the left sides have the same value, each group is called a class;</p><p id="p-0083" num="0082">Conditional restructuring submodule (4) is responsible for connecting nodes together to form a new structure, a conditional sentence will include linked nodes;</p><p id="p-0084" num="0083">Referring to <figref idref="DRAWINGS">FIG. <b>2</b></figref>, model of processing flow according to the invention consists of steps:</p><p id="p-0085" num="0084">Step 1: receive the list of management execution conditions and save the filter conditions from the system operator; the input of this step is a list of management execution conditions from the system operator's request, the output of this step is the digitized filter conditions and the initial version is saved to the database.</p><p id="p-0086" num="0085">Step 2: store and handle the problem of conditional sentence separation; At this step, with the input filter condition digitized in step 1, the method uses a list data structure to store and handle the problem of conditional sentence separation. The output of step 2 is a list data structure consisting of a set of simple conditional statements that are separated.</p><p id="p-0087" num="0086">Step 3: break down the conditions into clauses; Each clause consists of a left hand side, a right hand side and a comparison operator, separating complex conditions into simpler conditions, the output is a set of conditions converted to simple form, with input as a data structure whether the list consists of a simple set of conditional extracted in step 2. The output of step 3 is the delimited clauses from the conditional.</p><p id="p-0088" num="0087">Step 4: grouping; At this step, proceed to group the left sides of the conditional expression into classes according to a common feature, from which we find the output is a list of classes of the left-hand side with the same value, each group is called is a class, whose input is the set of left-hand sides of the proposition retrieved in step 3.</p><p id="p-0089" num="0088">Step 5: link clauses each class is considered a node; At this step, proceed to link the clauses each class is considered as a node from the classes defined to produce the output of the corresponding nodes, connecting the nodes together to form a new structure, a conditional sentence. The event will consist of nodes linked together, with as input the KEY-VALUE data structure generated in step 4.</p><p id="p-0090" num="0089">Referring to <figref idref="DRAWINGS">FIG. <b>3</b></figref>, the figure depicts the model for storing new conditionals in a data structure according to the invention. The set of conditions is digitized into a string data type. Each condition is treated as an object and stored in an element of the list data structure.</p><p id="p-0091" num="0090">Refer to <figref idref="DRAWINGS">FIG. <b>4</b></figref>, the figure depicts the model of simple conditions according to the invention. Accordingly, a simple conditional consists of two blocks: a cause block and a result block. The causal block consists of a set of propositions joined together by the AND operator;</p><p id="p-0092" num="0091">Referring to <figref idref="DRAWINGS">FIG. <b>5</b></figref>, the figure depicts the model of key-value classification description according to the invention. Accordingly, each class is described by a key, value data structure, where the key is the left side of the proposition, and the value is the set of right sides of the proposition. Thus, with many classes, we have to use many key and value data structures to describe.</p><p id="p-0093" num="0092">Referring to <figref idref="DRAWINGS">FIG. <b>6</b></figref>, the figure depicts the model of sequential or branch clauses according to the invention. Accordingly, each class is considered to be a node, conditional sentences with the left hand side being the key of which node will pass through that node.</p><p id="p-0094" num="0093">According to the first aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with complex intrinsic conditions including:<ul id="ul0001" list-style="none">    <li id="ul0001-0001" num="0000">    <ul id="ul0002" list-style="none">        <li id="ul0002-0001" num="0094">Step 1: receive the list of conditions;</li>        <li id="ul0002-0002" num="0095">Step 2: use the list data structure;</li>        <li id="ul0002-0003" num="0096">Step 3: break down the conditions;</li>        <li id="ul0002-0004" num="0097">Step 4: Classification;</li>        <li id="ul0002-0005" num="0098">Step 5: link the clauses.</li>    </ul>    </li></ul></p><p id="p-0095" num="0099">The first feature of the method of controlling and handling a set of conditions in an event handling system with many complex internal conditions under this option is step 1: receiving a list of conditions for management implementation and save the filter conditions from the system operator, the output of which is the digitized filter conditions and save the original version to the database. The operator of the event management system, acts as a set of filter conditions. The preprocessor module receives the initial condition list, uses a database interaction method supported by the programming language to store the initial version history of the condition list.</p><p id="p-0096" num="0100">List data is digitized in preparation for the next step.</p><p id="p-0097" num="0101">Refer to <figref idref="DRAWINGS">FIG. <b>1</b></figref> and <figref idref="DRAWINGS">FIG. <b>2</b></figref> to see the model of processing blocks and business flow.</p><p id="p-0098" num="0102">The second feature of the method of controlling and processing the set of conditions in the event handling system with many complex intrinsic conditions according to this embodiment is step 2: using a list data structure to store and process the conditional sentence decomposition problem, with the input of the filter condition digitized in step 1. From the set of filter conditions received. The SeparationCondition Sub Module browses each filter condition,</p><p id="p-0099" num="0103">A conditional sentence has the following form: IF cause THEN the effect. A cause part of the condition includes clauses, by convention clauses outside of round brackets the linking operator is AND, all conditions in parentheses then the binding operator is OR.</p><p id="p-0100" num="0104">The structure of the cause part:</p><p id="p-0101" num="0105">(A=a1 OR A=a2 OR . . . ) AND B=b1 AND (C=c1 OR C=c2 . . . ) AND . . . .</p><p id="p-0102" num="0106">Browse the filter clause from left to right, separating into combinations, each separated by AND operator. Thus, there are combinations that are propositional (e.g. B=b1) and there are combinations of clauses enclosed in parentheses (e.g. (A=a1 OR A=a2 OR . . . )). Implement to put the split clauses into a separate list data structure. Combinations are sets of conditions in parentheses, further separating the sub-conditions in the combinations in parentheses, each separated by an OR, put these conditions in a star list structure for each bracket combination is a list.</p><p id="p-0103" num="0107">New conditional expressions are generated in the following way: concatenate clauses in the AND operator's own data structure, then take this set concatenated with k1 conditions of the list in any combination OR, get k1 new clause, these statements are concatenated with k2 lists in a combination OR any other followed by (k1&#xd7;k2) clauses, continuing until all combinations OR. Let the total number of split conditional sentences be s. The value of s is calculated as the product of the number of conditions separated in groups OR.</p><p id="p-0104" num="0108">s=Total group conditions OR 1&#xd7;Total group conditions OR 2&#xd7; . . . Total group conditions OR n.</p><p id="p-0105" num="0109">Put all the newly detached conditions into the list data structure. Refer to <figref idref="DRAWINGS">FIG. <b>3</b></figref>: the model for storing new conditionals in a data structure according to the invention.</p><p id="p-0106" num="0110">The third feature of the method of controlling and handling the set of conditions in the event handling system with many complex intrinsic conditions according to this embodiment is step 3: splitting the conditions into clauses, Each clause consists of a left hand side, a right hand side and a comparison operator, separating complex conditions into simpler conditions, the output is a set of conditions converted to simple form, with input as a data structure the list consists of a set of conditional statements in the simple form separated in step 2. Refer to <figref idref="DRAWINGS">FIG. <b>4</b></figref>: model of simple conditions according to the invention. The SeparationCondition Sub Module, after separating the conditions, produces a new set of lists of clauses. Browse each clause, perform split second, split by logical operator AND in conditional sentence;</p><p id="p-0107" num="0111">As a result, the propositions are obtained, taking the entire left side of the proposition to get a set of expressions on the left side.</p><p id="p-0108" num="0112">The fourth characteristic of the method of controlling and handling the set of conditions in the event handling system with many complex intrinsic conditions according to this embodiment is step 4: grouping the left sides of the conditional expression into classes according to a common property, from which a list of classes of left-hand sides with the same value is obtained, each group is called a class, with input being the set of left-hand sides of the proposition retrieved in step 3. Refer to <figref idref="DRAWINGS">FIG. <b>5</b></figref>: model of key-value classification description according to the invention.</p><p id="p-0109" num="0113">The Classification submodule grouping the left-hand side expressions that are the same is put into the same class.</p><p id="p-0110" num="0114">Classification helps to group conditions that have the same class. Since then, if the set of conditions has the same set of classes, it only needs to be checked once for all conditions in that set.</p><p id="p-0111" num="0115">Within the same class there are different values describing the corresponding right-hand side expression of the class.</p><p id="p-0112" num="0116">Use KEY-VALUE data structure and SET data structure for representation. The KEY-VALUE data structure describes the information the classes are divided into. KEY is the name of the classes, VALUE is the SET of right-hand expressions corresponding to the class. The SET data structure consists of objects that describe the information of each right-hand side expression.</p><p id="p-0113" num="0117">The fifth characteristic of the method of controlling and processing the set of conditions in the event handling system with many complex intrinsic conditions according to this embodiment is step 5: linking the clauses each class is considered to be a node, from the defined classes create corresponding nodes, connect the nodes together to form a new structure, a conditional sentence will consist of linked nodes, with the input as the structure KEY-VALUE data generated in step 4. Refer to FIG. <b>6</b>: model of sequential or branch clauses according to the invention. Use the serial and branch models to describe.</p><p id="p-0114" num="0118">Restructuring Sub Module implements, each class is built into an object, in the object describes information:</p><p id="p-0115" num="0119">Identifier of the condition containing that class;</p><p id="p-0116" num="0120">The value of the expression on the left hand side corresponding to each class;</p><p id="p-0117" num="0121">Each Class is considered as a node in the model. The clauses described in the node. A large condition will include the clause nodes connected together, finally to the right of the conditional clause, which is also the result to be taken.</p><p id="p-0118" num="0122">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0119" num="0123">In step 1, the preprocessor module receives the initial condition list, uses a database interaction method supported by the programming language to store the initial version history of the condition list get the initial condition list, use the database interaction method supported by the programming language to save the initial version history of the condition list.</p><p id="p-0120" num="0124">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0121" num="0125">In step 1, the list data is digitized in preparation for the next step.</p><p id="p-0122" num="0126">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0123" num="0127">In step 2, from the set of filter conditions, the condition decomposition subsystem is obtained through each filter condition.</p><p id="p-0124" num="0128">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0125" num="0129">In step 2, a conditional has the following form if cause then effect.</p><p id="p-0126" num="0130">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0127" num="0131">In step 2, a cause part of the condition includes clauses, by convention the clauses outside the round brackets the linking operator is AND, all conditions in the parentheses then the binding operator is OR.</p><p id="p-0128" num="0132">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0129" num="0133">In step 2, browse the filter clause from left to right, splitting it into combinations, each of which is separated by an operator and, thus, there are combinations that are propositions and there are combinations that are clusters of clauses in brackets circle.</p><p id="p-0130" num="0134">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0131" num="0135">In step 2, make the split clauses into a separate list data structure.</p><p id="p-0132" num="0136">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0133" num="0137">In step 2, the combinations are the set of conditions in parentheses, continue to separate the sub-conditions in the combinations in brackets, each condition is separated by OR, put these conditions in List structure so that each parenthesis combination is a list.</p><p id="p-0134" num="0138">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0135" num="0139">In step 2, new conditional expressions are generated in the following way: concatenate the clauses in the operator's own data structure and, then take this set, concatenate with k1 conditions of the list in turn a combination or any, gets new clauses (k1), these clauses are concatenated with the list in a combination or any other next (k2) gets (k1&#xd7;k2) clauses, continue until all combinations OR.</p><p id="p-0136" num="0140">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0137" num="0141">In step 2, let's call the total number of split conditionals s, the value of s is calculated as the product of the number of split conditions in groups OR.</p><p id="p-0138" num="0142">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0139" num="0143">In step 2, put all the newly extracted conditions into the list data structure.</p><p id="p-0140" num="0144">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0141" num="0145">In step 3, the condition decomposition module after splitting the condition, produces a new set of list of propositions.</p><p id="p-0142" num="0146">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0143" num="0147">In step 3, browse each clause, perform split according to the logical operator AND in the conditional.</p><p id="p-0144" num="0148">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0145" num="0149">In step 3, the results are obtained propositions, taking the entire left side of the proposition is a set of expressions on the left side.</p><p id="p-0146" num="0150">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0147" num="0151">In step 4, the class generation module grouping the left-hand side expressions that are the same is put into the same class.</p><p id="p-0148" num="0152">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0149" num="0153">In step 4, Classification generation submodule supports grouping conditions with the same class, so that if a set of conditions has the same set of classes, it only needs to be checked once for all conditions in the set there.</p><p id="p-0150" num="0154">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0151" num="0155">In step 4, within the same class there are different values describing the corresponding right-hand side expression of the class.</p><p id="p-0152" num="0156">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0153" num="0157">In step 4, use key-value data structures and set data structures to represent.</p><p id="p-0154" num="0158">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0155" num="0159">In step 4, the KEY-VALUE data structure describes the information of the divided classes, the key is the names of the classes, and the value is the set of right-hand expressions corresponding to the class.</p><p id="p-0156" num="0160">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0157" num="0161">In step 4, the set data structure includes objects that describe the information of each right-hand expression.</p><p id="p-0158" num="0162">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0159" num="0163">In step 5, use the serial and branch model to describe.</p><p id="p-0160" num="0164">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0161" num="0165">In step 5, a refactoring module implements each built-in class into an object, in the object describing the identifying information of the condition containing that class, the value of the expression on the left side corresponding to each class.</p><p id="p-0162" num="0166">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0163" num="0167">In step 5, each layer is considered a node in the model.</p><p id="p-0164" num="0168">According to the next aspect, the present invention provides a method to control and handle a set of conditions in an event handling system with many complex intrinsic conditions in which:</p><p id="p-0165" num="0169">In step 5, the clauses are described in the node, a large conditional will include the clause nodes connected together, finally to the right of the conditional clause, which is also the result to be taken.</p><heading id="h-0006" level="1">Effectiveness of the Invention</heading><p id="p-0166" num="0170">When providing a method to control and handle a set of conditions in a system with many complex conditions, the supplier wants to optimize the system for two main purposes. The first purpose is to simplify the process of declaring the execution condition, avoiding mistakes and duplicate conditions. The second purpose is to reduce the processing time of the system and avoid causing logic errors during execution.</p><p id="p-0167" num="0171">Although the above descriptions contain many specifics, they are not intended to be a limitation on the embodiment of the invention, but are intended only to illustrate some preferred execution options.</p><?detailed-description description="Detailed Description" end="tail"?></description><claims id="claims"><claim id="CLM-00001" num="00001"><claim-text><b>1</b>. Method to control and handle a set of conditions in an event handling system with complex intrinsic conditions including:<claim-text>step 1: receiving a list of conditions for management implementation and save filter conditions from a system operator, the output of which is a digitized filter conditions and save the original version to a database;</claim-text><claim-text>step 2: using a list data structure to store and process a conditional sentence decomposition problem, with the input of the filter condition digitized in step 1;</claim-text><claim-text>step 3: splitting the conditions into clauses, each clause consists of a left hand side, a right hand side and a comparison operator, separating complex conditions into simpler conditions, the output is a set of conditions converted to simple form, with input as a data structure the list consists of a set of conditional statements in the simple form separated in step 2;</claim-text><claim-text>step 4: grouping the left sides of the conditional expression into classes according to a common property, from which a list of classes of left-hand sides with the same value is obtained, each group is called a class, with input being the set of left-hand sides of the proposition retrieved in step 3;</claim-text><claim-text>step 5: linking the clauses each class is considered to be a node, from the defined classes create corresponding nodes, connect the nodes together to form a new structure, a conditional sentence will consist of linked nodes, with the input as the structure KEY-VALUE data generated in step 4.</claim-text></claim-text></claim><claim id="CLM-00002" num="00002"><claim-text><b>2</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 1, a preprocessor module receives the initial condition list, uses a database interaction method supported by a programming language to store an initial version history of the condition list get the initial condition list, use a database interaction method supported by the programming language to save the initial version history of the condition list.</claim-text></claim-text></claim><claim id="CLM-00003" num="00003"><claim-text><b>3</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 1, the list data is digitized in preparation for the next step.</claim-text></claim-text></claim><claim id="CLM-00004" num="00004"><claim-text><b>4</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, from the set of filter conditions, the condition decomposition subsystem is obtained through each filter condition.</claim-text></claim-text></claim><claim id="CLM-00005" num="00005"><claim-text><b>5</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref> in which:<claim-text>In step 2, a conditional has the following form: if cause then effect.</claim-text></claim-text></claim><claim id="CLM-00006" num="00006"><claim-text><b>6</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref> in which:<claim-text>In step 2, a cause part of the condition includes clauses, by convention the clauses outside the round brackets the linking operator is AND, all conditions in the parentheses then the binding operator is OR.</claim-text></claim-text></claim><claim id="CLM-00007" num="00007"><claim-text><b>7</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, browse the filter clause from left to right, splitting it into combinations, each of which is separated by an operator and, thus, there are combinations that are propositions and there are combinations that are clusters of clauses in brackets circle.</claim-text></claim-text></claim><claim id="CLM-00008" num="00008"><claim-text><b>8</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, make a split clauses into a separate list data structure.</claim-text></claim-text></claim><claim id="CLM-00009" num="00009"><claim-text><b>9</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, combinations are the set of conditions in parentheses, continue to separate the sub-conditions in the combinations in brackets, each condition is separated by OR, put these conditions in a List structure so that each parenthesis combination is a list.</claim-text></claim-text></claim><claim id="CLM-00010" num="00010"><claim-text><b>10</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, new conditional expressions are generated in the following way: concatenate the clauses in the operator's own data structure and, then take this set, concatenate with k1 conditions of the list in turn a combination or any, gets new clauses (k1), these clauses are concatenated with the list in a combination or any other next (k2) gets (k1&#xd7;k2) clauses, continue until all combinations OR.</claim-text></claim-text></claim><claim id="CLM-00011" num="00011"><claim-text><b>11</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, given a total number of split conditionals s, the value of s is calculated as the product of the number of split conditions in groups OR.</claim-text></claim-text></claim><claim id="CLM-00012" num="00012"><claim-text><b>12</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 2, put all the newly extracted conditions into a list data structure.</claim-text></claim-text></claim><claim id="CLM-00013" num="00013"><claim-text><b>13</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to any of the points <b>1</b>-<b>12</b>, in which:<claim-text>In step 3, a condition decomposition module after splitting the condition, produces a new set of list of propositions.</claim-text></claim-text></claim><claim id="CLM-00014" num="00014"><claim-text><b>14</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 3, browse each clause, perform split according to the logical operator AND in the conditional.</claim-text></claim-text></claim><claim id="CLM-00015" num="00015"><claim-text><b>15</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 3, the results are obtained propositions, taking the entire left side of the proposition is a set of expressions on the left side.</claim-text></claim-text></claim><claim id="CLM-00016" num="00016"><claim-text><b>16</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 4, a class generation module grouping the left-hand side expressions that are the same is put into the same class.</claim-text></claim-text></claim><claim id="CLM-00017" num="00017"><claim-text><b>17</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 4, a Classification generation submodule supports grouping conditions with a same class, so that if a set of conditions has the same set of classes, it only needs to be checked once for all conditions in the set there.</claim-text></claim-text></claim><claim id="CLM-00018" num="00018"><claim-text><b>18</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 4, within the same class there are different values describing the corresponding right-hand side expression of the class, Use key-value data structures and set data structures to represent, The KEY-VALUE data structure describes the information of the divided classes, the key is the names of the classes, and the value is the set of right-hand expressions corresponding to the class, The set data structure includes objects that describe the information of each right-hand expression.</claim-text></claim-text></claim><claim id="CLM-00019" num="00019"><claim-text><b>19</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 5, use the serial and branch model to describe, A refactoring module implements each built-in class into an object, in the object describing the identifying information of the condition containing that class, the value of the expression on the left side corresponding to each class, each layer is considered a node in the model.</claim-text></claim-text></claim><claim id="CLM-00020" num="00020"><claim-text><b>20</b>. The method of controlling and handling a set of conditions in an event handling system with many complex internal conditions according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, in which:<claim-text>In step 5, the clauses are described in the node, a large conditional will include the clause nodes connected together, finally to the right of the conditional clause, which is also the result to be taken.</claim-text></claim-text></claim></claims></us-patent-application>